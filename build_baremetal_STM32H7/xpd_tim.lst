ARM GAS  /tmp/ccgFBn4z.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"xpd_tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.TIM_prvDmaUpdateRedirect,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	TIM_prvDmaUpdateRedirect:
  27              	.LVL0:
  28              	.LFB181:
  29              		.file 1 "STM32_XPD/STM32H7_XPD/src/xpd_tim.c"
   1:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
   2:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   ******************************************************************************
   3:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   * @file    xpd_tim.c
   4:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   * @author  Benedek Kupper
   5:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   * @version 0.4
   6:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   * @date    2018-09-15
   7:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   * @brief   STM32 eXtensible Peripheral Drivers Timer Module
   8:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   *
   9:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   * Copyright (c) 2018 Benedek Kupper
  10:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   *
  11:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   * Licensed under the Apache License, Version 2.0 (the "License");
  12:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   * you may not use this file except in compliance with the License.
  13:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   * You may obtain a copy of the License at
  14:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   *
  15:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   *     http://www.apache.org/licenses/LICENSE-2.0
  16:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   *
  17:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   * Unless required by applicable law or agreed to in writing, software
  18:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   * distributed under the License is distributed on an "AS IS" BASIS,
  19:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  20:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   * See the License for the specific language governing permissions and
  21:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   * limitations under the License.
  22:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****   */
  23:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
  24:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #include <xpd_tim.h>
  25:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #include <xpd_utils.h>
  26:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
  27:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @addtogroup TIM
  28:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @{ */
  29:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
ARM GAS  /tmp/ccgFBn4z.s 			page 2


  30:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @addtogroup TIM_Common
  31:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @{ */
  32:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
  33:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #if TIM_SUPPORTED_CHANNEL_COUNT > 5
  34:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #define TIM_ALL_CHANNELS (TIM_CCER_CC1E | TIM_CCER_CC2E | TIM_CCER_CC3E | TIM_CCER_CC4E |\
  35:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****                           TIM_CCER_CC1NE | TIM_CCER_CC2NE | TIM_CCER_CC3NE | TIM_CCER_CC5E | TIM_CC
  36:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #else
  37:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #define TIM_ALL_CHANNELS (TIM_CCER_CC1E | TIM_CCER_CC2E | TIM_CCER_CC3E | TIM_CCER_CC4E |\
  38:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****                           TIM_CCER_CC1NE | TIM_CCER_CC2NE | TIM_CCER_CC3NE)
  39:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #endif
  40:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
  41:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #define TIM_ACTIVE_CHANNELS(HANDLE) (HANDLE->Inst->CCER.w & TIM_ALL_CHANNELS)
  42:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
  43:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @defgroup TIM_Private_Functions TIM Private Functions
  44:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @{ */
  45:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
  46:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef __XPD_DMA_ERROR_DETECT
  47:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** static void TIM_prvDmaErrorRedirect(void *pxDMA)
  48:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
  49:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_HandleType* pxTIM = (TIM_HandleType*) ((DMA_HandleType*) pxDMA)->Owner;
  50:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
  51:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_SAFE_CALLBACK(pxTIM->Callbacks.Error, pxTIM);
  52:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
  53:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #endif
  54:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** static void TIM_prvDmaUpdateRedirect(void *pxDMA)
  55:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
  30              		.loc 1 55 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  56:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_HandleType* pxTIM = (TIM_HandleType*) ((DMA_HandleType*) pxDMA)->Owner;
  35              		.loc 1 56 5 view .LVU1
  36              		.loc 1 56 21 is_stmt 0 view .LVU2
  37 0000 4069     		ldr	r0, [r0, #20]
  38              	.LVL1:
  57:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
  58:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_SAFE_CALLBACK(pxTIM->Callbacks.Update, pxTIM);
  39              		.loc 1 58 5 is_stmt 1 view .LVU3
  40              		.loc 1 58 5 view .LVU4
  41 0002 C368     		ldr	r3, [r0, #12]
  42 0004 03B1     		cbz	r3, .L1
  43              		.loc 1 58 5 discriminator 1 view .LVU5
  44 0006 1847     		bx	r3	@ indirect register sibling call
  45              	.LVL2:
  46              	.L1:
  59:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
  47              		.loc 1 59 1 is_stmt 0 view .LVU6
  48 0008 7047     		bx	lr
  49              		.cfi_endproc
  50              	.LFE181:
  52 000a 00BF     		.section	.text.TIM_prvDmaChannelEventRedirect1,"ax",%progbits
  53              		.align	1
  54              		.p2align 2,,3
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
ARM GAS  /tmp/ccgFBn4z.s 			page 3


  58              		.fpu fpv4-sp-d16
  60              	TIM_prvDmaChannelEventRedirect1:
  61              	.LVL3:
  62              	.LFB182:
  60:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** static void TIM_prvDmaChannelEventRedirect1(void *pxDMA)
  61:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
  63              		.loc 1 61 1 is_stmt 1 view -0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  62:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_HandleType* pxTIM = (TIM_HandleType*) ((DMA_HandleType*) pxDMA)->Owner;
  68              		.loc 1 62 5 view .LVU8
  69              		.loc 1 62 21 is_stmt 0 view .LVU9
  70 0000 4069     		ldr	r0, [r0, #20]
  71              	.LVL4:
  63:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
  64:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->ActiveChannel = TIM_CH1;
  72              		.loc 1 64 5 is_stmt 1 view .LVU10
  73              		.loc 1 64 26 is_stmt 0 view .LVU11
  74 0002 0022     		movs	r2, #0
  65:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_SAFE_CALLBACK(pxTIM->Callbacks.ChannelEvent, pxTIM);
  75              		.loc 1 65 5 view .LVU12
  76 0004 0369     		ldr	r3, [r0, #16]
  64:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_SAFE_CALLBACK(pxTIM->Callbacks.ChannelEvent, pxTIM);
  77              		.loc 1 64 26 view .LVU13
  78 0006 80F84120 		strb	r2, [r0, #65]
  79              		.loc 1 65 5 is_stmt 1 view .LVU14
  80              		.loc 1 65 5 view .LVU15
  81 000a 03B1     		cbz	r3, .L4
  82              		.loc 1 65 5 discriminator 1 view .LVU16
  83 000c 1847     		bx	r3	@ indirect register sibling call
  84              	.LVL5:
  85              	.L4:
  66:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
  86              		.loc 1 66 1 is_stmt 0 view .LVU17
  87 000e 7047     		bx	lr
  88              		.cfi_endproc
  89              	.LFE182:
  91              		.section	.text.TIM_prvDmaChannelEventRedirect2,"ax",%progbits
  92              		.align	1
  93              		.p2align 2,,3
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	TIM_prvDmaChannelEventRedirect2:
 100              	.LVL6:
 101              	.LFB183:
  67:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** static void TIM_prvDmaChannelEventRedirect2(void *pxDMA)
  68:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 102              		.loc 1 68 1 is_stmt 1 view -0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
  69:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_HandleType* pxTIM = (TIM_HandleType*) ((DMA_HandleType*) pxDMA)->Owner;
ARM GAS  /tmp/ccgFBn4z.s 			page 4


 107              		.loc 1 69 5 view .LVU19
 108              		.loc 1 69 21 is_stmt 0 view .LVU20
 109 0000 4069     		ldr	r0, [r0, #20]
 110              	.LVL7:
  70:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
  71:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->ActiveChannel = TIM_CH2;
 111              		.loc 1 71 5 is_stmt 1 view .LVU21
 112              		.loc 1 71 26 is_stmt 0 view .LVU22
 113 0002 0122     		movs	r2, #1
  72:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_SAFE_CALLBACK(pxTIM->Callbacks.ChannelEvent, pxTIM);
 114              		.loc 1 72 5 view .LVU23
 115 0004 0369     		ldr	r3, [r0, #16]
  71:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_SAFE_CALLBACK(pxTIM->Callbacks.ChannelEvent, pxTIM);
 116              		.loc 1 71 26 view .LVU24
 117 0006 80F84120 		strb	r2, [r0, #65]
 118              		.loc 1 72 5 is_stmt 1 view .LVU25
 119              		.loc 1 72 5 view .LVU26
 120 000a 03B1     		cbz	r3, .L6
 121              		.loc 1 72 5 discriminator 1 view .LVU27
 122 000c 1847     		bx	r3	@ indirect register sibling call
 123              	.LVL8:
 124              	.L6:
  73:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 125              		.loc 1 73 1 is_stmt 0 view .LVU28
 126 000e 7047     		bx	lr
 127              		.cfi_endproc
 128              	.LFE183:
 130              		.section	.text.TIM_prvDmaChannelEventRedirect3,"ax",%progbits
 131              		.align	1
 132              		.p2align 2,,3
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv4-sp-d16
 138              	TIM_prvDmaChannelEventRedirect3:
 139              	.LVL9:
 140              	.LFB184:
  74:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** static void TIM_prvDmaChannelEventRedirect3(void *pxDMA)
  75:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 141              		.loc 1 75 1 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
  76:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_HandleType* pxTIM = (TIM_HandleType*) ((DMA_HandleType*) pxDMA)->Owner;
 146              		.loc 1 76 5 view .LVU30
 147              		.loc 1 76 21 is_stmt 0 view .LVU31
 148 0000 4069     		ldr	r0, [r0, #20]
 149              	.LVL10:
  77:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
  78:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->ActiveChannel = TIM_CH3;
 150              		.loc 1 78 5 is_stmt 1 view .LVU32
 151              		.loc 1 78 26 is_stmt 0 view .LVU33
 152 0002 0222     		movs	r2, #2
  79:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_SAFE_CALLBACK(pxTIM->Callbacks.ChannelEvent, pxTIM);
 153              		.loc 1 79 5 view .LVU34
 154 0004 0369     		ldr	r3, [r0, #16]
ARM GAS  /tmp/ccgFBn4z.s 			page 5


  78:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_SAFE_CALLBACK(pxTIM->Callbacks.ChannelEvent, pxTIM);
 155              		.loc 1 78 26 view .LVU35
 156 0006 80F84120 		strb	r2, [r0, #65]
 157              		.loc 1 79 5 is_stmt 1 view .LVU36
 158              		.loc 1 79 5 view .LVU37
 159 000a 03B1     		cbz	r3, .L8
 160              		.loc 1 79 5 discriminator 1 view .LVU38
 161 000c 1847     		bx	r3	@ indirect register sibling call
 162              	.LVL11:
 163              	.L8:
  80:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 164              		.loc 1 80 1 is_stmt 0 view .LVU39
 165 000e 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE184:
 169              		.section	.text.TIM_prvDmaChannelEventRedirect4,"ax",%progbits
 170              		.align	1
 171              		.p2align 2,,3
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu fpv4-sp-d16
 177              	TIM_prvDmaChannelEventRedirect4:
 178              	.LVL12:
 179              	.LFB185:
  81:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** static void TIM_prvDmaChannelEventRedirect4(void *pxDMA)
  82:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 180              		.loc 1 82 1 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
  83:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_HandleType* pxTIM = (TIM_HandleType*) ((DMA_HandleType*) pxDMA)->Owner;
 185              		.loc 1 83 5 view .LVU41
 186              		.loc 1 83 21 is_stmt 0 view .LVU42
 187 0000 4069     		ldr	r0, [r0, #20]
 188              	.LVL13:
  84:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
  85:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->ActiveChannel = TIM_CH4;
 189              		.loc 1 85 5 is_stmt 1 view .LVU43
 190              		.loc 1 85 26 is_stmt 0 view .LVU44
 191 0002 0322     		movs	r2, #3
  86:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_SAFE_CALLBACK(pxTIM->Callbacks.ChannelEvent,pxTIM);
 192              		.loc 1 86 5 view .LVU45
 193 0004 0369     		ldr	r3, [r0, #16]
  85:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_SAFE_CALLBACK(pxTIM->Callbacks.ChannelEvent,pxTIM);
 194              		.loc 1 85 26 view .LVU46
 195 0006 80F84120 		strb	r2, [r0, #65]
 196              		.loc 1 86 5 is_stmt 1 view .LVU47
 197              		.loc 1 86 5 view .LVU48
 198 000a 03B1     		cbz	r3, .L10
 199              		.loc 1 86 5 discriminator 1 view .LVU49
 200 000c 1847     		bx	r3	@ indirect register sibling call
 201              	.LVL14:
 202              	.L10:
  87:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 203              		.loc 1 87 1 is_stmt 0 view .LVU50
ARM GAS  /tmp/ccgFBn4z.s 			page 6


 204 000e 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE185:
 208              		.section	.text.TIM_prvDmaTriggerCallbackRedirect,"ax",%progbits
 209              		.align	1
 210              		.p2align 2,,3
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu fpv4-sp-d16
 216              	TIM_prvDmaTriggerCallbackRedirect:
 217              	.LVL15:
 218              	.LFB186:
  88:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** static void TIM_prvDmaTriggerCallbackRedirect(void *pxDMA)
  89:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 219              		.loc 1 89 1 is_stmt 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
  90:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_HandleType* pxTIM = (TIM_HandleType*) ((DMA_HandleType*) pxDMA)->Owner;
 224              		.loc 1 90 5 view .LVU52
 225              		.loc 1 90 21 is_stmt 0 view .LVU53
 226 0000 4069     		ldr	r0, [r0, #20]
 227              	.LVL16:
  91:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
  92:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_SAFE_CALLBACK(pxTIM->Callbacks.Trigger,pxTIM);
 228              		.loc 1 92 5 is_stmt 1 view .LVU54
 229              		.loc 1 92 5 view .LVU55
 230 0002 4369     		ldr	r3, [r0, #20]
 231 0004 03B1     		cbz	r3, .L12
 232              		.loc 1 92 5 discriminator 1 view .LVU56
 233 0006 1847     		bx	r3	@ indirect register sibling call
 234              	.LVL17:
 235              	.L12:
  93:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 236              		.loc 1 93 1 is_stmt 0 view .LVU57
 237 0008 7047     		bx	lr
 238              		.cfi_endproc
 239              	.LFE186:
 241 000a 00BF     		.section	.text.TIM_prvDmaCommutationCallbackRedirect,"ax",%progbits
 242              		.align	1
 243              		.p2align 2,,3
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu fpv4-sp-d16
 249              	TIM_prvDmaCommutationCallbackRedirect:
 250              	.LVL18:
 251              	.LFB187:
  94:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** static void TIM_prvDmaCommutationCallbackRedirect(void *pxDMA)
  95:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 252              		.loc 1 95 1 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
ARM GAS  /tmp/ccgFBn4z.s 			page 7


  96:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_HandleType* pxTIM = (TIM_HandleType*) ((DMA_HandleType*) pxDMA)->Owner;
 257              		.loc 1 96 5 view .LVU59
 258              		.loc 1 96 21 is_stmt 0 view .LVU60
 259 0000 4069     		ldr	r0, [r0, #20]
 260              	.LVL19:
  97:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
  98:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_SAFE_CALLBACK(pxTIM->Callbacks.Commutation,pxTIM);
 261              		.loc 1 98 5 is_stmt 1 view .LVU61
 262              		.loc 1 98 5 view .LVU62
 263 0002 8369     		ldr	r3, [r0, #24]
 264 0004 03B1     		cbz	r3, .L14
 265              		.loc 1 98 5 discriminator 1 view .LVU63
 266 0006 1847     		bx	r3	@ indirect register sibling call
 267              	.LVL20:
 268              	.L14:
  99:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 269              		.loc 1 99 1 is_stmt 0 view .LVU64
 270 0008 7047     		bx	lr
 271              		.cfi_endproc
 272              	.LFE187:
 274 000a 00BF     		.section	.text.TIM_vInit,"ax",%progbits
 275              		.align	1
 276              		.p2align 2,,3
 277              		.global	TIM_vInit
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 281              		.fpu fpv4-sp-d16
 283              	TIM_vInit:
 284              	.LVL21:
 285              	.LFB189:
 100:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** static const XPD_HandleCallbackType TIM_apxDmaRedirects[] = {
 101:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         TIM_prvDmaUpdateRedirect,
 102:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         TIM_prvDmaChannelEventRedirect1,
 103:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         TIM_prvDmaChannelEventRedirect2,
 104:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         TIM_prvDmaChannelEventRedirect3,
 105:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         TIM_prvDmaChannelEventRedirect4,
 106:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         TIM_prvDmaCommutationCallbackRedirect,
 107:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         TIM_prvDmaTriggerCallbackRedirect,
 108:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** };
 109:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 110:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 111:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief Enables peripheral clock and initializes common TIM registers.
 112:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 113:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxConfig: pointer to TIM setup configuration
 114:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 115:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** static void TIM_prvInit(TIM_HandleType * pxTIM, const TIM_InitType * pxConfig)
 116:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 117:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Enable clock and reset peripheral */
 118:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     RCC_vClockEnable(pxTIM->CtrlPos);
 119:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     RCC_vReset(pxTIM->CtrlPos);
 120:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 121:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CR1 = pxConfig->wSettings & (TIM_CR1_UDIS | TIM_CR1_URS | TIM_CR1_OPM
 122:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef TIM_CR1_UIFREMAP
 123:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             | TIM_CR1_UIFREMAP
 124:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #endif
 125:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             | TIM_CR1_DIR | TIM_CR1_CMS | TIM_CR1_CKD);
ARM GAS  /tmp/ccgFBn4z.s 			page 8


 126:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 127:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->PSC = (uint32_t)(pxConfig->Prescaler - 1);
 128:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->ARR = (uint32_t)(pxConfig->Period - 1);
 129:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->RCR = pxConfig->RepetitionCounter;
 130:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 131:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 132:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @} */
 133:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 134:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @defgroup TIM_Common_Exported_Functions TIM Common Exported Functions
 135:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @{ */
 136:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 137:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 138:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief Initializes the TIM peripheral and its selected channels.
 139:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @note  If no channels are used, @ref TIM_vCounterInit can be used instead.
 140:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 141:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxConfig: pointer to TIM setup configuration
 142:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param axChannels: array of channel configurations
 143:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param ucChannelCount: number of channels to configure
 144:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 145:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vInit(
 146:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         TIM_HandleType *            pxTIM,
 147:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         const TIM_InitType *        pxConfig,
 148:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         const TIM_ChannelInitType   axChannels[],
 149:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         uint8_t                     ucChannelCount)
 150:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 286              		.loc 1 150 1 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 24
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 151:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint8_t i;
 290              		.loc 1 151 5 view .LVU66
 152:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t ulCCER = 0, ulCR2 = 0;
 291              		.loc 1 152 5 view .LVU67
 153:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t aulCCMR[TIM_SUPPORTED_CHANNEL_COUNT / 2] = {0};
 292              		.loc 1 153 5 view .LVU68
 150:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint8_t i;
 293              		.loc 1 150 1 is_stmt 0 view .LVU69
 294 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 295              	.LCFI0:
 296              		.cfi_def_cfa_offset 36
 297              		.cfi_offset 4, -36
 298              		.cfi_offset 5, -32
 299              		.cfi_offset 6, -28
 300              		.cfi_offset 7, -24
 301              		.cfi_offset 8, -20
 302              		.cfi_offset 9, -16
 303              		.cfi_offset 10, -12
 304              		.cfi_offset 11, -8
 305              		.cfi_offset 14, -4
 306 0004 0746     		mov	r7, r0
 307 0006 87B0     		sub	sp, sp, #28
 308              	.LCFI1:
 309              		.cfi_def_cfa_offset 64
 310              		.loc 1 153 14 view .LVU70
 311 0008 0024     		movs	r4, #0
 150:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint8_t i;
 312              		.loc 1 150 1 view .LVU71
ARM GAS  /tmp/ccgFBn4z.s 			page 9


 313 000a 0E46     		mov	r6, r1
 314              	.LBB42:
 315              	.LBB43:
 118:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     RCC_vReset(pxTIM->CtrlPos);
 316              		.loc 1 118 5 view .LVU72
 317 000c 008F     		ldrh	r0, [r0, #56]
 318              	.LVL22:
 118:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     RCC_vReset(pxTIM->CtrlPos);
 319              		.loc 1 118 5 view .LVU73
 320              	.LBE43:
 321              	.LBE42:
 150:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint8_t i;
 322              		.loc 1 150 1 view .LVU74
 323 000e 9046     		mov	r8, r2
 324 0010 1D46     		mov	r5, r3
 325              		.loc 1 153 14 view .LVU75
 326 0012 0594     		str	r4, [sp, #20]
 154:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 155:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Init the timer common core */
 156:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_prvInit(pxTIM, pxConfig);
 327              		.loc 1 156 5 is_stmt 1 view .LVU76
 328              	.LVL23:
 329              	.LBB46:
 330              	.LBI42:
 115:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 331              		.loc 1 115 13 view .LVU77
 332              	.LBB44:
 118:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     RCC_vReset(pxTIM->CtrlPos);
 333              		.loc 1 118 5 view .LVU78
 334              	.LBE44:
 335              	.LBE46:
 153:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 336              		.loc 1 153 14 is_stmt 0 view .LVU79
 337 0014 CDE90344 		strd	r4, r4, [sp, #12]
 338              	.LBB47:
 339              	.LBB45:
 118:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     RCC_vReset(pxTIM->CtrlPos);
 340              		.loc 1 118 5 view .LVU80
 341 0018 FFF7FEFF 		bl	RCC_vClockEnable
 342              	.LVL24:
 119:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 343              		.loc 1 119 5 is_stmt 1 view .LVU81
 344 001c 388F     		ldrh	r0, [r7, #56]
 345 001e FFF7FEFF 		bl	RCC_vReset
 346              	.LVL25:
 121:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef TIM_CR1_UIFREMAP
 347              		.loc 1 121 5 view .LVU82
 121:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef TIM_CR1_UIFREMAP
 348              		.loc 1 121 44 is_stmt 0 view .LVU83
 349 0022 3089     		ldrh	r0, [r6, #8]
 350 0024 40F67E31 		movw	r1, #2942
 121:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef TIM_CR1_UIFREMAP
 351              		.loc 1 121 10 view .LVU84
 352 0028 D7F800E0 		ldr	lr, [r7]
 128:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->RCR = pxConfig->RepetitionCounter;
 353              		.loc 1 128 24 view .LVU85
 354 002c D6E90023 		ldrd	r2, r3, [r6]
ARM GAS  /tmp/ccgFBn4z.s 			page 10


 121:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef TIM_CR1_UIFREMAP
 355              		.loc 1 121 44 view .LVU86
 356 0030 0140     		ands	r1, r1, r0
 128:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->RCR = pxConfig->RepetitionCounter;
 357              		.loc 1 128 24 view .LVU87
 358 0032 013B     		subs	r3, r3, #1
 127:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->ARR = (uint32_t)(pxConfig->Period - 1);
 359              		.loc 1 127 24 view .LVU88
 360 0034 013A     		subs	r2, r2, #1
 121:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef TIM_CR1_UIFREMAP
 361              		.loc 1 121 22 view .LVU89
 362 0036 CEF80010 		str	r1, [lr]
 127:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->ARR = (uint32_t)(pxConfig->Period - 1);
 363              		.loc 1 127 5 is_stmt 1 view .LVU90
 127:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->ARR = (uint32_t)(pxConfig->Period - 1);
 364              		.loc 1 127 22 is_stmt 0 view .LVU91
 365 003a CEF82820 		str	r2, [lr, #40]
 128:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->RCR = pxConfig->RepetitionCounter;
 366              		.loc 1 128 5 is_stmt 1 view .LVU92
 128:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->RCR = pxConfig->RepetitionCounter;
 367              		.loc 1 128 22 is_stmt 0 view .LVU93
 368 003e CEF82C30 		str	r3, [lr, #44]
 129:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 369              		.loc 1 129 5 is_stmt 1 view .LVU94
 129:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 370              		.loc 1 129 32 is_stmt 0 view .LVU95
 371 0042 B37A     		ldrb	r3, [r6, #10]	@ zero_extendqisi2
 129:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 372              		.loc 1 129 22 view .LVU96
 373 0044 CEF83030 		str	r3, [lr, #48]
 374              	.LVL26:
 129:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 375              		.loc 1 129 22 view .LVU97
 376              	.LBE45:
 377              	.LBE47:
 157:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 158:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->ChannelMask = 0;
 378              		.loc 1 158 5 is_stmt 1 view .LVU98
 379              		.loc 1 158 24 is_stmt 0 view .LVU99
 380 0048 FC63     		str	r4, [r7, #60]
 159:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->EventMask = 0;
 381              		.loc 1 159 5 is_stmt 1 view .LVU100
 382              		.loc 1 159 22 is_stmt 0 view .LVU101
 383 004a 87F84040 		strb	r4, [r7, #64]
 160:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 161:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Channels configuration */
 162:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     for (i = 0; i < ucChannelCount; i++)
 384              		.loc 1 162 5 is_stmt 1 view .LVU102
 385              	.LVL27:
 386              		.loc 1 162 17 view .LVU103
 387              		.loc 1 162 5 is_stmt 0 view .LVU104
 388 004e 002D     		cmp	r5, #0
 389 0050 00F08380 		beq	.L24
 390 0054 4246     		mov	r2, r8
 391 0056 0C21     		movs	r1, #12
 392 0058 013D     		subs	r5, r5, #1
 393 005a 0EF1340A 		add	r10, lr, #52
ARM GAS  /tmp/ccgFBn4z.s 			page 11


 394 005e 5318     		adds	r3, r2, r1
 152:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t aulCCMR[TIM_SUPPORTED_CHANNEL_COUNT / 2] = {0};
 395              		.loc 1 152 14 view .LVU105
 396 0060 A046     		mov	r8, r4
 397              	.LVL28:
 152:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t aulCCMR[TIM_SUPPORTED_CHANNEL_COUNT / 2] = {0};
 398              		.loc 1 152 14 view .LVU106
 399 0062 EDB2     		uxtb	r5, r5
 400 0064 11FB0533 		smlabb	r3, r1, r5, r3
 401              	.LBB48:
 163:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 164:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         TIM_ChannelType eChannel = axChannels[i].OC.Number;
 165:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 166:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* Save used channels for fast operations */
 167:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxTIM->ChannelMask |= (TIM_CCER_CC1E | (axChannels[i].IC.b[2] & TIM_CCER_CC1NE))
 168:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****                 << (eChannel * 4);
 169:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 170:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* Set the capture/compare polarities (0 is active high) */
 171:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         ulCCER |= (uint32_t)(axChannels[i].IC.b[2] & (TIM_CCER_CC1P | TIM_CCER_CC1NP))
 172:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****                 << (eChannel * 4);
 173:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 174:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* Set initial channel value */
 175:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         *TIM_pulChannel(pxTIM, eChannel) = axChannels[i].OC.Value;
 176:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 177:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #if TIM_SUPPORTED_CHANNEL_COUNT > 5
 178:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         if (eChannel > TIM_CH4) /* CH5 and 6 have reduced functionality */
 179:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {   continue; }
 180:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #endif
 181:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxTIM->EventMask |= TIM_DIER_CC1IE << eChannel;
 402              		.loc 1 181 44 view .LVU107
 403 0068 CDE9004E 		strd	r4, lr, [sp]
 404 006c 9E46     		mov	lr, r3
 405 006e 04E0     		b	.L20
 406              	.LVL29:
 407              	.L29:
 408              		.loc 1 181 44 view .LVU108
 409 0070 0C32     		adds	r2, r2, #12
 175:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 410              		.loc 1 175 42 view .LVU109
 411 0072 6B61     		str	r3, [r5, #20]
 178:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {   continue; }
 412              		.loc 1 178 9 is_stmt 1 view .LVU110
 178:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {   continue; }
 413              		.loc 1 178 9 is_stmt 0 view .LVU111
 414              	.LBE48:
 162:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 415              		.loc 1 162 37 is_stmt 1 view .LVU112
 162:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 416              		.loc 1 162 17 view .LVU113
 162:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 417              		.loc 1 162 5 is_stmt 0 view .LVU114
 418 0074 9645     		cmp	lr, r2
 419 0076 42D0     		beq	.L28
 420              	.LVL30:
 421              	.L19:
 162:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 422              		.loc 1 162 5 view .LVU115
ARM GAS  /tmp/ccgFBn4z.s 			page 12


 423 0078 FC6B     		ldr	r4, [r7, #60]
 424              	.LVL31:
 425              	.L20:
 426              	.LBB57:
 164:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 427              		.loc 1 164 9 is_stmt 1 view .LVU116
 428              	.LBB49:
 429              	.LBB50:
 430              		.file 2 "STM32_XPD/STM32H7_XPD/inc/xpd_tim.h"
   1:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
   2:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   ******************************************************************************
   3:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   * @file    xpd_tim.h
   4:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   * @author  Benedek Kupper
   5:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   * @version 0.4
   6:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   * @date    2018-09-15
   7:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   * @brief   STM32 eXtensible Peripheral Drivers Timer Module
   8:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   *
   9:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   * Copyright (c) 2018 Benedek Kupper
  10:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   *
  11:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   * Licensed under the Apache License, Version 2.0 (the "License");
  12:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   * you may not use this file except in compliance with the License.
  13:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   * You may obtain a copy of the License at
  14:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   *
  15:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   *     http://www.apache.org/licenses/LICENSE-2.0
  16:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   *
  17:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   * Unless required by applicable law or agreed to in writing, software
  18:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   * distributed under the License is distributed on an "AS IS" BASIS,
  19:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  20:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   * See the License for the specific language governing permissions and
  21:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   * limitations under the License.
  22:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****   */
  23:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #ifndef __XPD_TIM_H_
  24:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #define __XPD_TIM_H_
  25:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
  26:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #ifdef __cplusplus
  27:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** extern "C"
  28:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
  29:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #endif
  30:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
  31:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #include <xpd_common.h>
  32:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #include <xpd_dma.h>
  33:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #include <xpd_rcc.h>
  34:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
  35:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #if defined(TIM_CCR5_CCR5) && defined(TIM_CCR6_CCR6)
  36:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #define TIM_SUPPORTED_CHANNEL_COUNT   6
  37:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #else
  38:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #define TIM_SUPPORTED_CHANNEL_COUNT   4
  39:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #endif
  40:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
  41:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @defgroup TIM
  42:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @{ */
  43:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
  44:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @defgroup TIM_Common TIM Common
  45:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @{ */
  46:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
  47:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @defgroup TIM_Common_Exported_Types TIM Common Exported Types
  48:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @{ */
ARM GAS  /tmp/ccgFBn4z.s 			page 13


  49:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
  50:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @brief TIM counter modes */
  51:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** typedef enum
  52:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
  53:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_COUNTER_UP             = 0, /*!< Timer is counting from 0 to Period - 1 */
  54:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_COUNTER_DOWN           = 1, /*!< Timer is counting from Period - 1 to 0 */
  55:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_COUNTER_CENTERALIGNED1 = 2, /*!< Timer is switching between up- and downcounting,
  56:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****                                          output channel interrupt is set during down */
  57:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_COUNTER_CENTERALIGNED2 = 4, /*!< Timer is switching between up- and downcounting,
  58:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****                                          output channel interrupt is set during up */
  59:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_COUNTER_CENTERALIGNED3 = 6  /*!< Timer is switching between up- and downcounting,
  60:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****                                          output channel interrupt is set during up & down */
  61:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }TIM_CounterType;
  62:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
  63:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @brief TIM update generation modes */
  64:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** typedef enum
  65:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
  66:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_UPDATE_BY_ANY     = 0, /*!< Update is generated by counter, UG bit, slave mode */
  67:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_UPDATE_BY_COUNTER = 2, /*!< Update is generated by counter only */
  68:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_UPDATE_DISABLED   = 1, /*!< Update is disabled */
  69:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }TIM_UpdateType;
  70:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
  71:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @brief TIM counter setup structure */
  72:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** typedef struct
  73:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
  74:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     uint32_t         Prescaler;         /*!< Clock prescaler for the counter, [1 .. (1 << timer bit
  75:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     uint32_t         Period;            /*!< Counter period, [1 .. (1 << timer bit size)] */
  76:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     union  {
  77:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     struct {
  78:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     uint16_t : 1;
  79:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_UpdateType   UpdateTrigger : 2; /*!< Update event generation sources */
  80:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     FunctionalState  OnePulse : 1;      /*!< After an update counter stops automatically (OPM) */
  81:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_CounterType  Mode : 3;          /*!< Counter mode */
  82:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     FunctionalState  Preload : 1;       /*!< Reload (Period) is preloaded and only applied after an
  83:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     ClockDividerType ClockDivision : 2; /*!< Division factor for deadtime and sampling clock.
  84:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****                                              Permitted values: @arg CLK_DIV1 @arg CLK_DIV2 @arg CLK
  85:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #ifdef TIM_CR1_UIFREMAP
  86:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     FunctionalState  UpdateFlagRemap :1;/*!< When set, UIF status bit is copied to CNT register's M
  87:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #else
  88:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     uint16_t : 1;
  89:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #endif
  90:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     uint16_t : 5;
  91:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     };
  92:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     uint16_t wSettings; /* Internal use only */
  93:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     };
  94:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     uint8_t          RepetitionCounter; /*!< Specifies how many counter periods trigger an update
  95:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****                                              @note Valid only for TIM1 and TIM8. */
  96:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }TIM_InitType;
  97:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
  98:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @brief TIM channels */
  99:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** typedef enum
 100:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 101:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_CH1 = 0, /*!< TIM channel 1 */
 102:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_CH2 = 1, /*!< TIM channel 2 */
 103:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_CH3 = 2, /*!< TIM channel 3 */
 104:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_CH4 = 3, /*!< TIM channel 4 */
 105:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #if TIM_SUPPORTED_CHANNEL_COUNT > 5
ARM GAS  /tmp/ccgFBn4z.s 			page 14


 106:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_CH5 = 4, /*!< TIM channel 5 (limited capabilities: no IT or DMA) */
 107:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_CH6 = 5  /*!< TIM channel 6 (limited capabilities: no IT or DMA) */
 108:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #endif
 109:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }TIM_ChannelType;
 110:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 111:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @brief TIM output modes */
 112:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** typedef enum
 113:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 114:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_OUTPUT_TIMING             = 0x00,   /*!< Output channel is frozen, use for timing base gene
 115:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_OUTPUT_ACTIVE             = 0x04,   /*!< Output channel is active on match */
 116:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_OUTPUT_INACTIVE           = 0x08,   /*!< Output channel is inactive on match */
 117:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_OUTPUT_TOGGLE             = 0x0C,   /*!< Output channel is toggled on match */
 118:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_OUTPUT_FORCEDINACTIVE     = 0x10,   /*!< Output channel is forced low */
 119:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_OUTPUT_FORCEDACTIVE       = 0x14,   /*!< Output channel is forced high */
 120:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_OUTPUT_PWM1               = 0x1B,   /*!< Output channel is active when CNT < CCR */
 121:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_OUTPUT_PWM2               = 0x1F,   /*!< Output channel is active when CNT > CCR */
 122:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #if (TIM_CCMR1_OC1M > 0xFFFF)
 123:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_OUTPUT_RETRIGERRABLE_OPM1 = 0x4000, /*!< Output channel is active after CNT < CCR at the ti
 124:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_OUTPUT_RETRIGERRABLE_OPM2 = 0x4004, /*!< Output channel is active after CNT > CCR at the ti
 125:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_OUTPUT_COMBINED_PWM1      = 0x4013, /*!< As in PWM1, but OC1REFC is the logical OR between 
 126:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_OUTPUT_COMBINED_PWM2      = 0x4017, /*!< As in PWM2, but OC1REFC is the logical AND between
 127:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_OUTPUT_ASYMMETRIC_PWM1    = 0x401B, /*!< Output channel is active when CNT > CCR */
 128:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_OUTPUT_ASYMMETRIC_PWM2    = 0x401F, /*!< Output channel is active when CNT > CCR */
 129:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #endif
 130:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_OUTPUT_PRELOAD_FLAG       = 0x02,   /*!< Preloaded value is activated at next update event 
 131:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }TIM_OutputModeType;
 132:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 133:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @brief TIM input channel sources */
 134:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** typedef enum
 135:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 136:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_INPUT_OWN_TI  = 1,  /*!< TIM input n is connected to ICn */
 137:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_INPUT_PAIR_TI = 2,  /*!< TIM input n is connected to IC(n ^ (n & 1)) */
 138:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_INPUT_TRC     = 3,  /*!< TIM input n is connected to TRC */
 139:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }TIM_InputSourceType;
 140:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 141:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @brief TIM input channel edges */
 142:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** typedef enum
 143:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 144:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_EDGE_RISING         = 0,  /*!< Rising filtered prescaled input (TIxFPx) edges trigger and c
 145:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_EDGE_FALLING        = 1,  /*!< Falling filtered prescaled input (TIxFPx) edges trigger and 
 146:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_EDGE_RISING_FALLING = 3,  /*!< Rising and falling filtered prescaled input (TIxFPx) edges t
 147:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }TIM_InputEdgeType;
 148:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 149:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @brief TIM capture/compare channel setup structure */
 150:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** typedef union
 151:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 152:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     struct {
 153:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         uint32_t Value;         /*!< Channel initial value */
 154:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         union {
 155:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         struct {
 156:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         uint32_t : 2;
 157:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #if (TIM_CCMR1_OC1M > 0xFFFF)
 158:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         TIM_OutputModeType  Mode : 15;       /*!< Output channel mode */
 159:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #else
 160:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         TIM_OutputModeType  Mode : 5;        /*!< Output channel mode */
 161:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         uint32_t : 10;
 162:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #endif
ARM GAS  /tmp/ccgFBn4z.s 			page 15


 163:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         ActiveLevelType     Polarity : 1;    /*!< Output channel active level */
 164:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         FunctionalState     InvChannel : 1;  /*!< Complementary output channel is used */
 165:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         ActiveLevelType     InvPolarity : 1; /*!< Complementary output channel active level */
 166:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         uint32_t : 4;
 167:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         FlagStatus          IdleState : 1;   /*!< Output channel idle state */
 168:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         FlagStatus          InvIdleState : 1;/*!< Complementary output channel idle state */
 169:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         uint32_t : 6;
 170:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         }__packed;
 171:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****             uint32_t w; /* Internal use only */
 172:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         };
 173:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         TIM_ChannelType Number; /*!< Channel number */
 174:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     }OC;                        /*!< Output Compare channel setup */
 175:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     struct {
 176:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         uint32_t Value;         /*!< Channel initial value */
 177:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         union {
 178:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         struct {
 179:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         TIM_InputSourceType Source : 2;      /*!< Specifies the input source */
 180:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         ClockDividerType    Prescaler : 2;   /*!< Specifies the input capture prescaler [DIV1..DIV8
 181:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         uint32_t            Filter : 4;      /*!< Specifies the input capture filter. [0..15] */
 182:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         uint32_t : 9;
 183:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         TIM_InputEdgeType   EdgePolarity : 2;/*!< Specifies the active edge(s) of the input signal 
 184:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         uint32_t : 13;
 185:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         }__packed;
 186:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****             uint8_t b[4]; /* Internal use only */
 187:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         };
 188:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         TIM_ChannelType Number; /*!< Channel number */
 189:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     }IC;                        /*!< Input Capture channel setup */
 190:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }TIM_ChannelInitType;
 191:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 192:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @brief TIM event selection */
 193:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** typedef enum
 194:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 195:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_EVENT_UPDATE    = 0, /*!< TIM counter value updated event */
 196:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_EVENT_CH1       = 1, /*!< TIM Capture/Compare channel 1 event */
 197:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_EVENT_CH2       = 2, /*!< TIM Capture/Compare channel 2 event */
 198:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_EVENT_CH3       = 3, /*!< TIM Capture/Compare channel 3 event */
 199:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_EVENT_CH4       = 4, /*!< TIM Capture/Compare channel 4 event */
 200:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_EVENT_COM       = 5, /*!< TIM Capture/Compare control update event */
 201:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_EVENT_TRIGGER   = 6, /*!< TIM Trigger event */
 202:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }TIM_EventType;
 203:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 204:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @brief TIM Handle structure */
 205:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** typedef struct
 206:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 207:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_TypeDef * Inst;                      /*!< The address of the peripheral instance used by th
 208:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #ifdef TIM_BB
 209:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     TIM_BitBand_TypeDef * Inst_BB;           /*!< The address of the peripheral instance in the bit
 210:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #endif
 211:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     struct {
 212:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         XPD_HandleCallbackType DepInit;      /*!< Callback to initialize module dependencies (GPIOs
 213:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         XPD_HandleCallbackType DepDeinit;    /*!< Callback to restore module dependencies (GPIOs, I
 214:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         XPD_HandleCallbackType Update;       /*!< Timer update callback */
 215:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         XPD_HandleCallbackType ChannelEvent; /*!< Channel compare/capture callback */
 216:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         XPD_HandleCallbackType Trigger;      /*!< Trigger callback */
 217:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         XPD_HandleCallbackType Commutation;  /*!< Commutation callback */
 218:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         XPD_HandleCallbackType Break;        /*!< Break callback */
 219:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #ifdef __XPD_DMA_ERROR_DETECT
ARM GAS  /tmp/ccgFBn4z.s 			page 16


 220:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         XPD_HandleCallbackType Error;        /*!< DMA error callback */
 221:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #endif
 222:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     }Callbacks;                              /*   Handle Callbacks */
 223:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     struct {
 224:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         DMA_HandleType * Update;             /*!< DMA handle for update transfer */
 225:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         DMA_HandleType * Channel[4];         /*!< DMA handles for channel transfers */
 226:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         DMA_HandleType * Burst;              /*!< DMA handle for burst transfers */
 227:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     }DMA;                                    /*   DMA handle references */
 228:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     RCC_PositionType CtrlPos;                /*!< Relative position for reset and clock control */
 229:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     uint32_t ChannelMask;                    /*!< Configured timer channels mask */
 230:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     uint8_t  EventMask;                      /*!< Configured timer channels event mask */
 231:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     volatile TIM_ChannelType ActiveChannel;  /*!< The currently active timer channel */
 232:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }TIM_HandleType;
 233:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 234:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @} */
 235:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 236:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @defgroup TIM_Common_Exported_Macros TIM Common Exported Macros
 237:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @{ */
 238:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 239:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #ifdef TIM_BB
 240:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 241:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief TIM Instance to handle binder macro
 242:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param HANDLE: specifies the peripheral handle.
 243:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param INSTANCE: specifies the TIM peripheral instance.
 244:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 245:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #define         TIM_INST2HANDLE(HANDLE,INSTANCE)            \
 246:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     ((HANDLE)->Inst    = (INSTANCE),                        \
 247:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****      (HANDLE)->Inst_BB = TIM_BB(INSTANCE),                  \
 248:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****      (HANDLE)->CtrlPos = RCC_POS_##INSTANCE)
 249:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 250:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 251:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief TIM register bit accessing macro
 252:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param HANDLE: specifies the peripheral handle.
 253:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param REG_NAME: specifies the register name.
 254:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param BIT_NAME: specifies the register bit name.
 255:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 256:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #define         TIM_REG_BIT(HANDLE, REG_NAME, BIT_NAME)     \
 257:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     ((HANDLE)->Inst_BB->REG_NAME.BIT_NAME)
 258:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 259:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #else
 260:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 261:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief TIM Instance to handle binder macro
 262:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param HANDLE: specifies the peripheral handle.
 263:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param INSTANCE: specifies the TIM peripheral instance.
 264:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 265:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #define         TIM_INST2HANDLE(HANDLE,INSTANCE)            \
 266:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     ((HANDLE)->Inst    = (INSTANCE),                        \
 267:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****      (HANDLE)->CtrlPos = RCC_POS_##INSTANCE)
 268:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 269:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 270:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief TIM register bit accessing macro
 271:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param HANDLE: specifies the peripheral handle.
 272:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param REG_NAME: specifies the register name.
 273:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param BIT_NAME: specifies the register bit name.
 274:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 275:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #define         TIM_REG_BIT(HANDLE, REG_NAME, BIT_NAME)     \
 276:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     ((HANDLE)->Inst->REG_NAME.b.BIT_NAME)
ARM GAS  /tmp/ccgFBn4z.s 			page 17


 277:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 278:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #endif /* TIM_BB */
 279:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 280:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 281:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief  Enable the specified TIM interrupt.
 282:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param  HANDLE: specifies the TIM Handle.
 283:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param  IT_NAME: specifies the interrupt to enable.
 284:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *         This parameter can be one of the following values:
 285:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg U:       Update
 286:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC1:     Capture/Compare channel 1
 287:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC2:     Capture/Compare channel 2
 288:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC3:     Capture/Compare channel 3
 289:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC4:     Capture/Compare channel 4
 290:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg COM:     Commutation
 291:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg T:       Trigger
 292:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg B:       Break
 293:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 294:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #define         TIM_IT_ENABLE(HANDLE, IT_NAME)              \
 295:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     (TIM_REG_BIT((HANDLE),DIER,IT_NAME##IE) = 1)
 296:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 297:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 298:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief  Disable the specified TIM interrupt.
 299:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param  HANDLE: specifies the TIM Handle.
 300:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param  IT_NAME: specifies the interrupt to enable.
 301:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *         This parameter can be one of the following values:
 302:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg U:       Update
 303:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC1:     Capture/Compare channel 1
 304:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC2:     Capture/Compare channel 2
 305:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC3:     Capture/Compare channel 3
 306:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC4:     Capture/Compare channel 4
 307:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg COM:     Commutation
 308:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg T:       Trigger
 309:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg B:       Break
 310:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 311:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #define         TIM_IT_DISABLE(HANDLE, IT_NAME)             \
 312:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     (TIM_REG_BIT((HANDLE),DIER,IT_NAME##IE) = 0)
 313:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 314:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 315:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief  Enable the specified TIM DMA request.
 316:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param  HANDLE: specifies the TIM Handle.
 317:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param  DMA_NAME: specifies the DMA request to enable.
 318:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *         This parameter can be one of the following values:
 319:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg U:       Update
 320:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC1:     Capture/Compare channel 1
 321:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC2:     Capture/Compare channel 2
 322:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC3:     Capture/Compare channel 3
 323:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC4:     Capture/Compare channel 4
 324:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg COM:     Commutation
 325:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg T:       Trigger
 326:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 327:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #define         TIM_DMA_ENABLE(HANDLE, DMA_NAME)            \
 328:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     (TIM_REG_BIT((HANDLE),DIER,DMA_NAME##DE) = 1)
 329:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 330:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 331:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief  Disable the specified TIM DMA request.
 332:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param  HANDLE: specifies the TIM Handle.
 333:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param  DMA_NAME: specifies the DMA request to enable.
ARM GAS  /tmp/ccgFBn4z.s 			page 18


 334:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *         This parameter can be one of the following values:
 335:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg U:       Update
 336:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC1:     Capture/Compare channel 1
 337:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC2:     Capture/Compare channel 2
 338:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC3:     Capture/Compare channel 3
 339:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC4:     Capture/Compare channel 4
 340:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg COM:     Commutation
 341:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg T:       Trigger
 342:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 343:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #define         TIM_DMA_DISABLE(HANDLE, DMA_NAME)           \
 344:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     (TIM_REG_BIT((HANDLE),DIER,DMA_NAME##DE) = 0)
 345:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 346:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 347:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief  Get the specified TIM flag.
 348:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param  HANDLE: specifies the TIM Handle.
 349:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param  FLAG_NAME: specifies the flag to return.
 350:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *         This parameter can be one of the following values:
 351:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg U:       Update
 352:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC1:     Capture/Compare channel 1
 353:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC2:     Capture/Compare channel 2
 354:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC3:     Capture/Compare channel 3
 355:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC4:     Capture/Compare channel 4
 356:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg COM:     Commutation
 357:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg T:       Trigger
 358:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg B:       Break
 359:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 360:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #define         TIM_FLAG_STATUS(HANDLE, FLAG_NAME)          \
 361:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     (TIM_REG_BIT((HANDLE),SR,FLAG_NAME##IF))
 362:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 363:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 364:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief  Clear the specified TIM flag.
 365:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param  HANDLE: specifies the TIM Handle.
 366:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param  FLAG_NAME: specifies the flag to clear.
 367:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *         This parameter can be one of the following values:
 368:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg U:       Update
 369:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC1:     Capture/Compare channel 1
 370:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC2:     Capture/Compare channel 2
 371:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC3:     Capture/Compare channel 3
 372:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg CC4:     Capture/Compare channel 4
 373:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg COM:     Commutation
 374:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg T:       Trigger
 375:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  *            @arg B:       Break
 376:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 377:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #define         TIM_FLAG_CLEAR(HANDLE,FLAG_NAME)            \
 378:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     (TIM_REG_BIT((HANDLE),SR,FLAG_NAME##IF) = 0)
 379:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 380:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 381:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief Gets or sets the TIM counter direction.
 382:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param pxTIM: pointer to the TIM handle structure
 383:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @return The current counter direction (up/down)
 384:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 385:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #define         TIM_DIRECTION(HANDLE)                       \
 386:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     (TIM_REG_BIT((HANDLE), CR1, DIR))
 387:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 388:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @} */
 389:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 390:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @addtogroup TIM_Common_Exported_Functions
ARM GAS  /tmp/ccgFBn4z.s 			page 19


 391:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @{ */
 392:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** void            TIM_vInit               (TIM_HandleType * pxTIM, const TIM_InitType * pxConfig,
 393:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****                                          const TIM_ChannelInitType axChannels[], uint8_t ucChannelC
 394:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** void            TIM_vDeinit             (TIM_HandleType * pxTIM);
 395:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 396:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** void            TIM_vIRQHandler         (TIM_HandleType * pxTIM);
 397:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 398:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** void            TIM_vBurstConfig        (TIM_HandleType * pxTIM,
 399:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****                                          __IO uint32_t * pulStartReg, uint8_t ucRegCount);
 400:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 401:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** void            TIM_vStart              (TIM_HandleType * pxTIM);
 402:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** void            TIM_vStop               (TIM_HandleType * pxTIM);
 403:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 404:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** XPD_ReturnType  TIM_eOpen_DMA           (TIM_HandleType * pxTIM, TIM_EventType eEvent,
 405:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****                                          void * pvAddress, uint16_t usLength);
 406:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** void            TIM_vClose_DMA          (TIM_HandleType * pxTIM, TIM_EventType eEvent);
 407:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 408:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 409:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief Provides the current TIM counter reference to get or set its value.
 410:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param pxTIM: pointer to the TIM handle structure
 411:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @return Reference to the counter
 412:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 413:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** __STATIC_INLINE __IO uint32_t* TIM_pulCounter(TIM_HandleType * pxTIM)
 414:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 415:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     return &pxTIM->Inst->CNT;
 416:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 417:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 418:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 419:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief Provides the current TIM reload reference to get or set its value.
 420:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param pxTIM: pointer to the TIM handle structure
 421:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @return Reference to the reload
 422:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 423:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** __STATIC_INLINE __IO uint32_t* TIM_pulReload(TIM_HandleType * pxTIM)
 424:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 425:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     return &pxTIM->Inst->ARR;
 426:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 427:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 428:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 429:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief Provides the current TIM repetition reference to get or set its value.
 430:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param pxTIM: pointer to the TIM handle structure
 431:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @return Reference to the repetition
 432:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 433:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** __STATIC_INLINE __IO uint32_t* TIM_pulRepetition(TIM_HandleType * pxTIM)
 434:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 435:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     return &pxTIM->Inst->RCR;
 436:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 437:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 438:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 439:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief Generate a TIM event.
 440:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param pxTIM: pointer to the TIM handle structure
 441:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param eEvent: specifies the event to generate
 442:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 443:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** __STATIC_INLINE void TIM_vGenerate(TIM_HandleType * pxTIM, TIM_EventType eEvent)
 444:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 445:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     pxTIM->Inst->EGR = 1 << eEvent;
 446:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 447:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
ARM GAS  /tmp/ccgFBn4z.s 			page 20


 448:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @} */
 449:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 450:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @} */
 451:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 452:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @defgroup TIM_Counter TIM Counter
 453:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @{ */
 454:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 455:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @addtogroup TIM_Counter_Exported_Functions
 456:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @{ */
 457:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** void            TIM_vCounterInit        (TIM_HandleType * pxTIM, const TIM_InitType * pxConfig);
 458:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 459:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** void            TIM_vCounterStart_IT    (TIM_HandleType * pxTIM);
 460:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** void            TIM_vCounterStop_IT     (TIM_HandleType * pxTIM);
 461:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 462:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** void            TIM_vIRQHandler_UP      (TIM_HandleType * pxTIM);
 463:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 464:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 465:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief Enables the TIM counter.
 466:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param pxTIM: pointer to the TIM handle structure
 467:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 468:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** __STATIC_INLINE void TIM_vCounterStart(TIM_HandleType * pxTIM)
 469:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 470:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     pxTIM->Inst->CR1 |= TIM_CR1_CEN;
 471:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 472:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 473:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 474:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief Disables the TIM counter.
 475:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param pxTIM: pointer to the TIM handle structure
 476:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 477:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** __STATIC_INLINE void TIM_vCounterStop(TIM_HandleType * pxTIM)
 478:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 479:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     pxTIM->Inst->CR1 &= ~TIM_CR1_CEN;
 480:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 481:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 482:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 483:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief Returns the current status of the TIM counter.
 484:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param pxTIM: pointer to the TIM handle structure
 485:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @return true if the counter is running, false if stopped
 486:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 487:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** __STATIC_INLINE bool TIM_bCounterIsRunning(TIM_HandleType * pxTIM)
 488:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 489:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     return (pxTIM->Inst->CR1 & TIM_CR1_CEN_Msk) >> TIM_CR1_CEN_Pos; 
 490:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 491:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 492:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @} */
 493:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 494:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @} */
 495:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 496:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @defgroup TIM_Channel TIM Channel Control
 497:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @{ */
 498:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 499:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /** @addtogroup TIM_Channel_Exported_Functions
 500:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @{ */
 501:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** void            TIM_vIRQHandler_CC      (TIM_HandleType * pxTIM);
 502:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 503:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 504:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief  Gets or sets the current TIM channel value.
ARM GAS  /tmp/ccgFBn4z.s 			page 21


 505:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param  HANDLE: specifies the TIM Handle.
 506:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param  CH: Number of TIM channel.
 507:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @return The value of the channel.
 508:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 509:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** __STATIC_INLINE __IO uint32_t* TIM_pulChannel(TIM_HandleType * pxTIM, TIM_ChannelType eChannel)
 510:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 511:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     __IO uint32_t* pulCh = &pxTIM->Inst->CCR1 + eChannel;
 512:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #if TIM_SUPPORTED_CHANNEL_COUNT > 5
 513:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     if (eChannel > TIM_CH4)
 514:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     {
 515:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****         pulCh += 5;
 431              		.loc 2 515 9 view .LVU117
 516:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     }
 517:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #endif
 518:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     return pulCh;
 432              		.loc 2 518 5 view .LVU118
 433              	.LBE50:
 434              	.LBE49:
 167:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****                 << (eChannel * 4);
 435              		.loc 1 167 67 is_stmt 0 view .LVU119
 436 007a 9079     		ldrb	r0, [r2, #6]	@ zero_extendqisi2
 437              		.loc 1 181 44 view .LVU120
 438 007c 0225     		movs	r5, #2
 164:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 439              		.loc 1 164 25 view .LVU121
 440 007e 117A     		ldrb	r1, [r2, #8]	@ zero_extendqisi2
 441              	.LVL32:
 167:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****                 << (eChannel * 4);
 442              		.loc 1 167 9 is_stmt 1 view .LVU122
 182:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 183:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* Set the Output Idle states */
 184:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         ulCR2 |= (uint32_t)axChannels[i].IC.b[3] << (eChannel * 2);
 185:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 186:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* Add output configuration */
 187:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         aulCCMR[eChannel / 2] |= (axChannels[i].OC.w & 0x1FFFF) << (eChannel & 1) * 8;
 443              		.loc 1 187 31 is_stmt 0 view .LVU123
 444 0080 0DF11809 		add	r9, sp, #24
 167:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****                 << (eChannel * 4);
 445              		.loc 1 167 46 view .LVU124
 446 0084 00F00403 		and	r3, r0, #4
 171:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****                 << (eChannel * 4);
 447              		.loc 1 171 19 view .LVU125
 448 0088 00F00A00 		and	r0, r0, #10
 181:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 449              		.loc 1 181 44 view .LVU126
 450 008c 05FA01FB 		lsl	fp, r5, r1
 168:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 451              		.loc 1 168 30 view .LVU127
 452 0090 01FA05F5 		lsl	r5, r1, r5
 167:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****                 << (eChannel * 4);
 453              		.loc 1 167 46 view .LVU128
 454 0094 43F00103 		orr	r3, r3, #1
 455              		.loc 1 187 31 view .LVU129
 456 0098 4E08     		lsrs	r6, r1, #1
 172:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 457              		.loc 1 172 17 view .LVU130
 458 009a A840     		lsls	r0, r0, r5
ARM GAS  /tmp/ccgFBn4z.s 			page 22


 459              		.loc 1 187 78 view .LVU131
 460 009c 01F0010C 		and	ip, r1, #1
 168:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 461              		.loc 1 168 17 view .LVU132
 462 00a0 AB40     		lsls	r3, r3, r5
 463              	.LBB54:
 464              	.LBB51:
 513:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     {
 465              		.loc 2 513 8 view .LVU133
 466 00a2 0329     		cmp	r1, #3
 467              	.LBE51:
 468              	.LBE54:
 171:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****                 << (eChannel * 4);
 469              		.loc 1 171 16 view .LVU134
 470 00a4 48EA0008 		orr	r8, r8, r0
 471              	.LVL33:
 472              		.loc 1 187 31 view .LVU135
 473 00a8 09EB8606 		add	r6, r9, r6, lsl #2
 167:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****                 << (eChannel * 4);
 474              		.loc 1 167 28 view .LVU136
 475 00ac 43EA0403 		orr	r3, r3, r4
 476              		.loc 1 187 83 view .LVU137
 477 00b0 4FEACC0C 		lsl	ip, ip, #3
 184:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 478              		.loc 1 184 63 view .LVU138
 479 00b4 4FEA4100 		lsl	r0, r1, #1
 480              	.LBB55:
 481              	.LBB52:
 511:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #if TIM_SUPPORTED_CHANNEL_COUNT > 5
 482              		.loc 2 511 20 view .LVU139
 483 00b8 5544     		add	r5, r5, r10
 484              	.LVL34:
 485              		.loc 2 518 5 is_stmt 1 view .LVU140
 486              		.loc 2 518 5 is_stmt 0 view .LVU141
 487              	.LBE52:
 488              	.LBE55:
 167:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****                 << (eChannel * 4);
 489              		.loc 1 167 28 view .LVU142
 490 00ba FB63     		str	r3, [r7, #60]
 171:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****                 << (eChannel * 4);
 491              		.loc 1 171 9 is_stmt 1 view .LVU143
 492              	.LVL35:
 175:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 493              		.loc 1 175 9 view .LVU144
 494              	.LBB56:
 495              	.LBI49:
 509:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 496              		.loc 2 509 32 view .LVU145
 497              	.LBB53:
 511:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #if TIM_SUPPORTED_CHANNEL_COUNT > 5
 498              		.loc 2 511 5 view .LVU146
 513:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     {
 499              		.loc 2 513 5 view .LVU147
 500 00bc 1368     		ldr	r3, [r2]
 513:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     {
 501              		.loc 2 513 8 is_stmt 0 view .LVU148
 502 00be D7D8     		bhi	.L29
ARM GAS  /tmp/ccgFBn4z.s 			page 23


 503              	.LBE53:
 504              	.LBE56:
 175:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 505              		.loc 1 175 42 view .LVU149
 506 00c0 4AF82130 		str	r3, [r10, r1, lsl #2]
 178:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {   continue; }
 507              		.loc 1 178 9 is_stmt 1 view .LVU150
 508              	.LVL36:
 181:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 509              		.loc 1 181 9 view .LVU151
 510 00c4 0C32     		adds	r2, r2, #12
 181:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 511              		.loc 1 181 26 is_stmt 0 view .LVU152
 512 00c6 97F84030 		ldrb	r3, [r7, #64]	@ zero_extendqisi2
 513              		.loc 1 187 31 view .LVU153
 514 00ca 56F80C1C 		ldr	r1, [r6, #-12]
 515              	.LVL37:
 181:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 516              		.loc 1 181 26 view .LVU154
 517 00ce 43EA0B0B 		orr	fp, r3, fp
 518 00d2 87F840B0 		strb	fp, [r7, #64]
 184:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 519              		.loc 1 184 9 is_stmt 1 view .LVU155
 520              		.loc 1 187 54 is_stmt 0 view .LVU156
 521 00d6 52F8083C 		ldr	r3, [r2, #-8]
 184:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 522              		.loc 1 184 18 view .LVU157
 523 00da 12F8054C 		ldrb	r4, [r2, #-5]	@ zero_extendqisi2
 524              	.LBE57:
 162:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 525              		.loc 1 162 5 view .LVU158
 526 00de 9645     		cmp	lr, r2
 527              	.LBB58:
 528              		.loc 1 187 54 view .LVU159
 529 00e0 C3F31003 		ubfx	r3, r3, #0, #17
 184:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 530              		.loc 1 184 50 view .LVU160
 531 00e4 04FA00F0 		lsl	r0, r4, r0
 532              		.loc 1 187 65 view .LVU161
 533 00e8 03FA0CFC 		lsl	ip, r3, ip
 184:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 534              		.loc 1 184 15 view .LVU162
 535 00ec 009B     		ldr	r3, [sp]
 536              		.loc 1 187 31 view .LVU163
 537 00ee 4CEA0101 		orr	r1, ip, r1
 184:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 538              		.loc 1 184 15 view .LVU164
 539 00f2 43EA0003 		orr	r3, r3, r0
 540              		.loc 1 187 31 view .LVU165
 541 00f6 46F80C1C 		str	r1, [r6, #-12]
 184:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 542              		.loc 1 184 15 view .LVU166
 543 00fa 0093     		str	r3, [sp]
 544              	.LVL38:
 545              		.loc 1 187 9 is_stmt 1 view .LVU167
 546              		.loc 1 187 9 is_stmt 0 view .LVU168
 547              	.LBE58:
ARM GAS  /tmp/ccgFBn4z.s 			page 24


 162:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 548              		.loc 1 162 37 is_stmt 1 view .LVU169
 162:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 549              		.loc 1 162 17 view .LVU170
 162:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 550              		.loc 1 162 5 is_stmt 0 view .LVU171
 551 00fc BCD1     		bne	.L19
 552              	.LVL39:
 553              	.L28:
 162:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 554              		.loc 1 162 5 view .LVU172
 555 00fe DDE9009E 		ldrd	r9, lr, [sp]
 556 0102 DDE90325 		ldrd	r2, r5, [sp, #12]
 557 0106 4FEA0923 		lsl	r3, r9, #8
 558              	.LVL40:
 559              	.L17:
 188:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 189:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 190:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Copy assembled settings to registers */
 191:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CR2 = ulCR2 << TIM_CR2_OIS1_Pos;
 560              		.loc 1 191 5 is_stmt 1 view .LVU173
 192:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CCMR1 = aulCCMR[0];
 193:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CCMR2 = aulCCMR[1];
 194:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #if TIM_SUPPORTED_CHANNEL_COUNT > 5
 195:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CCMR3 = aulCCMR[2];
 561              		.loc 1 195 24 is_stmt 0 view .LVU174
 562 010a 0021     		movs	r1, #0
 191:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CCMR1 = aulCCMR[0];
 563              		.loc 1 191 22 view .LVU175
 564 010c CEF80430 		str	r3, [lr, #4]
 192:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CCMR1 = aulCCMR[0];
 565              		.loc 1 192 5 is_stmt 1 view .LVU176
 192:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CCMR1 = aulCCMR[0];
 566              		.loc 1 192 24 is_stmt 0 view .LVU177
 567 0110 CEF81820 		str	r2, [lr, #24]
 193:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #if TIM_SUPPORTED_CHANNEL_COUNT > 5
 568              		.loc 1 193 5 is_stmt 1 view .LVU178
 569              	.LBB59:
 570              	.LBB60:
 445:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 571              		.loc 2 445 22 is_stmt 0 view .LVU179
 572 0114 0122     		movs	r2, #1
 573              	.LBE60:
 574              	.LBE59:
 193:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #if TIM_SUPPORTED_CHANNEL_COUNT > 5
 575              		.loc 1 193 24 view .LVU180
 576 0116 CEF81C50 		str	r5, [lr, #28]
 577              		.loc 1 195 5 is_stmt 1 view .LVU181
 578              		.loc 1 195 24 is_stmt 0 view .LVU182
 579 011a CEF85410 		str	r1, [lr, #84]
 196:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #endif
 197:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CCER = ulCCER;
 580              		.loc 1 197 5 is_stmt 1 view .LVU183
 581              		.loc 1 197 23 is_stmt 0 view .LVU184
 582 011e CEF82080 		str	r8, [lr, #32]
 198:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 199:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Enable automatic output by default in order to ensure
ARM GAS  /tmp/ccgFBn4z.s 			page 25


 200:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****      * matching behavior of advanced and regular timers */
 201:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->BDTR |= TIM_BDTR_AOE;
 583              		.loc 1 201 5 is_stmt 1 view .LVU185
 584              		.loc 1 201 23 is_stmt 0 view .LVU186
 585 0122 DEF84430 		ldr	r3, [lr, #68]
 586 0126 43F48043 		orr	r3, r3, #16384
 587 012a CEF84430 		str	r3, [lr, #68]
 202:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 203:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Generate update which loads ARR and CCRx registers */
 204:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vGenerate(pxTIM, TIM_EVENT_UPDATE);
 588              		.loc 1 204 5 is_stmt 1 view .LVU187
 589              	.LVL41:
 590              	.LBB62:
 591              	.LBI59:
 443:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 592              		.loc 2 443 22 view .LVU188
 593              	.LBB61:
 445:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 594              		.loc 2 445 5 view .LVU189
 445:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 595              		.loc 2 445 22 is_stmt 0 view .LVU190
 596 012e CEF81420 		str	r2, [lr, #20]
 597              	.LVL42:
 598              	.L21:
 445:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 599              		.loc 2 445 22 view .LVU191
 600              	.LBE61:
 601              	.LBE62:
 205:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     while((pxTIM->Inst->SR & TIM_SR_UIF_Msk) == 0);
 602              		.loc 1 205 51 is_stmt 1 discriminator 1 view .LVU192
 603              		.loc 1 205 10 discriminator 1 view .LVU193
 604              		.loc 1 205 23 is_stmt 0 discriminator 1 view .LVU194
 605 0132 DEF81030 		ldr	r3, [lr, #16]
 606              		.loc 1 205 10 discriminator 1 view .LVU195
 607 0136 DB07     		lsls	r3, r3, #31
 608 0138 FBD5     		bpl	.L21
 206:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->SR &= ~TIM_SR_UIF;
 609              		.loc 1 206 5 is_stmt 1 view .LVU196
 610              		.loc 1 206 21 is_stmt 0 view .LVU197
 611 013a DEF81030 		ldr	r3, [lr, #16]
 207:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 208:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Dependencies initialization */
 209:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_SAFE_CALLBACK(pxTIM->Callbacks.DepInit, pxTIM);
 612              		.loc 1 209 5 view .LVU198
 613 013e 7A68     		ldr	r2, [r7, #4]
 206:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->SR &= ~TIM_SR_UIF;
 614              		.loc 1 206 21 view .LVU199
 615 0140 23F00103 		bic	r3, r3, #1
 616 0144 CEF81030 		str	r3, [lr, #16]
 617              		.loc 1 209 5 is_stmt 1 view .LVU200
 618              		.loc 1 209 5 view .LVU201
 619 0148 22B1     		cbz	r2, .L16
 620              		.loc 1 209 5 discriminator 1 view .LVU202
 621 014a 3846     		mov	r0, r7
 210:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 622              		.loc 1 210 1 is_stmt 0 discriminator 1 view .LVU203
 623 014c 07B0     		add	sp, sp, #28
ARM GAS  /tmp/ccgFBn4z.s 			page 26


 624              	.LCFI2:
 625              		.cfi_remember_state
 626              		.cfi_def_cfa_offset 36
 627              		@ sp needed
 628 014e BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 629              	.LCFI3:
 630              		.cfi_restore 14
 631              		.cfi_restore 11
 632              		.cfi_restore 10
 633              		.cfi_restore 9
 634              		.cfi_restore 8
 635              		.cfi_restore 7
 636              		.cfi_restore 6
 637              		.cfi_restore 5
 638              		.cfi_restore 4
 639              		.cfi_def_cfa_offset 0
 640              	.LVL43:
 209:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 641              		.loc 1 209 5 discriminator 1 view .LVU204
 642 0152 1047     		bx	r2	@ indirect register sibling call
 643              	.LVL44:
 644              	.L16:
 645              	.LCFI4:
 646              		.cfi_restore_state
 647              		.loc 1 210 1 view .LVU205
 648 0154 07B0     		add	sp, sp, #28
 649              	.LCFI5:
 650              		.cfi_remember_state
 651              		.cfi_def_cfa_offset 36
 652              		@ sp needed
 653 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 654              	.LVL45:
 655              	.L24:
 656              	.LCFI6:
 657              		.cfi_restore_state
 162:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 658              		.loc 1 162 5 view .LVU206
 659 015a 2A46     		mov	r2, r5
 660 015c 2B46     		mov	r3, r5
 152:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t aulCCMR[TIM_SUPPORTED_CHANNEL_COUNT / 2] = {0};
 661              		.loc 1 152 14 view .LVU207
 662 015e A846     		mov	r8, r5
 663              	.LVL46:
 152:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t aulCCMR[TIM_SUPPORTED_CHANNEL_COUNT / 2] = {0};
 664              		.loc 1 152 14 view .LVU208
 665 0160 D3E7     		b	.L17
 666              		.cfi_endproc
 667              	.LFE189:
 669 0162 00BF     		.section	.text.TIM_vDeinit,"ax",%progbits
 670              		.align	1
 671              		.p2align 2,,3
 672              		.global	TIM_vDeinit
 673              		.syntax unified
 674              		.thumb
 675              		.thumb_func
 676              		.fpu fpv4-sp-d16
 678              	TIM_vDeinit:
ARM GAS  /tmp/ccgFBn4z.s 			page 27


 679              	.LVL47:
 680              	.LFB190:
 211:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 212:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 213:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief Deinitializes the TIM peripheral.
 214:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 215:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 216:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vDeinit(TIM_HandleType * pxTIM)
 217:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 681              		.loc 1 217 1 is_stmt 1 view -0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 218:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Stop the timer */
 219:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vStop(pxTIM);
 685              		.loc 1 219 5 view .LVU210
 217:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Stop the timer */
 686              		.loc 1 217 1 is_stmt 0 view .LVU211
 687 0000 38B5     		push	{r3, r4, r5, lr}
 688              	.LCFI7:
 689              		.cfi_def_cfa_offset 16
 690              		.cfi_offset 3, -16
 691              		.cfi_offset 4, -12
 692              		.cfi_offset 5, -8
 693              		.cfi_offset 14, -4
 694              	.LBB63:
 695              	.LBB64:
 220:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 221:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Disable master output */
 222:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->BDTR &= ~TIM_BDTR_MOE;
 223:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 224:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Deinitialize peripheral dependencies */
 225:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_SAFE_CALLBACK(pxTIM->Callbacks.DepDeinit, pxTIM);
 226:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 227:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Disable clock */
 228:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     RCC_vClockDisable(pxTIM->CtrlPos);
 229:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 230:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 231:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 232:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief TIM common interrupt handler that provides handle callbacks (break handling excluded).
 233:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 234:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 235:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vIRQHandler(TIM_HandleType * pxTIM)
 236:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 237:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vIRQHandler_UP(pxTIM);
 238:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vIRQHandler_CC(pxTIM);
 239:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vIRQHandler_TRG(pxTIM);
 240:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vIRQHandler_COM(pxTIM);
 241:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vIRQHandler_BRK(pxTIM);
 242:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 243:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 244:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 245:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief Configures burst DMA transfers.
 246:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 247:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pulStartReg: pointer to the first register of the burst transfer
 248:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param ucRegCount: number of registers to transfer in each burst (set to 0 to disable bursts)
 249:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
ARM GAS  /tmp/ccgFBn4z.s 			page 28


 250:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vBurstConfig(TIM_HandleType * pxTIM, __IO uint32_t * pulStartReg, uint8_t ucRegCount)
 251:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 252:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     if (ucRegCount > 0)
 253:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 254:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxTIM->Inst->DCR &= ~(TIM_DCR_DBA | TIM_DCR_DBL);
 255:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         uint32_t dcrVal = (uint32_t)(pulStartReg - pxTIM->Inst->CR1) / sizeof(uint32_t);
 256:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxTIM->Inst->DCR |= (dcrVal << TIM_DCR_DBA_Pos) & TIM_DCR_DBA_Msk;
 257:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxTIM->Inst->DCR |= ((ucRegCount - 1) << TIM_DCR_DBL_Pos) & TIM_DCR_DBL_Msk;
 258:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 259:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     else
 260:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 261:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxTIM->Inst->DCR = 0;
 262:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 263:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 264:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 265:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 266:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief Enables the TIM counter and configured channels.
 267:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 268:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 269:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vStart(TIM_HandleType * pxTIM)
 270:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 271:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     SET_BIT(pxTIM->Inst->CCER, pxTIM->ChannelMask);
 272:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vCounterStart(pxTIM);
 273:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 274:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 275:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 276:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief Disables the TIM counter and configured channels.
 277:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 278:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 279:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vStop(TIM_HandleType * pxTIM)
 280:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 281:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     CLEAR_BIT(pxTIM->Inst->CCER, pxTIM->ChannelMask);
 696              		.loc 1 281 5 view .LVU212
 697 0002 0368     		ldr	r3, [r0]
 698              	.LBE64:
 699              	.LBE63:
 217:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Stop the timer */
 700              		.loc 1 217 1 view .LVU213
 701 0004 0446     		mov	r4, r0
 702              	.LVL48:
 703              	.LBB69:
 704              	.LBI63:
 279:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 705              		.loc 1 279 6 is_stmt 1 view .LVU214
 706              	.LBB67:
 707              		.loc 1 281 5 view .LVU215
 708 0006 C56B     		ldr	r5, [r0, #60]
 709 0008 1A6A     		ldr	r2, [r3, #32]
 710              	.LBE67:
 711              	.LBE69:
 225:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 712              		.loc 1 225 5 is_stmt 0 view .LVU216
 713 000a 8168     		ldr	r1, [r0, #8]
 714              	.LBB70:
 715              	.LBB68:
 716              		.loc 1 281 5 view .LVU217
 717 000c 22EA0502 		bic	r2, r2, r5
ARM GAS  /tmp/ccgFBn4z.s 			page 29


 718 0010 1A62     		str	r2, [r3, #32]
 282:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vCounterStop(pxTIM);
 719              		.loc 1 282 5 is_stmt 1 view .LVU218
 720              	.LVL49:
 721              	.LBB65:
 722              	.LBI65:
 477:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 723              		.loc 2 477 22 view .LVU219
 724              	.LBB66:
 479:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 725              		.loc 2 479 5 view .LVU220
 479:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 726              		.loc 2 479 22 is_stmt 0 view .LVU221
 727 0012 1A68     		ldr	r2, [r3]
 728 0014 22F00102 		bic	r2, r2, #1
 729 0018 1A60     		str	r2, [r3]
 730              	.LVL50:
 479:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 731              		.loc 2 479 22 view .LVU222
 732              	.LBE66:
 733              	.LBE65:
 734              	.LBE68:
 735              	.LBE70:
 222:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 736              		.loc 1 222 5 is_stmt 1 view .LVU223
 222:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 737              		.loc 1 222 23 is_stmt 0 view .LVU224
 738 001a 5A6C     		ldr	r2, [r3, #68]
 739 001c 22F40042 		bic	r2, r2, #32768
 740 0020 5A64     		str	r2, [r3, #68]
 225:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 741              		.loc 1 225 5 is_stmt 1 view .LVU225
 225:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 742              		.loc 1 225 5 view .LVU226
 743 0022 01B1     		cbz	r1, .L31
 225:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 744              		.loc 1 225 5 discriminator 1 view .LVU227
 745 0024 8847     		blx	r1
 746              	.LVL51:
 747              	.L31:
 225:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 748              		.loc 1 225 5 discriminator 3 view .LVU228
 228:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 749              		.loc 1 228 5 discriminator 3 view .LVU229
 750 0026 208F     		ldrh	r0, [r4, #56]
 229:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 751              		.loc 1 229 1 is_stmt 0 discriminator 3 view .LVU230
 752 0028 BDE83840 		pop	{r3, r4, r5, lr}
 753              	.LCFI8:
 754              		.cfi_restore 14
 755              		.cfi_restore 5
 756              		.cfi_restore 4
 757              		.cfi_restore 3
 758              		.cfi_def_cfa_offset 0
 759              	.LVL52:
 228:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 760              		.loc 1 228 5 discriminator 3 view .LVU231
ARM GAS  /tmp/ccgFBn4z.s 			page 30


 761 002c FFF7FEBF 		b	RCC_vClockDisable
 762              	.LVL53:
 763              		.cfi_endproc
 764              	.LFE190:
 766              		.section	.text.TIM_vIRQHandler,"ax",%progbits
 767              		.align	1
 768              		.p2align 2,,3
 769              		.global	TIM_vIRQHandler
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 773              		.fpu fpv4-sp-d16
 775              	TIM_vIRQHandler:
 776              	.LVL54:
 777              	.LFB191:
 236:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vIRQHandler_UP(pxTIM);
 778              		.loc 1 236 1 is_stmt 1 view -0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 237:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vIRQHandler_CC(pxTIM);
 782              		.loc 1 237 5 view .LVU233
 783              	.LBB83:
 784              	.LBB84:
 283:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 284:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 285:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 286:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief Sets up and enables a DMA transfer for the TIM counter.
 287:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 288:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param eEvent: DMA transfer trigger event
 289:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pvAddress: memory address of the counter data
 290:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param usLength: the amount of data to be transferred
 291:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @return ERROR if burst isn't configured and event doesn't have default register,
 292:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  *         BUSY if the DMA is used by other peripheral, OK otherwise
 293:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 294:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** XPD_ReturnType TIM_eOpen_DMA(
 295:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         TIM_HandleType *    pxTIM,
 296:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         TIM_EventType       eEvent,
 297:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         void *              pvAddress,
 298:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         uint16_t            usLength)
 299:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 300:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_ReturnType eResult = XPD_ERROR;
 301:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     DMA_HandleType* pxDMA = NULL;
 302:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     void* pvRegAddr;
 303:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 304:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Find DMA parameters by TIM configuration */
 305:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     if (pxTIM->Inst->DCR > 0)
 306:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 307:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxDMA = pxTIM->DMA.Burst;
 308:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         usLength *= ((pxTIM->Inst->DCR & TIM_DCR_DBL_Msk) >> TIM_DCR_DBL_Pos ) + 1;
 309:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pvRegAddr = (void*)&pxTIM->Inst->DMAR;
 310:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 311:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     else if (eEvent <= TIM_EVENT_CH4)
 312:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 313:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxDMA = ((void*)pxTIM->DMA.Update) + eEvent;
 314:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 315:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         if (eEvent == TIM_EVENT_UPDATE)
ARM GAS  /tmp/ccgFBn4z.s 			page 31


 316:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {
 317:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             pvRegAddr = (void*)TIM_pulReload(pxTIM);
 318:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 319:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         else
 320:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {
 321:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             pvRegAddr = (void*)TIM_pulChannel(pxTIM, eEvent - TIM_EVENT_CH1);
 322:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 323:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 324:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 325:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     if (pxDMA != NULL)
 326:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 327:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* Set up DMA for transfer */
 328:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         eResult = DMA_eStart_IT(pxDMA, pvRegAddr, pvAddress, usLength);
 329:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 330:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* If the DMA is currently used, return with error */
 331:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         if (eResult == XPD_OK)
 332:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {
 333:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             /* Set the callback owner */
 334:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             pxTIM->DMA.Update->Owner = pxTIM;
 335:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 336:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             /* Set the DMA transfer callbacks */
 337:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             pxTIM->DMA.Update->Callbacks.Complete = TIM_apxDmaRedirects[eEvent];
 338:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef __XPD_DMA_ERROR_DETECT
 339:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             pxTIM->DMA.Update->Callbacks.Error    = TIM_prvDmaErrorRedirect;
 340:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #endif
 341:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 342:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             /* enable the TIM event's DMA request */
 343:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             SET_BIT(pxTIM->Inst->DIER, eEvent << TIM_DIER_UDE_Pos);
 344:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 345:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 346:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 347:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     return eResult;
 348:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 349:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 350:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 351:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief Disables the DMA transfer.
 352:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 353:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param eEvent: DMA transfer trigger event
 354:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 355:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vClose_DMA(TIM_HandleType * pxTIM, TIM_EventType eEvent)
 356:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 357:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     DMA_HandleType* pxDMA = NULL;
 358:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 359:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     if (pxTIM->Inst->DCR > 0)
 360:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 361:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxDMA = pxTIM->DMA.Burst;
 362:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 363:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     else if (eEvent <= TIM_EVENT_CH4)
 364:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 365:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxDMA = ((void*)pxTIM->DMA.Update) + eEvent;
 366:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 367:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 368:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     if (pxDMA != NULL)
 369:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 370:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* disable the update DMA request */
 371:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         CLEAR_BIT(pxTIM->Inst->DIER, eEvent << TIM_DIER_UDE_Pos);
 372:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
ARM GAS  /tmp/ccgFBn4z.s 			page 32


 373:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         DMA_vStop_IT(pxDMA);
 374:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 375:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 376:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 377:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @} */
 378:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 379:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @} */
 380:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 381:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @addtogroup TIM_Counter
 382:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @{ */
 383:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 384:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @defgroup TIM_Counter_Exported_Functions TIM Counter Exported Functions
 385:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @{ */
 386:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 387:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 388:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief Initializes the TIM counter using the setup configuration.
 389:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 390:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxConfig: pointer to TIM setup configuration
 391:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 392:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vCounterInit(TIM_HandleType * pxTIM, const TIM_InitType * pxConfig)
 393:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 394:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_prvInit(pxTIM, pxConfig);
 395:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 396:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Disable all channels */
 397:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->ChannelMask = 0;
 398:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CCER = 0;
 399:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 400:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->EventMask = TIM_EVENT_UPDATE;
 401:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 402:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Generate update which loads ARR and CCRx registers */
 403:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vGenerate(pxTIM, TIM_EVENT_UPDATE);
 404:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     while((pxTIM->Inst->SR & TIM_SR_UIF) == 0);
 405:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->SR &= ~TIM_SR_UIF;
 406:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 407:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Dependencies initialization */
 408:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_SAFE_CALLBACK(pxTIM->Callbacks.DepInit, pxTIM);
 409:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 410:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 411:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 412:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief Enables the TIM counter and update interrupt.
 413:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 414:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 415:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vCounterStart_IT(TIM_HandleType * pxTIM)
 416:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 417:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* enable the TIM Update interrupt */
 418:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->DIER |= TIM_DIER_UIE;
 419:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 420:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* enable the counter */
 421:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vCounterStart(pxTIM);
 422:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 423:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 424:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 425:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief Disables the TIM counter and update interrupt.
 426:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 427:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 428:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vCounterStop_IT(TIM_HandleType * pxTIM)
 429:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
ARM GAS  /tmp/ccgFBn4z.s 			page 33


 430:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->DIER &= ~TIM_DIER_UIE;
 431:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 432:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* disable the counter */
 433:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vCounterStop(pxTIM);
 434:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 435:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 436:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 437:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief TIM update interrupt handler that provides handle callbacks.
 438:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 439:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 440:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vIRQHandler_UP(TIM_HandleType * pxTIM)
 441:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 442:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* TIM update event */
 443:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     if ((pxTIM->Inst->SR & pxTIM->Inst->DIER & TIM_SR_UIF) != 0)
 785              		.loc 1 443 15 is_stmt 0 view .LVU234
 786 0000 0368     		ldr	r3, [r0]
 787              		.loc 1 443 21 view .LVU235
 788 0002 1A69     		ldr	r2, [r3, #16]
 789              		.loc 1 443 39 view .LVU236
 790 0004 D968     		ldr	r1, [r3, #12]
 791              		.loc 1 443 26 view .LVU237
 792 0006 0A40     		ands	r2, r2, r1
 793              	.LBE84:
 794              	.LBE83:
 236:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vIRQHandler_UP(pxTIM);
 795              		.loc 1 236 1 view .LVU238
 796 0008 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 797              	.LCFI9:
 798              		.cfi_def_cfa_offset 24
 799              		.cfi_offset 4, -24
 800              		.cfi_offset 5, -20
 801              		.cfi_offset 6, -16
 802              		.cfi_offset 7, -12
 803              		.cfi_offset 8, -8
 804              		.cfi_offset 14, -4
 805              	.LBB87:
 806              	.LBB85:
 807              		.loc 1 443 8 view .LVU239
 808 000c D507     		lsls	r5, r2, #31
 809              	.LBE85:
 810              	.LBE87:
 236:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vIRQHandler_UP(pxTIM);
 811              		.loc 1 236 1 view .LVU240
 812 000e 0446     		mov	r4, r0
 813              	.LVL55:
 814              	.LBB88:
 815              	.LBI83:
 440:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 816              		.loc 1 440 6 is_stmt 1 view .LVU241
 817              	.LBB86:
 818              		.loc 1 443 5 view .LVU242
 819              		.loc 1 443 8 is_stmt 0 view .LVU243
 820 0010 07D5     		bpl	.L37
 444:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 445:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* Clear interrupt flag */
 446:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxTIM->Inst->SR &= ~TIM_SR_UIF;
 821              		.loc 1 446 9 is_stmt 1 view .LVU244
ARM GAS  /tmp/ccgFBn4z.s 			page 34


 822              		.loc 1 446 25 is_stmt 0 view .LVU245
 823 0012 1A69     		ldr	r2, [r3, #16]
 447:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 448:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         XPD_SAFE_CALLBACK(pxTIM->Callbacks.Update, pxTIM);
 824              		.loc 1 448 9 view .LVU246
 825 0014 C168     		ldr	r1, [r0, #12]
 446:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 826              		.loc 1 446 25 view .LVU247
 827 0016 22F00102 		bic	r2, r2, #1
 828 001a 1A61     		str	r2, [r3, #16]
 829              		.loc 1 448 9 is_stmt 1 view .LVU248
 830              		.loc 1 448 9 view .LVU249
 831 001c 09B1     		cbz	r1, .L37
 832              		.loc 1 448 9 view .LVU250
 833 001e 8847     		blx	r1
 834              	.LVL56:
 835              		.loc 1 448 9 is_stmt 0 view .LVU251
 836 0020 2368     		ldr	r3, [r4]
 837              	.L37:
 838              		.loc 1 448 9 is_stmt 1 view .LVU252
 839              	.LVL57:
 840              		.loc 1 448 9 is_stmt 0 view .LVU253
 841              	.LBE86:
 842              	.LBE88:
 238:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vIRQHandler_TRG(pxTIM);
 843              		.loc 1 238 5 is_stmt 1 view .LVU254
 844              	.LBB89:
 845              	.LBI89:
 449:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 450:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 451:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 452:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @} */
 453:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 454:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @} */
 455:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 456:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @addtogroup TIM_Channel
 457:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @{ */
 458:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 459:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @defgroup TIM_Channel_Exported_Functions TIM Channel Exported Functions
 460:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @{ */
 461:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 462:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 463:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief TIM channel event interrupt handler that provides handle callbacks.
 464:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 465:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 466:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vIRQHandler_CC(TIM_HandleType * pxTIM)
 846              		.loc 1 466 6 view .LVU255
 847              	.LBB90:
 467:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 468:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_ChannelType eChannel = TIM_CH1;
 848              		.loc 1 468 5 view .LVU256
 469:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t ulFlags = (pxTIM->Inst->SR & pxTIM->Inst->DIER
 849              		.loc 1 469 5 view .LVU257
 850              		.loc 1 469 36 is_stmt 0 view .LVU258
 851 0022 1A69     		ldr	r2, [r3, #16]
 852              		.loc 1 469 54 view .LVU259
 853 0024 D968     		ldr	r1, [r3, #12]
ARM GAS  /tmp/ccgFBn4z.s 			page 35


 854              		.loc 1 469 41 view .LVU260
 855 0026 0A40     		ands	r2, r2, r1
 470:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             & (TIM_SR_CC1IF | TIM_SR_CC2IF | TIM_SR_CC3IF | TIM_SR_CC4IF))
 471:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****                 >> TIM_SR_CC1IF_Pos;
 472:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 473:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Iterate through active channel flags */
 474:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     while (ulFlags > 0)
 856              		.loc 1 474 11 view .LVU261
 857 0028 12F01E0F 		tst	r2, #30
 469:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t ulFlags = (pxTIM->Inst->SR & pxTIM->Inst->DIER
 858              		.loc 1 469 14 view .LVU262
 859 002c C2F34305 		ubfx	r5, r2, #1, #4
 860              	.LVL58:
 861              		.loc 1 474 5 is_stmt 1 view .LVU263
 862              		.loc 1 474 11 view .LVU264
 863 0030 17D0     		beq	.L38
 864 0032 0026     		movs	r6, #0
 865              	.LBB91:
 866              	.LBB92:
 519:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 520:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 521:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 522:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief Enables the selected capture/compare channel.
 523:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param pxTIM: pointer to the TIM handle structure
 524:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param eChannel: the channel to enable
 525:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 526:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** __STATIC_INLINE void TIM_vChannelEnable(TIM_HandleType * pxTIM, TIM_ChannelType eChannel)
 527:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 528:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #ifdef TIM_BB
 529:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     *(&pxTIM->Inst_BB->CCER.CC1E + (4 * eChannel)) = 1;
 530:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #else
 531:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     SET_BIT(pxTIM->Inst->CCER, TIM_CCER_CC1E << (4 * eChannel));
 532:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #endif
 533:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 534:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 535:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 536:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief Disables the selected capture/compare channel.
 537:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param pxTIM: pointer to the TIM handle structure
 538:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param eChannel: the channel to disable
 539:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 540:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** __STATIC_INLINE void TIM_vChannelDisable(TIM_HandleType * pxTIM, TIM_ChannelType eChannel)
 541:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 542:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #ifdef TIM_BB
 543:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     *(&pxTIM->Inst_BB->CCER.CC1E + (4 * eChannel)) = 0;
 544:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #else
 545:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     CLEAR_BIT(pxTIM->Inst->CCER, TIM_CCER_CC1E << (4 * eChannel));
 546:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #endif
 547:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 548:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 549:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 550:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief Enables the selected complementary capture/compare channel.
 551:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param pxTIM: pointer to the TIM handle structure
 552:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param eChannel: the complementary channel to enable
 553:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 554:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** __STATIC_INLINE void TIM_vInvChannelEnable(TIM_HandleType * pxTIM, TIM_ChannelType eChannel)
 555:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 556:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     SET_BIT(pxTIM->Inst->CCER, TIM_CCER_CC1NE << (4 * eChannel));
ARM GAS  /tmp/ccgFBn4z.s 			page 36


 557:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 558:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 559:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 560:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief Disables the selected complementary capture/compare channel.
 561:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param pxTIM: pointer to the TIM handle structure
 562:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param eChannel: the complementary channel to disable
 563:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 564:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** __STATIC_INLINE void TIM_vInvChannelDisable(TIM_HandleType * pxTIM, TIM_ChannelType eChannel)
 565:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 566:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     CLEAR_BIT(pxTIM->Inst->CCER, TIM_CCER_CC1NE << (4 * eChannel));
 567:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 568:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 569:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 570:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief Enables the selected capture/compare channel interrupt.
 571:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param pxTIM: pointer to the TIM handle structure
 572:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param eChannel: the channel to enable
 573:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 574:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** __STATIC_INLINE void TIM_vChannelITEnable(TIM_HandleType * pxTIM, TIM_ChannelType eChannel)
 575:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 576:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     SET_BIT(pxTIM->Inst->DIER, TIM_DIER_CC1IE << eChannel);
 577:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 578:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 579:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 580:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief Disables the selected capture/compare channel interrupt.
 581:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param pxTIM: pointer to the TIM handle structure
 582:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param eChannel: the channel to disable
 583:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 584:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** __STATIC_INLINE void TIM_vChannelITDisable(TIM_HandleType * pxTIM, TIM_ChannelType eChannel)
 585:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 586:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     CLEAR_BIT(pxTIM->Inst->DIER, TIM_DIER_CC1IE << eChannel);
 587:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 588:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 589:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 590:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief Indicates the selected capture/compare channel's interrupt request status.
 591:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param pxTIM: pointer to the TIM handle structure
 592:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param eChannel: the channel to query
 593:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @return Status of the interrupt flag
 594:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 595:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** __STATIC_INLINE FlagStatus TIM_vChannelGetFlag(TIM_HandleType * pxTIM, TIM_ChannelType eChannel)
 596:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 597:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     return pxTIM->Inst->SR & (TIM_SR_CC1IF << eChannel);
 598:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 599:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** 
 600:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** /**
 601:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @brief Clears the selected capture/compare channel's interrupt request.
 602:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param pxTIM: pointer to the TIM handle structure
 603:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  * @param eChannel: the channel to clear
 604:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****  */
 605:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** __STATIC_INLINE void TIM_vChannelClearFlag(TIM_HandleType * pxTIM, TIM_ChannelType eChannel)
 606:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 607:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     CLEAR_BIT(pxTIM->Inst->SR, (TIM_SR_CC1IF << eChannel));
 867              		.loc 2 607 5 is_stmt 0 view .LVU265
 868 0034 0227     		movs	r7, #2
 869              	.LVL59:
 870              	.L40:
 871              		.loc 2 607 5 view .LVU266
 872              	.LBE92:
ARM GAS  /tmp/ccgFBn4z.s 			page 37


 873              	.LBE91:
 475:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 476:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         if ((ulFlags & 1) != 0)
 477:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {
 478:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             /* Clear interrupt flag */
 479:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             TIM_vChannelClearFlag(pxTIM, eChannel);
 874              		.loc 1 479 13 is_stmt 1 view .LVU267
 875              		.loc 1 479 13 is_stmt 0 view .LVU268
 876 0036 5FFA86FC 		uxtb	ip, r6
 877              	.LVL60:
 476:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {
 878              		.loc 1 476 9 is_stmt 1 view .LVU269
 879              	.LBB98:
 880              	.LBI91:
 605:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 881              		.loc 2 605 22 view .LVU270
 882              	.LBB93:
 883              		.loc 2 607 5 view .LVU271
 884              	.LBE93:
 885              	.LBE98:
 476:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {
 886              		.loc 1 476 12 is_stmt 0 view .LVU272
 887 003a 15F0010F 		tst	r5, #1
 888 003e 06F10106 		add	r6, r6, #1
 889              	.LBB99:
 890              	.LBB94:
 891              		.loc 2 607 5 view .LVU273
 892 0042 07FA0CF1 		lsl	r1, r7, ip
 893              	.LBE94:
 894              	.LBE99:
 476:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {
 895              		.loc 1 476 12 view .LVU274
 896 0046 0AD0     		beq	.L39
 480:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 481:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             /* Provide channel number for interrupt callback context */
 482:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             pxTIM->ActiveChannel = eChannel;
 483:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             XPD_SAFE_CALLBACK(pxTIM->Callbacks.ChannelEvent, pxTIM);
 897              		.loc 1 483 13 is_stmt 1 view .LVU275
 898              	.LBB100:
 899              	.LBB95:
 900              		.loc 2 607 5 is_stmt 0 view .LVU276
 901 0048 1A69     		ldr	r2, [r3, #16]
 902              	.LBE95:
 903              	.LBE100:
 904              		.loc 1 483 13 view .LVU277
 905 004a 2046     		mov	r0, r4
 906              	.LBB101:
 907              	.LBB96:
 908              		.loc 2 607 5 view .LVU278
 909 004c 22EA0102 		bic	r2, r2, r1
 910              	.LBE96:
 911              	.LBE101:
 912              		.loc 1 483 13 view .LVU279
 913 0050 2169     		ldr	r1, [r4, #16]
 914              	.LBB102:
 915              	.LBB97:
 916              		.loc 2 607 5 view .LVU280
ARM GAS  /tmp/ccgFBn4z.s 			page 38


 917 0052 1A61     		str	r2, [r3, #16]
 918              	.LVL61:
 919              		.loc 2 607 5 view .LVU281
 920              	.LBE97:
 921              	.LBE102:
 482:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             XPD_SAFE_CALLBACK(pxTIM->Callbacks.ChannelEvent, pxTIM);
 922              		.loc 1 482 13 is_stmt 1 view .LVU282
 482:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             XPD_SAFE_CALLBACK(pxTIM->Callbacks.ChannelEvent, pxTIM);
 923              		.loc 1 482 34 is_stmt 0 view .LVU283
 924 0054 84F841C0 		strb	ip, [r4, #65]
 925              		.loc 1 483 13 is_stmt 1 view .LVU284
 926              		.loc 1 483 13 view .LVU285
 927 0058 09B1     		cbz	r1, .L39
 928              	.LVL62:
 929              		.loc 1 483 13 is_stmt 0 view .LVU286
 930 005a 8847     		blx	r1
 931              	.LVL63:
 932              		.loc 1 483 13 view .LVU287
 933 005c 2368     		ldr	r3, [r4]
 934              	.L39:
 935              		.loc 1 483 13 is_stmt 1 view .LVU288
 484:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 485:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         eChannel++;
 936              		.loc 1 485 9 view .LVU289
 486:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         ulFlags >>= 1;
 937              		.loc 1 486 9 view .LVU290
 938              	.LVL64:
 474:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 939              		.loc 1 474 11 view .LVU291
 940 005e 6D08     		lsrs	r5, r5, #1
 941              	.LVL65:
 474:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 942              		.loc 1 474 11 is_stmt 0 view .LVU292
 943 0060 E9D1     		bne	.L40
 944              	.L38:
 945              	.LVL66:
 474:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 946              		.loc 1 474 11 view .LVU293
 947              	.LBE90:
 948              	.LBE89:
 239:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vIRQHandler_COM(pxTIM);
 949              		.loc 1 239 5 is_stmt 1 view .LVU294
 950              	.LBB103:
 951              	.LBI103:
 487:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 488:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 489:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 490:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @} */
 491:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 492:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @} */
 493:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 494:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @addtogroup TIM_Output
 495:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @{ */
 496:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 497:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @defgroup TIM_Output_Exported_Functions TIM Output Exported Functions
 498:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  *  @brief    TIM output mode functions for compare channels
 499:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  *  @details  These functions provide API for TIM output channel modes (Output Compare/Pulse Width 
ARM GAS  /tmp/ccgFBn4z.s 			page 39


 500:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @{ */
 501:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 502:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 503:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief Sets up the output drive configuration of the timer.
 504:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 505:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxConfig: pointer to TIM break setup configuration
 506:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 507:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vDriveConfig(TIM_HandleType * pxTIM, const TIM_DriveInitType * pxConfig)
 508:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 509:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t ulBDTR = pxConfig->w;
 510:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 511:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Break polarity bits are interpreted in reverse */
 512:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef TIM_BDTR_BK2P
 513:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     ulBDTR ^= TIM_BDTR_BKP | TIM_BDTR_BK2P;
 514:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #else
 515:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     ulBDTR ^= TIM_BDTR_BKP;
 516:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #endif
 517:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 518:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     MODIFY_REG(pxTIM->Inst->BDTR, TIM_BDTR_DTG | TIM_BDTR_OSSI | TIM_BDTR_OSSR
 519:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             | TIM_BDTR_AOE | TIM_BDTR_BKE | TIM_BDTR_BKP
 520:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef TIM_BDTR_BKF
 521:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             | TIM_BDTR_BKF
 522:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #endif
 523:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef TIM_BDTR_BK2E
 524:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             | TIM_BDTR_BK2E | TIM_BDTR_BK2P | TIM_BDTR_BK2F
 525:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #endif
 526:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             , ulBDTR);
 527:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 528:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 529:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 530:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief Calculates dead time register value from dead time in timer counts.
 531:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 532:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param ulDeadtimeCounts: the dead time value in timer counts
 533:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @return The dead time in register configuration format
 534:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 535:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** uint8_t TIM_ucCalcDeadtime(TIM_HandleType * pxTIM, uint32_t ulDeadtimeCounts)
 536:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 537:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint8_t ucDeadtime;
 538:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 539:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Divide by clock division */
 540:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     ulDeadtimeCounts >>= (pxTIM->Inst->CR1 & TIM_CR1_CKD_Msk) >> TIM_CR1_CKD_Pos;
 541:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 542:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* Revert the configuration characteristic */
 543:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     if (ulDeadtimeCounts < 128)
 544:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 545:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* dead counts = DTG */
 546:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         ucDeadtime = ulDeadtimeCounts;
 547:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 548:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     else if (ulDeadtimeCounts < 256)
 549:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 550:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* dead counts =(64+DTG[5:0])*2 */
 551:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         ucDeadtime = 0x80 | ((ulDeadtimeCounts / 2) - 64);
 552:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 553:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     else if (ulDeadtimeCounts < 512)
 554:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 555:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* dead counts =(32+DTG[4:0])*8 */
 556:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         ucDeadtime = 0xC0 | ((ulDeadtimeCounts / 8) - 32);
ARM GAS  /tmp/ccgFBn4z.s 			page 40


 557:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 558:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     else if (ulDeadtimeCounts < 1008)
 559:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 560:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* dead counts =(32+DTG[4:0])*16 */
 561:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         ucDeadtime = 0xE0 | ((ulDeadtimeCounts / 16) - 32);
 562:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 563:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     else
 564:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 565:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* saturation */
 566:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         ucDeadtime = 255;
 567:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 568:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 569:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     return ucDeadtime;
 570:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 571:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 572:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 573:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief TIM break event interrupt handler that provides handle callbacks.
 574:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 575:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 576:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vIRQHandler_BRK(TIM_HandleType * pxTIM)
 577:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 578:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* TIM Break input event */
 579:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     if ((pxTIM->Inst->SR & pxTIM->Inst->DIER & TIM_SR_BIF) != 0)
 580:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 581:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* Clear interrupt flag */
 582:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxTIM->Inst->SR &= ~TIM_SR_BIF;
 583:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 584:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         XPD_SAFE_CALLBACK(pxTIM->Callbacks.Break, pxTIM);
 585:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 586:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 587:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 588:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 589:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief Sets up the OCxREF clearing feature for a selected channel
 590:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 591:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param eChannel: the selected compare channel to configure
 592:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param eOCREF_CLR_IN: OCREFClear input signal selection
 593:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 594:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vOCRefClearConfig(
 595:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         TIM_HandleType *            pxTIM,
 596:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         TIM_ChannelType             eChannel,
 597:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         TIM_OCRefClearSourceType    eOCREF_CLR_IN)
 598:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 599:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     __IO uint32_t * pulCCMR;
 600:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t ulChOffset = (eChannel & 1) * 8;
 601:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 602:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* get related CCMR register */
 603:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #if TIM_SUPPORTED_CHANNEL_COUNT > 5
 604:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     if (eChannel > TIM_CH4)
 605:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 606:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pulCCMR = &pxTIM->Inst->CCMR3;
 607:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 608:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     else
 609:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #endif
 610:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     if (eChannel < TIM_CH3)
 611:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 612:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pulCCMR = &pxTIM->Inst->CCMR1;
 613:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
ARM GAS  /tmp/ccgFBn4z.s 			page 41


 614:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     else
 615:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 616:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pulCCMR = &pxTIM->Inst->CCMR2;
 617:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 618:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 619:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     if (eOCREF_CLR_IN == TIM_OCREFCLEAR_SOURCE_NONE)
 620:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 621:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* clear configuration from channel */
 622:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         CLEAR_BIT(*pulCCMR, TIM_CCMR1_OC1CE << ulChOffset);
 623:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 624:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     else
 625:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 626:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* apply configuration */
 627:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         SET_BIT(*pulCCMR, TIM_CCMR1_OC1CE << ulChOffset);
 628:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 629:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 630:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 631:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 632:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 633:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief Configures the commutation source
 634:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 635:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param ComSource
 636:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 637:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vCommutationConfig(TIM_HandleType * pxTIM, TIM_CommutationSourceType eComSource)
 638:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 639:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     if (eComSource > TIM_COMSOURCE_SOFTWARE)
 640:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 641:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* Set TRGI if used for commutation */
 642:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         MODIFY_REG(pxTIM->Inst->SMCR, TIM_SMCR_TS, eComSource);
 643:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 644:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* Select the Commutation event source */
 645:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         SET_BIT(pxTIM->Inst->CR2, TIM_CR2_CCPC | TIM_CR2_CCUS);
 646:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 647:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     else
 648:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 649:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* Select the Commutation event source */
 650:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         CLEAR_BIT(pxTIM->Inst->CR2, TIM_CR2_CCPC | TIM_CR2_CCUS);
 651:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 652:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         if (eComSource == TIM_COMSOURCE_SOFTWARE)
 653:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {
 654:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             /* Select the Capture Compare preload feature */
 655:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             pxTIM->Inst->CR2 |= TIM_CR2_CCPC;
 656:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 657:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 658:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 659:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 660:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 661:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief TIM commutation interrupt handler that provides handle callbacks.
 662:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 663:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 664:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vIRQHandler_COM(TIM_HandleType * pxTIM)
 665:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 666:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* TIM commutation event */
 667:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     if ((pxTIM->Inst->SR & pxTIM->Inst->DIER & TIM_SR_COMIF) != 0)
 668:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 669:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* clear interrupt flag */
 670:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxTIM->Inst->SR &= ~TIM_SR_COMIF;
ARM GAS  /tmp/ccgFBn4z.s 			page 42


 671:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 672:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         XPD_SAFE_CALLBACK(pxTIM->Callbacks.Commutation, pxTIM);
 673:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 674:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 675:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 676:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @} */
 677:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 678:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @} */
 679:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 680:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @addtogroup TIM_MasterSlave
 681:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @{ */
 682:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 683:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /** @defgroup TIM_MasterSlave_Exported_Functions TIM Master-Slave Exported Functions
 684:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @{ */
 685:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 686:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 687:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief Sets up the master configuration of the timer.
 688:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 689:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxConfig: pointer to TIM master setup configuration
 690:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 691:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vMasterConfig(TIM_HandleType * pxTIM, const TIM_MasterConfigType * pxConfig)
 692:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 693:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* select the TRGO source */
 694:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CR2 &= ~TIM_CR2_MMS;
 695:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CR2 |= (pxConfig->MasterTrigger << TIM_CR2_MMS_Pos) & TIM_CR2_MMS_Msk;
 696:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 697:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef TIM_CR2_MMS2
 698:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* select the TRGO2 source */
 699:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CR2 &= ~TIM_CR2_MMS2;
 700:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CR2 |= (pxConfig->MasterTrigger2 << TIM_CR2_MMS2_Pos) & TIM_CR2_MMS2_Msk;
 701:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #endif
 702:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 703:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* configure the MSM bit - delay TRGI to synchronize with TRGO */
 704:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->SMCR &= ~TIM_SMCR_MSM;
 705:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->SMCR |= (pxConfig->MasterSlaveMode << TIM_SMCR_MSM_Pos) & TIM_SMCR_MSM_Msk;
 706:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 707:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 708:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 709:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief Sets up the slave configuration of the timer.
 710:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 711:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxConfig: pointer to TIM slave setup configuration
 712:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 713:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vSlaveConfig(TIM_HandleType * pxTIM, const TIM_SlaveConfigType * pxConfig)
 714:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 715:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t ulSmcr = pxConfig->w;
 716:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t ulSmcrMask = TIM_SMCR_SMS | TIM_SMCR_TS | TIM_SMCR_ETF
 717:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP;
 718:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 719:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef TIM_SMCR_SMS_3
 720:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     if (pxConfig->SlaveMode == TIM_SLAVEMODE_RESET_TRIGGER)
 721:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 722:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         ulSmcr |= TIM_SMCR_SMS_3;
 723:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 724:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #endif
 725:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     MODIFY_REG(pxTIM->Inst->SMCR, ulSmcrMask, ulSmcr);
 726:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 727:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
ARM GAS  /tmp/ccgFBn4z.s 			page 43


 728:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** /**
 729:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @brief TIM trigger interrupt handler that provides handle callbacks.
 730:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  * @param pxTIM: pointer to the TIM handle structure
 731:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****  */
 732:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** void TIM_vIRQHandler_TRG(TIM_HandleType * pxTIM)
 952              		.loc 1 732 6 view .LVU295
 953              	.LBB104:
 733:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 734:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* TIM Trigger detection event */
 735:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     if ((pxTIM->Inst->SR & pxTIM->Inst->DIER & TIM_SR_TIF) != 0)
 954              		.loc 1 735 5 view .LVU296
 955              		.loc 1 735 21 is_stmt 0 view .LVU297
 956 0062 1A69     		ldr	r2, [r3, #16]
 957              		.loc 1 735 39 view .LVU298
 958 0064 D968     		ldr	r1, [r3, #12]
 959              		.loc 1 735 26 view .LVU299
 960 0066 0A40     		ands	r2, r2, r1
 961              		.loc 1 735 8 view .LVU300
 962 0068 5006     		lsls	r0, r2, #25
 963 006a 08D5     		bpl	.L41
 736:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 737:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         /* clear interrupt flag */
 738:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxTIM->Inst->SR &= ~TIM_SR_TIF;
 964              		.loc 1 738 9 is_stmt 1 view .LVU301
 965              		.loc 1 738 25 is_stmt 0 view .LVU302
 966 006c 1A69     		ldr	r2, [r3, #16]
 739:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 740:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         XPD_SAFE_CALLBACK(pxTIM->Callbacks.Trigger, pxTIM);
 967              		.loc 1 740 9 view .LVU303
 968 006e 6169     		ldr	r1, [r4, #20]
 738:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 969              		.loc 1 738 25 view .LVU304
 970 0070 22F04002 		bic	r2, r2, #64
 971 0074 1A61     		str	r2, [r3, #16]
 972              		.loc 1 740 9 is_stmt 1 view .LVU305
 973              		.loc 1 740 9 view .LVU306
 974 0076 11B1     		cbz	r1, .L41
 975              		.loc 1 740 9 view .LVU307
 976 0078 2046     		mov	r0, r4
 977 007a 8847     		blx	r1
 978              	.LVL67:
 979 007c 2368     		ldr	r3, [r4]
 980              	.L41:
 981              		.loc 1 740 9 view .LVU308
 982              	.LVL68:
 983              		.loc 1 740 9 is_stmt 0 view .LVU309
 984              	.LBE104:
 985              	.LBE103:
 240:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vIRQHandler_BRK(pxTIM);
 986              		.loc 1 240 5 is_stmt 1 view .LVU310
 987              	.LBB105:
 988              	.LBI105:
 664:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 989              		.loc 1 664 6 view .LVU311
 990              	.LBB106:
 667:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 991              		.loc 1 667 5 view .LVU312
ARM GAS  /tmp/ccgFBn4z.s 			page 44


 667:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 992              		.loc 1 667 21 is_stmt 0 view .LVU313
 993 007e 1A69     		ldr	r2, [r3, #16]
 667:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 994              		.loc 1 667 39 view .LVU314
 995 0080 D968     		ldr	r1, [r3, #12]
 667:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 996              		.loc 1 667 26 view .LVU315
 997 0082 0A40     		ands	r2, r2, r1
 667:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 998              		.loc 1 667 8 view .LVU316
 999 0084 9106     		lsls	r1, r2, #26
 1000 0086 08D5     		bpl	.L42
 670:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1001              		.loc 1 670 9 is_stmt 1 view .LVU317
 670:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1002              		.loc 1 670 25 is_stmt 0 view .LVU318
 1003 0088 1A69     		ldr	r2, [r3, #16]
 672:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1004              		.loc 1 672 9 view .LVU319
 1005 008a A169     		ldr	r1, [r4, #24]
 670:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1006              		.loc 1 670 25 view .LVU320
 1007 008c 22F02002 		bic	r2, r2, #32
 1008 0090 1A61     		str	r2, [r3, #16]
 672:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1009              		.loc 1 672 9 is_stmt 1 view .LVU321
 672:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1010              		.loc 1 672 9 view .LVU322
 1011 0092 11B1     		cbz	r1, .L42
 672:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1012              		.loc 1 672 9 view .LVU323
 1013 0094 2046     		mov	r0, r4
 1014 0096 8847     		blx	r1
 1015              	.LVL69:
 1016 0098 2368     		ldr	r3, [r4]
 1017              	.L42:
 672:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1018              		.loc 1 672 9 view .LVU324
 1019              	.LVL70:
 672:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1020              		.loc 1 672 9 is_stmt 0 view .LVU325
 1021              	.LBE106:
 1022              	.LBE105:
 241:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 1023              		.loc 1 241 5 is_stmt 1 view .LVU326
 1024              	.LBB107:
 1025              	.LBI107:
 576:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 1026              		.loc 1 576 6 view .LVU327
 1027              	.LBB108:
 579:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1028              		.loc 1 579 5 view .LVU328
 579:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1029              		.loc 1 579 21 is_stmt 0 view .LVU329
 1030 009a 1A69     		ldr	r2, [r3, #16]
 579:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
ARM GAS  /tmp/ccgFBn4z.s 			page 45


 1031              		.loc 1 579 39 view .LVU330
 1032 009c D968     		ldr	r1, [r3, #12]
 579:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1033              		.loc 1 579 26 view .LVU331
 1034 009e 0A40     		ands	r2, r2, r1
 579:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1035              		.loc 1 579 8 view .LVU332
 1036 00a0 1206     		lsls	r2, r2, #24
 1037 00a2 09D5     		bpl	.L36
 582:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1038              		.loc 1 582 9 is_stmt 1 view .LVU333
 582:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1039              		.loc 1 582 25 is_stmt 0 view .LVU334
 1040 00a4 1A69     		ldr	r2, [r3, #16]
 584:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1041              		.loc 1 584 9 view .LVU335
 1042 00a6 E169     		ldr	r1, [r4, #28]
 582:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1043              		.loc 1 582 25 view .LVU336
 1044 00a8 22F08002 		bic	r2, r2, #128
 1045 00ac 1A61     		str	r2, [r3, #16]
 584:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1046              		.loc 1 584 9 is_stmt 1 view .LVU337
 584:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1047              		.loc 1 584 9 view .LVU338
 1048 00ae 19B1     		cbz	r1, .L36
 584:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1049              		.loc 1 584 9 view .LVU339
 1050 00b0 2046     		mov	r0, r4
 1051              	.LBE108:
 1052              	.LBE107:
 242:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1053              		.loc 1 242 1 is_stmt 0 view .LVU340
 1054 00b2 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 1055              	.LCFI10:
 1056              		.cfi_remember_state
 1057              		.cfi_restore 14
 1058              		.cfi_restore 8
 1059              		.cfi_restore 7
 1060              		.cfi_restore 6
 1061              		.cfi_restore 5
 1062              		.cfi_restore 4
 1063              		.cfi_def_cfa_offset 0
 1064              	.LVL71:
 1065              	.LBB110:
 1066              	.LBB109:
 584:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1067              		.loc 1 584 9 view .LVU341
 1068 00b6 0847     		bx	r1	@ indirect register sibling call
 1069              	.LVL72:
 1070              	.L36:
 1071              	.LCFI11:
 1072              		.cfi_restore_state
 584:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1073              		.loc 1 584 9 view .LVU342
 1074              	.LBE109:
 1075              	.LBE110:
ARM GAS  /tmp/ccgFBn4z.s 			page 46


 242:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1076              		.loc 1 242 1 view .LVU343
 1077 00b8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 242:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1078              		.loc 1 242 1 view .LVU344
 1079              		.cfi_endproc
 1080              	.LFE191:
 1082              		.section	.text.TIM_vBurstConfig,"ax",%progbits
 1083              		.align	1
 1084              		.p2align 2,,3
 1085              		.global	TIM_vBurstConfig
 1086              		.syntax unified
 1087              		.thumb
 1088              		.thumb_func
 1089              		.fpu fpv4-sp-d16
 1091              	TIM_vBurstConfig:
 1092              	.LVL73:
 1093              	.LFB192:
 251:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     if (ucRegCount > 0)
 1094              		.loc 1 251 1 is_stmt 1 view -0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 0
 1097              		@ frame_needed = 0, uses_anonymous_args = 0
 1098              		@ link register save eliminated.
 252:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1099              		.loc 1 252 5 view .LVU346
 1100 0000 0368     		ldr	r3, [r0]
 252:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1101              		.loc 1 252 8 is_stmt 0 view .LVU347
 1102 0002 B2B1     		cbz	r2, .L79
 1103              	.LBB111:
 254:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         uint32_t dcrVal = (uint32_t)(pulStartReg - pxTIM->Inst->CR1) / sizeof(uint32_t);
 1104              		.loc 1 254 9 is_stmt 1 view .LVU348
 254:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         uint32_t dcrVal = (uint32_t)(pulStartReg - pxTIM->Inst->CR1) / sizeof(uint32_t);
 1105              		.loc 1 254 26 is_stmt 0 view .LVU349
 1106 0004 0C48     		ldr	r0, .L85
 1107              	.LVL74:
 257:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1108              		.loc 1 257 42 view .LVU350
 1109 0006 013A     		subs	r2, r2, #1
 1110              	.LVL75:
 257:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1111              		.loc 1 257 42 view .LVU351
 1112              	.LBE111:
 251:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     if (ucRegCount > 0)
 1113              		.loc 1 251 1 view .LVU352
 1114 0008 10B4     		push	{r4}
 1115              	.LCFI12:
 1116              		.cfi_def_cfa_offset 4
 1117              		.cfi_offset 4, -4
 1118              	.LBB112:
 254:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         uint32_t dcrVal = (uint32_t)(pulStartReg - pxTIM->Inst->CR1) / sizeof(uint32_t);
 1119              		.loc 1 254 26 view .LVU353
 1120 000a 9C6C     		ldr	r4, [r3, #72]
 257:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1121              		.loc 1 257 47 view .LVU354
 1122 000c 1202     		lsls	r2, r2, #8
ARM GAS  /tmp/ccgFBn4z.s 			page 47


 254:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         uint32_t dcrVal = (uint32_t)(pulStartReg - pxTIM->Inst->CR1) / sizeof(uint32_t);
 1123              		.loc 1 254 26 view .LVU355
 1124 000e 2040     		ands	r0, r0, r4
 257:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1125              		.loc 1 257 67 view .LVU356
 1126 0010 02F4F852 		and	r2, r2, #7936
 254:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         uint32_t dcrVal = (uint32_t)(pulStartReg - pxTIM->Inst->CR1) / sizeof(uint32_t);
 1127              		.loc 1 254 26 view .LVU357
 1128 0014 9864     		str	r0, [r3, #72]
 255:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxTIM->Inst->DCR |= (dcrVal << TIM_DCR_DBA_Pos) & TIM_DCR_DBA_Msk;
 1129              		.loc 1 255 9 is_stmt 1 view .LVU358
 255:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxTIM->Inst->DCR |= (dcrVal << TIM_DCR_DBA_Pos) & TIM_DCR_DBA_Msk;
 1130              		.loc 1 255 63 is_stmt 0 view .LVU359
 1131 0016 1C68     		ldr	r4, [r3]
 1132              	.LVL76:
 256:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxTIM->Inst->DCR |= ((ucRegCount - 1) << TIM_DCR_DBL_Pos) & TIM_DCR_DBL_Msk;
 1133              		.loc 1 256 9 is_stmt 1 view .LVU360
 256:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxTIM->Inst->DCR |= ((ucRegCount - 1) << TIM_DCR_DBL_Pos) & TIM_DCR_DBL_Msk;
 1134              		.loc 1 256 26 is_stmt 0 view .LVU361
 1135 0018 986C     		ldr	r0, [r3, #72]
 255:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxTIM->Inst->DCR |= (dcrVal << TIM_DCR_DBA_Pos) & TIM_DCR_DBA_Msk;
 1136              		.loc 1 255 50 view .LVU362
 1137 001a A1EB8401 		sub	r1, r1, r4, lsl #2
 1138              	.LVL77:
 255:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxTIM->Inst->DCR |= (dcrVal << TIM_DCR_DBA_Pos) & TIM_DCR_DBA_Msk;
 1139              		.loc 1 255 50 view .LVU363
 1140              	.LBE112:
 263:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1141              		.loc 1 263 1 view .LVU364
 1142 001e 5DF8044B 		ldr	r4, [sp], #4
 1143              	.LCFI13:
 1144              		.cfi_restore 4
 1145              		.cfi_def_cfa_offset 0
 1146              	.LVL78:
 1147              	.LBB113:
 256:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxTIM->Inst->DCR |= ((ucRegCount - 1) << TIM_DCR_DBL_Pos) & TIM_DCR_DBL_Msk;
 1148              		.loc 1 256 57 view .LVU365
 1149 0022 C1F38401 		ubfx	r1, r1, #2, #5
 256:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pxTIM->Inst->DCR |= ((ucRegCount - 1) << TIM_DCR_DBL_Pos) & TIM_DCR_DBL_Msk;
 1150              		.loc 1 256 26 view .LVU366
 1151 0026 0143     		orrs	r1, r1, r0
 1152 0028 9964     		str	r1, [r3, #72]
 257:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1153              		.loc 1 257 9 is_stmt 1 view .LVU367
 257:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1154              		.loc 1 257 26 is_stmt 0 view .LVU368
 1155 002a 996C     		ldr	r1, [r3, #72]
 1156 002c 0A43     		orrs	r2, r2, r1
 1157 002e 9A64     		str	r2, [r3, #72]
 1158              	.LBE113:
 263:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1159              		.loc 1 263 1 view .LVU369
 1160 0030 7047     		bx	lr
 1161              	.LVL79:
 1162              	.L79:
 261:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1163              		.loc 1 261 9 is_stmt 1 view .LVU370
ARM GAS  /tmp/ccgFBn4z.s 			page 48


 261:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1164              		.loc 1 261 26 is_stmt 0 view .LVU371
 1165 0032 9A64     		str	r2, [r3, #72]
 1166 0034 7047     		bx	lr
 1167              	.L86:
 1168 0036 00BF     		.align	2
 1169              	.L85:
 1170 0038 E0E0FFFF 		.word	-7968
 1171              		.cfi_endproc
 1172              	.LFE192:
 1174              		.section	.text.TIM_vStart,"ax",%progbits
 1175              		.align	1
 1176              		.p2align 2,,3
 1177              		.global	TIM_vStart
 1178              		.syntax unified
 1179              		.thumb
 1180              		.thumb_func
 1181              		.fpu fpv4-sp-d16
 1183              	TIM_vStart:
 1184              	.LVL80:
 1185              	.LFB193:
 270:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     SET_BIT(pxTIM->Inst->CCER, pxTIM->ChannelMask);
 1186              		.loc 1 270 1 is_stmt 1 view -0
 1187              		.cfi_startproc
 1188              		@ args = 0, pretend = 0, frame = 0
 1189              		@ frame_needed = 0, uses_anonymous_args = 0
 1190              		@ link register save eliminated.
 271:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vCounterStart(pxTIM);
 1191              		.loc 1 271 5 view .LVU373
 1192 0000 0368     		ldr	r3, [r0]
 1193 0002 C16B     		ldr	r1, [r0, #60]
 1194 0004 1A6A     		ldr	r2, [r3, #32]
 1195 0006 0A43     		orrs	r2, r2, r1
 1196 0008 1A62     		str	r2, [r3, #32]
 272:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 1197              		.loc 1 272 5 view .LVU374
 1198              	.LVL81:
 1199              	.LBB114:
 1200              	.LBI114:
 468:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 1201              		.loc 2 468 22 view .LVU375
 1202              	.LBB115:
 470:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1203              		.loc 2 470 5 view .LVU376
 470:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1204              		.loc 2 470 22 is_stmt 0 view .LVU377
 1205 000a 1A68     		ldr	r2, [r3]
 1206 000c 42F00102 		orr	r2, r2, #1
 1207 0010 1A60     		str	r2, [r3]
 1208              	.LVL82:
 470:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1209              		.loc 2 470 22 view .LVU378
 1210              	.LBE115:
 1211              	.LBE114:
 273:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1212              		.loc 1 273 1 view .LVU379
 1213 0012 7047     		bx	lr
ARM GAS  /tmp/ccgFBn4z.s 			page 49


 1214              		.cfi_endproc
 1215              	.LFE193:
 1217              		.section	.text.TIM_vStop,"ax",%progbits
 1218              		.align	1
 1219              		.p2align 2,,3
 1220              		.global	TIM_vStop
 1221              		.syntax unified
 1222              		.thumb
 1223              		.thumb_func
 1224              		.fpu fpv4-sp-d16
 1226              	TIM_vStop:
 1227              	.LVL83:
 1228              	.LFB194:
 280:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     CLEAR_BIT(pxTIM->Inst->CCER, pxTIM->ChannelMask);
 1229              		.loc 1 280 1 is_stmt 1 view -0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 0
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233              		@ link register save eliminated.
 281:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_vCounterStop(pxTIM);
 1234              		.loc 1 281 5 view .LVU381
 1235 0000 0368     		ldr	r3, [r0]
 1236 0002 C16B     		ldr	r1, [r0, #60]
 1237 0004 1A6A     		ldr	r2, [r3, #32]
 1238 0006 22EA0102 		bic	r2, r2, r1
 1239 000a 1A62     		str	r2, [r3, #32]
 282:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 1240              		.loc 1 282 5 view .LVU382
 1241              	.LVL84:
 1242              	.LBB116:
 1243              	.LBI116:
 477:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 1244              		.loc 2 477 22 view .LVU383
 1245              	.LBB117:
 479:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1246              		.loc 2 479 5 view .LVU384
 479:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1247              		.loc 2 479 22 is_stmt 0 view .LVU385
 1248 000c 1A68     		ldr	r2, [r3]
 1249 000e 22F00102 		bic	r2, r2, #1
 1250 0012 1A60     		str	r2, [r3]
 1251              	.LVL85:
 479:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1252              		.loc 2 479 22 view .LVU386
 1253              	.LBE117:
 1254              	.LBE116:
 283:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1255              		.loc 1 283 1 view .LVU387
 1256 0014 7047     		bx	lr
 1257              		.cfi_endproc
 1258              	.LFE194:
 1260 0016 00BF     		.section	.text.TIM_eOpen_DMA,"ax",%progbits
 1261              		.align	1
 1262              		.p2align 2,,3
 1263              		.global	TIM_eOpen_DMA
 1264              		.syntax unified
 1265              		.thumb
ARM GAS  /tmp/ccgFBn4z.s 			page 50


 1266              		.thumb_func
 1267              		.fpu fpv4-sp-d16
 1269              	TIM_eOpen_DMA:
 1270              	.LVL86:
 1271              	.LFB195:
 299:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_ReturnType eResult = XPD_ERROR;
 1272              		.loc 1 299 1 is_stmt 1 view -0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 0
 1275              		@ frame_needed = 0, uses_anonymous_args = 0
 300:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     DMA_HandleType* pxDMA = NULL;
 1276              		.loc 1 300 5 view .LVU389
 301:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     void* pvRegAddr;
 1277              		.loc 1 301 5 view .LVU390
 302:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1278              		.loc 1 302 5 view .LVU391
 305:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1279              		.loc 1 305 5 view .LVU392
 299:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_ReturnType eResult = XPD_ERROR;
 1280              		.loc 1 299 1 is_stmt 0 view .LVU393
 1281 0000 70B5     		push	{r4, r5, r6, lr}
 1282              	.LCFI14:
 1283              		.cfi_def_cfa_offset 16
 1284              		.cfi_offset 4, -16
 1285              		.cfi_offset 5, -12
 1286              		.cfi_offset 6, -8
 1287              		.cfi_offset 14, -4
 305:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1288              		.loc 1 305 14 view .LVU394
 1289 0002 0568     		ldr	r5, [r0]
 299:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     XPD_ReturnType eResult = XPD_ERROR;
 1290              		.loc 1 299 1 view .LVU395
 1291 0004 0E46     		mov	r6, r1
 1292 0006 0446     		mov	r4, r0
 305:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1293              		.loc 1 305 20 view .LVU396
 1294 0008 A96C     		ldr	r1, [r5, #72]
 1295              	.LVL87:
 305:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1296              		.loc 1 305 8 view .LVU397
 1297 000a C9B1     		cbz	r1, .L90
 307:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         usLength *= ((pxTIM->Inst->DCR & TIM_DCR_DBL_Msk) >> TIM_DCR_DBL_Pos ) + 1;
 1298              		.loc 1 307 9 is_stmt 1 view .LVU398
 308:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pvRegAddr = (void*)&pxTIM->Inst->DMAR;
 1299              		.loc 1 308 34 is_stmt 0 view .LVU399
 1300 000c A96C     		ldr	r1, [r5, #72]
 309:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1301              		.loc 1 309 19 view .LVU400
 1302 000e 4C35     		adds	r5, r5, #76
 307:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         usLength *= ((pxTIM->Inst->DCR & TIM_DCR_DBL_Msk) >> TIM_DCR_DBL_Pos ) + 1;
 1303              		.loc 1 307 15 view .LVU401
 1304 0010 406B     		ldr	r0, [r0, #52]
 1305              	.LVL88:
 308:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pvRegAddr = (void*)&pxTIM->Inst->DMAR;
 1306              		.loc 1 308 9 is_stmt 1 view .LVU402
 308:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pvRegAddr = (void*)&pxTIM->Inst->DMAR;
 1307              		.loc 1 308 59 is_stmt 0 view .LVU403
ARM GAS  /tmp/ccgFBn4z.s 			page 51


 1308 0012 C1F30421 		ubfx	r1, r1, #8, #5
 308:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pvRegAddr = (void*)&pxTIM->Inst->DMAR;
 1309              		.loc 1 308 80 view .LVU404
 1310 0016 0131     		adds	r1, r1, #1
 308:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pvRegAddr = (void*)&pxTIM->Inst->DMAR;
 1311              		.loc 1 308 18 view .LVU405
 1312 0018 11FB03F3 		smulbb	r3, r1, r3
 1313              	.LVL89:
 308:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         pvRegAddr = (void*)&pxTIM->Inst->DMAR;
 1314              		.loc 1 308 18 view .LVU406
 1315 001c 9BB2     		uxth	r3, r3
 1316              	.LVL90:
 309:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1317              		.loc 1 309 9 is_stmt 1 view .LVU407
 1318              	.L91:
 325:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1319              		.loc 1 325 5 view .LVU408
 325:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1320              		.loc 1 325 8 is_stmt 0 view .LVU409
 1321 001e B8B1     		cbz	r0, .L95
 1322              	.L97:
 328:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1323              		.loc 1 328 9 is_stmt 1 view .LVU410
 328:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1324              		.loc 1 328 19 is_stmt 0 view .LVU411
 1325 0020 2946     		mov	r1, r5
 1326 0022 FFF7FEFF 		bl	DMA_eStart_IT
 1327              	.LVL91:
 331:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {
 1328              		.loc 1 331 9 is_stmt 1 view .LVU412
 331:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {
 1329              		.loc 1 331 12 is_stmt 0 view .LVU413
 1330 0026 50B9     		cbnz	r0, .L92
 334:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1331              		.loc 1 334 13 is_stmt 1 view .LVU414
 343:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 1332              		.loc 1 343 13 is_stmt 0 view .LVU415
 1333 0028 2368     		ldr	r3, [r4]
 337:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef __XPD_DMA_ERROR_DETECT
 1334              		.loc 1 337 72 view .LVU416
 1335 002a 0D4A     		ldr	r2, .L98
 343:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 1336              		.loc 1 343 13 view .LVU417
 1337 002c D968     		ldr	r1, [r3, #12]
 337:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef __XPD_DMA_ERROR_DETECT
 1338              		.loc 1 337 51 view .LVU418
 1339 002e 52F82650 		ldr	r5, [r2, r6, lsl #2]
 1340              	.LVL92:
 334:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1341              		.loc 1 334 23 view .LVU419
 1342 0032 226A     		ldr	r2, [r4, #32]
 343:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 1343              		.loc 1 343 13 view .LVU420
 1344 0034 41EA0626 		orr	r6, r1, r6, lsl #8
 337:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef __XPD_DMA_ERROR_DETECT
 1345              		.loc 1 337 51 view .LVU421
 1346 0038 D560     		str	r5, [r2, #12]
ARM GAS  /tmp/ccgFBn4z.s 			page 52


 334:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1347              		.loc 1 334 38 view .LVU422
 1348 003a 5461     		str	r4, [r2, #20]
 337:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef __XPD_DMA_ERROR_DETECT
 1349              		.loc 1 337 13 is_stmt 1 view .LVU423
 343:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 1350              		.loc 1 343 13 view .LVU424
 1351 003c DE60     		str	r6, [r3, #12]
 1352              	.L92:
 347:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 1353              		.loc 1 347 5 view .LVU425
 348:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1354              		.loc 1 348 1 is_stmt 0 view .LVU426
 1355 003e 70BD     		pop	{r4, r5, r6, pc}
 1356              	.LVL93:
 1357              	.L90:
 311:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1358              		.loc 1 311 10 is_stmt 1 view .LVU427
 311:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1359              		.loc 1 311 13 is_stmt 0 view .LVU428
 1360 0040 042E     		cmp	r6, #4
 1361 0042 05D8     		bhi	.L95
 313:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1362              		.loc 1 313 9 is_stmt 1 view .LVU429
 313:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1363              		.loc 1 313 15 is_stmt 0 view .LVU430
 1364 0044 006A     		ldr	r0, [r0, #32]
 1365              	.LVL94:
 313:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1366              		.loc 1 313 15 view .LVU431
 1367 0046 3044     		add	r0, r0, r6
 1368              	.LVL95:
 315:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {
 1369              		.loc 1 315 9 is_stmt 1 view .LVU432
 315:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {
 1370              		.loc 1 315 12 is_stmt 0 view .LVU433
 1371 0048 26B9     		cbnz	r6, .L93
 317:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 1372              		.loc 1 317 13 is_stmt 1 view .LVU434
 1373              	.LVL96:
 1374              	.LBB118:
 1375              	.LBI118:
 423:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 1376              		.loc 2 423 32 view .LVU435
 1377              	.LBB119:
 425:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1378              		.loc 2 425 5 view .LVU436
 425:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1379              		.loc 2 425 12 is_stmt 0 view .LVU437
 1380 004a 2C35     		adds	r5, r5, #44
 1381              	.LVL97:
 425:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1382              		.loc 2 425 12 view .LVU438
 1383              	.LBE119:
 1384              	.LBE118:
 325:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1385              		.loc 1 325 5 is_stmt 1 view .LVU439
ARM GAS  /tmp/ccgFBn4z.s 			page 53


 325:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1386              		.loc 1 325 8 is_stmt 0 view .LVU440
 1387 004c 0028     		cmp	r0, #0
 1388 004e E7D1     		bne	.L97
 1389              	.LVL98:
 1390              	.L95:
 300:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     DMA_HandleType* pxDMA = NULL;
 1391              		.loc 1 300 20 view .LVU441
 1392 0050 0120     		movs	r0, #1
 1393              	.LVL99:
 347:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 1394              		.loc 1 347 5 is_stmt 1 view .LVU442
 348:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1395              		.loc 1 348 1 is_stmt 0 view .LVU443
 1396 0052 70BD     		pop	{r4, r5, r6, pc}
 1397              	.LVL100:
 1398              	.L93:
 321:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 1399              		.loc 1 321 13 is_stmt 1 view .LVU444
 1400              	.LBB120:
 1401              	.LBI120:
 509:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 1402              		.loc 2 509 32 view .LVU445
 1403              	.LBB121:
 511:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #if TIM_SUPPORTED_CHANNEL_COUNT > 5
 1404              		.loc 2 511 5 view .LVU446
 1405              	.LBE121:
 1406              	.LBE120:
 321:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 1407              		.loc 1 321 61 is_stmt 0 view .LVU447
 1408 0054 711E     		subs	r1, r6, #1
 1409              	.LBB123:
 1410              	.LBB122:
 511:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #if TIM_SUPPORTED_CHANNEL_COUNT > 5
 1411              		.loc 2 511 28 view .LVU448
 1412 0056 3435     		adds	r5, r5, #52
 511:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #if TIM_SUPPORTED_CHANNEL_COUNT > 5
 1413              		.loc 2 511 47 view .LVU449
 1414 0058 C9B2     		uxtb	r1, r1
 511:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** #if TIM_SUPPORTED_CHANNEL_COUNT > 5
 1415              		.loc 2 511 20 view .LVU450
 1416 005a 05EB8105 		add	r5, r5, r1, lsl #2
 1417              	.LVL101:
 513:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h ****     {
 1418              		.loc 2 513 5 is_stmt 1 view .LVU451
 518:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1419              		.loc 2 518 5 view .LVU452
 518:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1420              		.loc 2 518 5 is_stmt 0 view .LVU453
 1421 005e DEE7     		b	.L91
 1422              	.L99:
 1423              		.align	2
 1424              	.L98:
 1425 0060 00000000 		.word	.LANCHOR0
 1426              	.LBE122:
 1427              	.LBE123:
 1428              		.cfi_endproc
ARM GAS  /tmp/ccgFBn4z.s 			page 54


 1429              	.LFE195:
 1431              		.section	.text.TIM_vClose_DMA,"ax",%progbits
 1432              		.align	1
 1433              		.p2align 2,,3
 1434              		.global	TIM_vClose_DMA
 1435              		.syntax unified
 1436              		.thumb
 1437              		.thumb_func
 1438              		.fpu fpv4-sp-d16
 1440              	TIM_vClose_DMA:
 1441              	.LVL102:
 1442              	.LFB196:
 356:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     DMA_HandleType* pxDMA = NULL;
 1443              		.loc 1 356 1 is_stmt 1 view -0
 1444              		.cfi_startproc
 1445              		@ args = 0, pretend = 0, frame = 0
 1446              		@ frame_needed = 0, uses_anonymous_args = 0
 1447              		@ link register save eliminated.
 357:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1448              		.loc 1 357 5 view .LVU455
 359:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1449              		.loc 1 359 5 view .LVU456
 359:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1450              		.loc 1 359 14 is_stmt 0 view .LVU457
 1451 0000 0368     		ldr	r3, [r0]
 359:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1452              		.loc 1 359 20 view .LVU458
 1453 0002 9A6C     		ldr	r2, [r3, #72]
 359:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1454              		.loc 1 359 8 view .LVU459
 1455 0004 3AB1     		cbz	r2, .L101
 361:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1456              		.loc 1 361 9 is_stmt 1 view .LVU460
 361:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1457              		.loc 1 361 15 is_stmt 0 view .LVU461
 1458 0006 406B     		ldr	r0, [r0, #52]
 1459              	.LVL103:
 368:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1460              		.loc 1 368 5 is_stmt 1 view .LVU462
 368:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1461              		.loc 1 368 8 is_stmt 0 view .LVU463
 1462 0008 38B1     		cbz	r0, .L100
 1463              	.L108:
 371:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1464              		.loc 1 371 9 is_stmt 1 view .LVU464
 1465 000a DA68     		ldr	r2, [r3, #12]
 1466 000c 22EA0121 		bic	r1, r2, r1, lsl #8
 1467              	.LVL104:
 371:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1468              		.loc 1 371 9 is_stmt 0 view .LVU465
 1469 0010 D960     		str	r1, [r3, #12]
 373:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1470              		.loc 1 373 9 is_stmt 1 view .LVU466
 1471 0012 FFF7FEBF 		b	DMA_vStop_IT
 1472              	.LVL105:
 1473              	.L101:
 363:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
ARM GAS  /tmp/ccgFBn4z.s 			page 55


 1474              		.loc 1 363 10 view .LVU467
 363:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1475              		.loc 1 363 13 is_stmt 0 view .LVU468
 1476 0016 0429     		cmp	r1, #4
 1477 0018 00D9     		bls	.L107
 1478              	.LVL106:
 1479              	.L100:
 375:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1480              		.loc 1 375 1 view .LVU469
 1481 001a 7047     		bx	lr
 1482              	.LVL107:
 1483              	.L107:
 365:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1484              		.loc 1 365 9 is_stmt 1 view .LVU470
 365:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1485              		.loc 1 365 15 is_stmt 0 view .LVU471
 1486 001c 006A     		ldr	r0, [r0, #32]
 1487              	.LVL108:
 365:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1488              		.loc 1 365 15 view .LVU472
 1489 001e 0844     		add	r0, r0, r1
 1490              	.LVL109:
 368:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1491              		.loc 1 368 5 is_stmt 1 view .LVU473
 368:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1492              		.loc 1 368 8 is_stmt 0 view .LVU474
 1493 0020 0028     		cmp	r0, #0
 1494 0022 F2D1     		bne	.L108
 1495 0024 F9E7     		b	.L100
 1496              		.cfi_endproc
 1497              	.LFE196:
 1499 0026 00BF     		.section	.text.TIM_vCounterInit,"ax",%progbits
 1500              		.align	1
 1501              		.p2align 2,,3
 1502              		.global	TIM_vCounterInit
 1503              		.syntax unified
 1504              		.thumb
 1505              		.thumb_func
 1506              		.fpu fpv4-sp-d16
 1508              	TIM_vCounterInit:
 1509              	.LVL110:
 1510              	.LFB197:
 393:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_prvInit(pxTIM, pxConfig);
 1511              		.loc 1 393 1 is_stmt 1 view -0
 1512              		.cfi_startproc
 1513              		@ args = 0, pretend = 0, frame = 0
 1514              		@ frame_needed = 0, uses_anonymous_args = 0
 394:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1515              		.loc 1 394 5 view .LVU476
 393:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_prvInit(pxTIM, pxConfig);
 1516              		.loc 1 393 1 is_stmt 0 view .LVU477
 1517 0000 70B5     		push	{r4, r5, r6, lr}
 1518              	.LCFI15:
 1519              		.cfi_def_cfa_offset 16
 1520              		.cfi_offset 4, -16
 1521              		.cfi_offset 5, -12
 1522              		.cfi_offset 6, -8
ARM GAS  /tmp/ccgFBn4z.s 			page 56


 1523              		.cfi_offset 14, -4
 393:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_prvInit(pxTIM, pxConfig);
 1524              		.loc 1 393 1 view .LVU478
 1525 0002 0446     		mov	r4, r0
 1526              	.LVL111:
 393:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_prvInit(pxTIM, pxConfig);
 1527              		.loc 1 393 1 view .LVU479
 1528 0004 0D46     		mov	r5, r1
 1529              	.LVL112:
 1530              	.LBB128:
 1531              	.LBI128:
 115:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** {
 1532              		.loc 1 115 13 is_stmt 1 view .LVU480
 1533              	.LBB129:
 118:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     RCC_vReset(pxTIM->CtrlPos);
 1534              		.loc 1 118 5 view .LVU481
 1535 0006 008F     		ldrh	r0, [r0, #56]
 1536              	.LVL113:
 121:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef TIM_CR1_UIFREMAP
 1537              		.loc 1 121 44 is_stmt 0 view .LVU482
 1538 0008 40F67E36 		movw	r6, #2942
 118:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     RCC_vReset(pxTIM->CtrlPos);
 1539              		.loc 1 118 5 view .LVU483
 1540 000c FFF7FEFF 		bl	RCC_vClockEnable
 1541              	.LVL114:
 119:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1542              		.loc 1 119 5 is_stmt 1 view .LVU484
 1543 0010 208F     		ldrh	r0, [r4, #56]
 1544 0012 FFF7FEFF 		bl	RCC_vReset
 1545              	.LVL115:
 121:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef TIM_CR1_UIFREMAP
 1546              		.loc 1 121 5 view .LVU485
 121:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef TIM_CR1_UIFREMAP
 1547              		.loc 1 121 44 is_stmt 0 view .LVU486
 1548 0016 2A89     		ldrh	r2, [r5, #8]
 128:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->RCR = pxConfig->RepetitionCounter;
 1549              		.loc 1 128 24 view .LVU487
 1550 0018 D5E90013 		ldrd	r1, r3, [r5]
 121:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef TIM_CR1_UIFREMAP
 1551              		.loc 1 121 44 view .LVU488
 1552 001c 1640     		ands	r6, r6, r2
 121:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef TIM_CR1_UIFREMAP
 1553              		.loc 1 121 10 view .LVU489
 1554 001e 2268     		ldr	r2, [r4]
 127:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->ARR = (uint32_t)(pxConfig->Period - 1);
 1555              		.loc 1 127 24 view .LVU490
 1556 0020 481E     		subs	r0, r1, #1
 128:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->RCR = pxConfig->RepetitionCounter;
 1557              		.loc 1 128 24 view .LVU491
 1558 0022 591E     		subs	r1, r3, #1
 121:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #ifdef TIM_CR1_UIFREMAP
 1559              		.loc 1 121 22 view .LVU492
 1560 0024 1660     		str	r6, [r2]
 127:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->ARR = (uint32_t)(pxConfig->Period - 1);
 1561              		.loc 1 127 5 is_stmt 1 view .LVU493
 1562              	.LBE129:
 1563              	.LBE128:
ARM GAS  /tmp/ccgFBn4z.s 			page 57


 397:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CCER = 0;
 1564              		.loc 1 397 24 is_stmt 0 view .LVU494
 1565 0026 0023     		movs	r3, #0
 1566              	.LBB132:
 1567              	.LBB130:
 127:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->ARR = (uint32_t)(pxConfig->Period - 1);
 1568              		.loc 1 127 22 view .LVU495
 1569 0028 9062     		str	r0, [r2, #40]
 128:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->RCR = pxConfig->RepetitionCounter;
 1570              		.loc 1 128 5 is_stmt 1 view .LVU496
 1571              	.LBE130:
 1572              	.LBE132:
 1573              	.LBB133:
 1574              	.LBB134:
 445:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1575              		.loc 2 445 22 is_stmt 0 view .LVU497
 1576 002a 0120     		movs	r0, #1
 1577              	.LBE134:
 1578              	.LBE133:
 1579              	.LBB136:
 1580              	.LBB131:
 128:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->RCR = pxConfig->RepetitionCounter;
 1581              		.loc 1 128 22 view .LVU498
 1582 002c D162     		str	r1, [r2, #44]
 129:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 1583              		.loc 1 129 5 is_stmt 1 view .LVU499
 129:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 1584              		.loc 1 129 32 is_stmt 0 view .LVU500
 1585 002e A97A     		ldrb	r1, [r5, #10]	@ zero_extendqisi2
 129:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 1586              		.loc 1 129 22 view .LVU501
 1587 0030 1163     		str	r1, [r2, #48]
 1588              	.LVL116:
 129:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 1589              		.loc 1 129 22 view .LVU502
 1590              	.LBE131:
 1591              	.LBE136:
 397:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CCER = 0;
 1592              		.loc 1 397 5 is_stmt 1 view .LVU503
 397:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CCER = 0;
 1593              		.loc 1 397 24 is_stmt 0 view .LVU504
 1594 0032 E363     		str	r3, [r4, #60]
 398:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1595              		.loc 1 398 5 is_stmt 1 view .LVU505
 398:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1596              		.loc 1 398 23 is_stmt 0 view .LVU506
 1597 0034 1362     		str	r3, [r2, #32]
 400:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1598              		.loc 1 400 5 is_stmt 1 view .LVU507
 400:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1599              		.loc 1 400 22 is_stmt 0 view .LVU508
 1600 0036 84F84030 		strb	r3, [r4, #64]
 403:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     while((pxTIM->Inst->SR & TIM_SR_UIF) == 0);
 1601              		.loc 1 403 5 is_stmt 1 view .LVU509
 1602              	.LVL117:
 1603              	.LBB137:
 1604              	.LBI133:
ARM GAS  /tmp/ccgFBn4z.s 			page 58


 443:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 1605              		.loc 2 443 22 view .LVU510
 1606              	.LBB135:
 445:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1607              		.loc 2 445 5 view .LVU511
 445:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1608              		.loc 2 445 22 is_stmt 0 view .LVU512
 1609 003a 5061     		str	r0, [r2, #20]
 1610              	.LVL118:
 1611              	.L110:
 445:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1612              		.loc 2 445 22 view .LVU513
 1613              	.LBE135:
 1614              	.LBE137:
 404:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->SR &= ~TIM_SR_UIF;
 1615              		.loc 1 404 47 is_stmt 1 discriminator 1 view .LVU514
 404:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->SR &= ~TIM_SR_UIF;
 1616              		.loc 1 404 10 discriminator 1 view .LVU515
 404:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->SR &= ~TIM_SR_UIF;
 1617              		.loc 1 404 23 is_stmt 0 discriminator 1 view .LVU516
 1618 003c 1369     		ldr	r3, [r2, #16]
 404:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->SR &= ~TIM_SR_UIF;
 1619              		.loc 1 404 10 discriminator 1 view .LVU517
 1620 003e DB07     		lsls	r3, r3, #31
 1621 0040 FCD5     		bpl	.L110
 405:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1622              		.loc 1 405 5 is_stmt 1 view .LVU518
 405:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1623              		.loc 1 405 21 is_stmt 0 view .LVU519
 1624 0042 1369     		ldr	r3, [r2, #16]
 408:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 1625              		.loc 1 408 5 view .LVU520
 1626 0044 6168     		ldr	r1, [r4, #4]
 405:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1627              		.loc 1 405 21 view .LVU521
 1628 0046 23F00103 		bic	r3, r3, #1
 1629 004a 1361     		str	r3, [r2, #16]
 408:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 1630              		.loc 1 408 5 is_stmt 1 view .LVU522
 408:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 1631              		.loc 1 408 5 view .LVU523
 1632 004c 19B1     		cbz	r1, .L109
 408:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 1633              		.loc 1 408 5 discriminator 1 view .LVU524
 1634 004e 2046     		mov	r0, r4
 409:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1635              		.loc 1 409 1 is_stmt 0 discriminator 1 view .LVU525
 1636 0050 BDE87040 		pop	{r4, r5, r6, lr}
 1637              	.LCFI16:
 1638              		.cfi_remember_state
 1639              		.cfi_restore 14
 1640              		.cfi_restore 6
 1641              		.cfi_restore 5
 1642              		.cfi_restore 4
 1643              		.cfi_def_cfa_offset 0
 1644              	.LVL119:
 408:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
ARM GAS  /tmp/ccgFBn4z.s 			page 59


 1645              		.loc 1 408 5 discriminator 1 view .LVU526
 1646 0054 0847     		bx	r1	@ indirect register sibling call
 1647              	.LVL120:
 1648              	.L109:
 1649              	.LCFI17:
 1650              		.cfi_restore_state
 409:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1651              		.loc 1 409 1 view .LVU527
 1652 0056 70BD     		pop	{r4, r5, r6, pc}
 409:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1653              		.loc 1 409 1 view .LVU528
 1654              		.cfi_endproc
 1655              	.LFE197:
 1657              		.section	.text.TIM_vCounterStart_IT,"ax",%progbits
 1658              		.align	1
 1659              		.p2align 2,,3
 1660              		.global	TIM_vCounterStart_IT
 1661              		.syntax unified
 1662              		.thumb
 1663              		.thumb_func
 1664              		.fpu fpv4-sp-d16
 1666              	TIM_vCounterStart_IT:
 1667              	.LVL121:
 1668              	.LFB198:
 416:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* enable the TIM Update interrupt */
 1669              		.loc 1 416 1 is_stmt 1 view -0
 1670              		.cfi_startproc
 1671              		@ args = 0, pretend = 0, frame = 0
 1672              		@ frame_needed = 0, uses_anonymous_args = 0
 1673              		@ link register save eliminated.
 418:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1674              		.loc 1 418 5 view .LVU530
 418:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1675              		.loc 1 418 10 is_stmt 0 view .LVU531
 1676 0000 0368     		ldr	r3, [r0]
 418:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1677              		.loc 1 418 23 view .LVU532
 1678 0002 DA68     		ldr	r2, [r3, #12]
 1679 0004 42F00102 		orr	r2, r2, #1
 1680 0008 DA60     		str	r2, [r3, #12]
 421:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 1681              		.loc 1 421 5 is_stmt 1 view .LVU533
 1682              	.LVL122:
 1683              	.LBB138:
 1684              	.LBI138:
 468:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 1685              		.loc 2 468 22 view .LVU534
 1686              	.LBB139:
 470:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1687              		.loc 2 470 5 view .LVU535
 470:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1688              		.loc 2 470 22 is_stmt 0 view .LVU536
 1689 000a 1A68     		ldr	r2, [r3]
 1690 000c 42F00102 		orr	r2, r2, #1
 1691 0010 1A60     		str	r2, [r3]
 1692              	.LVL123:
 470:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
ARM GAS  /tmp/ccgFBn4z.s 			page 60


 1693              		.loc 2 470 22 view .LVU537
 1694              	.LBE139:
 1695              	.LBE138:
 422:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1696              		.loc 1 422 1 view .LVU538
 1697 0012 7047     		bx	lr
 1698              		.cfi_endproc
 1699              	.LFE198:
 1701              		.section	.text.TIM_vCounterStop_IT,"ax",%progbits
 1702              		.align	1
 1703              		.p2align 2,,3
 1704              		.global	TIM_vCounterStop_IT
 1705              		.syntax unified
 1706              		.thumb
 1707              		.thumb_func
 1708              		.fpu fpv4-sp-d16
 1710              	TIM_vCounterStop_IT:
 1711              	.LVL124:
 1712              	.LFB199:
 429:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->DIER &= ~TIM_DIER_UIE;
 1713              		.loc 1 429 1 is_stmt 1 view -0
 1714              		.cfi_startproc
 1715              		@ args = 0, pretend = 0, frame = 0
 1716              		@ frame_needed = 0, uses_anonymous_args = 0
 1717              		@ link register save eliminated.
 430:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1718              		.loc 1 430 5 view .LVU540
 430:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1719              		.loc 1 430 10 is_stmt 0 view .LVU541
 1720 0000 0368     		ldr	r3, [r0]
 430:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1721              		.loc 1 430 23 view .LVU542
 1722 0002 DA68     		ldr	r2, [r3, #12]
 1723 0004 22F00102 		bic	r2, r2, #1
 1724 0008 DA60     		str	r2, [r3, #12]
 433:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 1725              		.loc 1 433 5 is_stmt 1 view .LVU543
 1726              	.LVL125:
 1727              	.LBB140:
 1728              	.LBI140:
 477:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 1729              		.loc 2 477 22 view .LVU544
 1730              	.LBB141:
 479:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1731              		.loc 2 479 5 view .LVU545
 479:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1732              		.loc 2 479 22 is_stmt 0 view .LVU546
 1733 000a 1A68     		ldr	r2, [r3]
 1734 000c 22F00102 		bic	r2, r2, #1
 1735 0010 1A60     		str	r2, [r3]
 1736              	.LVL126:
 479:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** }
 1737              		.loc 2 479 22 view .LVU547
 1738              	.LBE141:
 1739              	.LBE140:
 434:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1740              		.loc 1 434 1 view .LVU548
ARM GAS  /tmp/ccgFBn4z.s 			page 61


 1741 0012 7047     		bx	lr
 1742              		.cfi_endproc
 1743              	.LFE199:
 1745              		.section	.text.TIM_vIRQHandler_UP,"ax",%progbits
 1746              		.align	1
 1747              		.p2align 2,,3
 1748              		.global	TIM_vIRQHandler_UP
 1749              		.syntax unified
 1750              		.thumb
 1751              		.thumb_func
 1752              		.fpu fpv4-sp-d16
 1754              	TIM_vIRQHandler_UP:
 1755              	.LVL127:
 1756              	.LFB200:
 441:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* TIM update event */
 1757              		.loc 1 441 1 is_stmt 1 view -0
 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 0
 1760              		@ frame_needed = 0, uses_anonymous_args = 0
 1761              		@ link register save eliminated.
 443:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1762              		.loc 1 443 5 view .LVU550
 443:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1763              		.loc 1 443 15 is_stmt 0 view .LVU551
 1764 0000 0268     		ldr	r2, [r0]
 441:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* TIM update event */
 1765              		.loc 1 441 1 view .LVU552
 1766 0002 10B4     		push	{r4}
 1767              	.LCFI18:
 1768              		.cfi_def_cfa_offset 4
 1769              		.cfi_offset 4, -4
 443:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1770              		.loc 1 443 21 view .LVU553
 1771 0004 1169     		ldr	r1, [r2, #16]
 443:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1772              		.loc 1 443 39 view .LVU554
 1773 0006 D468     		ldr	r4, [r2, #12]
 443:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1774              		.loc 1 443 26 view .LVU555
 1775 0008 2140     		ands	r1, r1, r4
 443:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1776              		.loc 1 443 8 view .LVU556
 1777 000a CB07     		lsls	r3, r1, #31
 1778 000c 09D5     		bpl	.L117
 446:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1779              		.loc 1 446 9 is_stmt 1 view .LVU557
 446:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1780              		.loc 1 446 25 is_stmt 0 view .LVU558
 1781 000e 1169     		ldr	r1, [r2, #16]
 448:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1782              		.loc 1 448 9 view .LVU559
 1783 0010 C468     		ldr	r4, [r0, #12]
 446:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1784              		.loc 1 446 25 view .LVU560
 1785 0012 21F00101 		bic	r1, r1, #1
 1786 0016 1161     		str	r1, [r2, #16]
 448:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
ARM GAS  /tmp/ccgFBn4z.s 			page 62


 1787              		.loc 1 448 9 is_stmt 1 view .LVU561
 448:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1788              		.loc 1 448 9 view .LVU562
 1789 0018 1CB1     		cbz	r4, .L117
 448:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1790              		.loc 1 448 9 discriminator 1 view .LVU563
 1791 001a 2346     		mov	r3, r4
 450:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1792              		.loc 1 450 1 is_stmt 0 discriminator 1 view .LVU564
 1793 001c 5DF8044B 		ldr	r4, [sp], #4
 1794              	.LCFI19:
 1795              		.cfi_remember_state
 1796              		.cfi_restore 4
 1797              		.cfi_def_cfa_offset 0
 448:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 1798              		.loc 1 448 9 discriminator 1 view .LVU565
 1799 0020 1847     		bx	r3	@ indirect register sibling call
 1800              	.LVL128:
 1801              	.L117:
 1802              	.LCFI20:
 1803              		.cfi_restore_state
 450:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1804              		.loc 1 450 1 view .LVU566
 1805 0022 5DF8044B 		ldr	r4, [sp], #4
 1806              	.LCFI21:
 1807              		.cfi_restore 4
 1808              		.cfi_def_cfa_offset 0
 1809 0026 7047     		bx	lr
 1810              		.cfi_endproc
 1811              	.LFE200:
 1813              		.section	.text.TIM_vIRQHandler_CC,"ax",%progbits
 1814              		.align	1
 1815              		.p2align 2,,3
 1816              		.global	TIM_vIRQHandler_CC
 1817              		.syntax unified
 1818              		.thumb
 1819              		.thumb_func
 1820              		.fpu fpv4-sp-d16
 1822              	TIM_vIRQHandler_CC:
 1823              	.LVL129:
 1824              	.LFB201:
 467:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_ChannelType eChannel = TIM_CH1;
 1825              		.loc 1 467 1 is_stmt 1 view -0
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 0
 1828              		@ frame_needed = 0, uses_anonymous_args = 0
 468:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t ulFlags = (pxTIM->Inst->SR & pxTIM->Inst->DIER
 1829              		.loc 1 468 5 view .LVU568
 469:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             & (TIM_SR_CC1IF | TIM_SR_CC2IF | TIM_SR_CC3IF | TIM_SR_CC4IF))
 1830              		.loc 1 469 5 view .LVU569
 469:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             & (TIM_SR_CC1IF | TIM_SR_CC2IF | TIM_SR_CC3IF | TIM_SR_CC4IF))
 1831              		.loc 1 469 30 is_stmt 0 view .LVU570
 1832 0000 0268     		ldr	r2, [r0]
 467:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     TIM_ChannelType eChannel = TIM_CH1;
 1833              		.loc 1 467 1 view .LVU571
 1834 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1835              	.LCFI22:
ARM GAS  /tmp/ccgFBn4z.s 			page 63


 1836              		.cfi_def_cfa_offset 32
 1837              		.cfi_offset 3, -32
 1838              		.cfi_offset 4, -28
 1839              		.cfi_offset 5, -24
 1840              		.cfi_offset 6, -20
 1841              		.cfi_offset 7, -16
 1842              		.cfi_offset 8, -12
 1843              		.cfi_offset 9, -8
 1844              		.cfi_offset 14, -4
 469:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             & (TIM_SR_CC1IF | TIM_SR_CC2IF | TIM_SR_CC3IF | TIM_SR_CC4IF))
 1845              		.loc 1 469 36 view .LVU572
 1846 0006 1369     		ldr	r3, [r2, #16]
 469:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             & (TIM_SR_CC1IF | TIM_SR_CC2IF | TIM_SR_CC3IF | TIM_SR_CC4IF))
 1847              		.loc 1 469 54 view .LVU573
 1848 0008 D268     		ldr	r2, [r2, #12]
 469:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             & (TIM_SR_CC1IF | TIM_SR_CC2IF | TIM_SR_CC3IF | TIM_SR_CC4IF))
 1849              		.loc 1 469 41 view .LVU574
 1850 000a 1340     		ands	r3, r3, r2
 474:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1851              		.loc 1 474 11 view .LVU575
 1852 000c 13F01E0F 		tst	r3, #30
 469:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             & (TIM_SR_CC1IF | TIM_SR_CC2IF | TIM_SR_CC3IF | TIM_SR_CC4IF))
 1853              		.loc 1 469 14 view .LVU576
 1854 0010 C3F34304 		ubfx	r4, r3, #1, #4
 1855              	.LVL130:
 474:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1856              		.loc 1 474 5 is_stmt 1 view .LVU577
 474:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1857              		.loc 1 474 11 view .LVU578
 1858 0014 1BD0     		beq	.L125
 1859 0016 0646     		mov	r6, r0
 1860 0018 0025     		movs	r5, #0
 1861              	.LBB142:
 1862              	.LBB143:
 1863              		.loc 2 607 5 is_stmt 0 view .LVU579
 1864 001a 4FF00209 		mov	r9, #2
 1865              	.LVL131:
 1866              	.L130:
 1867              		.loc 2 607 5 view .LVU580
 1868              	.LBE143:
 1869              	.LBE142:
 479:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1870              		.loc 1 479 13 is_stmt 1 view .LVU581
 479:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1871              		.loc 1 479 13 is_stmt 0 view .LVU582
 1872 001e EBB2     		uxtb	r3, r5
 1873              	.LVL132:
 476:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {
 1874              		.loc 1 476 9 is_stmt 1 view .LVU583
 1875              	.LBB148:
 1876              	.LBI142:
 605:STM32_XPD/STM32H7_XPD/inc/xpd_tim.h **** {
 1877              		.loc 2 605 22 view .LVU584
 1878              	.LBB144:
 1879              		.loc 2 607 5 view .LVU585
 1880              	.LBE144:
 1881              	.LBE148:
ARM GAS  /tmp/ccgFBn4z.s 			page 64


 476:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {
 1882              		.loc 1 476 12 is_stmt 0 view .LVU586
 1883 0020 14F0010F 		tst	r4, #1
 1884 0024 05F10105 		add	r5, r5, #1
 1885              	.LBB149:
 1886              	.LBB145:
 1887              		.loc 2 607 5 view .LVU587
 1888 0028 09FA03F7 		lsl	r7, r9, r3
 1889              	.LBE145:
 1890              	.LBE149:
 476:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {
 1891              		.loc 1 476 12 view .LVU588
 1892 002c 0DD0     		beq	.L128
 483:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 1893              		.loc 1 483 13 is_stmt 1 view .LVU589
 1894              	.LBB150:
 1895              	.LBB146:
 1896              		.loc 2 607 5 is_stmt 0 view .LVU590
 1897 002e 3168     		ldr	r1, [r6]
 1898              	.LBE146:
 1899              	.LBE150:
 483:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 1900              		.loc 1 483 13 view .LVU591
 1901 0030 3046     		mov	r0, r6
 1902 0032 D6F81080 		ldr	r8, [r6, #16]
 1903              	.LBB151:
 1904              	.LBB147:
 1905              		.loc 2 607 5 view .LVU592
 1906 0036 0A69     		ldr	r2, [r1, #16]
 1907 0038 22EA0702 		bic	r2, r2, r7
 1908 003c 0A61     		str	r2, [r1, #16]
 1909              	.LVL133:
 1910              		.loc 2 607 5 view .LVU593
 1911              	.LBE147:
 1912              	.LBE151:
 482:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             XPD_SAFE_CALLBACK(pxTIM->Callbacks.ChannelEvent, pxTIM);
 1913              		.loc 1 482 13 is_stmt 1 view .LVU594
 482:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             XPD_SAFE_CALLBACK(pxTIM->Callbacks.ChannelEvent, pxTIM);
 1914              		.loc 1 482 34 is_stmt 0 view .LVU595
 1915 003e 86F84130 		strb	r3, [r6, #65]
 483:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 1916              		.loc 1 483 13 is_stmt 1 view .LVU596
 483:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 1917              		.loc 1 483 13 view .LVU597
 1918 0042 B8F1000F 		cmp	r8, #0
 1919 0046 00D0     		beq	.L128
 1920              	.LVL134:
 483:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 1921              		.loc 1 483 13 is_stmt 0 discriminator 1 view .LVU598
 1922 0048 C047     		blx	r8
 1923              	.LVL135:
 1924              	.L128:
 483:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 1925              		.loc 1 483 13 is_stmt 1 discriminator 3 view .LVU599
 485:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         ulFlags >>= 1;
 1926              		.loc 1 485 9 discriminator 3 view .LVU600
 486:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
ARM GAS  /tmp/ccgFBn4z.s 			page 65


 1927              		.loc 1 486 9 discriminator 3 view .LVU601
 474:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1928              		.loc 1 474 11 discriminator 3 view .LVU602
 1929 004a 6408     		lsrs	r4, r4, #1
 1930              	.LVL136:
 474:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 1931              		.loc 1 474 11 is_stmt 0 discriminator 3 view .LVU603
 1932 004c E7D1     		bne	.L130
 1933              	.LVL137:
 1934              	.L125:
 488:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1935              		.loc 1 488 1 view .LVU604
 1936 004e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 488:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1937              		.loc 1 488 1 view .LVU605
 1938              		.cfi_endproc
 1939              	.LFE201:
 1941 0052 00BF     		.section	.text.TIM_vDriveConfig,"ax",%progbits
 1942              		.align	1
 1943              		.p2align 2,,3
 1944              		.global	TIM_vDriveConfig
 1945              		.syntax unified
 1946              		.thumb
 1947              		.thumb_func
 1948              		.fpu fpv4-sp-d16
 1950              	TIM_vDriveConfig:
 1951              	.LVL138:
 1952              	.LFB202:
 508:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t ulBDTR = pxConfig->w;
 1953              		.loc 1 508 1 is_stmt 1 view -0
 1954              		.cfi_startproc
 1955              		@ args = 0, pretend = 0, frame = 0
 1956              		@ frame_needed = 0, uses_anonymous_args = 0
 1957              		@ link register save eliminated.
 509:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1958              		.loc 1 509 5 view .LVU607
 509:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1959              		.loc 1 509 14 is_stmt 0 view .LVU608
 1960 0000 0A68     		ldr	r2, [r1]
 1961              	.LVL139:
 513:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #else
 1962              		.loc 1 513 5 is_stmt 1 view .LVU609
 518:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             | TIM_BDTR_AOE | TIM_BDTR_BKE | TIM_BDTR_BKP
 1963              		.loc 1 518 5 view .LVU610
 1964 0002 0068     		ldr	r0, [r0]
 1965              	.LVL140:
 518:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             | TIM_BDTR_AOE | TIM_BDTR_BKE | TIM_BDTR_BKP
 1966              		.loc 1 518 5 is_stmt 0 view .LVU611
 1967 0004 064B     		ldr	r3, .L141
 1968 0006 416C     		ldr	r1, [r0, #68]
 1969              	.LVL141:
 508:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t ulBDTR = pxConfig->w;
 1970              		.loc 1 508 1 view .LVU612
 1971 0008 10B4     		push	{r4}
 1972              	.LCFI23:
 1973              		.cfi_def_cfa_offset 4
 1974              		.cfi_offset 4, -4
ARM GAS  /tmp/ccgFBn4z.s 			page 66


 513:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #else
 1975              		.loc 1 513 12 view .LVU613
 1976 000a 064C     		ldr	r4, .L141+4
 1977 000c 5440     		eors	r4, r4, r2
 1978              	.LVL142:
 518:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             | TIM_BDTR_AOE | TIM_BDTR_BKE | TIM_BDTR_BKP
 1979              		.loc 1 518 5 view .LVU614
 1980 000e 064A     		ldr	r2, .L141+8
 1981 0010 2340     		ands	r3, r3, r4
 1982 0012 0A40     		ands	r2, r2, r1
 527:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1983              		.loc 1 527 1 view .LVU615
 1984 0014 5DF8044B 		ldr	r4, [sp], #4
 1985              	.LCFI24:
 1986              		.cfi_restore 4
 1987              		.cfi_def_cfa_offset 0
 1988              	.LVL143:
 518:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             | TIM_BDTR_AOE | TIM_BDTR_BKE | TIM_BDTR_BKP
 1989              		.loc 1 518 5 view .LVU616
 1990 0018 1343     		orrs	r3, r3, r2
 1991 001a 4364     		str	r3, [r0, #68]
 527:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 1992              		.loc 1 527 1 view .LVU617
 1993 001c 7047     		bx	lr
 1994              	.L142:
 1995 001e 00BF     		.align	2
 1996              	.L141:
 1997 0020 FF7CFF03 		.word	67075327
 1998 0024 00200002 		.word	33562624
 1999 0028 008300FC 		.word	-67075328
 2000              		.cfi_endproc
 2001              	.LFE202:
 2003              		.section	.text.TIM_ucCalcDeadtime,"ax",%progbits
 2004              		.align	1
 2005              		.p2align 2,,3
 2006              		.global	TIM_ucCalcDeadtime
 2007              		.syntax unified
 2008              		.thumb
 2009              		.thumb_func
 2010              		.fpu fpv4-sp-d16
 2012              	TIM_ucCalcDeadtime:
 2013              	.LVL144:
 2014              	.LFB203:
 536:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint8_t ucDeadtime;
 2015              		.loc 1 536 1 is_stmt 1 view -0
 2016              		.cfi_startproc
 2017              		@ args = 0, pretend = 0, frame = 0
 2018              		@ frame_needed = 0, uses_anonymous_args = 0
 2019              		@ link register save eliminated.
 537:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2020              		.loc 1 537 5 view .LVU619
 540:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2021              		.loc 1 540 5 view .LVU620
 540:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2022              		.loc 1 540 32 is_stmt 0 view .LVU621
 2023 0000 0368     		ldr	r3, [r0]
 540:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
ARM GAS  /tmp/ccgFBn4z.s 			page 67


 2024              		.loc 1 540 38 view .LVU622
 2025 0002 1868     		ldr	r0, [r3]
 2026              	.LVL145:
 540:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2027              		.loc 1 540 63 view .LVU623
 2028 0004 C0F30120 		ubfx	r0, r0, #8, #2
 540:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2029              		.loc 1 540 22 view .LVU624
 2030 0008 C140     		lsrs	r1, r1, r0
 2031              	.LVL146:
 543:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2032              		.loc 1 543 5 is_stmt 1 view .LVU625
 543:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2033              		.loc 1 543 8 is_stmt 0 view .LVU626
 2034 000a 7F29     		cmp	r1, #127
 2035 000c 05D9     		bls	.L149
 548:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2036              		.loc 1 548 10 is_stmt 1 view .LVU627
 548:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2037              		.loc 1 548 13 is_stmt 0 view .LVU628
 2038 000e FF29     		cmp	r1, #255
 2039 0010 05D8     		bhi	.L146
 551:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2040              		.loc 1 551 9 is_stmt 1 view .LVU629
 551:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2041              		.loc 1 551 48 is_stmt 0 view .LVU630
 2042 0012 4908     		lsrs	r1, r1, #1
 2043              	.LVL147:
 551:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2044              		.loc 1 551 53 view .LVU631
 2045 0014 4039     		subs	r1, r1, #64
 551:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2046              		.loc 1 551 20 view .LVU632
 2047 0016 61F07F01 		orn	r1, r1, #127
 2048              	.L149:
 2049 001a C8B2     		uxtb	r0, r1
 2050              	.LVL148:
 551:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2051              		.loc 1 551 20 view .LVU633
 2052 001c 7047     		bx	lr
 2053              	.LVL149:
 2054              	.L146:
 553:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2055              		.loc 1 553 10 is_stmt 1 view .LVU634
 553:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2056              		.loc 1 553 13 is_stmt 0 view .LVU635
 2057 001e B1F5007F 		cmp	r1, #512
 2058 0022 08D3     		bcc	.L150
 558:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2059              		.loc 1 558 10 is_stmt 1 view .LVU636
 558:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2060              		.loc 1 558 13 is_stmt 0 view .LVU637
 2061 0024 B1F57C7F 		cmp	r1, #1008
 2062 0028 0BD2     		bcs	.L148
 561:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2063              		.loc 1 561 9 is_stmt 1 view .LVU638
 561:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
ARM GAS  /tmp/ccgFBn4z.s 			page 68


 2064              		.loc 1 561 48 is_stmt 0 view .LVU639
 2065 002a 0909     		lsrs	r1, r1, #4
 2066              	.LVL150:
 561:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2067              		.loc 1 561 54 view .LVU640
 2068 002c 2039     		subs	r1, r1, #32
 561:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2069              		.loc 1 561 20 view .LVU641
 2070 002e 61F01F01 		orn	r1, r1, #31
 2071 0032 C8B2     		uxtb	r0, r1
 2072              	.LVL151:
 561:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2073              		.loc 1 561 20 view .LVU642
 2074 0034 7047     		bx	lr
 2075              	.LVL152:
 2076              	.L150:
 556:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2077              		.loc 1 556 9 is_stmt 1 view .LVU643
 556:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2078              		.loc 1 556 48 is_stmt 0 view .LVU644
 2079 0036 C908     		lsrs	r1, r1, #3
 2080              	.LVL153:
 556:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2081              		.loc 1 556 53 view .LVU645
 2082 0038 2039     		subs	r1, r1, #32
 556:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2083              		.loc 1 556 20 view .LVU646
 2084 003a 61F03F01 		orn	r1, r1, #63
 2085 003e C8B2     		uxtb	r0, r1
 2086              	.LVL154:
 556:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2087              		.loc 1 556 20 view .LVU647
 2088 0040 7047     		bx	lr
 2089              	.LVL155:
 2090              	.L148:
 566:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2091              		.loc 1 566 20 view .LVU648
 2092 0042 FF20     		movs	r0, #255
 2093              	.LVL156:
 569:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 2094              		.loc 1 569 5 is_stmt 1 view .LVU649
 570:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2095              		.loc 1 570 1 is_stmt 0 view .LVU650
 2096 0044 7047     		bx	lr
 2097              		.cfi_endproc
 2098              	.LFE203:
 2100 0046 00BF     		.section	.text.TIM_vIRQHandler_BRK,"ax",%progbits
 2101              		.align	1
 2102              		.p2align 2,,3
 2103              		.global	TIM_vIRQHandler_BRK
 2104              		.syntax unified
 2105              		.thumb
 2106              		.thumb_func
 2107              		.fpu fpv4-sp-d16
 2109              	TIM_vIRQHandler_BRK:
 2110              	.LVL157:
 2111              	.LFB204:
ARM GAS  /tmp/ccgFBn4z.s 			page 69


 577:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* TIM Break input event */
 2112              		.loc 1 577 1 is_stmt 1 view -0
 2113              		.cfi_startproc
 2114              		@ args = 0, pretend = 0, frame = 0
 2115              		@ frame_needed = 0, uses_anonymous_args = 0
 2116              		@ link register save eliminated.
 579:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2117              		.loc 1 579 5 view .LVU652
 579:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2118              		.loc 1 579 15 is_stmt 0 view .LVU653
 2119 0000 0268     		ldr	r2, [r0]
 577:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* TIM Break input event */
 2120              		.loc 1 577 1 view .LVU654
 2121 0002 10B4     		push	{r4}
 2122              	.LCFI25:
 2123              		.cfi_def_cfa_offset 4
 2124              		.cfi_offset 4, -4
 579:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2125              		.loc 1 579 21 view .LVU655
 2126 0004 1169     		ldr	r1, [r2, #16]
 579:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2127              		.loc 1 579 39 view .LVU656
 2128 0006 D468     		ldr	r4, [r2, #12]
 579:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2129              		.loc 1 579 26 view .LVU657
 2130 0008 2140     		ands	r1, r1, r4
 579:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2131              		.loc 1 579 8 view .LVU658
 2132 000a 0B06     		lsls	r3, r1, #24
 2133 000c 09D5     		bpl	.L151
 582:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2134              		.loc 1 582 9 is_stmt 1 view .LVU659
 582:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2135              		.loc 1 582 25 is_stmt 0 view .LVU660
 2136 000e 1169     		ldr	r1, [r2, #16]
 584:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2137              		.loc 1 584 9 view .LVU661
 2138 0010 C469     		ldr	r4, [r0, #28]
 582:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2139              		.loc 1 582 25 view .LVU662
 2140 0012 21F08001 		bic	r1, r1, #128
 2141 0016 1161     		str	r1, [r2, #16]
 584:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2142              		.loc 1 584 9 is_stmt 1 view .LVU663
 584:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2143              		.loc 1 584 9 view .LVU664
 2144 0018 1CB1     		cbz	r4, .L151
 584:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2145              		.loc 1 584 9 discriminator 1 view .LVU665
 2146 001a 2346     		mov	r3, r4
 586:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2147              		.loc 1 586 1 is_stmt 0 discriminator 1 view .LVU666
 2148 001c 5DF8044B 		ldr	r4, [sp], #4
 2149              	.LCFI26:
 2150              		.cfi_remember_state
 2151              		.cfi_restore 4
 2152              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccgFBn4z.s 			page 70


 584:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2153              		.loc 1 584 9 discriminator 1 view .LVU667
 2154 0020 1847     		bx	r3	@ indirect register sibling call
 2155              	.LVL158:
 2156              	.L151:
 2157              	.LCFI27:
 2158              		.cfi_restore_state
 586:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2159              		.loc 1 586 1 view .LVU668
 2160 0022 5DF8044B 		ldr	r4, [sp], #4
 2161              	.LCFI28:
 2162              		.cfi_restore 4
 2163              		.cfi_def_cfa_offset 0
 2164 0026 7047     		bx	lr
 2165              		.cfi_endproc
 2166              	.LFE204:
 2168              		.section	.text.TIM_vOCRefClearConfig,"ax",%progbits
 2169              		.align	1
 2170              		.p2align 2,,3
 2171              		.global	TIM_vOCRefClearConfig
 2172              		.syntax unified
 2173              		.thumb
 2174              		.thumb_func
 2175              		.fpu fpv4-sp-d16
 2177              	TIM_vOCRefClearConfig:
 2178              	.LVL159:
 2179              	.LFB205:
 598:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     __IO uint32_t * pulCCMR;
 2180              		.loc 1 598 1 is_stmt 1 view -0
 2181              		.cfi_startproc
 2182              		@ args = 0, pretend = 0, frame = 0
 2183              		@ frame_needed = 0, uses_anonymous_args = 0
 2184              		@ link register save eliminated.
 599:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t ulChOffset = (eChannel & 1) * 8;
 2185              		.loc 1 599 5 view .LVU670
 600:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2186              		.loc 1 600 5 view .LVU671
 2187 0000 0368     		ldr	r3, [r0]
 604:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2188              		.loc 1 604 8 is_stmt 0 view .LVU672
 2189 0002 0329     		cmp	r1, #3
 600:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2190              		.loc 1 600 37 view .LVU673
 2191 0004 01F00100 		and	r0, r1, #1
 2192              	.LVL160:
 600:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2193              		.loc 1 600 42 view .LVU674
 2194 0008 4FEAC000 		lsl	r0, r0, #3
 2195              	.LVL161:
 604:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2196              		.loc 1 604 5 is_stmt 1 view .LVU675
 604:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2197              		.loc 1 604 8 is_stmt 0 view .LVU676
 2198 000c 08D9     		bls	.L160
 606:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2199              		.loc 1 606 9 is_stmt 1 view .LVU677
 2200 000e 8021     		movs	r1, #128
ARM GAS  /tmp/ccgFBn4z.s 			page 71


 2201              	.LVL162:
 606:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2202              		.loc 1 606 17 is_stmt 0 view .LVU678
 2203 0010 5433     		adds	r3, r3, #84
 2204              	.LVL163:
 619:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2205              		.loc 1 619 5 is_stmt 1 view .LVU679
 2206 0012 8140     		lsls	r1, r1, r0
 619:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2207              		.loc 1 619 8 is_stmt 0 view .LVU680
 2208 0014 6AB9     		cbnz	r2, .L163
 2209              	.L165:
 622:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2210              		.loc 1 622 9 is_stmt 1 view .LVU681
 2211 0016 1A68     		ldr	r2, [r3]
 2212              	.LVL164:
 622:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2213              		.loc 1 622 9 is_stmt 0 view .LVU682
 2214 0018 22EA0101 		bic	r1, r2, r1
 2215 001c 1960     		str	r1, [r3]
 2216 001e 7047     		bx	lr
 2217              	.LVL165:
 2218              	.L160:
 610:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2219              		.loc 1 610 5 is_stmt 1 view .LVU683
 610:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2220              		.loc 1 610 8 is_stmt 0 view .LVU684
 2221 0020 0129     		cmp	r1, #1
 612:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2222              		.loc 1 612 9 is_stmt 1 view .LVU685
 2223 0022 4FF08001 		mov	r1, #128
 2224              	.LVL166:
 612:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2225              		.loc 1 612 17 is_stmt 0 view .LVU686
 2226 0026 94BF     		ite	ls
 2227 0028 1833     		addls	r3, r3, #24
 2228              	.LVL167:
 616:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2229              		.loc 1 616 9 is_stmt 1 view .LVU687
 616:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2230              		.loc 1 616 17 is_stmt 0 view .LVU688
 2231 002a 1C33     		addhi	r3, r3, #28
 2232              	.LVL168:
 619:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2233              		.loc 1 619 5 is_stmt 1 view .LVU689
 2234 002c 8140     		lsls	r1, r1, r0
 619:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2235              		.loc 1 619 8 is_stmt 0 view .LVU690
 2236 002e 002A     		cmp	r2, #0
 2237 0030 F1D0     		beq	.L165
 2238              	.L163:
 627:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2239              		.loc 1 627 9 is_stmt 1 view .LVU691
 2240 0032 1A68     		ldr	r2, [r3]
 2241              	.LVL169:
 627:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2242              		.loc 1 627 9 is_stmt 0 view .LVU692
ARM GAS  /tmp/ccgFBn4z.s 			page 72


 2243 0034 1143     		orrs	r1, r1, r2
 2244 0036 1960     		str	r1, [r3]
 630:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2245              		.loc 1 630 1 view .LVU693
 2246 0038 7047     		bx	lr
 2247              		.cfi_endproc
 2248              	.LFE205:
 2250 003a 00BF     		.section	.text.TIM_vCommutationConfig,"ax",%progbits
 2251              		.align	1
 2252              		.p2align 2,,3
 2253              		.global	TIM_vCommutationConfig
 2254              		.syntax unified
 2255              		.thumb
 2256              		.thumb_func
 2257              		.fpu fpv4-sp-d16
 2259              	TIM_vCommutationConfig:
 2260              	.LVL170:
 2261              	.LFB206:
 638:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     if (eComSource > TIM_COMSOURCE_SOFTWARE)
 2262              		.loc 1 638 1 is_stmt 1 view -0
 2263              		.cfi_startproc
 2264              		@ args = 0, pretend = 0, frame = 0
 2265              		@ frame_needed = 0, uses_anonymous_args = 0
 2266              		@ link register save eliminated.
 639:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2267              		.loc 1 639 5 view .LVU695
 639:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2268              		.loc 1 639 8 is_stmt 0 view .LVU696
 2269 0000 0129     		cmp	r1, #1
 2270 0002 0368     		ldr	r3, [r0]
 2271 0004 0BD9     		bls	.L167
 642:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2272              		.loc 1 642 9 is_stmt 1 view .LVU697
 2273 0006 9868     		ldr	r0, [r3, #8]
 2274              	.LVL171:
 642:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2275              		.loc 1 642 9 is_stmt 0 view .LVU698
 2276 0008 01F07001 		and	r1, r1, #112
 2277              	.LVL172:
 642:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2278              		.loc 1 642 9 view .LVU699
 2279 000c 094A     		ldr	r2, .L169
 2280 000e 0240     		ands	r2, r2, r0
 2281 0010 1143     		orrs	r1, r1, r2
 2282 0012 9960     		str	r1, [r3, #8]
 645:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2283              		.loc 1 645 9 is_stmt 1 view .LVU700
 2284 0014 5A68     		ldr	r2, [r3, #4]
 2285 0016 42F00502 		orr	r2, r2, #5
 2286 001a 5A60     		str	r2, [r3, #4]
 2287 001c 7047     		bx	lr
 2288              	.LVL173:
 2289              	.L167:
 650:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2290              		.loc 1 650 9 view .LVU701
 2291 001e 5A68     		ldr	r2, [r3, #4]
 2292 0020 22F00502 		bic	r2, r2, #5
ARM GAS  /tmp/ccgFBn4z.s 			page 73


 2293 0024 5A60     		str	r2, [r3, #4]
 652:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {
 2294              		.loc 1 652 9 view .LVU702
 652:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         {
 2295              		.loc 1 652 12 is_stmt 0 view .LVU703
 2296 0026 03D1     		bne	.L166
 655:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 2297              		.loc 1 655 13 is_stmt 1 view .LVU704
 655:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****         }
 2298              		.loc 1 655 30 is_stmt 0 view .LVU705
 2299 0028 5A68     		ldr	r2, [r3, #4]
 2300 002a 42F00102 		orr	r2, r2, #1
 2301 002e 5A60     		str	r2, [r3, #4]
 2302              	.L166:
 658:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2303              		.loc 1 658 1 view .LVU706
 2304 0030 7047     		bx	lr
 2305              	.L170:
 2306 0032 00BF     		.align	2
 2307              	.L169:
 2308 0034 8FFFCFFF 		.word	-3145841
 2309              		.cfi_endproc
 2310              	.LFE206:
 2312              		.section	.text.TIM_vIRQHandler_COM,"ax",%progbits
 2313              		.align	1
 2314              		.p2align 2,,3
 2315              		.global	TIM_vIRQHandler_COM
 2316              		.syntax unified
 2317              		.thumb
 2318              		.thumb_func
 2319              		.fpu fpv4-sp-d16
 2321              	TIM_vIRQHandler_COM:
 2322              	.LVL174:
 2323              	.LFB207:
 665:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* TIM commutation event */
 2324              		.loc 1 665 1 is_stmt 1 view -0
 2325              		.cfi_startproc
 2326              		@ args = 0, pretend = 0, frame = 0
 2327              		@ frame_needed = 0, uses_anonymous_args = 0
 2328              		@ link register save eliminated.
 667:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2329              		.loc 1 667 5 view .LVU708
 667:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2330              		.loc 1 667 15 is_stmt 0 view .LVU709
 2331 0000 0268     		ldr	r2, [r0]
 665:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* TIM commutation event */
 2332              		.loc 1 665 1 view .LVU710
 2333 0002 10B4     		push	{r4}
 2334              	.LCFI29:
 2335              		.cfi_def_cfa_offset 4
 2336              		.cfi_offset 4, -4
 667:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2337              		.loc 1 667 21 view .LVU711
 2338 0004 1169     		ldr	r1, [r2, #16]
 667:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2339              		.loc 1 667 39 view .LVU712
 2340 0006 D468     		ldr	r4, [r2, #12]
ARM GAS  /tmp/ccgFBn4z.s 			page 74


 667:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2341              		.loc 1 667 26 view .LVU713
 2342 0008 2140     		ands	r1, r1, r4
 667:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2343              		.loc 1 667 8 view .LVU714
 2344 000a 8B06     		lsls	r3, r1, #26
 2345 000c 09D5     		bpl	.L171
 670:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2346              		.loc 1 670 9 is_stmt 1 view .LVU715
 670:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2347              		.loc 1 670 25 is_stmt 0 view .LVU716
 2348 000e 1169     		ldr	r1, [r2, #16]
 672:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2349              		.loc 1 672 9 view .LVU717
 2350 0010 8469     		ldr	r4, [r0, #24]
 670:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2351              		.loc 1 670 25 view .LVU718
 2352 0012 21F02001 		bic	r1, r1, #32
 2353 0016 1161     		str	r1, [r2, #16]
 672:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2354              		.loc 1 672 9 is_stmt 1 view .LVU719
 672:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2355              		.loc 1 672 9 view .LVU720
 2356 0018 1CB1     		cbz	r4, .L171
 672:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2357              		.loc 1 672 9 discriminator 1 view .LVU721
 2358 001a 2346     		mov	r3, r4
 674:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2359              		.loc 1 674 1 is_stmt 0 discriminator 1 view .LVU722
 2360 001c 5DF8044B 		ldr	r4, [sp], #4
 2361              	.LCFI30:
 2362              		.cfi_remember_state
 2363              		.cfi_restore 4
 2364              		.cfi_def_cfa_offset 0
 672:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2365              		.loc 1 672 9 discriminator 1 view .LVU723
 2366 0020 1847     		bx	r3	@ indirect register sibling call
 2367              	.LVL175:
 2368              	.L171:
 2369              	.LCFI31:
 2370              		.cfi_restore_state
 674:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2371              		.loc 1 674 1 view .LVU724
 2372 0022 5DF8044B 		ldr	r4, [sp], #4
 2373              	.LCFI32:
 2374              		.cfi_restore 4
 2375              		.cfi_def_cfa_offset 0
 2376 0026 7047     		bx	lr
 2377              		.cfi_endproc
 2378              	.LFE207:
 2380              		.section	.text.TIM_vMasterConfig,"ax",%progbits
 2381              		.align	1
 2382              		.p2align 2,,3
 2383              		.global	TIM_vMasterConfig
 2384              		.syntax unified
 2385              		.thumb
 2386              		.thumb_func
ARM GAS  /tmp/ccgFBn4z.s 			page 75


 2387              		.fpu fpv4-sp-d16
 2389              	TIM_vMasterConfig:
 2390              	.LVL176:
 2391              	.LFB208:
 692:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* select the TRGO source */
 2392              		.loc 1 692 1 is_stmt 1 view -0
 2393              		.cfi_startproc
 2394              		@ args = 0, pretend = 0, frame = 0
 2395              		@ frame_needed = 0, uses_anonymous_args = 0
 2396              		@ link register save eliminated.
 694:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CR2 |= (pxConfig->MasterTrigger << TIM_CR2_MMS_Pos) & TIM_CR2_MMS_Msk;
 2397              		.loc 1 694 5 view .LVU726
 694:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CR2 |= (pxConfig->MasterTrigger << TIM_CR2_MMS_Pos) & TIM_CR2_MMS_Msk;
 2398              		.loc 1 694 10 is_stmt 0 view .LVU727
 2399 0000 0368     		ldr	r3, [r0]
 694:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CR2 |= (pxConfig->MasterTrigger << TIM_CR2_MMS_Pos) & TIM_CR2_MMS_Msk;
 2400              		.loc 1 694 22 view .LVU728
 2401 0002 5A68     		ldr	r2, [r3, #4]
 2402 0004 22F07002 		bic	r2, r2, #112
 2403 0008 5A60     		str	r2, [r3, #4]
 695:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2404              		.loc 1 695 5 is_stmt 1 view .LVU729
 695:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2405              		.loc 1 695 34 is_stmt 0 view .LVU730
 2406 000a 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 695:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2407              		.loc 1 695 22 view .LVU731
 2408 000c 5868     		ldr	r0, [r3, #4]
 2409              	.LVL177:
 695:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2410              		.loc 1 695 50 view .LVU732
 2411 000e 1201     		lsls	r2, r2, #4
 695:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2412              		.loc 1 695 70 view .LVU733
 2413 0010 02F07002 		and	r2, r2, #112
 695:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2414              		.loc 1 695 22 view .LVU734
 2415 0014 0243     		orrs	r2, r2, r0
 2416 0016 5A60     		str	r2, [r3, #4]
 699:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CR2 |= (pxConfig->MasterTrigger2 << TIM_CR2_MMS2_Pos) & TIM_CR2_MMS2_Msk;
 2417              		.loc 1 699 5 is_stmt 1 view .LVU735
 699:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->CR2 |= (pxConfig->MasterTrigger2 << TIM_CR2_MMS2_Pos) & TIM_CR2_MMS2_Msk;
 2418              		.loc 1 699 22 is_stmt 0 view .LVU736
 2419 0018 5A68     		ldr	r2, [r3, #4]
 2420 001a 22F47002 		bic	r2, r2, #15728640
 2421 001e 5A60     		str	r2, [r3, #4]
 700:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #endif
 2422              		.loc 1 700 5 is_stmt 1 view .LVU737
 700:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #endif
 2423              		.loc 1 700 34 is_stmt 0 view .LVU738
 2424 0020 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 700:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #endif
 2425              		.loc 1 700 22 view .LVU739
 2426 0022 5868     		ldr	r0, [r3, #4]
 700:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #endif
 2427              		.loc 1 700 51 view .LVU740
 2428 0024 1205     		lsls	r2, r2, #20
ARM GAS  /tmp/ccgFBn4z.s 			page 76


 700:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #endif
 2429              		.loc 1 700 72 view .LVU741
 2430 0026 02F47002 		and	r2, r2, #15728640
 700:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** #endif
 2431              		.loc 1 700 22 view .LVU742
 2432 002a 0243     		orrs	r2, r2, r0
 2433 002c 5A60     		str	r2, [r3, #4]
 704:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->SMCR |= (pxConfig->MasterSlaveMode << TIM_SMCR_MSM_Pos) & TIM_SMCR_MSM_Msk;
 2434              		.loc 1 704 5 is_stmt 1 view .LVU743
 704:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     pxTIM->Inst->SMCR |= (pxConfig->MasterSlaveMode << TIM_SMCR_MSM_Pos) & TIM_SMCR_MSM_Msk;
 2435              		.loc 1 704 23 is_stmt 0 view .LVU744
 2436 002e 9A68     		ldr	r2, [r3, #8]
 2437 0030 22F08002 		bic	r2, r2, #128
 2438 0034 9A60     		str	r2, [r3, #8]
 705:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 2439              		.loc 1 705 5 is_stmt 1 view .LVU745
 705:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 2440              		.loc 1 705 35 is_stmt 0 view .LVU746
 2441 0036 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 705:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 2442              		.loc 1 705 23 view .LVU747
 2443 0038 9968     		ldr	r1, [r3, #8]
 2444              	.LVL178:
 705:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 2445              		.loc 1 705 53 view .LVU748
 2446 003a D201     		lsls	r2, r2, #7
 705:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 2447              		.loc 1 705 74 view .LVU749
 2448 003c D2B2     		uxtb	r2, r2
 705:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 2449              		.loc 1 705 23 view .LVU750
 2450 003e 0A43     		orrs	r2, r2, r1
 2451 0040 9A60     		str	r2, [r3, #8]
 706:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2452              		.loc 1 706 1 view .LVU751
 2453 0042 7047     		bx	lr
 2454              		.cfi_endproc
 2455              	.LFE208:
 2457              		.section	.text.TIM_vSlaveConfig,"ax",%progbits
 2458              		.align	1
 2459              		.p2align 2,,3
 2460              		.global	TIM_vSlaveConfig
 2461              		.syntax unified
 2462              		.thumb
 2463              		.thumb_func
 2464              		.fpu fpv4-sp-d16
 2466              	TIM_vSlaveConfig:
 2467              	.LVL179:
 2468              	.LFB209:
 714:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t ulSmcr = pxConfig->w;
 2469              		.loc 1 714 1 is_stmt 1 view -0
 2470              		.cfi_startproc
 2471              		@ args = 0, pretend = 0, frame = 0
 2472              		@ frame_needed = 0, uses_anonymous_args = 0
 2473              		@ link register save eliminated.
 715:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t ulSmcrMask = TIM_SMCR_SMS | TIM_SMCR_TS | TIM_SMCR_ETF
 2474              		.loc 1 715 5 view .LVU753
ARM GAS  /tmp/ccgFBn4z.s 			page 77


 720:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2475              		.loc 1 720 29 is_stmt 0 view .LVU754
 2476 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 725:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 2477              		.loc 1 725 5 view .LVU755
 2478 0002 094A     		ldr	r2, .L183
 720:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2479              		.loc 1 720 8 view .LVU756
 2480 0004 03F00F03 		and	r3, r3, #15
 714:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t ulSmcr = pxConfig->w;
 2481              		.loc 1 714 1 view .LVU757
 2482 0008 10B4     		push	{r4}
 2483              	.LCFI33:
 2484              		.cfi_def_cfa_offset 4
 2485              		.cfi_offset 4, -4
 720:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2486              		.loc 1 720 8 view .LVU758
 2487 000a 082B     		cmp	r3, #8
 715:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     uint32_t ulSmcrMask = TIM_SMCR_SMS | TIM_SMCR_TS | TIM_SMCR_ETF
 2488              		.loc 1 715 14 view .LVU759
 2489 000c 0C88     		ldrh	r4, [r1]
 2490              	.LVL180:
 716:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****             | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP;
 2491              		.loc 1 716 5 is_stmt 1 view .LVU760
 720:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2492              		.loc 1 720 5 view .LVU761
 722:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2493              		.loc 1 722 9 view .LVU762
 725:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 2494              		.loc 1 725 5 is_stmt 0 view .LVU763
 2495 000e 0168     		ldr	r1, [r0]
 2496              	.LVL181:
 722:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2497              		.loc 1 722 16 view .LVU764
 2498 0010 08BF     		it	eq
 2499 0012 44F48034 		orreq	r4, r4, #65536
 2500              	.LVL182:
 725:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 2501              		.loc 1 725 5 is_stmt 1 view .LVU765
 2502 0016 054B     		ldr	r3, .L183+4
 2503 0018 8868     		ldr	r0, [r1, #8]
 2504              	.LVL183:
 725:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 2505              		.loc 1 725 5 is_stmt 0 view .LVU766
 2506 001a 2240     		ands	r2, r2, r4
 726:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2507              		.loc 1 726 1 view .LVU767
 2508 001c 5DF8044B 		ldr	r4, [sp], #4
 2509              	.LCFI34:
 2510              		.cfi_restore 4
 2511              		.cfi_def_cfa_offset 0
 2512              	.LVL184:
 725:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 2513              		.loc 1 725 5 view .LVU768
 2514 0020 0340     		ands	r3, r3, r0
 2515 0022 1343     		orrs	r3, r3, r2
 2516 0024 8B60     		str	r3, [r1, #8]
ARM GAS  /tmp/ccgFBn4z.s 			page 78


 726:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2517              		.loc 1 726 1 view .LVU769
 2518 0026 7047     		bx	lr
 2519              	.L184:
 2520              		.align	2
 2521              	.L183:
 2522 0028 77FF0100 		.word	130935
 2523 002c 8800CEFF 		.word	-3276664
 2524              		.cfi_endproc
 2525              	.LFE209:
 2527              		.section	.text.TIM_vIRQHandler_TRG,"ax",%progbits
 2528              		.align	1
 2529              		.p2align 2,,3
 2530              		.global	TIM_vIRQHandler_TRG
 2531              		.syntax unified
 2532              		.thumb
 2533              		.thumb_func
 2534              		.fpu fpv4-sp-d16
 2536              	TIM_vIRQHandler_TRG:
 2537              	.LVL185:
 2538              	.LFB210:
 733:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* TIM Trigger detection event */
 2539              		.loc 1 733 1 is_stmt 1 view -0
 2540              		.cfi_startproc
 2541              		@ args = 0, pretend = 0, frame = 0
 2542              		@ frame_needed = 0, uses_anonymous_args = 0
 2543              		@ link register save eliminated.
 735:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2544              		.loc 1 735 5 view .LVU771
 735:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2545              		.loc 1 735 15 is_stmt 0 view .LVU772
 2546 0000 0268     		ldr	r2, [r0]
 733:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     /* TIM Trigger detection event */
 2547              		.loc 1 733 1 view .LVU773
 2548 0002 10B4     		push	{r4}
 2549              	.LCFI35:
 2550              		.cfi_def_cfa_offset 4
 2551              		.cfi_offset 4, -4
 735:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2552              		.loc 1 735 21 view .LVU774
 2553 0004 1169     		ldr	r1, [r2, #16]
 735:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2554              		.loc 1 735 39 view .LVU775
 2555 0006 D468     		ldr	r4, [r2, #12]
 735:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2556              		.loc 1 735 26 view .LVU776
 2557 0008 2140     		ands	r1, r1, r4
 735:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     {
 2558              		.loc 1 735 8 view .LVU777
 2559 000a 4B06     		lsls	r3, r1, #25
 2560 000c 09D5     		bpl	.L185
 738:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2561              		.loc 1 738 9 is_stmt 1 view .LVU778
 738:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2562              		.loc 1 738 25 is_stmt 0 view .LVU779
 2563 000e 1169     		ldr	r1, [r2, #16]
 2564              		.loc 1 740 9 view .LVU780
ARM GAS  /tmp/ccgFBn4z.s 			page 79


 2565 0010 4469     		ldr	r4, [r0, #20]
 738:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** 
 2566              		.loc 1 738 25 view .LVU781
 2567 0012 21F04001 		bic	r1, r1, #64
 2568 0016 1161     		str	r1, [r2, #16]
 2569              		.loc 1 740 9 is_stmt 1 view .LVU782
 2570              		.loc 1 740 9 view .LVU783
 2571 0018 1CB1     		cbz	r4, .L185
 2572              		.loc 1 740 9 discriminator 1 view .LVU784
 2573 001a 2346     		mov	r3, r4
 741:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 742:STM32_XPD/STM32H7_XPD/src/xpd_tim.c **** }
 2574              		.loc 1 742 1 is_stmt 0 discriminator 1 view .LVU785
 2575 001c 5DF8044B 		ldr	r4, [sp], #4
 2576              	.LCFI36:
 2577              		.cfi_remember_state
 2578              		.cfi_restore 4
 2579              		.cfi_def_cfa_offset 0
 740:STM32_XPD/STM32H7_XPD/src/xpd_tim.c ****     }
 2580              		.loc 1 740 9 discriminator 1 view .LVU786
 2581 0020 1847     		bx	r3	@ indirect register sibling call
 2582              	.LVL186:
 2583              	.L185:
 2584              	.LCFI37:
 2585              		.cfi_restore_state
 2586              		.loc 1 742 1 view .LVU787
 2587 0022 5DF8044B 		ldr	r4, [sp], #4
 2588              	.LCFI38:
 2589              		.cfi_restore 4
 2590              		.cfi_def_cfa_offset 0
 2591 0026 7047     		bx	lr
 2592              		.cfi_endproc
 2593              	.LFE210:
 2595              		.section	.rodata.TIM_apxDmaRedirects,"a"
 2596              		.align	2
 2597              		.set	.LANCHOR0,. + 0
 2600              	TIM_apxDmaRedirects:
 2601 0000 00000000 		.word	TIM_prvDmaUpdateRedirect
 2602 0004 00000000 		.word	TIM_prvDmaChannelEventRedirect1
 2603 0008 00000000 		.word	TIM_prvDmaChannelEventRedirect2
 2604 000c 00000000 		.word	TIM_prvDmaChannelEventRedirect3
 2605 0010 00000000 		.word	TIM_prvDmaChannelEventRedirect4
 2606 0014 00000000 		.word	TIM_prvDmaCommutationCallbackRedirect
 2607 0018 00000000 		.word	TIM_prvDmaTriggerCallbackRedirect
 2608              		.text
 2609              	.Letext0:
 2610              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2611              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2612              		.file 5 "STM32_XPD/STM32H7_XPD/inc/xpd_common.h"
 2613              		.file 6 "STM32_XPD/CMSIS/Include/core_cm7.h"
 2614              		.file 7 "STM32_XPD/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 2615              		.file 8 "STM32_XPD/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 2616              		.file 9 "STM32_XPD/STM32H7_XPD/inc/xpd_dma.h"
 2617              		.file 10 "STM32_XPD/STM32H7_XPD/inc/xpd_rcc.h"
 2618              		.file 11 "STM32_XPD/STM32H7_XPD/inc/xpd_exti.h"
 2619              		.file 12 "STM32_XPD/STM32H7_XPD/inc/xpd_rcc_cc.h"
ARM GAS  /tmp/ccgFBn4z.s 			page 80


DEFINED SYMBOLS
                            *ABS*:0000000000000000 xpd_tim.c
     /tmp/ccgFBn4z.s:18     .text.TIM_prvDmaUpdateRedirect:0000000000000000 $t
     /tmp/ccgFBn4z.s:26     .text.TIM_prvDmaUpdateRedirect:0000000000000000 TIM_prvDmaUpdateRedirect
     /tmp/ccgFBn4z.s:53     .text.TIM_prvDmaChannelEventRedirect1:0000000000000000 $t
     /tmp/ccgFBn4z.s:60     .text.TIM_prvDmaChannelEventRedirect1:0000000000000000 TIM_prvDmaChannelEventRedirect1
     /tmp/ccgFBn4z.s:92     .text.TIM_prvDmaChannelEventRedirect2:0000000000000000 $t
     /tmp/ccgFBn4z.s:99     .text.TIM_prvDmaChannelEventRedirect2:0000000000000000 TIM_prvDmaChannelEventRedirect2
     /tmp/ccgFBn4z.s:131    .text.TIM_prvDmaChannelEventRedirect3:0000000000000000 $t
     /tmp/ccgFBn4z.s:138    .text.TIM_prvDmaChannelEventRedirect3:0000000000000000 TIM_prvDmaChannelEventRedirect3
     /tmp/ccgFBn4z.s:170    .text.TIM_prvDmaChannelEventRedirect4:0000000000000000 $t
     /tmp/ccgFBn4z.s:177    .text.TIM_prvDmaChannelEventRedirect4:0000000000000000 TIM_prvDmaChannelEventRedirect4
     /tmp/ccgFBn4z.s:209    .text.TIM_prvDmaTriggerCallbackRedirect:0000000000000000 $t
     /tmp/ccgFBn4z.s:216    .text.TIM_prvDmaTriggerCallbackRedirect:0000000000000000 TIM_prvDmaTriggerCallbackRedirect
     /tmp/ccgFBn4z.s:242    .text.TIM_prvDmaCommutationCallbackRedirect:0000000000000000 $t
     /tmp/ccgFBn4z.s:249    .text.TIM_prvDmaCommutationCallbackRedirect:0000000000000000 TIM_prvDmaCommutationCallbackRedirect
     /tmp/ccgFBn4z.s:275    .text.TIM_vInit:0000000000000000 $t
     /tmp/ccgFBn4z.s:283    .text.TIM_vInit:0000000000000000 TIM_vInit
     /tmp/ccgFBn4z.s:670    .text.TIM_vDeinit:0000000000000000 $t
     /tmp/ccgFBn4z.s:678    .text.TIM_vDeinit:0000000000000000 TIM_vDeinit
     /tmp/ccgFBn4z.s:767    .text.TIM_vIRQHandler:0000000000000000 $t
     /tmp/ccgFBn4z.s:775    .text.TIM_vIRQHandler:0000000000000000 TIM_vIRQHandler
     /tmp/ccgFBn4z.s:1083   .text.TIM_vBurstConfig:0000000000000000 $t
     /tmp/ccgFBn4z.s:1091   .text.TIM_vBurstConfig:0000000000000000 TIM_vBurstConfig
     /tmp/ccgFBn4z.s:1170   .text.TIM_vBurstConfig:0000000000000038 $d
     /tmp/ccgFBn4z.s:1175   .text.TIM_vStart:0000000000000000 $t
     /tmp/ccgFBn4z.s:1183   .text.TIM_vStart:0000000000000000 TIM_vStart
     /tmp/ccgFBn4z.s:1218   .text.TIM_vStop:0000000000000000 $t
     /tmp/ccgFBn4z.s:1226   .text.TIM_vStop:0000000000000000 TIM_vStop
     /tmp/ccgFBn4z.s:1261   .text.TIM_eOpen_DMA:0000000000000000 $t
     /tmp/ccgFBn4z.s:1269   .text.TIM_eOpen_DMA:0000000000000000 TIM_eOpen_DMA
     /tmp/ccgFBn4z.s:1425   .text.TIM_eOpen_DMA:0000000000000060 $d
     /tmp/ccgFBn4z.s:1432   .text.TIM_vClose_DMA:0000000000000000 $t
     /tmp/ccgFBn4z.s:1440   .text.TIM_vClose_DMA:0000000000000000 TIM_vClose_DMA
     /tmp/ccgFBn4z.s:1500   .text.TIM_vCounterInit:0000000000000000 $t
     /tmp/ccgFBn4z.s:1508   .text.TIM_vCounterInit:0000000000000000 TIM_vCounterInit
     /tmp/ccgFBn4z.s:1658   .text.TIM_vCounterStart_IT:0000000000000000 $t
     /tmp/ccgFBn4z.s:1666   .text.TIM_vCounterStart_IT:0000000000000000 TIM_vCounterStart_IT
     /tmp/ccgFBn4z.s:1702   .text.TIM_vCounterStop_IT:0000000000000000 $t
     /tmp/ccgFBn4z.s:1710   .text.TIM_vCounterStop_IT:0000000000000000 TIM_vCounterStop_IT
     /tmp/ccgFBn4z.s:1746   .text.TIM_vIRQHandler_UP:0000000000000000 $t
     /tmp/ccgFBn4z.s:1754   .text.TIM_vIRQHandler_UP:0000000000000000 TIM_vIRQHandler_UP
     /tmp/ccgFBn4z.s:1814   .text.TIM_vIRQHandler_CC:0000000000000000 $t
     /tmp/ccgFBn4z.s:1822   .text.TIM_vIRQHandler_CC:0000000000000000 TIM_vIRQHandler_CC
     /tmp/ccgFBn4z.s:1942   .text.TIM_vDriveConfig:0000000000000000 $t
     /tmp/ccgFBn4z.s:1950   .text.TIM_vDriveConfig:0000000000000000 TIM_vDriveConfig
     /tmp/ccgFBn4z.s:1997   .text.TIM_vDriveConfig:0000000000000020 $d
     /tmp/ccgFBn4z.s:2004   .text.TIM_ucCalcDeadtime:0000000000000000 $t
     /tmp/ccgFBn4z.s:2012   .text.TIM_ucCalcDeadtime:0000000000000000 TIM_ucCalcDeadtime
     /tmp/ccgFBn4z.s:2101   .text.TIM_vIRQHandler_BRK:0000000000000000 $t
     /tmp/ccgFBn4z.s:2109   .text.TIM_vIRQHandler_BRK:0000000000000000 TIM_vIRQHandler_BRK
     /tmp/ccgFBn4z.s:2169   .text.TIM_vOCRefClearConfig:0000000000000000 $t
     /tmp/ccgFBn4z.s:2177   .text.TIM_vOCRefClearConfig:0000000000000000 TIM_vOCRefClearConfig
     /tmp/ccgFBn4z.s:2251   .text.TIM_vCommutationConfig:0000000000000000 $t
     /tmp/ccgFBn4z.s:2259   .text.TIM_vCommutationConfig:0000000000000000 TIM_vCommutationConfig
     /tmp/ccgFBn4z.s:2308   .text.TIM_vCommutationConfig:0000000000000034 $d
     /tmp/ccgFBn4z.s:2313   .text.TIM_vIRQHandler_COM:0000000000000000 $t
ARM GAS  /tmp/ccgFBn4z.s 			page 81


     /tmp/ccgFBn4z.s:2321   .text.TIM_vIRQHandler_COM:0000000000000000 TIM_vIRQHandler_COM
     /tmp/ccgFBn4z.s:2381   .text.TIM_vMasterConfig:0000000000000000 $t
     /tmp/ccgFBn4z.s:2389   .text.TIM_vMasterConfig:0000000000000000 TIM_vMasterConfig
     /tmp/ccgFBn4z.s:2458   .text.TIM_vSlaveConfig:0000000000000000 $t
     /tmp/ccgFBn4z.s:2466   .text.TIM_vSlaveConfig:0000000000000000 TIM_vSlaveConfig
     /tmp/ccgFBn4z.s:2522   .text.TIM_vSlaveConfig:0000000000000028 $d
     /tmp/ccgFBn4z.s:2528   .text.TIM_vIRQHandler_TRG:0000000000000000 $t
     /tmp/ccgFBn4z.s:2536   .text.TIM_vIRQHandler_TRG:0000000000000000 TIM_vIRQHandler_TRG
     /tmp/ccgFBn4z.s:2596   .rodata.TIM_apxDmaRedirects:0000000000000000 $d
     /tmp/ccgFBn4z.s:2600   .rodata.TIM_apxDmaRedirects:0000000000000000 TIM_apxDmaRedirects

UNDEFINED SYMBOLS
RCC_vClockEnable
RCC_vReset
RCC_vClockDisable
DMA_eStart_IT
DMA_vStop_IT
