ARM GAS  /tmp/cclwX1cF.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tiny_printf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ts_itoa,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	ts_itoa
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	ts_itoa:
  28              	.LVL0:
  29              	.LFB3:
  30              		.file 1 "Core/arch/tiny_printf.c"
   1:Core/arch/tiny_printf.c **** /*
   2:Core/arch/tiny_printf.c ****  ******************************************************************************
   3:Core/arch/tiny_printf.c ****  File:     tiny_printf.c
   4:Core/arch/tiny_printf.c ****  Info:     Generated by Atollic TrueSTUDIO 9.0.0   2018-02-24
   5:Core/arch/tiny_printf.c **** 
   6:Core/arch/tiny_printf.c ****  Abstract: Atollic TrueSTUDIO Minimal iprintf/siprintf/fiprintf
   7:Core/arch/tiny_printf.c ****  and puts/fputs.
   8:Core/arch/tiny_printf.c ****  Provides aliased declarations for printf/sprintf/fprintf
   9:Core/arch/tiny_printf.c ****  pointing to *iprintf variants.
  10:Core/arch/tiny_printf.c **** 
  11:Core/arch/tiny_printf.c ****  The argument contains a format string that may include
  12:Core/arch/tiny_printf.c ****  conversion specifications. Each conversion specification
  13:Core/arch/tiny_printf.c ****  is introduced by the character %, and ends with a
  14:Core/arch/tiny_printf.c ****  conversion specifier.
  15:Core/arch/tiny_printf.c **** 
  16:Core/arch/tiny_printf.c ****  The following conversion specifiers are supported
  17:Core/arch/tiny_printf.c ****  cdisuxX%
  18:Core/arch/tiny_printf.c **** 
  19:Core/arch/tiny_printf.c ****  Usage:
  20:Core/arch/tiny_printf.c ****  c    character
  21:Core/arch/tiny_printf.c ****  d,i  signed integer (-sign added, + sign not supported)
  22:Core/arch/tiny_printf.c ****  s    character string
  23:Core/arch/tiny_printf.c ****  u    unsigned integer as decimal
  24:Core/arch/tiny_printf.c ****  x,X  unsigned integer as hexadecimal (uppercase letter)
  25:Core/arch/tiny_printf.c ****  %    % is written (conversion specification is '%%')
  26:Core/arch/tiny_printf.c **** 
  27:Core/arch/tiny_printf.c ****  Note:
  28:Core/arch/tiny_printf.c ****  Character padding is not supported
ARM GAS  /tmp/cclwX1cF.s 			page 2


  29:Core/arch/tiny_printf.c **** 
  30:Core/arch/tiny_printf.c ****  The MIT License (MIT)
  31:Core/arch/tiny_printf.c ****  Copyright (c) 2018 STMicroelectronics
  32:Core/arch/tiny_printf.c **** 
  33:Core/arch/tiny_printf.c ****  Permission is hereby granted, free of charge, to any person obtaining a copy
  34:Core/arch/tiny_printf.c ****  of this software and associated documentation files (the "Software"), to deal
  35:Core/arch/tiny_printf.c ****  in the Software without restriction, including without limitation the rights
  36:Core/arch/tiny_printf.c ****  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  37:Core/arch/tiny_printf.c ****  copies of the Software, and to permit persons to whom the Software is
  38:Core/arch/tiny_printf.c ****  furnished to do so, subject to the following conditions:
  39:Core/arch/tiny_printf.c **** 
  40:Core/arch/tiny_printf.c ****  The above copyright notice and this permission notice shall be included in all
  41:Core/arch/tiny_printf.c ****  copies or substantial portions of the Software.
  42:Core/arch/tiny_printf.c **** 
  43:Core/arch/tiny_printf.c ****  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  44:Core/arch/tiny_printf.c ****  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  45:Core/arch/tiny_printf.c ****  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  46:Core/arch/tiny_printf.c ****  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  47:Core/arch/tiny_printf.c ****  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  48:Core/arch/tiny_printf.c ****  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  49:Core/arch/tiny_printf.c ****  SOFTWARE.
  50:Core/arch/tiny_printf.c **** 
  51:Core/arch/tiny_printf.c ****  ******************************************************************************
  52:Core/arch/tiny_printf.c ****  */
  53:Core/arch/tiny_printf.c **** 
  54:Core/arch/tiny_printf.c **** /* Includes */
  55:Core/arch/tiny_printf.c **** #include <stdarg.h>
  56:Core/arch/tiny_printf.c **** #include <stdio.h>
  57:Core/arch/tiny_printf.c **** #include <string.h>
  58:Core/arch/tiny_printf.c **** 
  59:Core/arch/tiny_printf.c **** /* Create aliases for *printf to integer variants *iprintf */
  60:Core/arch/tiny_printf.c **** __attribute__ ((alias("iprintf"))) int printf(const char *fmt, ...);
  61:Core/arch/tiny_printf.c **** __attribute__ ((alias("fiprintf"))) int fprintf(FILE* fp, const char *fmt, ...);
  62:Core/arch/tiny_printf.c **** __attribute__ ((alias("siprintf"))) int sprintf(char* str, const char *fmt, ...);
  63:Core/arch/tiny_printf.c **** 
  64:Core/arch/tiny_printf.c **** /* External function prototypes (defined in syscalls.c) */
  65:Core/arch/tiny_printf.c **** extern int _write(int fd, char *str, int len);
  66:Core/arch/tiny_printf.c **** 
  67:Core/arch/tiny_printf.c **** /* Private function prototypes */
  68:Core/arch/tiny_printf.c **** void ts_itoa(char **buf, unsigned int d, int base);
  69:Core/arch/tiny_printf.c **** int ts_formatstring(char *buf, const char *fmt, va_list va);
  70:Core/arch/tiny_printf.c **** int ts_formatlength(const char *fmt, va_list va);
  71:Core/arch/tiny_printf.c **** 
  72:Core/arch/tiny_printf.c **** /* Private functions */
  73:Core/arch/tiny_printf.c **** 
  74:Core/arch/tiny_printf.c **** /**
  75:Core/arch/tiny_printf.c ****  **---------------------------------------------------------------------------
  76:Core/arch/tiny_printf.c ****  **  Abstract: Convert integer to ascii
  77:Core/arch/tiny_printf.c ****  **  Returns:  void
  78:Core/arch/tiny_printf.c ****  **---------------------------------------------------------------------------
  79:Core/arch/tiny_printf.c ****  */
  80:Core/arch/tiny_printf.c **** void ts_itoa(char **buf, unsigned int d, int base)
  81:Core/arch/tiny_printf.c **** {
  31              		.loc 1 81 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cclwX1cF.s 			page 3


  35              		@ link register save eliminated.
  82:Core/arch/tiny_printf.c ****     int div = 1;
  36              		.loc 1 82 5 view .LVU1
  83:Core/arch/tiny_printf.c ****     while (d / div >= base)
  37              		.loc 1 83 5 view .LVU2
  38              		.loc 1 83 11 view .LVU3
  39 0000 9142     		cmp	r1, r2
  82:Core/arch/tiny_printf.c ****     int div = 1;
  40              		.loc 1 82 9 is_stmt 0 view .LVU4
  41 0002 4FF00103 		mov	r3, #1
  81:Core/arch/tiny_printf.c ****     int div = 1;
  42              		.loc 1 81 1 view .LVU5
  43 0006 F0B4     		push	{r4, r5, r6, r7}
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 16
  46              		.cfi_offset 4, -16
  47              		.cfi_offset 5, -12
  48              		.cfi_offset 6, -8
  49              		.cfi_offset 7, -4
  50              		.loc 1 83 11 view .LVU6
  51 0008 1FD3     		bcc	.L8
  52              	.LVL1:
  53              	.L3:
  84:Core/arch/tiny_printf.c ****         div *= base;
  54              		.loc 1 84 9 is_stmt 1 view .LVU7
  55              		.loc 1 84 13 is_stmt 0 view .LVU8
  56 000a 02FB03F3 		mul	r3, r2, r3
  57              	.LVL2:
  83:Core/arch/tiny_printf.c ****     while (d / div >= base)
  58              		.loc 1 83 11 is_stmt 1 view .LVU9
  83:Core/arch/tiny_printf.c ****     while (d / div >= base)
  59              		.loc 1 83 14 is_stmt 0 view .LVU10
  60 000e B1FBF3F4 		udiv	r4, r1, r3
  83:Core/arch/tiny_printf.c ****     while (d / div >= base)
  61              		.loc 1 83 11 view .LVU11
  62 0012 9442     		cmp	r4, r2
  63 0014 F9D2     		bcs	.L3
  85:Core/arch/tiny_printf.c **** 
  86:Core/arch/tiny_printf.c ****     while (div != 0)
  64              		.loc 1 86 11 is_stmt 1 view .LVU12
  65 0016 13B9     		cbnz	r3, .L6
  66 0018 15E0     		b	.L1
  67              	.LVL3:
  68              	.L13:
  69              		.loc 1 86 11 is_stmt 0 view .LVU13
  70 001a B1FBF3F4 		udiv	r4, r1, r3
  71              	.LVL4:
  72              	.L6:
  73              	.LBB3:
  87:Core/arch/tiny_printf.c ****     {
  88:Core/arch/tiny_printf.c ****         int num = d / div;
  74              		.loc 1 88 9 is_stmt 1 view .LVU14
  89:Core/arch/tiny_printf.c ****         d = d % div;
  75              		.loc 1 89 9 view .LVU15
  90:Core/arch/tiny_printf.c ****         div /= base;
  91:Core/arch/tiny_printf.c ****         if (num > 9)
  92:Core/arch/tiny_printf.c ****             *((*buf)++) = (num - 10) + 'A';
ARM GAS  /tmp/cclwX1cF.s 			page 4


  76              		.loc 1 92 13 view .LVU16
  93:Core/arch/tiny_printf.c ****         else
  94:Core/arch/tiny_printf.c ****             *((*buf)++) = num + '0';
  77              		.loc 1 94 13 view .LVU17
  78 001e 0668     		ldr	r6, [r0]
  79 0020 E5B2     		uxtb	r5, r4
  89:Core/arch/tiny_printf.c ****         div /= base;
  80              		.loc 1 89 11 is_stmt 0 view .LVU18
  81 0022 03FB1411 		mls	r1, r3, r4, r1
  82              	.LVL5:
  90:Core/arch/tiny_printf.c ****         div /= base;
  83              		.loc 1 90 9 is_stmt 1 view .LVU19
  91:Core/arch/tiny_printf.c ****             *((*buf)++) = (num - 10) + 'A';
  84              		.loc 1 91 12 is_stmt 0 view .LVU20
  85 0026 092C     		cmp	r4, #9
  92:Core/arch/tiny_printf.c ****         else
  86              		.loc 1 92 38 view .LVU21
  87 0028 05F1370C 		add	ip, r5, #55
  88 002c 06F10107 		add	r7, r6, #1
  89              		.loc 1 94 31 view .LVU22
  90 0030 05F13005 		add	r5, r5, #48
  92:Core/arch/tiny_printf.c ****         else
  91              		.loc 1 92 21 view .LVU23
  92 0034 0760     		str	r7, [r0]
  92:Core/arch/tiny_printf.c ****         else
  93              		.loc 1 92 25 view .LVU24
  94 0036 CCBF     		ite	gt
  95 0038 86F800C0 		strbgt	ip, [r6]
  96              		.loc 1 94 25 view .LVU25
  97 003c 3570     		strble	r5, [r6]
  90:Core/arch/tiny_printf.c ****         if (num > 9)
  98              		.loc 1 90 13 view .LVU26
  99 003e 93FBF2F3 		sdiv	r3, r3, r2
 100              	.LVL6:
  91:Core/arch/tiny_printf.c ****             *((*buf)++) = (num - 10) + 'A';
 101              		.loc 1 91 9 is_stmt 1 view .LVU27
  91:Core/arch/tiny_printf.c ****             *((*buf)++) = (num - 10) + 'A';
 102              		.loc 1 91 9 is_stmt 0 view .LVU28
 103              	.LBE3:
  86:Core/arch/tiny_printf.c ****     {
 104              		.loc 1 86 11 is_stmt 1 view .LVU29
 105 0042 002B     		cmp	r3, #0
 106 0044 E9D1     		bne	.L13
 107              	.LVL7:
 108              	.L1:
  95:Core/arch/tiny_printf.c ****     }
  96:Core/arch/tiny_printf.c **** }
 109              		.loc 1 96 1 is_stmt 0 view .LVU30
 110 0046 F0BC     		pop	{r4, r5, r6, r7}
 111              	.LCFI1:
 112              		.cfi_remember_state
 113              		.cfi_restore 7
 114              		.cfi_restore 6
 115              		.cfi_restore 5
 116              		.cfi_restore 4
 117              		.cfi_def_cfa_offset 0
 118 0048 7047     		bx	lr
ARM GAS  /tmp/cclwX1cF.s 			page 5


 119              	.LVL8:
 120              	.L8:
 121              	.LCFI2:
 122              		.cfi_restore_state
 123              		.loc 1 96 1 view .LVU31
 124 004a 0C46     		mov	r4, r1
 125              	.LVL9:
 126              		.loc 1 96 1 view .LVU32
 127 004c E7E7     		b	.L6
 128              		.cfi_endproc
 129              	.LFE3:
 131 004e 00BF     		.section	.text.ts_formatstring,"ax",%progbits
 132              		.align	1
 133              		.p2align 2,,3
 134              		.global	ts_formatstring
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 138              		.fpu fpv4-sp-d16
 140              	ts_formatstring:
 141              	.LVL10:
 142              	.LFB4:
  97:Core/arch/tiny_printf.c **** 
  98:Core/arch/tiny_printf.c **** /**
  99:Core/arch/tiny_printf.c ****  **---------------------------------------------------------------------------
 100:Core/arch/tiny_printf.c ****  **  Abstract: Writes arguments va to buffer buf according to format fmt
 101:Core/arch/tiny_printf.c ****  **  Returns:  Length of string
 102:Core/arch/tiny_printf.c ****  **---------------------------------------------------------------------------
 103:Core/arch/tiny_printf.c ****  */
 104:Core/arch/tiny_printf.c **** int ts_formatstring(char *buf, const char *fmt, va_list va)
 105:Core/arch/tiny_printf.c **** {
 143              		.loc 1 105 1 is_stmt 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 106:Core/arch/tiny_printf.c ****     char *start_buf = buf;
 147              		.loc 1 106 5 view .LVU34
 107:Core/arch/tiny_printf.c ****     while (*fmt)
 148              		.loc 1 107 5 view .LVU35
 149              		.loc 1 107 11 view .LVU36
 105:Core/arch/tiny_printf.c ****     char *start_buf = buf;
 150              		.loc 1 105 1 is_stmt 0 view .LVU37
 151 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 152              	.LCFI3:
 153              		.cfi_def_cfa_offset 24
 154              		.cfi_offset 4, -24
 155              		.cfi_offset 5, -20
 156              		.cfi_offset 6, -16
 157              		.cfi_offset 7, -12
 158              		.cfi_offset 8, -8
 159              		.cfi_offset 14, -4
 160              		.loc 1 107 12 view .LVU38
 161 0004 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 162              		.loc 1 107 11 view .LVU39
 163 0006 0346     		mov	r3, r0
 164 0008 002C     		cmp	r4, #0
 165 000a 00F0B980 		beq	.L44
ARM GAS  /tmp/cclwX1cF.s 			page 6


 166              	.LBB15:
 167              	.LBB16:
 168              	.LBB17:
  90:Core/arch/tiny_printf.c ****         if (num > 9)
 169              		.loc 1 90 13 view .LVU40
 170 000e 604F     		ldr	r7, .L63
 171              	.LBE17:
 172              	.LBE16:
 173              	.LBE15:
 174              	.LBB20:
 108:Core/arch/tiny_printf.c ****     {
 109:Core/arch/tiny_printf.c ****         /* Character needs formating? */
 110:Core/arch/tiny_printf.c ****         if (*fmt == '%')
 111:Core/arch/tiny_printf.c ****         {
 112:Core/arch/tiny_printf.c ****             switch (*(++fmt))
 113:Core/arch/tiny_printf.c ****             {
 114:Core/arch/tiny_printf.c ****                 case 'c':
 115:Core/arch/tiny_printf.c ****                     *buf++ = va_arg(va, int);
 116:Core/arch/tiny_printf.c ****                     break;
 117:Core/arch/tiny_printf.c ****                 case 'd':
 118:Core/arch/tiny_printf.c ****                 case 'i':
 119:Core/arch/tiny_printf.c ****                 {
 120:Core/arch/tiny_printf.c ****                     signed int val = va_arg(va, signed int);
 121:Core/arch/tiny_printf.c ****                     if (val < 0)
 122:Core/arch/tiny_printf.c ****                     {
 123:Core/arch/tiny_printf.c ****                         val *= -1;
 124:Core/arch/tiny_printf.c ****                         *buf++ = '-';
 175              		.loc 1 124 32 view .LVU41
 176 0010 4FF02D0C 		mov	ip, #45
 177 0014 04E0     		b	.L43
 178              	.LVL11:
 179              	.L16:
 180              		.loc 1 124 32 view .LVU42
 181              	.LBE20:
 125:Core/arch/tiny_printf.c ****                     }
 126:Core/arch/tiny_printf.c ****                     ts_itoa(&buf, val, 10);
 127:Core/arch/tiny_printf.c ****                 }
 128:Core/arch/tiny_printf.c ****                     break;
 129:Core/arch/tiny_printf.c ****                 case 's':
 130:Core/arch/tiny_printf.c ****                 {
 131:Core/arch/tiny_printf.c ****                     char * arg = va_arg(va, char *);
 132:Core/arch/tiny_printf.c ****                     while (*arg)
 133:Core/arch/tiny_printf.c ****                     {
 134:Core/arch/tiny_printf.c ****                         *buf++ = *arg++;
 135:Core/arch/tiny_printf.c ****                     }
 136:Core/arch/tiny_printf.c ****                 }
 137:Core/arch/tiny_printf.c ****                     break;
 138:Core/arch/tiny_printf.c ****                 case 'u':
 139:Core/arch/tiny_printf.c ****                     ts_itoa(&buf, va_arg(va, unsigned int), 10);
 140:Core/arch/tiny_printf.c ****                     break;
 141:Core/arch/tiny_printf.c ****                 case 'x':
 142:Core/arch/tiny_printf.c ****                 case 'X':
 143:Core/arch/tiny_printf.c ****                     ts_itoa(&buf, va_arg(va, int), 16);
 144:Core/arch/tiny_printf.c ****                     break;
 145:Core/arch/tiny_printf.c ****                 case '%':
 146:Core/arch/tiny_printf.c ****                     *buf++ = '%';
 147:Core/arch/tiny_printf.c ****                     break;
ARM GAS  /tmp/cclwX1cF.s 			page 7


 148:Core/arch/tiny_printf.c ****             }
 149:Core/arch/tiny_printf.c ****             fmt++;
 150:Core/arch/tiny_printf.c ****         }
 151:Core/arch/tiny_printf.c ****         /* Else just copy */
 152:Core/arch/tiny_printf.c ****         else
 153:Core/arch/tiny_printf.c ****         {
 154:Core/arch/tiny_printf.c ****             *buf++ = *fmt++;
 182              		.loc 1 154 13 is_stmt 1 view .LVU43
 183              		.loc 1 154 26 is_stmt 0 view .LVU44
 184 0016 0131     		adds	r1, r1, #1
 185              	.LVL12:
 186              		.loc 1 154 20 view .LVU45
 187 0018 03F8014B 		strb	r4, [r3], #1
 188              	.LVL13:
 107:Core/arch/tiny_printf.c ****     {
 189              		.loc 1 107 11 is_stmt 1 view .LVU46
 107:Core/arch/tiny_printf.c ****     {
 190              		.loc 1 107 12 is_stmt 0 view .LVU47
 191 001c 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 107:Core/arch/tiny_printf.c ****     {
 192              		.loc 1 107 11 view .LVU48
 193 001e 34B3     		cbz	r4, .L60
 194              	.L43:
 110:Core/arch/tiny_printf.c ****         {
 195              		.loc 1 110 9 is_stmt 1 view .LVU49
 110:Core/arch/tiny_printf.c ****         {
 196              		.loc 1 110 12 is_stmt 0 view .LVU50
 197 0020 252C     		cmp	r4, #37
 198 0022 F8D1     		bne	.L16
 112:Core/arch/tiny_printf.c ****             {
 199              		.loc 1 112 13 is_stmt 1 view .LVU51
 200              	.LVL14:
 112:Core/arch/tiny_printf.c ****             {
 201              		.loc 1 112 21 is_stmt 0 view .LVU52
 202 0024 4D78     		ldrb	r5, [r1, #1]	@ zero_extendqisi2
 112:Core/arch/tiny_printf.c ****             {
 203              		.loc 1 112 13 view .LVU53
 204 0026 252D     		cmp	r5, #37
 205 0028 00F0A680 		beq	.L17
 206 002c 583D     		subs	r5, r5, #88
 207 002e ECB2     		uxtb	r4, r5
 208 0030 202C     		cmp	r4, #32
 209 0032 18D8     		bhi	.L18
 210 0034 202D     		cmp	r5, #32
 211 0036 16D8     		bhi	.L18
 212 0038 DFE805F0 		tbb	[pc, r5]
 213              	.L20:
 214 003c 7B       		.byte	(.L19-.L20)/2
 215 003d 15       		.byte	(.L18-.L20)/2
 216 003e 15       		.byte	(.L18-.L20)/2
 217 003f 15       		.byte	(.L18-.L20)/2
 218 0040 15       		.byte	(.L18-.L20)/2
 219 0041 15       		.byte	(.L18-.L20)/2
 220 0042 15       		.byte	(.L18-.L20)/2
 221 0043 15       		.byte	(.L18-.L20)/2
 222 0044 15       		.byte	(.L18-.L20)/2
 223 0045 15       		.byte	(.L18-.L20)/2
ARM GAS  /tmp/cclwX1cF.s 			page 8


 224 0046 15       		.byte	(.L18-.L20)/2
 225 0047 11       		.byte	(.L24-.L20)/2
 226 0048 51       		.byte	(.L23-.L20)/2
 227 0049 15       		.byte	(.L18-.L20)/2
 228 004a 15       		.byte	(.L18-.L20)/2
 229 004b 15       		.byte	(.L18-.L20)/2
 230 004c 15       		.byte	(.L18-.L20)/2
 231 004d 51       		.byte	(.L23-.L20)/2
 232 004e 15       		.byte	(.L18-.L20)/2
 233 004f 15       		.byte	(.L18-.L20)/2
 234 0050 15       		.byte	(.L18-.L20)/2
 235 0051 15       		.byte	(.L18-.L20)/2
 236 0052 15       		.byte	(.L18-.L20)/2
 237 0053 15       		.byte	(.L18-.L20)/2
 238 0054 15       		.byte	(.L18-.L20)/2
 239 0055 15       		.byte	(.L18-.L20)/2
 240 0056 15       		.byte	(.L18-.L20)/2
 241 0057 44       		.byte	(.L22-.L20)/2
 242 0058 15       		.byte	(.L18-.L20)/2
 243 0059 1E       		.byte	(.L21-.L20)/2
 244 005a 15       		.byte	(.L18-.L20)/2
 245 005b 15       		.byte	(.L18-.L20)/2
 246 005c 7B       		.byte	(.L19-.L20)/2
 247 005d 00       		.p2align 1
 248              	.L24:
 115:Core/arch/tiny_printf.c ****                     break;
 249              		.loc 1 115 21 is_stmt 1 view .LVU54
 250              	.LVL15:
 115:Core/arch/tiny_printf.c ****                     break;
 251              		.loc 1 115 28 is_stmt 0 view .LVU55
 252 005e 52F8044B 		ldr	r4, [r2], #4
 253              	.LVL16:
 115:Core/arch/tiny_printf.c ****                     break;
 254              		.loc 1 115 28 view .LVU56
 255 0062 03F8014B 		strb	r4, [r3], #1
 256              	.LVL17:
 116:Core/arch/tiny_printf.c ****                 case 'd':
 257              		.loc 1 116 21 is_stmt 1 view .LVU57
 258              	.L18:
 149:Core/arch/tiny_printf.c ****         }
 259              		.loc 1 149 13 view .LVU58
 149:Core/arch/tiny_printf.c ****         }
 260              		.loc 1 149 16 is_stmt 0 view .LVU59
 261 0066 0231     		adds	r1, r1, #2
 262              	.LVL18:
 263              	.L61:
 107:Core/arch/tiny_printf.c ****     {
 264              		.loc 1 107 11 is_stmt 1 view .LVU60
 107:Core/arch/tiny_printf.c ****     {
 265              		.loc 1 107 12 is_stmt 0 view .LVU61
 266 0068 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 107:Core/arch/tiny_printf.c ****     {
 267              		.loc 1 107 11 view .LVU62
 268 006a 002C     		cmp	r4, #0
 269 006c D8D1     		bne	.L43
 270              	.L60:
 155:Core/arch/tiny_printf.c ****         }
ARM GAS  /tmp/cclwX1cF.s 			page 9


 156:Core/arch/tiny_printf.c ****     }
 157:Core/arch/tiny_printf.c ****     *buf = 0;
 271              		.loc 1 157 10 view .LVU63
 272 006e 0022     		movs	r2, #0
 273              	.LVL19:
 274              		.loc 1 157 10 view .LVU64
 275 0070 181A     		subs	r0, r3, r0
 276              	.LVL20:
 277              		.loc 1 157 5 is_stmt 1 view .LVU65
 278              		.loc 1 157 10 is_stmt 0 view .LVU66
 279 0072 1A70     		strb	r2, [r3]
 158:Core/arch/tiny_printf.c **** 
 159:Core/arch/tiny_printf.c ****     return (int) (buf - start_buf);
 280              		.loc 1 159 5 is_stmt 1 view .LVU67
 160:Core/arch/tiny_printf.c **** }
 281              		.loc 1 160 1 is_stmt 0 view .LVU68
 282 0074 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 283              	.LVL21:
 284              	.L21:
 139:Core/arch/tiny_printf.c ****                     break;
 285              		.loc 1 139 21 is_stmt 1 view .LVU69
 139:Core/arch/tiny_printf.c ****                     break;
 286              		.loc 1 139 21 is_stmt 0 view .LVU70
 287 0078 52F8046B 		ldr	r6, [r2], #4
 288              	.LVL22:
 289              	.LBB26:
 290              	.LBI15:
  80:Core/arch/tiny_printf.c **** {
 291              		.loc 1 80 6 is_stmt 1 view .LVU71
 292              	.LBB19:
  83:Core/arch/tiny_printf.c ****         div *= base;
 293              		.loc 1 83 11 view .LVU72
  82:Core/arch/tiny_printf.c ****     while (d / div >= base)
 294              		.loc 1 82 9 is_stmt 0 view .LVU73
 295 007c 0124     		movs	r4, #1
  83:Core/arch/tiny_printf.c ****         div *= base;
 296              		.loc 1 83 11 view .LVU74
 297 007e 092E     		cmp	r6, #9
 298 0080 06D9     		bls	.L36
 299              	.LVL23:
 300              	.L33:
  84:Core/arch/tiny_printf.c **** 
 301              		.loc 1 84 9 is_stmt 1 view .LVU75
  84:Core/arch/tiny_printf.c **** 
 302              		.loc 1 84 13 is_stmt 0 view .LVU76
 303 0082 04EB8404 		add	r4, r4, r4, lsl #2
 304              	.LVL24:
  84:Core/arch/tiny_printf.c **** 
 305              		.loc 1 84 13 view .LVU77
 306 0086 6400     		lsls	r4, r4, #1
 307              	.LVL25:
  83:Core/arch/tiny_printf.c ****         div *= base;
 308              		.loc 1 83 11 is_stmt 1 view .LVU78
  83:Core/arch/tiny_printf.c ****         div *= base;
 309              		.loc 1 83 14 is_stmt 0 view .LVU79
 310 0088 B6FBF4F5 		udiv	r5, r6, r4
  83:Core/arch/tiny_printf.c ****         div *= base;
ARM GAS  /tmp/cclwX1cF.s 			page 10


 311              		.loc 1 83 11 view .LVU80
 312 008c 092D     		cmp	r5, #9
 313 008e F8D8     		bhi	.L33
 314              	.LVL26:
 315              	.L36:
 316              	.LBB18:
  88:Core/arch/tiny_printf.c ****         d = d % div;
 317              		.loc 1 88 9 is_stmt 1 view .LVU81
  92:Core/arch/tiny_printf.c ****         else
 318              		.loc 1 92 13 view .LVU82
  94:Core/arch/tiny_printf.c ****     }
 319              		.loc 1 94 13 view .LVU83
  90:Core/arch/tiny_printf.c ****         if (num > 9)
 320              		.loc 1 90 13 is_stmt 0 view .LVU84
 321 0090 A7FB0458 		umull	r5, r8, r7, r4
 322 0094 0133     		adds	r3, r3, #1
 323              	.LVL27:
  88:Core/arch/tiny_printf.c ****         d = d % div;
 324              		.loc 1 88 21 view .LVU85
 325 0096 B6FBF4FE 		udiv	lr, r6, r4
 326              	.LVL28:
  89:Core/arch/tiny_printf.c ****         div /= base;
 327              		.loc 1 89 9 is_stmt 1 view .LVU86
  89:Core/arch/tiny_printf.c ****         div /= base;
 328              		.loc 1 89 9 is_stmt 0 view .LVU87
 329 009a 5FFA8EF5 		uxtb	r5, lr
  91:Core/arch/tiny_printf.c ****             *((*buf)++) = (num - 10) + 'A';
 330              		.loc 1 91 12 view .LVU88
 331 009e BEF1090F 		cmp	lr, #9
  89:Core/arch/tiny_printf.c ****         div /= base;
 332              		.loc 1 89 11 view .LVU89
 333 00a2 04FB1E66 		mls	r6, r4, lr, r6
 334              	.LVL29:
  90:Core/arch/tiny_printf.c ****         if (num > 9)
 335              		.loc 1 90 9 is_stmt 1 view .LVU90
  90:Core/arch/tiny_printf.c ****         if (num > 9)
 336              		.loc 1 90 13 is_stmt 0 view .LVU91
 337 00a6 4FEAD804 		lsr	r4, r8, #3
 338              	.LVL30:
  91:Core/arch/tiny_printf.c ****             *((*buf)++) = (num - 10) + 'A';
 339              		.loc 1 91 9 is_stmt 1 view .LVU92
  94:Core/arch/tiny_printf.c ****     }
 340              		.loc 1 94 31 is_stmt 0 view .LVU93
 341 00aa 05F1300E 		add	lr, r5, #48
 342              	.LVL31:
  92:Core/arch/tiny_printf.c ****         else
 343              		.loc 1 92 38 view .LVU94
 344 00ae 05F13705 		add	r5, r5, #55
  94:Core/arch/tiny_printf.c ****     }
 345              		.loc 1 94 31 view .LVU95
 346 00b2 D4BF     		ite	le
 347 00b4 5FFA8EF5 		uxtble	r5, lr
  92:Core/arch/tiny_printf.c ****         else
 348              		.loc 1 92 38 view .LVU96
 349 00b8 EDB2     		uxtbgt	r5, r5
 350 00ba 03F8015C 		strb	r5, [r3, #-1]
 351              	.LVL32:
ARM GAS  /tmp/cclwX1cF.s 			page 11


  92:Core/arch/tiny_printf.c ****         else
 352              		.loc 1 92 38 view .LVU97
 353              	.LBE18:
  86:Core/arch/tiny_printf.c ****     {
 354              		.loc 1 86 11 is_stmt 1 view .LVU98
 355 00be 002C     		cmp	r4, #0
 356 00c0 E6D1     		bne	.L36
 357 00c2 D0E7     		b	.L18
 358              	.LVL33:
 359              	.L22:
  86:Core/arch/tiny_printf.c ****     {
 360              		.loc 1 86 11 is_stmt 0 view .LVU99
 361              	.LBE19:
 362              	.LBE26:
 363              	.LBB27:
 131:Core/arch/tiny_printf.c ****                     while (*arg)
 364              		.loc 1 131 21 is_stmt 1 view .LVU100
 131:Core/arch/tiny_printf.c ****                     while (*arg)
 365              		.loc 1 131 28 is_stmt 0 view .LVU101
 366 00c4 52F8045B 		ldr	r5, [r2], #4
 367              	.LVL34:
 132:Core/arch/tiny_printf.c ****                     {
 368              		.loc 1 132 21 is_stmt 1 view .LVU102
 132:Core/arch/tiny_printf.c ****                     {
 369              		.loc 1 132 27 view .LVU103
 132:Core/arch/tiny_printf.c ****                     {
 370              		.loc 1 132 28 is_stmt 0 view .LVU104
 371 00c8 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 132:Core/arch/tiny_printf.c ****                     {
 372              		.loc 1 132 27 view .LVU105
 373 00ca 002C     		cmp	r4, #0
 374 00cc CBD0     		beq	.L18
 375              	.LVL35:
 376              	.L31:
 134:Core/arch/tiny_printf.c ****                     }
 377              		.loc 1 134 25 is_stmt 1 view .LVU106
 134:Core/arch/tiny_printf.c ****                     }
 378              		.loc 1 134 32 is_stmt 0 view .LVU107
 379 00ce 03F8014B 		strb	r4, [r3], #1
 380              	.LVL36:
 132:Core/arch/tiny_printf.c ****                     {
 381              		.loc 1 132 27 is_stmt 1 view .LVU108
 132:Core/arch/tiny_printf.c ****                     {
 382              		.loc 1 132 28 is_stmt 0 view .LVU109
 383 00d2 15F8014F 		ldrb	r4, [r5, #1]!	@ zero_extendqisi2
 132:Core/arch/tiny_printf.c ****                     {
 384              		.loc 1 132 27 view .LVU110
 385 00d6 002C     		cmp	r4, #0
 386 00d8 F9D1     		bne	.L31
 132:Core/arch/tiny_printf.c ****                     {
 387              		.loc 1 132 27 view .LVU111
 388              	.LBE27:
 149:Core/arch/tiny_printf.c ****         }
 389              		.loc 1 149 13 is_stmt 1 view .LVU112
 149:Core/arch/tiny_printf.c ****         }
 390              		.loc 1 149 16 is_stmt 0 view .LVU113
 391 00da 0231     		adds	r1, r1, #2
ARM GAS  /tmp/cclwX1cF.s 			page 12


 392              	.LVL37:
 149:Core/arch/tiny_printf.c ****         }
 393              		.loc 1 149 16 view .LVU114
 394 00dc C4E7     		b	.L61
 395              	.LVL38:
 396              	.L23:
 397              	.LBB28:
 120:Core/arch/tiny_printf.c ****                     if (val < 0)
 398              		.loc 1 120 21 is_stmt 1 view .LVU115
 120:Core/arch/tiny_printf.c ****                     if (val < 0)
 399              		.loc 1 120 32 is_stmt 0 view .LVU116
 400 00de 52F8046B 		ldr	r6, [r2], #4
 401              	.LVL39:
 121:Core/arch/tiny_printf.c ****                     {
 402              		.loc 1 121 21 is_stmt 1 view .LVU117
 121:Core/arch/tiny_printf.c ****                     {
 403              		.loc 1 121 24 is_stmt 0 view .LVU118
 404 00e2 002E     		cmp	r6, #0
 405 00e4 02DA     		bge	.L25
 123:Core/arch/tiny_printf.c ****                         *buf++ = '-';
 406              		.loc 1 123 25 is_stmt 1 view .LVU119
 123:Core/arch/tiny_printf.c ****                         *buf++ = '-';
 407              		.loc 1 123 29 is_stmt 0 view .LVU120
 408 00e6 7642     		rsbs	r6, r6, #0
 409              	.LVL40:
 124:Core/arch/tiny_printf.c ****                     }
 410              		.loc 1 124 25 is_stmt 1 view .LVU121
 124:Core/arch/tiny_printf.c ****                     }
 411              		.loc 1 124 32 is_stmt 0 view .LVU122
 412 00e8 03F801CB 		strb	ip, [r3], #1
 413              	.LVL41:
 414              	.L25:
 126:Core/arch/tiny_printf.c ****                 }
 415              		.loc 1 126 21 is_stmt 1 view .LVU123
 416              	.LBB21:
 417              	.LBB22:
  83:Core/arch/tiny_printf.c ****         div *= base;
 418              		.loc 1 83 11 is_stmt 0 view .LVU124
 419 00ec 092E     		cmp	r6, #9
 420              	.LBE22:
 421              	.LBE21:
 126:Core/arch/tiny_printf.c ****                 }
 422              		.loc 1 126 21 view .LVU125
 423 00ee B646     		mov	lr, r6
 424              	.LVL42:
 425              	.LBB25:
 426              	.LBI21:
  80:Core/arch/tiny_printf.c **** {
 427              		.loc 1 80 6 is_stmt 1 view .LVU126
 428              	.LBB24:
  83:Core/arch/tiny_printf.c ****         div *= base;
 429              		.loc 1 83 11 view .LVU127
  82:Core/arch/tiny_printf.c ****     while (d / div >= base)
 430              		.loc 1 82 9 is_stmt 0 view .LVU128
 431 00f0 4FF00104 		mov	r4, #1
  83:Core/arch/tiny_printf.c ****         div *= base;
 432              		.loc 1 83 11 view .LVU129
ARM GAS  /tmp/cclwX1cF.s 			page 13


 433 00f4 06DD     		ble	.L30
 434              	.LVL43:
 435              	.L27:
  84:Core/arch/tiny_printf.c **** 
 436              		.loc 1 84 9 is_stmt 1 view .LVU130
  84:Core/arch/tiny_printf.c **** 
 437              		.loc 1 84 13 is_stmt 0 view .LVU131
 438 00f6 04EB8404 		add	r4, r4, r4, lsl #2
 439              	.LVL44:
  84:Core/arch/tiny_printf.c **** 
 440              		.loc 1 84 13 view .LVU132
 441 00fa 6400     		lsls	r4, r4, #1
 442              	.LVL45:
  83:Core/arch/tiny_printf.c ****         div *= base;
 443              		.loc 1 83 11 is_stmt 1 view .LVU133
  83:Core/arch/tiny_printf.c ****         div *= base;
 444              		.loc 1 83 14 is_stmt 0 view .LVU134
 445 00fc B6FBF4F5 		udiv	r5, r6, r4
  83:Core/arch/tiny_printf.c ****         div *= base;
 446              		.loc 1 83 11 view .LVU135
 447 0100 092D     		cmp	r5, #9
 448 0102 F8D8     		bhi	.L27
 449              	.LVL46:
 450              	.L30:
 451              	.LBB23:
  88:Core/arch/tiny_printf.c ****         d = d % div;
 452              		.loc 1 88 9 is_stmt 1 view .LVU136
  92:Core/arch/tiny_printf.c ****         else
 453              		.loc 1 92 13 view .LVU137
  90:Core/arch/tiny_printf.c ****         if (num > 9)
 454              		.loc 1 90 13 is_stmt 0 view .LVU138
 455 0104 A7FB0458 		umull	r5, r8, r7, r4
 456 0108 0133     		adds	r3, r3, #1
 457              	.LVL47:
  88:Core/arch/tiny_printf.c ****         d = d % div;
 458              		.loc 1 88 21 view .LVU139
 459 010a BEFBF4F6 		udiv	r6, lr, r4
 460              	.LVL48:
  89:Core/arch/tiny_printf.c ****         div /= base;
 461              		.loc 1 89 9 is_stmt 1 view .LVU140
  89:Core/arch/tiny_printf.c ****         div /= base;
 462              		.loc 1 89 9 is_stmt 0 view .LVU141
 463 010e F5B2     		uxtb	r5, r6
  91:Core/arch/tiny_printf.c ****             *((*buf)++) = (num - 10) + 'A';
 464              		.loc 1 91 12 view .LVU142
 465 0110 092E     		cmp	r6, #9
  89:Core/arch/tiny_printf.c ****         div /= base;
 466              		.loc 1 89 11 view .LVU143
 467 0112 04FB16EE 		mls	lr, r4, r6, lr
 468              	.LVL49:
  90:Core/arch/tiny_printf.c ****         if (num > 9)
 469              		.loc 1 90 9 is_stmt 1 view .LVU144
  90:Core/arch/tiny_printf.c ****         if (num > 9)
 470              		.loc 1 90 13 is_stmt 0 view .LVU145
 471 0116 4FEAD804 		lsr	r4, r8, #3
 472              	.LVL50:
  91:Core/arch/tiny_printf.c ****             *((*buf)++) = (num - 10) + 'A';
ARM GAS  /tmp/cclwX1cF.s 			page 14


 473              		.loc 1 91 9 is_stmt 1 view .LVU146
  94:Core/arch/tiny_printf.c ****     }
 474              		.loc 1 94 13 view .LVU147
  94:Core/arch/tiny_printf.c ****     }
 475              		.loc 1 94 31 is_stmt 0 view .LVU148
 476 011a 05F13006 		add	r6, r5, #48
 477              	.LVL51:
  92:Core/arch/tiny_printf.c ****         else
 478              		.loc 1 92 38 view .LVU149
 479 011e 05F13705 		add	r5, r5, #55
  94:Core/arch/tiny_printf.c ****     }
 480              		.loc 1 94 31 view .LVU150
 481 0122 94BF     		ite	ls
 482 0124 F5B2     		uxtbls	r5, r6
  92:Core/arch/tiny_printf.c ****         else
 483              		.loc 1 92 38 view .LVU151
 484 0126 EDB2     		uxtbhi	r5, r5
 485 0128 03F8015C 		strb	r5, [r3, #-1]
 486              	.LVL52:
  92:Core/arch/tiny_printf.c ****         else
 487              		.loc 1 92 38 view .LVU152
 488              	.LBE23:
  86:Core/arch/tiny_printf.c ****     {
 489              		.loc 1 86 11 is_stmt 1 view .LVU153
 490 012c 002C     		cmp	r4, #0
 491 012e E9D1     		bne	.L30
 492 0130 99E7     		b	.L18
 493              	.LVL53:
 494              	.L19:
  86:Core/arch/tiny_printf.c ****     {
 495              		.loc 1 86 11 is_stmt 0 view .LVU154
 496              	.LBE24:
 497              	.LBE25:
 498              	.LBE28:
 143:Core/arch/tiny_printf.c ****                     break;
 499              		.loc 1 143 21 is_stmt 1 view .LVU155
 143:Core/arch/tiny_printf.c ****                     break;
 500              		.loc 1 143 21 is_stmt 0 view .LVU156
 501 0132 52F804EB 		ldr	lr, [r2], #4
 502              	.LVL54:
 503              	.LBB29:
 504              	.LBI29:
  80:Core/arch/tiny_printf.c **** {
 505              		.loc 1 80 6 is_stmt 1 view .LVU157
 506              	.LBB30:
  83:Core/arch/tiny_printf.c ****         div *= base;
 507              		.loc 1 83 11 view .LVU158
  82:Core/arch/tiny_printf.c ****     while (d / div >= base)
 508              		.loc 1 82 9 is_stmt 0 view .LVU159
 509 0136 0125     		movs	r5, #1
  83:Core/arch/tiny_printf.c ****         div *= base;
 510              		.loc 1 83 11 view .LVU160
 511 0138 BEF10F0F 		cmp	lr, #15
 512 013c 25D9     		bls	.L48
 513              	.LVL55:
 514              	.L38:
  84:Core/arch/tiny_printf.c **** 
ARM GAS  /tmp/cclwX1cF.s 			page 15


 515              		.loc 1 84 9 is_stmt 1 view .LVU161
  84:Core/arch/tiny_printf.c **** 
 516              		.loc 1 84 13 is_stmt 0 view .LVU162
 517 013e 2D01     		lsls	r5, r5, #4
 518              	.LVL56:
  83:Core/arch/tiny_printf.c ****         div *= base;
 519              		.loc 1 83 11 is_stmt 1 view .LVU163
  83:Core/arch/tiny_printf.c ****         div *= base;
 520              		.loc 1 83 14 is_stmt 0 view .LVU164
 521 0140 BEFBF5F6 		udiv	r6, lr, r5
  83:Core/arch/tiny_printf.c ****         div *= base;
 522              		.loc 1 83 11 view .LVU165
 523 0144 0F2E     		cmp	r6, #15
 524 0146 FAD8     		bhi	.L38
 525 0148 01E0     		b	.L41
 526              	.LVL57:
 527              	.L62:
  83:Core/arch/tiny_printf.c ****         div *= base;
 528              		.loc 1 83 11 view .LVU166
 529 014a BEFBF5F6 		udiv	r6, lr, r5
 530              	.LVL58:
 531              	.L41:
 532              	.LBB31:
  88:Core/arch/tiny_printf.c ****         d = d % div;
 533              		.loc 1 88 9 is_stmt 1 view .LVU167
  89:Core/arch/tiny_printf.c ****         div /= base;
 534              		.loc 1 89 9 view .LVU168
  92:Core/arch/tiny_printf.c ****         else
 535              		.loc 1 92 13 view .LVU169
  94:Core/arch/tiny_printf.c ****     }
 536              		.loc 1 94 13 view .LVU170
 537 014e F4B2     		uxtb	r4, r6
  91:Core/arch/tiny_printf.c ****             *((*buf)++) = (num - 10) + 'A';
 538              		.loc 1 91 12 is_stmt 0 view .LVU171
 539 0150 092E     		cmp	r6, #9
  89:Core/arch/tiny_printf.c ****         div /= base;
 540              		.loc 1 89 11 view .LVU172
 541 0152 05FB16EE 		mls	lr, r5, r6, lr
 542              	.LVL59:
  90:Core/arch/tiny_printf.c ****         if (num > 9)
 543              		.loc 1 90 9 is_stmt 1 view .LVU173
 544 0156 03F10103 		add	r3, r3, #1
 545              	.LVL60:
  94:Core/arch/tiny_printf.c ****     }
 546              		.loc 1 94 31 is_stmt 0 view .LVU174
 547 015a 04F13006 		add	r6, r4, #48
 548              	.LVL61:
  92:Core/arch/tiny_printf.c ****         else
 549              		.loc 1 92 38 view .LVU175
 550 015e 04F13704 		add	r4, r4, #55
  90:Core/arch/tiny_printf.c ****         if (num > 9)
 551              		.loc 1 90 13 view .LVU176
 552 0162 4FEA2515 		asr	r5, r5, #4
 553              	.LVL62:
  91:Core/arch/tiny_printf.c ****             *((*buf)++) = (num - 10) + 'A';
 554              		.loc 1 91 9 is_stmt 1 view .LVU177
  92:Core/arch/tiny_printf.c ****         else
ARM GAS  /tmp/cclwX1cF.s 			page 16


 555              		.loc 1 92 38 is_stmt 0 view .LVU178
 556 0166 CCBF     		ite	gt
 557 0168 E4B2     		uxtbgt	r4, r4
  94:Core/arch/tiny_printf.c ****     }
 558              		.loc 1 94 31 view .LVU179
 559 016a F4B2     		uxtble	r4, r6
 560 016c 03F8014C 		strb	r4, [r3, #-1]
 561              	.LVL63:
  94:Core/arch/tiny_printf.c ****     }
 562              		.loc 1 94 31 view .LVU180
 563              	.LBE31:
  86:Core/arch/tiny_printf.c ****     {
 564              		.loc 1 86 11 is_stmt 1 view .LVU181
 565 0170 002D     		cmp	r5, #0
 566 0172 EAD1     		bne	.L62
 567              	.LVL64:
  86:Core/arch/tiny_printf.c ****     {
 568              		.loc 1 86 11 is_stmt 0 view .LVU182
 569              	.LBE30:
 570              	.LBE29:
 149:Core/arch/tiny_printf.c ****         }
 571              		.loc 1 149 13 is_stmt 1 view .LVU183
 149:Core/arch/tiny_printf.c ****         }
 572              		.loc 1 149 16 is_stmt 0 view .LVU184
 573 0174 0231     		adds	r1, r1, #2
 574              	.LVL65:
 149:Core/arch/tiny_printf.c ****         }
 575              		.loc 1 149 16 view .LVU185
 576 0176 77E7     		b	.L61
 577              	.LVL66:
 578              	.L17:
 146:Core/arch/tiny_printf.c ****                     break;
 579              		.loc 1 146 21 is_stmt 1 view .LVU186
 149:Core/arch/tiny_printf.c ****         }
 580              		.loc 1 149 16 is_stmt 0 view .LVU187
 581 0178 0231     		adds	r1, r1, #2
 582              	.LVL67:
 146:Core/arch/tiny_printf.c ****                     break;
 583              		.loc 1 146 28 view .LVU188
 584 017a 03F8014B 		strb	r4, [r3], #1
 585              	.LVL68:
 147:Core/arch/tiny_printf.c ****             }
 586              		.loc 1 147 21 is_stmt 1 view .LVU189
 149:Core/arch/tiny_printf.c ****         }
 587              		.loc 1 149 13 view .LVU190
 149:Core/arch/tiny_printf.c ****         }
 588              		.loc 1 149 13 is_stmt 0 view .LVU191
 589 017e 73E7     		b	.L61
 590              	.LVL69:
 591              	.L44:
 157:Core/arch/tiny_printf.c **** 
 592              		.loc 1 157 10 view .LVU192
 593 0180 0022     		movs	r2, #0
 594              	.LVL70:
 107:Core/arch/tiny_printf.c ****     {
 595              		.loc 1 107 11 view .LVU193
 596 0182 2046     		mov	r0, r4
ARM GAS  /tmp/cclwX1cF.s 			page 17


 597              	.LVL71:
 157:Core/arch/tiny_printf.c **** 
 598              		.loc 1 157 5 is_stmt 1 view .LVU194
 157:Core/arch/tiny_printf.c **** 
 599              		.loc 1 157 10 is_stmt 0 view .LVU195
 600 0184 1A70     		strb	r2, [r3]
 159:Core/arch/tiny_printf.c **** }
 601              		.loc 1 159 5 is_stmt 1 view .LVU196
 602              		.loc 1 160 1 is_stmt 0 view .LVU197
 603 0186 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 604              	.LVL72:
 605              	.L48:
 606              		.loc 1 160 1 view .LVU198
 607 018a 7646     		mov	r6, lr
 608 018c DFE7     		b	.L41
 609              	.L64:
 610 018e 00BF     		.align	2
 611              	.L63:
 612 0190 CDCCCCCC 		.word	-858993459
 613              		.cfi_endproc
 614              	.LFE4:
 616              		.section	.text.ts_formatlength,"ax",%progbits
 617              		.align	1
 618              		.p2align 2,,3
 619              		.global	ts_formatlength
 620              		.syntax unified
 621              		.thumb
 622              		.thumb_func
 623              		.fpu fpv4-sp-d16
 625              	ts_formatlength:
 626              	.LVL73:
 627              	.LFB5:
 161:Core/arch/tiny_printf.c **** 
 162:Core/arch/tiny_printf.c **** /**
 163:Core/arch/tiny_printf.c ****  **---------------------------------------------------------------------------
 164:Core/arch/tiny_printf.c ****  **  Abstract: Calculate maximum length of the resulting string from the
 165:Core/arch/tiny_printf.c ****  **            format string and va_list va
 166:Core/arch/tiny_printf.c ****  **  Returns:  Maximum length
 167:Core/arch/tiny_printf.c ****  **---------------------------------------------------------------------------
 168:Core/arch/tiny_printf.c ****  */
 169:Core/arch/tiny_printf.c **** int ts_formatlength(const char *fmt, va_list va)
 170:Core/arch/tiny_printf.c **** {
 628              		.loc 1 170 1 is_stmt 1 view -0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 171:Core/arch/tiny_printf.c ****     int length = 0;
 633              		.loc 1 171 5 view .LVU200
 172:Core/arch/tiny_printf.c ****     while (*fmt)
 634              		.loc 1 172 5 view .LVU201
 635              		.loc 1 172 11 view .LVU202
 170:Core/arch/tiny_printf.c ****     int length = 0;
 636              		.loc 1 170 1 is_stmt 0 view .LVU203
 637 0000 70B4     		push	{r4, r5, r6}
 638              	.LCFI4:
 639              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cclwX1cF.s 			page 18


 640              		.cfi_offset 4, -12
 641              		.cfi_offset 5, -8
 642              		.cfi_offset 6, -4
 643              		.loc 1 172 12 view .LVU204
 644 0002 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 645              		.loc 1 172 11 view .LVU205
 646 0004 002A     		cmp	r2, #0
 647 0006 50D0     		beq	.L77
 171:Core/arch/tiny_printf.c ****     int length = 0;
 648              		.loc 1 171 9 view .LVU206
 649 0008 0025     		movs	r5, #0
 650              	.LVL74:
 651              	.L76:
 173:Core/arch/tiny_printf.c ****     {
 174:Core/arch/tiny_printf.c ****         if (*fmt == '%')
 652              		.loc 1 174 9 is_stmt 1 view .LVU207
 653 000a 0346     		mov	r3, r0
 654              		.loc 1 174 12 is_stmt 0 view .LVU208
 655 000c 252A     		cmp	r2, #37
 656 000e 13F8014F 		ldrb	r4, [r3, #1]!	@ zero_extendqisi2
 657 0012 07D0     		beq	.L84
 175:Core/arch/tiny_printf.c ****         {
 176:Core/arch/tiny_printf.c ****             ++fmt;
 177:Core/arch/tiny_printf.c ****             switch (*fmt)
 178:Core/arch/tiny_printf.c ****             {
 179:Core/arch/tiny_printf.c ****                 case 'c':
 180:Core/arch/tiny_printf.c ****                     va_arg(va, int);
 181:Core/arch/tiny_printf.c ****                     ++length;
 182:Core/arch/tiny_printf.c ****                     break;
 183:Core/arch/tiny_printf.c ****                 case 'd':
 184:Core/arch/tiny_printf.c ****                 case 'i':
 185:Core/arch/tiny_printf.c ****                 case 'u':
 186:Core/arch/tiny_printf.c ****                     /* 32 bits integer is max 11 characters with minus sign */
 187:Core/arch/tiny_printf.c ****                     length += 11;
 188:Core/arch/tiny_printf.c ****                     va_arg(va, int);
 189:Core/arch/tiny_printf.c ****                     break;
 190:Core/arch/tiny_printf.c ****                 case 's':
 191:Core/arch/tiny_printf.c ****                 {
 192:Core/arch/tiny_printf.c ****                     char * str = va_arg(va, char *);
 193:Core/arch/tiny_printf.c ****                     while (*str++)
 194:Core/arch/tiny_printf.c ****                         ++length;
 195:Core/arch/tiny_printf.c ****                 }
 196:Core/arch/tiny_printf.c ****                     break;
 197:Core/arch/tiny_printf.c ****                 case 'x':
 198:Core/arch/tiny_printf.c ****                 case 'X':
 199:Core/arch/tiny_printf.c ****                     /* 32 bits integer as hex is max 8 characters */
 200:Core/arch/tiny_printf.c ****                     length += 8;
 201:Core/arch/tiny_printf.c ****                     va_arg(va, unsigned int);
 202:Core/arch/tiny_printf.c ****                     break;
 203:Core/arch/tiny_printf.c ****                 default:
 204:Core/arch/tiny_printf.c ****                     ++length;
 205:Core/arch/tiny_printf.c ****                     break;
 206:Core/arch/tiny_printf.c ****             }
 207:Core/arch/tiny_printf.c ****         }
 208:Core/arch/tiny_printf.c ****         else
 209:Core/arch/tiny_printf.c ****         {
 210:Core/arch/tiny_printf.c ****             ++length;
ARM GAS  /tmp/cclwX1cF.s 			page 19


 658              		.loc 1 210 13 is_stmt 1 view .LVU209
 659              	.LVL75:
 660              		.loc 1 210 13 is_stmt 0 view .LVU210
 661 0014 2246     		mov	r2, r4
 662 0016 0135     		adds	r5, r5, #1
 663              	.LVL76:
 211:Core/arch/tiny_printf.c ****         }
 212:Core/arch/tiny_printf.c ****         ++fmt;
 664              		.loc 1 212 9 is_stmt 1 view .LVU211
 172:Core/arch/tiny_printf.c ****     {
 665              		.loc 1 172 11 view .LVU212
 210:Core/arch/tiny_printf.c ****         }
 666              		.loc 1 210 13 is_stmt 0 view .LVU213
 667 0018 1846     		mov	r0, r3
 172:Core/arch/tiny_printf.c ****     {
 668              		.loc 1 172 11 view .LVU214
 669 001a 002A     		cmp	r2, #0
 670 001c F5D1     		bne	.L76
 671              	.LVL77:
 672              	.L65:
 213:Core/arch/tiny_printf.c ****     }
 214:Core/arch/tiny_printf.c ****     return length;
 215:Core/arch/tiny_printf.c **** }
 673              		.loc 1 215 1 view .LVU215
 674 001e 2846     		mov	r0, r5
 675 0020 70BC     		pop	{r4, r5, r6}
 676              	.LCFI5:
 677              		.cfi_remember_state
 678              		.cfi_restore 6
 679              		.cfi_restore 5
 680              		.cfi_restore 4
 681              		.cfi_def_cfa_offset 0
 682              	.LVL78:
 683              		.loc 1 215 1 view .LVU216
 684 0022 7047     		bx	lr
 685              	.LVL79:
 686              	.L84:
 687              	.LCFI6:
 688              		.cfi_restore_state
 176:Core/arch/tiny_printf.c ****             switch (*fmt)
 689              		.loc 1 176 13 is_stmt 1 view .LVU217
 177:Core/arch/tiny_printf.c ****             {
 690              		.loc 1 177 13 view .LVU218
 691 0024 583C     		subs	r4, r4, #88
 692 0026 861C     		adds	r6, r0, #2
 693 0028 202C     		cmp	r4, #32
 694 002a 12D8     		bhi	.L68
 695 002c DFE804F0 		tbb	[pc, r4]
 696              	.L70:
 697 0030 1E       		.byte	(.L69-.L70)/2
 698 0031 11       		.byte	(.L68-.L70)/2
 699 0032 11       		.byte	(.L68-.L70)/2
 700 0033 11       		.byte	(.L68-.L70)/2
 701 0034 11       		.byte	(.L68-.L70)/2
 702 0035 11       		.byte	(.L68-.L70)/2
 703 0036 11       		.byte	(.L68-.L70)/2
 704 0037 11       		.byte	(.L68-.L70)/2
ARM GAS  /tmp/cclwX1cF.s 			page 20


 705 0038 11       		.byte	(.L68-.L70)/2
 706 0039 11       		.byte	(.L68-.L70)/2
 707 003a 11       		.byte	(.L68-.L70)/2
 708 003b 36       		.byte	(.L73-.L70)/2
 709 003c 17       		.byte	(.L71-.L70)/2
 710 003d 11       		.byte	(.L68-.L70)/2
 711 003e 11       		.byte	(.L68-.L70)/2
 712 003f 11       		.byte	(.L68-.L70)/2
 713 0040 11       		.byte	(.L68-.L70)/2
 714 0041 17       		.byte	(.L71-.L70)/2
 715 0042 11       		.byte	(.L68-.L70)/2
 716 0043 11       		.byte	(.L68-.L70)/2
 717 0044 11       		.byte	(.L68-.L70)/2
 718 0045 11       		.byte	(.L68-.L70)/2
 719 0046 11       		.byte	(.L68-.L70)/2
 720 0047 11       		.byte	(.L68-.L70)/2
 721 0048 11       		.byte	(.L68-.L70)/2
 722 0049 11       		.byte	(.L68-.L70)/2
 723 004a 11       		.byte	(.L68-.L70)/2
 724 004b 25       		.byte	(.L72-.L70)/2
 725 004c 11       		.byte	(.L68-.L70)/2
 726 004d 17       		.byte	(.L71-.L70)/2
 727 004e 11       		.byte	(.L68-.L70)/2
 728 004f 11       		.byte	(.L68-.L70)/2
 729 0050 1E       		.byte	(.L69-.L70)/2
 730 0051 00       		.p2align 1
 731              	.L68:
 204:Core/arch/tiny_printf.c ****                     break;
 732              		.loc 1 204 21 view .LVU219
 733              	.LVL80:
 204:Core/arch/tiny_printf.c ****                     break;
 734              		.loc 1 204 21 is_stmt 0 view .LVU220
 735 0052 8278     		ldrb	r2, [r0, #2]	@ zero_extendqisi2
 736 0054 0135     		adds	r5, r5, #1
 737              	.LVL81:
 205:Core/arch/tiny_printf.c ****             }
 738              		.loc 1 205 21 is_stmt 1 view .LVU221
 739 0056 3046     		mov	r0, r6
 740              	.LVL82:
 212:Core/arch/tiny_printf.c ****     }
 741              		.loc 1 212 9 view .LVU222
 172:Core/arch/tiny_printf.c ****     {
 742              		.loc 1 172 11 view .LVU223
 743 0058 002A     		cmp	r2, #0
 744 005a D6D1     		bne	.L76
 745 005c DFE7     		b	.L65
 746              	.LVL83:
 747              	.L71:
 187:Core/arch/tiny_printf.c ****                     va_arg(va, int);
 748              		.loc 1 187 21 view .LVU224
 187:Core/arch/tiny_printf.c ****                     va_arg(va, int);
 749              		.loc 1 187 21 is_stmt 0 view .LVU225
 750 005e 8278     		ldrb	r2, [r0, #2]	@ zero_extendqisi2
 187:Core/arch/tiny_printf.c ****                     va_arg(va, int);
 751              		.loc 1 187 28 view .LVU226
 752 0060 0B35     		adds	r5, r5, #11
 753              	.LVL84:
ARM GAS  /tmp/cclwX1cF.s 			page 21


 188:Core/arch/tiny_printf.c ****                     break;
 754              		.loc 1 188 21 is_stmt 1 view .LVU227
 755 0062 0431     		adds	r1, r1, #4
 756              	.LVL85:
 188:Core/arch/tiny_printf.c ****                     break;
 757              		.loc 1 188 21 is_stmt 0 view .LVU228
 758 0064 3046     		mov	r0, r6
 759              	.LVL86:
 212:Core/arch/tiny_printf.c ****     }
 760              		.loc 1 212 9 is_stmt 1 view .LVU229
 172:Core/arch/tiny_printf.c ****     {
 761              		.loc 1 172 11 view .LVU230
 762 0066 002A     		cmp	r2, #0
 763 0068 CFD1     		bne	.L76
 764 006a D8E7     		b	.L65
 765              	.LVL87:
 766              	.L69:
 200:Core/arch/tiny_printf.c ****                     va_arg(va, unsigned int);
 767              		.loc 1 200 21 view .LVU231
 200:Core/arch/tiny_printf.c ****                     va_arg(va, unsigned int);
 768              		.loc 1 200 21 is_stmt 0 view .LVU232
 769 006c 8278     		ldrb	r2, [r0, #2]	@ zero_extendqisi2
 200:Core/arch/tiny_printf.c ****                     va_arg(va, unsigned int);
 770              		.loc 1 200 28 view .LVU233
 771 006e 0835     		adds	r5, r5, #8
 772              	.LVL88:
 201:Core/arch/tiny_printf.c ****                     break;
 773              		.loc 1 201 21 is_stmt 1 view .LVU234
 774 0070 0431     		adds	r1, r1, #4
 775              	.LVL89:
 201:Core/arch/tiny_printf.c ****                     break;
 776              		.loc 1 201 21 is_stmt 0 view .LVU235
 777 0072 3046     		mov	r0, r6
 778              	.LVL90:
 212:Core/arch/tiny_printf.c ****     }
 779              		.loc 1 212 9 is_stmt 1 view .LVU236
 172:Core/arch/tiny_printf.c ****     {
 780              		.loc 1 172 11 view .LVU237
 781 0074 002A     		cmp	r2, #0
 782 0076 C8D1     		bne	.L76
 783 0078 D1E7     		b	.L65
 784              	.LVL91:
 785              	.L72:
 786              	.LBB32:
 192:Core/arch/tiny_printf.c ****                     while (*str++)
 787              		.loc 1 192 21 view .LVU238
 192:Core/arch/tiny_printf.c ****                     while (*str++)
 788              		.loc 1 192 28 is_stmt 0 view .LVU239
 789 007a 51F8044B 		ldr	r4, [r1], #4
 790              	.LVL92:
 193:Core/arch/tiny_printf.c ****                         ++length;
 791              		.loc 1 193 21 is_stmt 1 view .LVU240
 193:Core/arch/tiny_printf.c ****                         ++length;
 792              		.loc 1 193 27 view .LVU241
 193:Core/arch/tiny_printf.c ****                         ++length;
 793              		.loc 1 193 32 is_stmt 0 view .LVU242
 794 007e 2346     		mov	r3, r4
ARM GAS  /tmp/cclwX1cF.s 			page 22


 795              	.LVL93:
 193:Core/arch/tiny_printf.c ****                         ++length;
 796              		.loc 1 193 27 view .LVU243
 797 0080 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
 798              	.LVL94:
 193:Core/arch/tiny_printf.c ****                         ++length;
 799              		.loc 1 193 27 view .LVU244
 800 0084 2AB1     		cbz	r2, .L83
 801 0086 2C1B     		subs	r4, r5, r4
 802              	.L75:
 194:Core/arch/tiny_printf.c ****                 }
 803              		.loc 1 194 25 is_stmt 1 view .LVU245
 804 0088 1D19     		adds	r5, r3, r4
 805              	.LVL95:
 193:Core/arch/tiny_printf.c ****                         ++length;
 806              		.loc 1 193 27 view .LVU246
 193:Core/arch/tiny_printf.c ****                         ++length;
 807              		.loc 1 193 27 is_stmt 0 view .LVU247
 808 008a 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
 809              	.LVL96:
 193:Core/arch/tiny_printf.c ****                         ++length;
 810              		.loc 1 193 27 view .LVU248
 811 008e 002A     		cmp	r2, #0
 812 0090 FAD1     		bne	.L75
 813              	.LVL97:
 814              	.L83:
 193:Core/arch/tiny_printf.c ****                         ++length;
 815              		.loc 1 193 27 view .LVU249
 816 0092 8278     		ldrb	r2, [r0, #2]	@ zero_extendqisi2
 817 0094 3046     		mov	r0, r6
 818              	.LVL98:
 193:Core/arch/tiny_printf.c ****                         ++length;
 819              		.loc 1 193 27 view .LVU250
 820              	.LBE32:
 212:Core/arch/tiny_printf.c ****     }
 821              		.loc 1 212 9 is_stmt 1 view .LVU251
 172:Core/arch/tiny_printf.c ****     {
 822              		.loc 1 172 11 view .LVU252
 823 0096 002A     		cmp	r2, #0
 824 0098 B7D1     		bne	.L76
 825 009a C0E7     		b	.L65
 826              	.LVL99:
 827              	.L73:
 180:Core/arch/tiny_printf.c ****                     ++length;
 828              		.loc 1 180 21 view .LVU253
 829 009c 8278     		ldrb	r2, [r0, #2]	@ zero_extendqisi2
 830 009e 0431     		adds	r1, r1, #4
 831              	.LVL100:
 181:Core/arch/tiny_printf.c ****                     break;
 832              		.loc 1 181 21 view .LVU254
 181:Core/arch/tiny_printf.c ****                     break;
 833              		.loc 1 181 21 is_stmt 0 view .LVU255
 834 00a0 0135     		adds	r5, r5, #1
 835              	.LVL101:
 182:Core/arch/tiny_printf.c ****                 case 'd':
 836              		.loc 1 182 21 is_stmt 1 view .LVU256
 837 00a2 3046     		mov	r0, r6
ARM GAS  /tmp/cclwX1cF.s 			page 23


 838              	.LVL102:
 212:Core/arch/tiny_printf.c ****     }
 839              		.loc 1 212 9 view .LVU257
 172:Core/arch/tiny_printf.c ****     {
 840              		.loc 1 172 11 view .LVU258
 841 00a4 002A     		cmp	r2, #0
 842 00a6 B0D1     		bne	.L76
 843 00a8 B9E7     		b	.L65
 844              	.LVL103:
 845              	.L77:
 171:Core/arch/tiny_printf.c ****     while (*fmt)
 846              		.loc 1 171 9 is_stmt 0 view .LVU259
 847 00aa 1546     		mov	r5, r2
 214:Core/arch/tiny_printf.c **** }
 848              		.loc 1 214 5 is_stmt 1 view .LVU260
 849              		.loc 1 215 1 is_stmt 0 view .LVU261
 850 00ac 2846     		mov	r0, r5
 851              	.LVL104:
 852              		.loc 1 215 1 view .LVU262
 853 00ae 70BC     		pop	{r4, r5, r6}
 854              	.LCFI7:
 855              		.cfi_restore 6
 856              		.cfi_restore 5
 857              		.cfi_restore 4
 858              		.cfi_def_cfa_offset 0
 859 00b0 7047     		bx	lr
 860              		.cfi_endproc
 861              	.LFE5:
 863 00b2 00BF     		.section	.text.siprintf,"ax",%progbits
 864              		.align	1
 865              		.p2align 2,,3
 866              		.global	siprintf
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 870              		.fpu fpv4-sp-d16
 872              	siprintf:
 873              	.LVL105:
 874              	.LFB6:
 216:Core/arch/tiny_printf.c **** 
 217:Core/arch/tiny_printf.c **** /**
 218:Core/arch/tiny_printf.c ****  **===========================================================================
 219:Core/arch/tiny_printf.c ****  **  Abstract: Loads data from the given locations and writes them to the
 220:Core/arch/tiny_printf.c ****  **            given character string according to the format parameter.
 221:Core/arch/tiny_printf.c ****  **  Returns:  Number of bytes written
 222:Core/arch/tiny_printf.c ****  **===========================================================================
 223:Core/arch/tiny_printf.c ****  */
 224:Core/arch/tiny_printf.c **** int siprintf(char *buf, const char *fmt, ...)
 225:Core/arch/tiny_printf.c **** {
 875              		.loc 1 225 1 is_stmt 1 view -0
 876              		.cfi_startproc
 877              		@ args = 4, pretend = 12, frame = 8
 878              		@ frame_needed = 0, uses_anonymous_args = 1
 226:Core/arch/tiny_printf.c ****     int length;
 879              		.loc 1 226 5 view .LVU264
 227:Core/arch/tiny_printf.c ****     va_list va;
 880              		.loc 1 227 5 view .LVU265
ARM GAS  /tmp/cclwX1cF.s 			page 24


 228:Core/arch/tiny_printf.c ****     va_start(va, fmt);
 881              		.loc 1 228 5 view .LVU266
 225:Core/arch/tiny_printf.c ****     int length;
 882              		.loc 1 225 1 is_stmt 0 view .LVU267
 883 0000 0EB4     		push	{r1, r2, r3}
 884              	.LCFI8:
 885              		.cfi_def_cfa_offset 12
 886              		.cfi_offset 1, -12
 887              		.cfi_offset 2, -8
 888              		.cfi_offset 3, -4
 889 0002 00B5     		push	{lr}
 890              	.LCFI9:
 891              		.cfi_def_cfa_offset 16
 892              		.cfi_offset 14, -16
 893 0004 82B0     		sub	sp, sp, #8
 894              	.LCFI10:
 895              		.cfi_def_cfa_offset 24
 225:Core/arch/tiny_printf.c ****     int length;
 896              		.loc 1 225 1 view .LVU268
 897 0006 03AA     		add	r2, sp, #12
 898 0008 52F8041B 		ldr	r1, [r2], #4
 899              		.loc 1 228 5 view .LVU269
 900 000c 0192     		str	r2, [sp, #4]
 229:Core/arch/tiny_printf.c ****     length = ts_formatstring(buf, fmt, va);
 901              		.loc 1 229 5 is_stmt 1 view .LVU270
 902              		.loc 1 229 14 is_stmt 0 view .LVU271
 903 000e FFF7FEFF 		bl	ts_formatstring
 904              	.LVL106:
 230:Core/arch/tiny_printf.c ****     va_end(va);
 905              		.loc 1 230 5 is_stmt 1 view .LVU272
 231:Core/arch/tiny_printf.c ****     return length;
 906              		.loc 1 231 5 view .LVU273
 232:Core/arch/tiny_printf.c **** }
 907              		.loc 1 232 1 is_stmt 0 view .LVU274
 908 0012 02B0     		add	sp, sp, #8
 909              	.LCFI11:
 910              		.cfi_def_cfa_offset 16
 911              		@ sp needed
 912 0014 5DF804EB 		ldr	lr, [sp], #4
 913              	.LCFI12:
 914              		.cfi_restore 14
 915              		.cfi_def_cfa_offset 12
 916 0018 03B0     		add	sp, sp, #12
 917              	.LCFI13:
 918              		.cfi_restore 3
 919              		.cfi_restore 2
 920              		.cfi_restore 1
 921              		.cfi_def_cfa_offset 0
 922 001a 7047     		bx	lr
 923              		.cfi_endproc
 924              	.LFE6:
 926              		.global	sprintf
 927              		.thumb_set sprintf,siprintf
 928              		.section	.text.fiprintf,"ax",%progbits
 929              		.align	1
 930              		.p2align 2,,3
 931              		.global	fiprintf
ARM GAS  /tmp/cclwX1cF.s 			page 25


 932              		.syntax unified
 933              		.thumb
 934              		.thumb_func
 935              		.fpu fpv4-sp-d16
 937              	fiprintf:
 938              	.LVL107:
 939              	.LFB7:
 233:Core/arch/tiny_printf.c **** 
 234:Core/arch/tiny_printf.c **** /**
 235:Core/arch/tiny_printf.c ****  **===========================================================================
 236:Core/arch/tiny_printf.c ****  **  Abstract: Loads data from the given locations and writes them to the
 237:Core/arch/tiny_printf.c ****  **            given file stream according to the format parameter.
 238:Core/arch/tiny_printf.c ****  **  Returns:  Number of bytes written
 239:Core/arch/tiny_printf.c ****  **===========================================================================
 240:Core/arch/tiny_printf.c ****  */
 241:Core/arch/tiny_printf.c **** int fiprintf(FILE * stream, const char *fmt, ...)
 242:Core/arch/tiny_printf.c **** {
 940              		.loc 1 242 1 is_stmt 1 view -0
 941              		.cfi_startproc
 942              		@ args = 4, pretend = 12, frame = 16
 943              		@ frame_needed = 1, uses_anonymous_args = 1
 243:Core/arch/tiny_printf.c ****     int length = 0;
 944              		.loc 1 243 5 view .LVU276
 244:Core/arch/tiny_printf.c ****     va_list va;
 945              		.loc 1 244 5 view .LVU277
 245:Core/arch/tiny_printf.c ****     va_start(va, fmt);
 946              		.loc 1 245 5 view .LVU278
 242:Core/arch/tiny_printf.c ****     int length = 0;
 947              		.loc 1 242 1 is_stmt 0 view .LVU279
 948 0000 0EB4     		push	{r1, r2, r3}
 949              	.LCFI14:
 950              		.cfi_def_cfa_offset 12
 951              		.cfi_offset 1, -12
 952              		.cfi_offset 2, -8
 953              		.cfi_offset 3, -4
 954 0002 B0B5     		push	{r4, r5, r7, lr}
 955              	.LCFI15:
 956              		.cfi_def_cfa_offset 28
 957              		.cfi_offset 4, -28
 958              		.cfi_offset 5, -24
 959              		.cfi_offset 7, -20
 960              		.cfi_offset 14, -16
 961 0004 85B0     		sub	sp, sp, #20
 962              	.LCFI16:
 963              		.cfi_def_cfa_offset 48
 964 0006 0446     		mov	r4, r0
 965 0008 00AF     		add	r7, sp, #0
 966              	.LCFI17:
 967              		.cfi_def_cfa_register 7
 242:Core/arch/tiny_printf.c ****     int length = 0;
 968              		.loc 1 242 1 view .LVU280
 969 000a 07F12402 		add	r2, r7, #36
 970 000e 52F8045B 		ldr	r5, [r2], #4
 246:Core/arch/tiny_printf.c ****     length = ts_formatlength(fmt, va);
 971              		.loc 1 246 14 view .LVU281
 972 0012 1146     		mov	r1, r2
 973 0014 2846     		mov	r0, r5
ARM GAS  /tmp/cclwX1cF.s 			page 26


 974              	.LVL108:
 245:Core/arch/tiny_printf.c ****     va_start(va, fmt);
 975              		.loc 1 245 5 view .LVU282
 976 0016 FA60     		str	r2, [r7, #12]
 977 0018 7A60     		str	r2, [r7, #4]
 978              		.loc 1 246 5 is_stmt 1 view .LVU283
 979              		.loc 1 246 14 is_stmt 0 view .LVU284
 980 001a FFF7FEFF 		bl	ts_formatlength
 981              	.LVL109:
 247:Core/arch/tiny_printf.c ****     va_end(va);
 982              		.loc 1 247 5 is_stmt 1 view .LVU285
 983              	.LBB33:
 248:Core/arch/tiny_printf.c ****     {
 249:Core/arch/tiny_printf.c ****         char buf[length];
 984              		.loc 1 249 9 view .LVU286
 985              		.loc 1 249 14 is_stmt 0 view .LVU287
 986 001e C31D     		adds	r3, r0, #7
 250:Core/arch/tiny_printf.c ****         va_start(va, fmt);
 251:Core/arch/tiny_printf.c ****         length = ts_formatstring(buf, fmt, va);
 987              		.loc 1 251 18 view .LVU288
 988 0020 7A68     		ldr	r2, [r7, #4]
 989 0022 2946     		mov	r1, r5
 249:Core/arch/tiny_printf.c ****         va_start(va, fmt);
 990              		.loc 1 249 14 view .LVU289
 991 0024 23F00703 		bic	r3, r3, #7
 992 0028 ADEB030D 		sub	sp, sp, r3
 993              	.LVL110:
 250:Core/arch/tiny_printf.c ****         va_start(va, fmt);
 994              		.loc 1 250 9 is_stmt 1 view .LVU290
 995              		.loc 1 251 9 view .LVU291
 996              		.loc 1 251 18 is_stmt 0 view .LVU292
 997 002c 6846     		mov	r0, sp
 998              	.LVL111:
 999              		.loc 1 251 18 view .LVU293
 1000 002e FFF7FEFF 		bl	ts_formatstring
 1001              	.LVL112:
 252:Core/arch/tiny_printf.c ****         length = _write(stream->_file, buf, length);
 1002              		.loc 1 252 18 view .LVU294
 1003 0032 6946     		mov	r1, sp
 251:Core/arch/tiny_printf.c ****         length = _write(stream->_file, buf, length);
 1004              		.loc 1 251 18 view .LVU295
 1005 0034 0246     		mov	r2, r0
 1006              	.LVL113:
 1007              		.loc 1 252 9 is_stmt 1 view .LVU296
 1008              		.loc 1 252 18 is_stmt 0 view .LVU297
 1009 0036 B4F90E00 		ldrsh	r0, [r4, #14]
 1010              	.LVL114:
 1011              		.loc 1 252 18 view .LVU298
 1012 003a FFF7FEFF 		bl	_write
 1013              	.LVL115:
 253:Core/arch/tiny_printf.c ****         va_end(va);
 1014              		.loc 1 253 9 is_stmt 1 view .LVU299
 1015              	.LBE33:
 254:Core/arch/tiny_printf.c ****     }
 255:Core/arch/tiny_printf.c ****     return length;
 1016              		.loc 1 255 5 view .LVU300
 256:Core/arch/tiny_printf.c **** }
ARM GAS  /tmp/cclwX1cF.s 			page 27


 1017              		.loc 1 256 1 is_stmt 0 view .LVU301
 1018 003e 1437     		adds	r7, r7, #20
 1019              	.LCFI18:
 1020              		.cfi_def_cfa_offset 28
 1021              	.LVL116:
 1022              		.loc 1 256 1 view .LVU302
 1023 0040 BD46     		mov	sp, r7
 1024              	.LCFI19:
 1025              		.cfi_def_cfa_register 13
 1026              	.LVL117:
 1027              		.loc 1 256 1 view .LVU303
 1028              		@ sp needed
 1029 0042 BDE8B040 		pop	{r4, r5, r7, lr}
 1030              	.LCFI20:
 1031              		.cfi_restore 14
 1032              		.cfi_restore 7
 1033              		.cfi_restore 5
 1034              		.cfi_restore 4
 1035              		.cfi_def_cfa_offset 12
 1036              	.LVL118:
 1037              		.loc 1 256 1 view .LVU304
 1038 0046 03B0     		add	sp, sp, #12
 1039              	.LCFI21:
 1040              		.cfi_restore 3
 1041              		.cfi_restore 2
 1042              		.cfi_restore 1
 1043              		.cfi_def_cfa_offset 0
 1044 0048 7047     		bx	lr
 1045              		.cfi_endproc
 1046              	.LFE7:
 1048              		.global	fprintf
 1049              		.thumb_set fprintf,fiprintf
 1050 004a 00BF     		.section	.text.iprintf,"ax",%progbits
 1051              		.align	1
 1052              		.p2align 2,,3
 1053              		.global	iprintf
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu fpv4-sp-d16
 1059              	iprintf:
 1060              	.LVL119:
 1061              	.LFB8:
 257:Core/arch/tiny_printf.c **** 
 258:Core/arch/tiny_printf.c **** /**
 259:Core/arch/tiny_printf.c ****  **===========================================================================
 260:Core/arch/tiny_printf.c ****  **  Abstract: Loads data from the given locations and writes them to the
 261:Core/arch/tiny_printf.c ****  **            standard output according to the format parameter.
 262:Core/arch/tiny_printf.c ****  **  Returns:  Number of bytes written
 263:Core/arch/tiny_printf.c ****  **
 264:Core/arch/tiny_printf.c ****  **===========================================================================
 265:Core/arch/tiny_printf.c ****  */
 266:Core/arch/tiny_printf.c **** int iprintf(const char *fmt, ...)
 267:Core/arch/tiny_printf.c **** {
 1062              		.loc 1 267 1 is_stmt 1 view -0
 1063              		.cfi_startproc
 1064              		@ args = 4, pretend = 16, frame = 16
ARM GAS  /tmp/cclwX1cF.s 			page 28


 1065              		@ frame_needed = 1, uses_anonymous_args = 1
 268:Core/arch/tiny_printf.c ****     int length = 0;
 1066              		.loc 1 268 5 view .LVU306
 269:Core/arch/tiny_printf.c ****     va_list va;
 1067              		.loc 1 269 5 view .LVU307
 270:Core/arch/tiny_printf.c ****     va_start(va, fmt);
 1068              		.loc 1 270 5 view .LVU308
 267:Core/arch/tiny_printf.c ****     int length = 0;
 1069              		.loc 1 267 1 is_stmt 0 view .LVU309
 1070 0000 0FB4     		push	{r0, r1, r2, r3}
 1071              	.LCFI22:
 1072              		.cfi_def_cfa_offset 16
 1073              		.cfi_offset 0, -16
 1074              		.cfi_offset 1, -12
 1075              		.cfi_offset 2, -8
 1076              		.cfi_offset 3, -4
 1077 0002 90B5     		push	{r4, r7, lr}
 1078              	.LCFI23:
 1079              		.cfi_def_cfa_offset 28
 1080              		.cfi_offset 4, -28
 1081              		.cfi_offset 7, -24
 1082              		.cfi_offset 14, -20
 1083 0004 85B0     		sub	sp, sp, #20
 1084              	.LCFI24:
 1085              		.cfi_def_cfa_offset 48
 1086 0006 00AF     		add	r7, sp, #0
 1087              	.LCFI25:
 1088              		.cfi_def_cfa_register 7
 267:Core/arch/tiny_printf.c ****     int length = 0;
 1089              		.loc 1 267 1 view .LVU310
 1090 0008 07F12002 		add	r2, r7, #32
 1091 000c 52F8044B 		ldr	r4, [r2], #4
 271:Core/arch/tiny_printf.c ****     length = ts_formatlength(fmt, va);
 1092              		.loc 1 271 14 view .LVU311
 1093 0010 1146     		mov	r1, r2
 1094 0012 2046     		mov	r0, r4
 270:Core/arch/tiny_printf.c ****     va_start(va, fmt);
 1095              		.loc 1 270 5 view .LVU312
 1096 0014 FA60     		str	r2, [r7, #12]
 1097 0016 7A60     		str	r2, [r7, #4]
 1098              		.loc 1 271 5 is_stmt 1 view .LVU313
 1099              		.loc 1 271 14 is_stmt 0 view .LVU314
 1100 0018 FFF7FEFF 		bl	ts_formatlength
 1101              	.LVL120:
 272:Core/arch/tiny_printf.c ****     va_end(va);
 1102              		.loc 1 272 5 is_stmt 1 view .LVU315
 1103              	.LBB34:
 273:Core/arch/tiny_printf.c ****     {
 274:Core/arch/tiny_printf.c ****         char buf[length];
 1104              		.loc 1 274 9 view .LVU316
 1105              		.loc 1 274 14 is_stmt 0 view .LVU317
 1106 001c 0730     		adds	r0, r0, #7
 1107              	.LVL121:
 275:Core/arch/tiny_printf.c ****         va_start(va, fmt);
 276:Core/arch/tiny_printf.c ****         length = ts_formatstring(buf, fmt, va);
 1108              		.loc 1 276 18 view .LVU318
 1109 001e 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/cclwX1cF.s 			page 29


 1110 0020 2146     		mov	r1, r4
 274:Core/arch/tiny_printf.c ****         va_start(va, fmt);
 1111              		.loc 1 274 14 view .LVU319
 1112 0022 20F00700 		bic	r0, r0, #7
 1113              	.LVL122:
 274:Core/arch/tiny_printf.c ****         va_start(va, fmt);
 1114              		.loc 1 274 14 view .LVU320
 1115 0026 ADEB000D 		sub	sp, sp, r0
 1116              	.LVL123:
 275:Core/arch/tiny_printf.c ****         va_start(va, fmt);
 1117              		.loc 1 275 9 is_stmt 1 view .LVU321
 1118              		.loc 1 276 9 view .LVU322
 1119              		.loc 1 276 18 is_stmt 0 view .LVU323
 1120 002a 6846     		mov	r0, sp
 1121 002c FFF7FEFF 		bl	ts_formatstring
 1122              	.LVL124:
 277:Core/arch/tiny_printf.c ****         length = _write(1, buf, length);
 1123              		.loc 1 277 18 view .LVU324
 1124 0030 6946     		mov	r1, sp
 276:Core/arch/tiny_printf.c ****         length = _write(1, buf, length);
 1125              		.loc 1 276 18 view .LVU325
 1126 0032 0246     		mov	r2, r0
 1127              	.LVL125:
 1128              		.loc 1 277 9 is_stmt 1 view .LVU326
 1129              		.loc 1 277 18 is_stmt 0 view .LVU327
 1130 0034 0120     		movs	r0, #1
 1131              	.LVL126:
 1132              		.loc 1 277 18 view .LVU328
 1133 0036 FFF7FEFF 		bl	_write
 1134              	.LVL127:
 278:Core/arch/tiny_printf.c ****         va_end(va);
 1135              		.loc 1 278 9 is_stmt 1 view .LVU329
 1136              	.LBE34:
 279:Core/arch/tiny_printf.c ****     }
 280:Core/arch/tiny_printf.c ****     return length;
 1137              		.loc 1 280 5 view .LVU330
 281:Core/arch/tiny_printf.c **** }
 1138              		.loc 1 281 1 is_stmt 0 view .LVU331
 1139 003a 1437     		adds	r7, r7, #20
 1140              	.LCFI26:
 1141              		.cfi_def_cfa_offset 28
 1142 003c BD46     		mov	sp, r7
 1143              	.LCFI27:
 1144              		.cfi_def_cfa_register 13
 1145              	.LVL128:
 1146              		.loc 1 281 1 view .LVU332
 1147              		@ sp needed
 1148 003e BDE89040 		pop	{r4, r7, lr}
 1149              	.LCFI28:
 1150              		.cfi_restore 14
 1151              		.cfi_restore 7
 1152              		.cfi_restore 4
 1153              		.cfi_def_cfa_offset 16
 1154 0042 04B0     		add	sp, sp, #16
 1155              	.LCFI29:
 1156              		.cfi_restore 3
 1157              		.cfi_restore 2
ARM GAS  /tmp/cclwX1cF.s 			page 30


 1158              		.cfi_restore 1
 1159              		.cfi_restore 0
 1160              		.cfi_def_cfa_offset 0
 1161 0044 7047     		bx	lr
 1162              		.cfi_endproc
 1163              	.LFE8:
 1165              		.global	printf
 1166              		.thumb_set printf,iprintf
 1167 0046 00BF     		.section	.rodata.fputs.str1.4,"aMS",%progbits,1
 1168              		.align	2
 1169              	.LC0:
 1170 0000 0A00     		.ascii	"\012\000"
 1171              		.section	.text.fputs,"ax",%progbits
 1172              		.align	1
 1173              		.p2align 2,,3
 1174              		.global	fputs
 1175              		.syntax unified
 1176              		.thumb
 1177              		.thumb_func
 1178              		.fpu fpv4-sp-d16
 1180              	fputs:
 1181              	.LVL129:
 1182              	.LFB9:
 282:Core/arch/tiny_printf.c **** 
 283:Core/arch/tiny_printf.c **** /**
 284:Core/arch/tiny_printf.c ****  **===========================================================================
 285:Core/arch/tiny_printf.c ****  **  Abstract: fputs writes the string at s (but without the trailing null) to
 286:Core/arch/tiny_printf.c ****  **  the file or stream identified by fp.
 287:Core/arch/tiny_printf.c ****  **  Returns:  If successful, the result is 0; otherwise, the result is EOF.
 288:Core/arch/tiny_printf.c ****  **
 289:Core/arch/tiny_printf.c ****  **===========================================================================
 290:Core/arch/tiny_printf.c ****  */
 291:Core/arch/tiny_printf.c **** int fputs(const char *s, FILE *fp)
 292:Core/arch/tiny_printf.c **** {
 1183              		.loc 1 292 1 is_stmt 1 view -0
 1184              		.cfi_startproc
 1185              		@ args = 0, pretend = 0, frame = 8
 1186              		@ frame_needed = 0, uses_anonymous_args = 0
 293:Core/arch/tiny_printf.c ****     int length = strlen(s);
 1187              		.loc 1 293 5 view .LVU334
 292:Core/arch/tiny_printf.c ****     int length = strlen(s);
 1188              		.loc 1 292 1 is_stmt 0 view .LVU335
 1189 0000 70B5     		push	{r4, r5, r6, lr}
 1190              	.LCFI30:
 1191              		.cfi_def_cfa_offset 16
 1192              		.cfi_offset 4, -16
 1193              		.cfi_offset 5, -12
 1194              		.cfi_offset 6, -8
 1195              		.cfi_offset 14, -4
 1196 0002 82B0     		sub	sp, sp, #8
 1197              	.LCFI31:
 1198              		.cfi_def_cfa_offset 24
 292:Core/arch/tiny_printf.c ****     int length = strlen(s);
 1199              		.loc 1 292 1 view .LVU336
 1200 0004 0E46     		mov	r6, r1
 1201 0006 0190     		str	r0, [sp, #4]
 1202              		.loc 1 293 18 view .LVU337
ARM GAS  /tmp/cclwX1cF.s 			page 31


 1203 0008 FFF7FEFF 		bl	strlen
 1204              	.LVL130:
 1205              		.loc 1 293 18 view .LVU338
 1206 000c 0446     		mov	r4, r0
 294:Core/arch/tiny_printf.c ****     int wlen = 0;
 295:Core/arch/tiny_printf.c ****     int res;
 296:Core/arch/tiny_printf.c **** 
 297:Core/arch/tiny_printf.c ****     wlen = _write((fp->_file), (char*) s, length);
 1207              		.loc 1 297 12 view .LVU339
 1208 000e 0199     		ldr	r1, [sp, #4]
 1209 0010 B6F90E00 		ldrsh	r0, [r6, #14]
 1210              	.LVL131:
 294:Core/arch/tiny_printf.c ****     int wlen = 0;
 1211              		.loc 1 294 5 is_stmt 1 view .LVU340
 295:Core/arch/tiny_printf.c **** 
 1212              		.loc 1 295 5 view .LVU341
 1213              		.loc 1 297 5 view .LVU342
 1214              		.loc 1 297 12 is_stmt 0 view .LVU343
 1215 0014 2246     		mov	r2, r4
 298:Core/arch/tiny_printf.c ****     wlen += _write((fp->_file), "\n", 1);
 299:Core/arch/tiny_printf.c **** 
 300:Core/arch/tiny_printf.c ****     if (wlen == (length + 1))
 1216              		.loc 1 300 25 view .LVU344
 1217 0016 0134     		adds	r4, r4, #1
 1218              	.LVL132:
 297:Core/arch/tiny_printf.c ****     wlen += _write((fp->_file), "\n", 1);
 1219              		.loc 1 297 12 view .LVU345
 1220 0018 FFF7FEFF 		bl	_write
 1221              	.LVL133:
 297:Core/arch/tiny_printf.c ****     wlen += _write((fp->_file), "\n", 1);
 1222              		.loc 1 297 12 view .LVU346
 1223 001c 0546     		mov	r5, r0
 298:Core/arch/tiny_printf.c ****     wlen += _write((fp->_file), "\n", 1);
 1224              		.loc 1 298 13 view .LVU347
 1225 001e 0122     		movs	r2, #1
 1226 0020 B6F90E00 		ldrsh	r0, [r6, #14]
 1227 0024 0449     		ldr	r1, .L93
 1228              	.LVL134:
 298:Core/arch/tiny_printf.c ****     wlen += _write((fp->_file), "\n", 1);
 1229              		.loc 1 298 5 is_stmt 1 view .LVU348
 298:Core/arch/tiny_printf.c ****     wlen += _write((fp->_file), "\n", 1);
 1230              		.loc 1 298 13 is_stmt 0 view .LVU349
 1231 0026 FFF7FEFF 		bl	_write
 1232              	.LVL135:
 1233              		.loc 1 300 5 is_stmt 1 view .LVU350
 301:Core/arch/tiny_printf.c ****     {
 302:Core/arch/tiny_printf.c ****         res = 0;
 303:Core/arch/tiny_printf.c ****     }
 304:Core/arch/tiny_printf.c ****     else
 305:Core/arch/tiny_printf.c ****     {
 306:Core/arch/tiny_printf.c ****         res = EOF;
 307:Core/arch/tiny_printf.c ****     }
 308:Core/arch/tiny_printf.c **** 
 309:Core/arch/tiny_printf.c ****     return res;
 1234              		.loc 1 309 5 view .LVU351
 298:Core/arch/tiny_printf.c **** 
 1235              		.loc 1 298 10 is_stmt 0 view .LVU352
ARM GAS  /tmp/cclwX1cF.s 			page 32


 1236 002a 2844     		add	r0, r0, r5
 1237              	.LVL136:
 310:Core/arch/tiny_printf.c **** }
 1238              		.loc 1 310 1 view .LVU353
 1239 002c 201A     		subs	r0, r4, r0
 1240              	.LVL137:
 1241              		.loc 1 310 1 view .LVU354
 1242 002e 18BF     		it	ne
 1243 0030 4FF0FF30 		movne	r0, #-1
 1244 0034 02B0     		add	sp, sp, #8
 1245              	.LCFI32:
 1246              		.cfi_def_cfa_offset 16
 1247              		@ sp needed
 1248 0036 70BD     		pop	{r4, r5, r6, pc}
 1249              	.LVL138:
 1250              	.L94:
 1251              		.loc 1 310 1 view .LVU355
 1252              		.align	2
 1253              	.L93:
 1254 0038 00000000 		.word	.LC0
 1255              		.cfi_endproc
 1256              	.LFE9:
 1258              		.section	.text.puts,"ax",%progbits
 1259              		.align	1
 1260              		.p2align 2,,3
 1261              		.global	puts
 1262              		.syntax unified
 1263              		.thumb
 1264              		.thumb_func
 1265              		.fpu fpv4-sp-d16
 1267              	puts:
 1268              	.LVL139:
 1269              	.LFB10:
 311:Core/arch/tiny_printf.c **** 
 312:Core/arch/tiny_printf.c **** /**
 313:Core/arch/tiny_printf.c ****  **===========================================================================
 314:Core/arch/tiny_printf.c ****  **  Abstract: puts writes the string at s (followed by a newline, instead of
 315:Core/arch/tiny_printf.c ****  **  the trailing null) to the standard output stream.
 316:Core/arch/tiny_printf.c ****  **  Returns:  If successful, the result is a nonnegative integer; otherwise,
 317:Core/arch/tiny_printf.c ****  **  the result is EOF.
 318:Core/arch/tiny_printf.c ****  **
 319:Core/arch/tiny_printf.c ****  **===========================================================================
 320:Core/arch/tiny_printf.c ****  */
 321:Core/arch/tiny_printf.c **** int puts(const char *s)
 322:Core/arch/tiny_printf.c **** {
 1270              		.loc 1 322 1 is_stmt 1 view -0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 8
 1273              		@ frame_needed = 0, uses_anonymous_args = 0
 323:Core/arch/tiny_printf.c ****     int length = strlen(s);
 1274              		.loc 1 323 5 view .LVU357
 322:Core/arch/tiny_printf.c ****     int length = strlen(s);
 1275              		.loc 1 322 1 is_stmt 0 view .LVU358
 1276 0000 30B5     		push	{r4, r5, lr}
 1277              	.LCFI33:
 1278              		.cfi_def_cfa_offset 12
 1279              		.cfi_offset 4, -12
ARM GAS  /tmp/cclwX1cF.s 			page 33


 1280              		.cfi_offset 5, -8
 1281              		.cfi_offset 14, -4
 1282 0002 83B0     		sub	sp, sp, #12
 1283              	.LCFI34:
 1284              		.cfi_def_cfa_offset 24
 322:Core/arch/tiny_printf.c ****     int length = strlen(s);
 1285              		.loc 1 322 1 view .LVU359
 1286 0004 0190     		str	r0, [sp, #4]
 1287              		.loc 1 323 18 view .LVU360
 1288 0006 FFF7FEFF 		bl	strlen
 1289              	.LVL140:
 1290              		.loc 1 323 18 view .LVU361
 1291 000a 0446     		mov	r4, r0
 324:Core/arch/tiny_printf.c ****     int numbytes = 0;
 325:Core/arch/tiny_printf.c ****     int res;
 326:Core/arch/tiny_printf.c **** 
 327:Core/arch/tiny_printf.c ****     numbytes = _write(1, (char*) s, length);
 1292              		.loc 1 327 16 view .LVU362
 1293 000c 0199     		ldr	r1, [sp, #4]
 1294              	.LVL141:
 324:Core/arch/tiny_printf.c ****     int numbytes = 0;
 1295              		.loc 1 324 5 is_stmt 1 view .LVU363
 325:Core/arch/tiny_printf.c **** 
 1296              		.loc 1 325 5 view .LVU364
 1297              		.loc 1 327 5 view .LVU365
 1298              		.loc 1 327 16 is_stmt 0 view .LVU366
 1299 000e 0120     		movs	r0, #1
 1300              	.LVL142:
 1301              		.loc 1 327 16 view .LVU367
 1302 0010 2246     		mov	r2, r4
 328:Core/arch/tiny_printf.c ****     numbytes += _write(1, "\n", 1);
 329:Core/arch/tiny_printf.c **** 
 330:Core/arch/tiny_printf.c ****     if (numbytes == (length + 1))
 1303              		.loc 1 330 29 view .LVU368
 1304 0012 0134     		adds	r4, r4, #1
 1305              	.LVL143:
 327:Core/arch/tiny_printf.c ****     numbytes += _write(1, "\n", 1);
 1306              		.loc 1 327 16 view .LVU369
 1307 0014 FFF7FEFF 		bl	_write
 1308              	.LVL144:
 328:Core/arch/tiny_printf.c ****     numbytes += _write(1, "\n", 1);
 1309              		.loc 1 328 17 view .LVU370
 1310 0018 0122     		movs	r2, #1
 327:Core/arch/tiny_printf.c ****     numbytes += _write(1, "\n", 1);
 1311              		.loc 1 327 16 view .LVU371
 1312 001a 0546     		mov	r5, r0
 1313              	.LVL145:
 328:Core/arch/tiny_printf.c ****     numbytes += _write(1, "\n", 1);
 1314              		.loc 1 328 5 is_stmt 1 view .LVU372
 328:Core/arch/tiny_printf.c ****     numbytes += _write(1, "\n", 1);
 1315              		.loc 1 328 17 is_stmt 0 view .LVU373
 1316 001c 0549     		ldr	r1, .L97
 1317 001e 1046     		mov	r0, r2
 1318              	.LVL146:
 328:Core/arch/tiny_printf.c ****     numbytes += _write(1, "\n", 1);
 1319              		.loc 1 328 17 view .LVU374
 1320 0020 FFF7FEFF 		bl	_write
ARM GAS  /tmp/cclwX1cF.s 			page 34


 1321              	.LVL147:
 1322              		.loc 1 330 5 is_stmt 1 view .LVU375
 331:Core/arch/tiny_printf.c ****     {
 332:Core/arch/tiny_printf.c ****         res = 0;
 333:Core/arch/tiny_printf.c ****     }
 334:Core/arch/tiny_printf.c ****     else
 335:Core/arch/tiny_printf.c ****     {
 336:Core/arch/tiny_printf.c ****         res = EOF;
 337:Core/arch/tiny_printf.c ****     }
 338:Core/arch/tiny_printf.c **** 
 339:Core/arch/tiny_printf.c ****     return res;
 1323              		.loc 1 339 5 view .LVU376
 328:Core/arch/tiny_printf.c **** 
 1324              		.loc 1 328 14 is_stmt 0 view .LVU377
 1325 0024 2844     		add	r0, r0, r5
 1326              	.LVL148:
 340:Core/arch/tiny_printf.c **** }
 1327              		.loc 1 340 1 view .LVU378
 1328 0026 201A     		subs	r0, r4, r0
 1329              	.LVL149:
 1330              		.loc 1 340 1 view .LVU379
 1331 0028 18BF     		it	ne
 1332 002a 4FF0FF30 		movne	r0, #-1
 1333 002e 03B0     		add	sp, sp, #12
 1334              	.LCFI35:
 1335              		.cfi_def_cfa_offset 12
 1336              		@ sp needed
 1337 0030 30BD     		pop	{r4, r5, pc}
 1338              	.LVL150:
 1339              	.L98:
 1340              		.loc 1 340 1 view .LVU380
 1341 0032 00BF     		.align	2
 1342              	.L97:
 1343 0034 00000000 		.word	.LC0
 1344              		.cfi_endproc
 1345              	.LFE10:
 1347              		.section	.text.fwrite,"ax",%progbits
 1348              		.align	1
 1349              		.p2align 2,,3
 1350              		.global	fwrite
 1351              		.syntax unified
 1352              		.thumb
 1353              		.thumb_func
 1354              		.fpu fpv4-sp-d16
 1356              	fwrite:
 1357              	.LVL151:
 1358              	.LFB11:
 341:Core/arch/tiny_printf.c **** 
 342:Core/arch/tiny_printf.c **** /**
 343:Core/arch/tiny_printf.c ****  **===========================================================================
 344:Core/arch/tiny_printf.c ****  **  Abstract: Copy, starting from the memory location buf, count elements
 345:Core/arch/tiny_printf.c ****  **  (each of size size) into the file or stream identified by fp.
 346:Core/arch/tiny_printf.c ****  **  Returns:  Number of elements written
 347:Core/arch/tiny_printf.c ****  **
 348:Core/arch/tiny_printf.c ****  **===========================================================================
 349:Core/arch/tiny_printf.c ****  */
 350:Core/arch/tiny_printf.c **** size_t fwrite(const void * buf, size_t size, size_t count, FILE * fp)
ARM GAS  /tmp/cclwX1cF.s 			page 35


 351:Core/arch/tiny_printf.c **** {
 1359              		.loc 1 351 1 is_stmt 1 view -0
 1360              		.cfi_startproc
 1361              		@ args = 0, pretend = 0, frame = 0
 1362              		@ frame_needed = 0, uses_anonymous_args = 0
 352:Core/arch/tiny_printf.c ****     return (_write((fp->_file), (char*) buf, size * count) / size);
 1363              		.loc 1 352 5 view .LVU382
 351:Core/arch/tiny_printf.c ****     return (_write((fp->_file), (char*) buf, size * count) / size);
 1364              		.loc 1 351 1 is_stmt 0 view .LVU383
 1365 0000 10B5     		push	{r4, lr}
 1366              	.LCFI36:
 1367              		.cfi_def_cfa_offset 8
 1368              		.cfi_offset 4, -8
 1369              		.cfi_offset 14, -4
 351:Core/arch/tiny_printf.c ****     return (_write((fp->_file), (char*) buf, size * count) / size);
 1370              		.loc 1 351 1 view .LVU384
 1371 0002 0C46     		mov	r4, r1
 1372 0004 0146     		mov	r1, r0
 1373              	.LVL152:
 1374              		.loc 1 352 13 view .LVU385
 1375 0006 B3F90E00 		ldrsh	r0, [r3, #14]
 1376              	.LVL153:
 1377              		.loc 1 352 13 view .LVU386
 1378 000a 02FB04F2 		mul	r2, r2, r4
 1379              	.LVL154:
 1380              		.loc 1 352 13 view .LVU387
 1381 000e FFF7FEFF 		bl	_write
 1382              	.LVL155:
 353:Core/arch/tiny_printf.c **** }
 1383              		.loc 1 353 1 view .LVU388
 1384 0012 B0FBF4F0 		udiv	r0, r0, r4
 1385 0016 10BD     		pop	{r4, pc}
 1386              		.loc 1 353 1 view .LVU389
 1387              		.cfi_endproc
 1388              	.LFE11:
 1390              		.text
 1391              	.Letext0:
 1392              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stdarg.h"
 1393              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 1394              		.file 4 "/usr/arm-none-eabi/include/sys/lock.h"
 1395              		.file 5 "/usr/arm-none-eabi/include/sys/_types.h"
 1396              		.file 6 "/usr/arm-none-eabi/include/sys/reent.h"
 1397              		.file 7 "/usr/arm-none-eabi/include/stdio.h"
 1398              		.file 8 "/usr/arm-none-eabi/include/string.h"
 1399              		.file 9 "<built-in>"
ARM GAS  /tmp/cclwX1cF.s 			page 36


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tiny_printf.c
     /tmp/cclwX1cF.s:18     .text.ts_itoa:0000000000000000 $t
     /tmp/cclwX1cF.s:27     .text.ts_itoa:0000000000000000 ts_itoa
     /tmp/cclwX1cF.s:132    .text.ts_formatstring:0000000000000000 $t
     /tmp/cclwX1cF.s:140    .text.ts_formatstring:0000000000000000 ts_formatstring
     /tmp/cclwX1cF.s:214    .text.ts_formatstring:000000000000003c $d
     /tmp/cclwX1cF.s:612    .text.ts_formatstring:0000000000000190 $d
     /tmp/cclwX1cF.s:617    .text.ts_formatlength:0000000000000000 $t
     /tmp/cclwX1cF.s:625    .text.ts_formatlength:0000000000000000 ts_formatlength
     /tmp/cclwX1cF.s:697    .text.ts_formatlength:0000000000000030 $d
     /tmp/cclwX1cF.s:864    .text.siprintf:0000000000000000 $t
     /tmp/cclwX1cF.s:872    .text.siprintf:0000000000000000 siprintf
     /tmp/cclwX1cF.s:872    .text.siprintf:0000000000000000 sprintf
     /tmp/cclwX1cF.s:929    .text.fiprintf:0000000000000000 $t
     /tmp/cclwX1cF.s:937    .text.fiprintf:0000000000000000 fiprintf
     /tmp/cclwX1cF.s:937    .text.fiprintf:0000000000000000 fprintf
     /tmp/cclwX1cF.s:1051   .text.iprintf:0000000000000000 $t
     /tmp/cclwX1cF.s:1059   .text.iprintf:0000000000000000 iprintf
     /tmp/cclwX1cF.s:1059   .text.iprintf:0000000000000000 printf
     /tmp/cclwX1cF.s:1168   .rodata.fputs.str1.4:0000000000000000 $d
     /tmp/cclwX1cF.s:1172   .text.fputs:0000000000000000 $t
     /tmp/cclwX1cF.s:1180   .text.fputs:0000000000000000 fputs
     /tmp/cclwX1cF.s:1254   .text.fputs:0000000000000038 $d
     /tmp/cclwX1cF.s:1259   .text.puts:0000000000000000 $t
     /tmp/cclwX1cF.s:1267   .text.puts:0000000000000000 puts
     /tmp/cclwX1cF.s:1343   .text.puts:0000000000000034 $d
     /tmp/cclwX1cF.s:1348   .text.fwrite:0000000000000000 $t
     /tmp/cclwX1cF.s:1356   .text.fwrite:0000000000000000 fwrite
     /tmp/cclwX1cF.s:247    .text.ts_formatstring:000000000000005d $d
     /tmp/cclwX1cF.s:247    .text.ts_formatstring:000000000000005e $t
     /tmp/cclwX1cF.s:730    .text.ts_formatlength:0000000000000051 $d
     /tmp/cclwX1cF.s:730    .text.ts_formatlength:0000000000000052 $t

UNDEFINED SYMBOLS
_write
strlen
