ARM GAS  /tmp/ccH0Y1hM.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tcp_out.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.tcp_pbuf_prealloc.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 7463705F 		.ascii	"tcp_pbuf_prealloc: invalid pcb\000"
  20      70627566 
  20      5F707265 
  20      616C6C6F 
  20      633A2069 
  21 001f 00       		.align	2
  22              	.LC1:
  23 0020 6E656564 		.ascii	"need unchained pbuf\000"
  23      20756E63 
  23      6861696E 
  23      65642070 
  23      62756600 
  24              		.section	.text.tcp_pbuf_prealloc,"ax",%progbits
  25              		.align	1
  26              		.p2align 2,,3
  27              		.arch armv7e-m
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  31              		.fpu fpv4-sp-d16
  33              	tcp_pbuf_prealloc:
  34              	.LVL0:
  35              	.LFB107:
  36              		.file 1 "lwIP/src/core/tcp_out.c"
   1:lwIP/src/core/tcp_out.c **** /**
   2:lwIP/src/core/tcp_out.c ****  * @file
   3:lwIP/src/core/tcp_out.c ****  * Transmission Control Protocol, outgoing traffic
   4:lwIP/src/core/tcp_out.c ****  *
   5:lwIP/src/core/tcp_out.c ****  * The output functions of TCP.
   6:lwIP/src/core/tcp_out.c ****  *
   7:lwIP/src/core/tcp_out.c ****  * There are two distinct ways for TCP segments to get sent:
   8:lwIP/src/core/tcp_out.c ****  * - queued data: these are segments transferring data or segments containing
   9:lwIP/src/core/tcp_out.c ****  *   SYN or FIN (which both count as one sequence number). They are created as
  10:lwIP/src/core/tcp_out.c ****  *   struct @ref pbuf together with a struct tcp_seg and enqueue to the
  11:lwIP/src/core/tcp_out.c ****  *   unsent list of the pcb. They are sent by tcp_output:
  12:lwIP/src/core/tcp_out.c ****  *   - @ref tcp_write : creates data segments
  13:lwIP/src/core/tcp_out.c ****  *   - @ref tcp_split_unsent_seg : splits a data segment
  14:lwIP/src/core/tcp_out.c ****  *   - @ref tcp_enqueue_flags : creates SYN-only or FIN-only segments
ARM GAS  /tmp/ccH0Y1hM.s 			page 2


  15:lwIP/src/core/tcp_out.c ****  *   - @ref tcp_output / tcp_output_segment : finalize the tcp header
  16:lwIP/src/core/tcp_out.c ****  *      (e.g. sequence numbers, options, checksum) and output to IP
  17:lwIP/src/core/tcp_out.c ****  *   - the various tcp_rexmit functions shuffle around segments between the
  18:lwIP/src/core/tcp_out.c ****  *     unsent an unacked lists to retransmit them
  19:lwIP/src/core/tcp_out.c ****  *   - tcp_create_segment and tcp_pbuf_prealloc allocate pbuf and
  20:lwIP/src/core/tcp_out.c ****  *     segment for these functions
  21:lwIP/src/core/tcp_out.c ****  * - direct send: these segments don't contain data but control the connection
  22:lwIP/src/core/tcp_out.c ****  *   behaviour. They are created as pbuf only and sent directly without
  23:lwIP/src/core/tcp_out.c ****  *   enqueueing them:
  24:lwIP/src/core/tcp_out.c ****  *   - @ref tcp_send_empty_ack sends an ACK-only segment
  25:lwIP/src/core/tcp_out.c ****  *   - @ref tcp_rst sends a RST segment
  26:lwIP/src/core/tcp_out.c ****  *   - @ref tcp_keepalive sends a keepalive segment
  27:lwIP/src/core/tcp_out.c ****  *   - @ref tcp_zero_window_probe sends a window probe segment
  28:lwIP/src/core/tcp_out.c ****  *   - tcp_output_alloc_header allocates a header-only pbuf for these functions
  29:lwIP/src/core/tcp_out.c ****  */
  30:lwIP/src/core/tcp_out.c **** 
  31:lwIP/src/core/tcp_out.c **** /*
  32:lwIP/src/core/tcp_out.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
  33:lwIP/src/core/tcp_out.c ****  * All rights reserved.
  34:lwIP/src/core/tcp_out.c ****  *
  35:lwIP/src/core/tcp_out.c ****  * Redistribution and use in source and binary forms, with or without modification,
  36:lwIP/src/core/tcp_out.c ****  * are permitted provided that the following conditions are met:
  37:lwIP/src/core/tcp_out.c ****  *
  38:lwIP/src/core/tcp_out.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  39:lwIP/src/core/tcp_out.c ****  *    this list of conditions and the following disclaimer.
  40:lwIP/src/core/tcp_out.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  41:lwIP/src/core/tcp_out.c ****  *    this list of conditions and the following disclaimer in the documentation
  42:lwIP/src/core/tcp_out.c ****  *    and/or other materials provided with the distribution.
  43:lwIP/src/core/tcp_out.c ****  * 3. The name of the author may not be used to endorse or promote products
  44:lwIP/src/core/tcp_out.c ****  *    derived from this software without specific prior written permission.
  45:lwIP/src/core/tcp_out.c ****  *
  46:lwIP/src/core/tcp_out.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
  47:lwIP/src/core/tcp_out.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  48:lwIP/src/core/tcp_out.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
  49:lwIP/src/core/tcp_out.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  50:lwIP/src/core/tcp_out.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
  51:lwIP/src/core/tcp_out.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  52:lwIP/src/core/tcp_out.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  53:lwIP/src/core/tcp_out.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
  54:lwIP/src/core/tcp_out.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  55:lwIP/src/core/tcp_out.c ****  * OF SUCH DAMAGE.
  56:lwIP/src/core/tcp_out.c ****  *
  57:lwIP/src/core/tcp_out.c ****  * This file is part of the lwIP TCP/IP stack.
  58:lwIP/src/core/tcp_out.c ****  *
  59:lwIP/src/core/tcp_out.c ****  * Author: Adam Dunkels <adam@sics.se>
  60:lwIP/src/core/tcp_out.c ****  *
  61:lwIP/src/core/tcp_out.c ****  */
  62:lwIP/src/core/tcp_out.c **** 
  63:lwIP/src/core/tcp_out.c **** #include "lwip/opt.h"
  64:lwIP/src/core/tcp_out.c **** 
  65:lwIP/src/core/tcp_out.c **** #if LWIP_TCP /* don't build if not configured for use in lwipopts.h */
  66:lwIP/src/core/tcp_out.c **** 
  67:lwIP/src/core/tcp_out.c **** #include "lwip/priv/tcp_priv.h"
  68:lwIP/src/core/tcp_out.c **** #include "lwip/def.h"
  69:lwIP/src/core/tcp_out.c **** #include "lwip/mem.h"
  70:lwIP/src/core/tcp_out.c **** #include "lwip/memp.h"
  71:lwIP/src/core/tcp_out.c **** #include "lwip/ip_addr.h"
ARM GAS  /tmp/ccH0Y1hM.s 			page 3


  72:lwIP/src/core/tcp_out.c **** #include "lwip/netif.h"
  73:lwIP/src/core/tcp_out.c **** #include "lwip/inet_chksum.h"
  74:lwIP/src/core/tcp_out.c **** #include "lwip/stats.h"
  75:lwIP/src/core/tcp_out.c **** #include "lwip/ip6.h"
  76:lwIP/src/core/tcp_out.c **** #include "lwip/ip6_addr.h"
  77:lwIP/src/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
  78:lwIP/src/core/tcp_out.c **** #include "lwip/sys.h"
  79:lwIP/src/core/tcp_out.c **** #endif
  80:lwIP/src/core/tcp_out.c **** 
  81:lwIP/src/core/tcp_out.c **** #include <string.h>
  82:lwIP/src/core/tcp_out.c **** 
  83:lwIP/src/core/tcp_out.c **** #ifdef LWIP_HOOK_FILENAME
  84:lwIP/src/core/tcp_out.c **** #include LWIP_HOOK_FILENAME
  85:lwIP/src/core/tcp_out.c **** #endif
  86:lwIP/src/core/tcp_out.c **** 
  87:lwIP/src/core/tcp_out.c **** /* Allow to add custom TCP header options by defining this hook */
  88:lwIP/src/core/tcp_out.c **** #ifdef LWIP_HOOK_TCP_OUT_TCPOPT_LENGTH
  89:lwIP/src/core/tcp_out.c **** #define LWIP_TCP_OPT_LENGTH_SEGMENT(flags, pcb) LWIP_HOOK_TCP_OUT_TCPOPT_LENGTH(pcb, LWIP_TCP_OPT_L
  90:lwIP/src/core/tcp_out.c **** #else
  91:lwIP/src/core/tcp_out.c **** #define LWIP_TCP_OPT_LENGTH_SEGMENT(flags, pcb) LWIP_TCP_OPT_LENGTH(flags)
  92:lwIP/src/core/tcp_out.c **** #endif
  93:lwIP/src/core/tcp_out.c **** 
  94:lwIP/src/core/tcp_out.c **** /* Define some copy-macros for checksum-on-copy so that the code looks
  95:lwIP/src/core/tcp_out.c ****    nicer by preventing too many ifdef's. */
  96:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
  97:lwIP/src/core/tcp_out.c **** #define TCP_DATA_COPY(dst, src, len, seg) do { \
  98:lwIP/src/core/tcp_out.c ****   tcp_seg_add_chksum(LWIP_CHKSUM_COPY(dst, src, len), \
  99:lwIP/src/core/tcp_out.c ****                      len, &seg->chksum, &seg->chksum_swapped); \
 100:lwIP/src/core/tcp_out.c ****   seg->flags |= TF_SEG_DATA_CHECKSUMMED; } while(0)
 101:lwIP/src/core/tcp_out.c **** #define TCP_DATA_COPY2(dst, src, len, chksum, chksum_swapped)  \
 102:lwIP/src/core/tcp_out.c ****   tcp_seg_add_chksum(LWIP_CHKSUM_COPY(dst, src, len), len, chksum, chksum_swapped);
 103:lwIP/src/core/tcp_out.c **** #else /* TCP_CHECKSUM_ON_COPY*/
 104:lwIP/src/core/tcp_out.c **** #define TCP_DATA_COPY(dst, src, len, seg)                     MEMCPY(dst, src, len)
 105:lwIP/src/core/tcp_out.c **** #define TCP_DATA_COPY2(dst, src, len, chksum, chksum_swapped) MEMCPY(dst, src, len)
 106:lwIP/src/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY*/
 107:lwIP/src/core/tcp_out.c **** 
 108:lwIP/src/core/tcp_out.c **** /** Define this to 1 for an extra check that the output checksum is valid
 109:lwIP/src/core/tcp_out.c ****  * (usefule when the checksum is generated by the application, not the stack) */
 110:lwIP/src/core/tcp_out.c **** #ifndef TCP_CHECKSUM_ON_COPY_SANITY_CHECK
 111:lwIP/src/core/tcp_out.c **** #define TCP_CHECKSUM_ON_COPY_SANITY_CHECK   0
 112:lwIP/src/core/tcp_out.c **** #endif
 113:lwIP/src/core/tcp_out.c **** /* Allow to override the failure of sanity check from warning to e.g. hard failure */
 114:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY_SANITY_CHECK
 115:lwIP/src/core/tcp_out.c **** #ifndef TCP_CHECKSUM_ON_COPY_SANITY_CHECK_FAIL
 116:lwIP/src/core/tcp_out.c **** #define TCP_CHECKSUM_ON_COPY_SANITY_CHECK_FAIL(msg) LWIP_DEBUGF(TCP_DEBUG | LWIP_DBG_LEVEL_WARNING,
 117:lwIP/src/core/tcp_out.c **** #endif
 118:lwIP/src/core/tcp_out.c **** #endif
 119:lwIP/src/core/tcp_out.c **** 
 120:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE
 121:lwIP/src/core/tcp_out.c **** /** The size of segment pbufs created when TCP_OVERSIZE is enabled */
 122:lwIP/src/core/tcp_out.c **** #ifndef TCP_OVERSIZE_CALC_LENGTH
 123:lwIP/src/core/tcp_out.c **** #define TCP_OVERSIZE_CALC_LENGTH(length) ((length) + TCP_OVERSIZE)
 124:lwIP/src/core/tcp_out.c **** #endif
 125:lwIP/src/core/tcp_out.c **** #endif
 126:lwIP/src/core/tcp_out.c **** 
 127:lwIP/src/core/tcp_out.c **** /* Forward declarations.*/
 128:lwIP/src/core/tcp_out.c **** static err_t tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb, struct netif *netif);
ARM GAS  /tmp/ccH0Y1hM.s 			page 4


 129:lwIP/src/core/tcp_out.c **** 
 130:lwIP/src/core/tcp_out.c **** /* tcp_route: common code that returns a fixed bound netif or calls ip_route */
 131:lwIP/src/core/tcp_out.c **** static struct netif *
 132:lwIP/src/core/tcp_out.c **** tcp_route(const struct tcp_pcb *pcb, const ip_addr_t *src, const ip_addr_t *dst)
 133:lwIP/src/core/tcp_out.c **** {
 134:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(src); /* in case IPv4-only and source-based routing is disabled */
 135:lwIP/src/core/tcp_out.c **** 
 136:lwIP/src/core/tcp_out.c ****   if ((pcb != NULL) && (pcb->netif_idx != NETIF_NO_INDEX)) {
 137:lwIP/src/core/tcp_out.c ****     return netif_get_by_index(pcb->netif_idx);
 138:lwIP/src/core/tcp_out.c ****   } else {
 139:lwIP/src/core/tcp_out.c ****     return ip_route(src, dst);
 140:lwIP/src/core/tcp_out.c ****   }
 141:lwIP/src/core/tcp_out.c **** }
 142:lwIP/src/core/tcp_out.c **** 
 143:lwIP/src/core/tcp_out.c **** /**
 144:lwIP/src/core/tcp_out.c ****  * Create a TCP segment with prefilled header.
 145:lwIP/src/core/tcp_out.c ****  *
 146:lwIP/src/core/tcp_out.c ****  * Called by @ref tcp_write, @ref tcp_enqueue_flags and @ref tcp_split_unsent_seg
 147:lwIP/src/core/tcp_out.c ****  *
 148:lwIP/src/core/tcp_out.c ****  * @param pcb Protocol control block for the TCP connection.
 149:lwIP/src/core/tcp_out.c ****  * @param p pbuf that is used to hold the TCP header.
 150:lwIP/src/core/tcp_out.c ****  * @param hdrflags TCP flags for header.
 151:lwIP/src/core/tcp_out.c ****  * @param seqno TCP sequence number of this packet
 152:lwIP/src/core/tcp_out.c ****  * @param optflags options to include in TCP header
 153:lwIP/src/core/tcp_out.c ****  * @return a new tcp_seg pointing to p, or NULL.
 154:lwIP/src/core/tcp_out.c ****  * The TCP header is filled in except ackno and wnd.
 155:lwIP/src/core/tcp_out.c ****  * p is freed on failure.
 156:lwIP/src/core/tcp_out.c ****  */
 157:lwIP/src/core/tcp_out.c **** static struct tcp_seg *
 158:lwIP/src/core/tcp_out.c **** tcp_create_segment(const struct tcp_pcb *pcb, struct pbuf *p, u8_t hdrflags, u32_t seqno, u8_t optf
 159:lwIP/src/core/tcp_out.c **** {
 160:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg;
 161:lwIP/src/core/tcp_out.c ****   u8_t optlen;
 162:lwIP/src/core/tcp_out.c **** 
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pcb", pcb != NULL);
 164:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 165:lwIP/src/core/tcp_out.c **** 
 166:lwIP/src/core/tcp_out.c ****   optlen = LWIP_TCP_OPT_LENGTH_SEGMENT(optflags, pcb);
 167:lwIP/src/core/tcp_out.c **** 
 168:lwIP/src/core/tcp_out.c ****   if ((seg = (struct tcp_seg *)memp_malloc(MEMP_TCP_SEG)) == NULL) {
 169:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no memory.\n"));
 170:lwIP/src/core/tcp_out.c ****     pbuf_free(p);
 171:lwIP/src/core/tcp_out.c ****     return NULL;
 172:lwIP/src/core/tcp_out.c ****   }
 173:lwIP/src/core/tcp_out.c ****   seg->flags = optflags;
 174:lwIP/src/core/tcp_out.c ****   seg->next = NULL;
 175:lwIP/src/core/tcp_out.c ****   seg->p = p;
 176:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("p->tot_len >= optlen", p->tot_len >= optlen);
 177:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 178:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 179:lwIP/src/core/tcp_out.c ****   seg->oversize_left = 0;
 180:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE_DBGCHECK */
 181:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 182:lwIP/src/core/tcp_out.c ****   seg->chksum = 0;
 183:lwIP/src/core/tcp_out.c ****   seg->chksum_swapped = 0;
 184:lwIP/src/core/tcp_out.c ****   /* check optflags */
 185:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("invalid optflags passed: TF_SEG_DATA_CHECKSUMMED",
ARM GAS  /tmp/ccH0Y1hM.s 			page 5


 186:lwIP/src/core/tcp_out.c ****               (optflags & TF_SEG_DATA_CHECKSUMMED) == 0);
 187:lwIP/src/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 188:lwIP/src/core/tcp_out.c **** 
 189:lwIP/src/core/tcp_out.c ****   /* build TCP header */
 190:lwIP/src/core/tcp_out.c ****   if (pbuf_add_header(p, TCP_HLEN)) {
 191:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no room for TCP he
 192:lwIP/src/core/tcp_out.c ****     TCP_STATS_INC(tcp.err);
 193:lwIP/src/core/tcp_out.c ****     tcp_seg_free(seg);
 194:lwIP/src/core/tcp_out.c ****     return NULL;
 195:lwIP/src/core/tcp_out.c ****   }
 196:lwIP/src/core/tcp_out.c ****   seg->tcphdr = (struct tcp_hdr *)seg->p->payload;
 197:lwIP/src/core/tcp_out.c ****   seg->tcphdr->src = lwip_htons(pcb->local_port);
 198:lwIP/src/core/tcp_out.c ****   seg->tcphdr->dest = lwip_htons(pcb->remote_port);
 199:lwIP/src/core/tcp_out.c ****   seg->tcphdr->seqno = lwip_htonl(seqno);
 200:lwIP/src/core/tcp_out.c ****   /* ackno is set in tcp_output */
 201:lwIP/src/core/tcp_out.c ****   TCPH_HDRLEN_FLAGS_SET(seg->tcphdr, (5 + optlen / 4), hdrflags);
 202:lwIP/src/core/tcp_out.c ****   /* wnd and chksum are set in tcp_output */
 203:lwIP/src/core/tcp_out.c ****   seg->tcphdr->urgp = 0;
 204:lwIP/src/core/tcp_out.c ****   return seg;
 205:lwIP/src/core/tcp_out.c **** }
 206:lwIP/src/core/tcp_out.c **** 
 207:lwIP/src/core/tcp_out.c **** /**
 208:lwIP/src/core/tcp_out.c ****  * Allocate a PBUF_RAM pbuf, perhaps with extra space at the end.
 209:lwIP/src/core/tcp_out.c ****  *
 210:lwIP/src/core/tcp_out.c ****  * This function is like pbuf_alloc(layer, length, PBUF_RAM) except
 211:lwIP/src/core/tcp_out.c ****  * there may be extra bytes available at the end.
 212:lwIP/src/core/tcp_out.c ****  *
 213:lwIP/src/core/tcp_out.c ****  * Called by @ref tcp_write
 214:lwIP/src/core/tcp_out.c ****  *
 215:lwIP/src/core/tcp_out.c ****  * @param layer flag to define header size.
 216:lwIP/src/core/tcp_out.c ****  * @param length size of the pbuf's payload.
 217:lwIP/src/core/tcp_out.c ****  * @param max_length maximum usable size of payload+oversize.
 218:lwIP/src/core/tcp_out.c ****  * @param oversize pointer to a u16_t that will receive the number of usable tail bytes.
 219:lwIP/src/core/tcp_out.c ****  * @param pcb The TCP connection that will enqueue the pbuf.
 220:lwIP/src/core/tcp_out.c ****  * @param apiflags API flags given to tcp_write.
 221:lwIP/src/core/tcp_out.c ****  * @param first_seg true when this pbuf will be used in the first enqueued segment.
 222:lwIP/src/core/tcp_out.c ****  */
 223:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE
 224:lwIP/src/core/tcp_out.c **** static struct pbuf *
 225:lwIP/src/core/tcp_out.c **** tcp_pbuf_prealloc(pbuf_layer layer, u16_t length, u16_t max_length,
 226:lwIP/src/core/tcp_out.c ****                   u16_t *oversize, const struct tcp_pcb *pcb, u8_t apiflags,
 227:lwIP/src/core/tcp_out.c ****                   u8_t first_seg)
 228:lwIP/src/core/tcp_out.c **** {
  37              		.loc 1 228 1 view -0
  38              		.cfi_startproc
  39              		@ args = 12, pretend = 0, frame = 0
  40              		@ frame_needed = 0, uses_anonymous_args = 0
 229:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
  41              		.loc 1 229 3 view .LVU1
 230:lwIP/src/core/tcp_out.c ****   u16_t alloc = length;
  42              		.loc 1 230 3 view .LVU2
 228:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
  43              		.loc 1 228 1 is_stmt 0 view .LVU3
  44 0000 70B5     		push	{r4, r5, r6, lr}
  45              	.LCFI0:
  46              		.cfi_def_cfa_offset 16
  47              		.cfi_offset 4, -16
ARM GAS  /tmp/ccH0Y1hM.s 			page 6


  48              		.cfi_offset 5, -12
  49              		.cfi_offset 6, -8
  50              		.cfi_offset 14, -4
 228:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
  51              		.loc 1 228 1 view .LVU4
  52 0002 049E     		ldr	r6, [sp, #16]
  53 0004 0C46     		mov	r4, r1
  54              	.LVL1:
 231:lwIP/src/core/tcp_out.c **** 
 232:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_pbuf_prealloc: invalid oversize", oversize != NULL);
  55              		.loc 1 232 3 is_stmt 1 view .LVU5
  56              		.loc 1 232 3 view .LVU6
  57              		.loc 1 232 3 view .LVU7
 233:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_pbuf_prealloc: invalid pcb", pcb != NULL);
  58              		.loc 1 233 3 view .LVU8
  59              		.loc 1 233 3 view .LVU9
 228:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
  60              		.loc 1 228 1 is_stmt 0 view .LVU10
  61 0006 1D46     		mov	r5, r3
  62 0008 9DF81410 		ldrb	r1, [sp, #20]	@ zero_extendqisi2
  63              	.LVL2:
 228:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
  64              		.loc 1 228 1 view .LVU11
  65 000c 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
  66              	.LVL3:
  67              		.loc 1 233 3 view .LVU12
  68 0010 56B3     		cbz	r6, .L20
  69              	.LVL4:
  70              	.LBB170:
  71              	.LBI170:
 225:lwIP/src/core/tcp_out.c ****                   u16_t *oversize, const struct tcp_pcb *pcb, u8_t apiflags,
  72              		.loc 1 225 1 is_stmt 1 view .LVU13
  73              	.LBB171:
  74              		.loc 1 233 3 view .LVU14
 234:lwIP/src/core/tcp_out.c **** 
 235:lwIP/src/core/tcp_out.c **** #if LWIP_NETIF_TX_SINGLE_PBUF
 236:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(max_length);
 237:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(pcb);
 238:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(apiflags);
 239:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(first_seg);
 240:lwIP/src/core/tcp_out.c ****   alloc = max_length;
 241:lwIP/src/core/tcp_out.c **** #else /* LWIP_NETIF_TX_SINGLE_PBUF */
 242:lwIP/src/core/tcp_out.c ****   if (length < max_length) {
  75              		.loc 1 242 3 view .LVU15
  76              		.loc 1 242 6 is_stmt 0 view .LVU16
  77 0012 9442     		cmp	r4, r2
  78 0014 0BD3     		bcc	.L21
  79              	.LVL5:
  80              	.L11:
  81              		.loc 1 242 6 view .LVU17
  82 0016 2146     		mov	r1, r4
  83              	.L4:
  84              	.LVL6:
 243:lwIP/src/core/tcp_out.c ****     /* Should we allocate an oversized pbuf, or just the minimum
 244:lwIP/src/core/tcp_out.c ****      * length required? If tcp_write is going to be called again
 245:lwIP/src/core/tcp_out.c ****      * before this segment is transmitted, we want the oversized
 246:lwIP/src/core/tcp_out.c ****      * buffer. If the segment will be transmitted immediately, we can
ARM GAS  /tmp/ccH0Y1hM.s 			page 7


 247:lwIP/src/core/tcp_out.c ****      * save memory by allocating only length. We use a simple
 248:lwIP/src/core/tcp_out.c ****      * heuristic based on the following information:
 249:lwIP/src/core/tcp_out.c ****      *
 250:lwIP/src/core/tcp_out.c ****      * Did the user set TCP_WRITE_FLAG_MORE?
 251:lwIP/src/core/tcp_out.c ****      *
 252:lwIP/src/core/tcp_out.c ****      * Will the Nagle algorithm defer transmission of this segment?
 253:lwIP/src/core/tcp_out.c ****      */
 254:lwIP/src/core/tcp_out.c ****     if ((apiflags & TCP_WRITE_FLAG_MORE) ||
 255:lwIP/src/core/tcp_out.c ****         (!(pcb->flags & TF_NODELAY) &&
 256:lwIP/src/core/tcp_out.c ****          (!first_seg ||
 257:lwIP/src/core/tcp_out.c ****           pcb->unsent != NULL ||
 258:lwIP/src/core/tcp_out.c ****           pcb->unacked != NULL))) {
 259:lwIP/src/core/tcp_out.c ****       alloc = LWIP_MIN(max_length, LWIP_MEM_ALIGN_SIZE(TCP_OVERSIZE_CALC_LENGTH(length)));
 260:lwIP/src/core/tcp_out.c ****     }
 261:lwIP/src/core/tcp_out.c ****   }
 262:lwIP/src/core/tcp_out.c **** #endif /* LWIP_NETIF_TX_SINGLE_PBUF */
 263:lwIP/src/core/tcp_out.c ****   p = pbuf_alloc(layer, alloc, PBUF_RAM);
  85              		.loc 1 263 3 is_stmt 1 view .LVU18
  86              		.loc 1 263 7 is_stmt 0 view .LVU19
  87 0018 4FF42072 		mov	r2, #640
  88              	.LVL7:
  89              		.loc 1 263 7 view .LVU20
  90 001c FFF7FEFF 		bl	pbuf_alloc
  91              	.LVL8:
 264:lwIP/src/core/tcp_out.c ****   if (p == NULL) {
  92              		.loc 1 264 3 is_stmt 1 view .LVU21
  93              		.loc 1 264 6 is_stmt 0 view .LVU22
  94 0020 08B3     		cbz	r0, .L1
 265:lwIP/src/core/tcp_out.c ****     return NULL;
 266:lwIP/src/core/tcp_out.c ****   }
 267:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("need unchained pbuf", p->next == NULL);
  95              		.loc 1 267 3 is_stmt 1 view .LVU23
  96              		.loc 1 267 3 view .LVU24
  97 0022 0268     		ldr	r2, [r0]
  98 0024 BAB1     		cbz	r2, .L7
  99              		.loc 1 267 3 view .LVU25
 100 0026 1248     		ldr	r0, .L22
 101              	.LVL9:
 102              		.loc 1 267 3 is_stmt 0 view .LVU26
 103 0028 FFF7FEFF 		bl	printf
 104              	.LVL10:
 105              	.L8:
 106              		.loc 1 267 3 is_stmt 1 view .LVU27
 107              		.loc 1 267 3 view .LVU28
 108              		.loc 1 267 3 view .LVU29
 109              		.loc 1 267 3 view .LVU30
 110              		.loc 1 267 3 view .LVU31
 111              		.loc 1 267 3 view .LVU32
 112 002c FEE7     		b	.L8
 113              	.LVL11:
 114              	.L21:
 254:lwIP/src/core/tcp_out.c ****         (!(pcb->flags & TF_NODELAY) &&
 115              		.loc 1 254 5 view .LVU33
 254:lwIP/src/core/tcp_out.c ****         (!(pcb->flags & TF_NODELAY) &&
 116              		.loc 1 254 8 is_stmt 0 view .LVU34
 117 002e 8907     		lsls	r1, r1, #30
 118              	.LVL12:
ARM GAS  /tmp/ccH0Y1hM.s 			page 8


 254:lwIP/src/core/tcp_out.c ****         (!(pcb->flags & TF_NODELAY) &&
 119              		.loc 1 254 8 view .LVU35
 120 0030 08D4     		bmi	.L5
 254:lwIP/src/core/tcp_out.c ****         (!(pcb->flags & TF_NODELAY) &&
 121              		.loc 1 254 42 view .LVU36
 122 0032 718B     		ldrh	r1, [r6, #26]
 123 0034 4906     		lsls	r1, r1, #25
 124 0036 EED4     		bmi	.L11
 255:lwIP/src/core/tcp_out.c ****          (!first_seg ||
 125              		.loc 1 255 37 view .LVU37
 126 0038 23B1     		cbz	r3, .L5
 256:lwIP/src/core/tcp_out.c ****           pcb->unsent != NULL ||
 127              		.loc 1 256 22 view .LVU38
 128 003a F36E     		ldr	r3, [r6, #108]
 129              	.LVL13:
 256:lwIP/src/core/tcp_out.c ****           pcb->unsent != NULL ||
 130              		.loc 1 256 22 view .LVU39
 131 003c 13B9     		cbnz	r3, .L5
 257:lwIP/src/core/tcp_out.c ****           pcb->unacked != NULL))) {
 132              		.loc 1 257 31 view .LVU40
 133 003e 336F     		ldr	r3, [r6, #112]
 134 0040 002B     		cmp	r3, #0
 135 0042 E8D0     		beq	.L11
 136              	.L5:
 259:lwIP/src/core/tcp_out.c ****     }
 137              		.loc 1 259 7 is_stmt 1 view .LVU41
 259:lwIP/src/core/tcp_out.c ****     }
 138              		.loc 1 259 15 is_stmt 0 view .LVU42
 139 0044 04F2B751 		addw	r1, r4, #1463
 140 0048 21F00301 		bic	r1, r1, #3
 141 004c 9142     		cmp	r1, r2
 142 004e 28BF     		it	cs
 143 0050 1146     		movcs	r1, r2
 259:lwIP/src/core/tcp_out.c ****     }
 144              		.loc 1 259 13 view .LVU43
 145 0052 89B2     		uxth	r1, r1
 146              	.LVL14:
 259:lwIP/src/core/tcp_out.c ****     }
 147              		.loc 1 259 13 view .LVU44
 148 0054 E0E7     		b	.L4
 149              	.LVL15:
 150              	.L7:
 151              		.loc 1 267 3 is_stmt 1 view .LVU45
 268:lwIP/src/core/tcp_out.c ****   *oversize = p->len - length;
 152              		.loc 1 268 3 view .LVU46
 153              		.loc 1 268 22 is_stmt 0 view .LVU47
 154 0056 4389     		ldrh	r3, [r0, #10]
 269:lwIP/src/core/tcp_out.c ****   /* trim p->len to the currently used size */
 270:lwIP/src/core/tcp_out.c ****   p->len = p->tot_len = length;
 155              		.loc 1 270 23 view .LVU48
 156 0058 64F30F02 		bfi	r2, r4, #0, #16
 157              	.LVL16:
 268:lwIP/src/core/tcp_out.c ****   *oversize = p->len - length;
 158              		.loc 1 268 22 view .LVU49
 159 005c 1B1B     		subs	r3, r3, r4
 160              		.loc 1 270 23 view .LVU50
 161 005e 64F31F42 		bfi	r2, r4, #16, #16
ARM GAS  /tmp/ccH0Y1hM.s 			page 9


 268:lwIP/src/core/tcp_out.c ****   *oversize = p->len - length;
 162              		.loc 1 268 13 view .LVU51
 163 0062 2B80     		strh	r3, [r5]	@ movhi
 164              		.loc 1 270 3 is_stmt 1 view .LVU52
 165              		.loc 1 270 23 is_stmt 0 view .LVU53
 166 0064 8260     		str	r2, [r0, #8]
 271:lwIP/src/core/tcp_out.c ****   return p;
 167              		.loc 1 271 3 is_stmt 1 view .LVU54
 168              	.LVL17:
 169              	.L1:
 170              		.loc 1 271 3 is_stmt 0 view .LVU55
 171              	.LBE171:
 172              	.LBE170:
 272:lwIP/src/core/tcp_out.c **** }
 173              		.loc 1 272 1 view .LVU56
 174 0066 70BD     		pop	{r4, r5, r6, pc}
 175              	.LVL18:
 176              	.L20:
 233:lwIP/src/core/tcp_out.c **** 
 177              		.loc 1 233 3 is_stmt 1 discriminator 1 view .LVU57
 178 0068 0248     		ldr	r0, .L22+4
 179              	.LVL19:
 233:lwIP/src/core/tcp_out.c **** 
 180              		.loc 1 233 3 is_stmt 0 discriminator 1 view .LVU58
 181 006a FFF7FEFF 		bl	printf
 182              	.LVL20:
 183              	.L3:
 233:lwIP/src/core/tcp_out.c **** 
 184              		.loc 1 233 3 is_stmt 1 discriminator 2 view .LVU59
 233:lwIP/src/core/tcp_out.c **** 
 185              		.loc 1 233 3 discriminator 2 view .LVU60
 233:lwIP/src/core/tcp_out.c **** 
 186              		.loc 1 233 3 discriminator 2 view .LVU61
 233:lwIP/src/core/tcp_out.c **** 
 187              		.loc 1 233 3 discriminator 2 view .LVU62
 233:lwIP/src/core/tcp_out.c **** 
 188              		.loc 1 233 3 discriminator 2 view .LVU63
 233:lwIP/src/core/tcp_out.c **** 
 189              		.loc 1 233 3 discriminator 2 view .LVU64
 190 006e FEE7     		b	.L3
 191              	.L23:
 192              		.align	2
 193              	.L22:
 194 0070 20000000 		.word	.LC1
 195 0074 00000000 		.word	.LC0
 196              		.cfi_endproc
 197              	.LFE107:
 199              		.section	.rodata.tcp_create_segment.part.0.str1.4,"aMS",%progbits,1
 200              		.align	2
 201              	.LC2:
 202 0000 702D3E74 		.ascii	"p->tot_len >= optlen\000"
 202      6F745F6C 
 202      656E203E 
 202      3D206F70 
 202      746C656E 
 203              		.section	.text.tcp_create_segment.part.0,"ax",%progbits
 204              		.align	1
ARM GAS  /tmp/ccH0Y1hM.s 			page 10


 205              		.p2align 2,,3
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv4-sp-d16
 211              	tcp_create_segment.part.0:
 212              	.LVL21:
 213              	.LFB132:
 158:lwIP/src/core/tcp_out.c **** {
 214              		.loc 1 158 1 view -0
 215              		.cfi_startproc
 216              		@ args = 4, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 164:lwIP/src/core/tcp_out.c **** 
 218              		.loc 1 164 3 view .LVU66
 166:lwIP/src/core/tcp_out.c **** 
 219              		.loc 1 166 3 view .LVU67
 158:lwIP/src/core/tcp_out.c **** {
 220              		.loc 1 158 1 is_stmt 0 view .LVU68
 221 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 222              	.LCFI1:
 223              		.cfi_def_cfa_offset 32
 224              		.cfi_offset 4, -32
 225              		.cfi_offset 5, -28
 226              		.cfi_offset 6, -24
 227              		.cfi_offset 7, -20
 228              		.cfi_offset 8, -16
 229              		.cfi_offset 9, -12
 230              		.cfi_offset 10, -8
 231              		.cfi_offset 14, -4
 158:lwIP/src/core/tcp_out.c **** {
 232              		.loc 1 158 1 view .LVU69
 233 0004 8046     		mov	r8, r0
 168:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no memory.\n"));
 234              		.loc 1 168 32 view .LVU70
 235 0006 0320     		movs	r0, #3
 236              	.LVL22:
 158:lwIP/src/core/tcp_out.c **** {
 237              		.loc 1 158 1 view .LVU71
 238 0008 9DF820A0 		ldrb	r10, [sp, #32]	@ zero_extendqisi2
 239 000c 0F46     		mov	r7, r1
 240 000e 1646     		mov	r6, r2
 241 0010 9946     		mov	r9, r3
 242              	.LVL23:
 168:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no memory.\n"));
 243              		.loc 1 168 3 is_stmt 1 view .LVU72
 168:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no memory.\n"));
 244              		.loc 1 168 32 is_stmt 0 view .LVU73
 245 0012 FFF7FEFF 		bl	memp_malloc
 246              	.LVL24:
 168:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no memory.\n"));
 247              		.loc 1 168 6 view .LVU74
 248 0016 0446     		mov	r4, r0
 249 0018 C0B3     		cbz	r0, .L31
 250 001a 4FEA8A05 		lsl	r5, r10, #2
 251              	.LVL25:
 173:lwIP/src/core/tcp_out.c ****   seg->next = NULL;
ARM GAS  /tmp/ccH0Y1hM.s 			page 11


 252              		.loc 1 173 14 view .LVU75
 253 001e 80F80AA0 		strb	r10, [r0, #10]
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 254              		.loc 1 176 3 view .LVU76
 255 0022 3B89     		ldrh	r3, [r7, #8]
 174:lwIP/src/core/tcp_out.c ****   seg->p = p;
 256              		.loc 1 174 13 view .LVU77
 257 0024 4FF0000A 		mov	r10, #0
 258 0028 05F00405 		and	r5, r5, #4
 259              	.LVL26:
 173:lwIP/src/core/tcp_out.c ****   seg->next = NULL;
 260              		.loc 1 173 3 is_stmt 1 view .LVU78
 174:lwIP/src/core/tcp_out.c ****   seg->p = p;
 261              		.loc 1 174 3 view .LVU79
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 262              		.loc 1 176 3 is_stmt 0 view .LVU80
 263 002c AB42     		cmp	r3, r5
 264 002e AAB2     		uxth	r2, r5
 174:lwIP/src/core/tcp_out.c ****   seg->p = p;
 265              		.loc 1 174 13 view .LVU81
 266 0030 C0E900A7 		strd	r10, r7, [r0]
 175:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("p->tot_len >= optlen", p->tot_len >= optlen);
 267              		.loc 1 175 3 is_stmt 1 view .LVU82
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 268              		.loc 1 176 3 view .LVU83
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 269              		.loc 1 176 3 view .LVU84
 270 0034 21D3     		bcc	.L32
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 271              		.loc 1 176 3 view .LVU85
 177:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 272              		.loc 1 177 3 view .LVU86
 177:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 273              		.loc 1 177 25 is_stmt 0 view .LVU87
 274 0036 9B1A     		subs	r3, r3, r2
 190:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no room for TCP he
 275              		.loc 1 190 7 view .LVU88
 276 0038 3846     		mov	r0, r7
 277              	.LVL27:
 190:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no room for TCP he
 278              		.loc 1 190 7 view .LVU89
 279 003a 1421     		movs	r1, #20
 177:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 280              		.loc 1 177 12 view .LVU90
 281 003c 2381     		strh	r3, [r4, #8]	@ movhi
 190:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no room for TCP he
 282              		.loc 1 190 3 is_stmt 1 view .LVU91
 190:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no room for TCP he
 283              		.loc 1 190 7 is_stmt 0 view .LVU92
 284 003e FFF7FEFF 		bl	pbuf_add_header
 285              	.LVL28:
 190:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no room for TCP he
 286              		.loc 1 190 6 view .LVU93
 287 0042 0246     		mov	r2, r0
 288 0044 E8B9     		cbnz	r0, .L33
 196:lwIP/src/core/tcp_out.c ****   seg->tcphdr->src = lwip_htons(pcb->local_port);
 289              		.loc 1 196 3 is_stmt 1 view .LVU94
ARM GAS  /tmp/ccH0Y1hM.s 			page 12


 201:lwIP/src/core/tcp_out.c ****   /* wnd and chksum are set in tcp_output */
 290              		.loc 1 201 3 is_stmt 0 view .LVU95
 291 0046 A908     		lsrs	r1, r5, #2
 292              	.LBB180:
 293              	.LBB181:
 294              		.file 2 "STM32_XPD/CMSIS/Include/cmsis_gcc.h"
   1:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /*
   8:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  *
  10:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  *
  12:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  *
  16:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  *
  18:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
  24:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
  25:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
  28:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
  34:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  38:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
  39:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  43:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  46:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  49:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif                                           
ARM GAS  /tmp/ccH0Y1hM.s 			page 13


  52:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  55:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  58:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  61:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  64:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  67:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  70:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  78:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  86:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  94:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 102:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  /tmp/ccH0Y1hM.s 			page 14


 109:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 110:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 113:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 116:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 117:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 118:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   @{
 122:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 123:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 124:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 125:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 129:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 131:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 133:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 134:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 135:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 136:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 140:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 142:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 144:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 145:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 146:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 147:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 151:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 153:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 155:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 158:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 159:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 160:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 162:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccH0Y1hM.s 			page 15


 166:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 168:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 170:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 173:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 174:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 175:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 176:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 177:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 181:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 183:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 185:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 186:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 187:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 189:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 193:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 195:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 197:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 198:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 199:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 200:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 201:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 205:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 207:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 209:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 212:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 213:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 214:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 215:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 219:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 221:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccH0Y1hM.s 			page 16


 223:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 226:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 227:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 228:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 229:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 233:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 235:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 237:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 240:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 241:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 242:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 243:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 247:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 249:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 251:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 254:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 255:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 256:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 258:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 262:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 264:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 266:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 269:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 270:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 271:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 272:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 273:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 277:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 279:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
ARM GAS  /tmp/ccH0Y1hM.s 			page 17


 280:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 281:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 282:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 283:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 285:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 289:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 291:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 293:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 294:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 295:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 296:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 297:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 301:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 303:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 305:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 308:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 309:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 310:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 312:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 316:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 318:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 320:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 323:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 324:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 325:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 326:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 327:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 331:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 333:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 335:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 336:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccH0Y1hM.s 			page 18


 337:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 339:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 343:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 345:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 347:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 348:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 349:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 350:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 352:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 356:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 358:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 360:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 363:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 364:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 365:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 366:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 370:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 372:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 374:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 375:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 376:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 377:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 378:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 382:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 384:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 386:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 389:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 390:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 391:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 393:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
ARM GAS  /tmp/ccH0Y1hM.s 			page 19


 394:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 397:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 399:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 401:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 404:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 405:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 406:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 407:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 408:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 412:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 414:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 416:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 417:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 418:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 420:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 424:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 426:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 428:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 429:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 430:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 431:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 435:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 439:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 441:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 443:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 444:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 445:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 446:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 450:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
ARM GAS  /tmp/ccH0Y1hM.s 			page 20


 451:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 452:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 454:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 455:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 456:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 457:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 461:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 463:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 465:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 468:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 469:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 470:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 472:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 476:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 478:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 480:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 483:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 484:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 485:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 486:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 487:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 491:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 493:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 495:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 496:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 497:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 499:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 503:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 505:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 507:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccH0Y1hM.s 			page 21


 508:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 509:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 510:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 511:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 516:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 518:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 520:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 521:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 522:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 523:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 527:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 529:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 531:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 534:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 535:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 536:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 538:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 542:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 544:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 546:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 549:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 550:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 551:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 552:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 553:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 557:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 559:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 561:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 562:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 563:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccH0Y1hM.s 			page 22


 565:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 569:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 571:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 573:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 574:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 575:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 579:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 580:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 583:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 584:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   
 589:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 592:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 594:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 599:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 603:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 604:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 605:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 607:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 611:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 614:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 616:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 620:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
ARM GAS  /tmp/ccH0Y1hM.s 			page 23


 622:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 624:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 625:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 626:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 627:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 628:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 629:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   
 634:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 637:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 639:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 644:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 646:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 647:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 648:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 649:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 651:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 655:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 658:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 660:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 664:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 666:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 667:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 668:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 669:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 670:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 671:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 676:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccH0Y1hM.s 			page 24


 679:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 681:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 686:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 690:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 691:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 692:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 693:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 695:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 699:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 702:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 704:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 708:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 712:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 713:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 714:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 715:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 716:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 717:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 722:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 725:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 727:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 732:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 734:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 735:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccH0Y1hM.s 			page 25


 736:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 737:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 739:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 743:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 746:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 748:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 752:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 754:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 755:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 756:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 757:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 760:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 761:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 762:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 766:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 768:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 776:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 778:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 781:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 782:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 784:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 785:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 786:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 787:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 788:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 792:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
ARM GAS  /tmp/ccH0Y1hM.s 			page 26


 793:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 794:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 802:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 804:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 805:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 807:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 808:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 809:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 810:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 812:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 813:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   @{
 817:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** */
 818:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 819:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 827:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 831:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 832:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 833:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 836:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 838:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 839:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 842:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 844:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 845:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 846:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccH0Y1hM.s 			page 27


 850:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 852:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 853:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 854:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 857:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 859:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 860:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 861:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 866:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 868:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 870:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 871:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 872:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 873:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 877:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 879:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 881:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 882:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 883:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 884:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 888:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 890:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 892:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 893:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 894:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 895:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 902:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 905:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccH0Y1hM.s 			page 28


 907:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 910:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 911:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 912:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 913:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 914:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 919:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 921:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 923:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 926:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 927:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 928:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 929:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 936:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 295              		.loc 2 937 19 view .LVU96
 296 0048 B8F81800 		ldrh	r0, [r8, #24]
 297              	.LBE181:
 298              	.LBE180:
 299              	.LBB184:
 300              	.LBB185:
 301 004c B8F81650 		ldrh	r5, [r8, #22]
 302              	.LBE185:
 303              	.LBE184:
 304              	.LBB188:
 305              	.LBB189:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 306              		.loc 2 903 10 view .LVU97
 307 0050 99FA89F9 		rev	r9, r9
 308              	.LVL29:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 309              		.loc 2 903 10 view .LVU98
 310              	.LBE189:
 311              	.LBE188:
 201:lwIP/src/core/tcp_out.c ****   /* wnd and chksum are set in tcp_output */
 312              		.loc 1 201 3 view .LVU99
 313 0054 0531     		adds	r1, r1, #5
 196:lwIP/src/core/tcp_out.c ****   seg->tcphdr->src = lwip_htons(pcb->local_port);
 314              		.loc 1 196 41 view .LVU100
 315 0056 6368     		ldr	r3, [r4, #4]
 316              	.LBB191:
ARM GAS  /tmp/ccH0Y1hM.s 			page 29


 317              	.LBB186:
 318              		.loc 2 937 19 view .LVU101
 319 0058 6DBA     		rev16	r5, r5
 320              	.LBE186:
 321              	.LBE191:
 322              	.LBB192:
 323              	.LBB182:
 324 005a 40BA     		rev16	r0, r0
 325              	.LBE182:
 326              	.LBE192:
 201:lwIP/src/core/tcp_out.c ****   /* wnd and chksum are set in tcp_output */
 327              		.loc 1 201 3 view .LVU102
 328 005c 46EA0131 		orr	r1, r6, r1, lsl #12
 196:lwIP/src/core/tcp_out.c ****   seg->tcphdr->src = lwip_htons(pcb->local_port);
 329              		.loc 1 196 41 view .LVU103
 330 0060 5B68     		ldr	r3, [r3, #4]
 331              	.LBB193:
 332              	.LBB194:
 333              		.loc 2 937 19 view .LVU104
 334 0062 49BA     		rev16	r1, r1
 335              	.LBE194:
 336              	.LBE193:
 196:lwIP/src/core/tcp_out.c ****   seg->tcphdr->src = lwip_htons(pcb->local_port);
 337              		.loc 1 196 15 view .LVU105
 338 0064 E360     		str	r3, [r4, #12]
 197:lwIP/src/core/tcp_out.c ****   seg->tcphdr->dest = lwip_htons(pcb->remote_port);
 339              		.loc 1 197 3 is_stmt 1 view .LVU106
 340              	.LVL30:
 341              	.LBB196:
 342              	.LBI184:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 343              		.loc 2 934 30 view .LVU107
 344              	.LBB187:
 345              		.loc 2 937 3 view .LVU108
 346              		.loc 2 937 3 is_stmt 0 view .LVU109
 347              	.LBE187:
 348              	.LBE196:
 199:lwIP/src/core/tcp_out.c ****   /* ackno is set in tcp_output */
 349              		.loc 1 199 22 view .LVU110
 350 0066 C3F80490 		str	r9, [r3, #4]	@ unaligned
 203:lwIP/src/core/tcp_out.c ****   return seg;
 351              		.loc 1 203 21 view .LVU111
 352 006a 9A74     		strb	r2, [r3, #18]
 201:lwIP/src/core/tcp_out.c ****   /* wnd and chksum are set in tcp_output */
 353              		.loc 1 201 3 view .LVU112
 354 006c 9981     		strh	r1, [r3, #12]	@ unaligned
 203:lwIP/src/core/tcp_out.c ****   return seg;
 355              		.loc 1 203 21 view .LVU113
 356 006e DA74     		strb	r2, [r3, #19]
 197:lwIP/src/core/tcp_out.c ****   seg->tcphdr->dest = lwip_htons(pcb->remote_port);
 357              		.loc 1 197 20 view .LVU114
 358 0070 1D80     		strh	r5, [r3]	@ unaligned
 198:lwIP/src/core/tcp_out.c ****   seg->tcphdr->seqno = lwip_htonl(seqno);
 359              		.loc 1 198 3 is_stmt 1 view .LVU115
 360              	.LBB197:
 361              	.LBI180:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccH0Y1hM.s 			page 30


 362              		.loc 2 934 30 view .LVU116
 363              	.LBB183:
 364              		.loc 2 937 3 view .LVU117
 365              	.LBE183:
 366              	.LBE197:
 198:lwIP/src/core/tcp_out.c ****   seg->tcphdr->seqno = lwip_htonl(seqno);
 367              		.loc 1 198 21 is_stmt 0 view .LVU118
 368 0072 5880     		strh	r0, [r3, #2]	@ unaligned
 199:lwIP/src/core/tcp_out.c ****   /* ackno is set in tcp_output */
 369              		.loc 1 199 3 is_stmt 1 view .LVU119
 370              	.LVL31:
 371              	.LBB198:
 372              	.LBI188:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 373              		.loc 2 900 31 view .LVU120
 374              	.LBB190:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 375              		.loc 2 903 3 view .LVU121
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 376              		.loc 2 903 3 is_stmt 0 view .LVU122
 377              	.LBE190:
 378              	.LBE198:
 201:lwIP/src/core/tcp_out.c ****   /* wnd and chksum are set in tcp_output */
 379              		.loc 1 201 3 is_stmt 1 view .LVU123
 380              	.LBB199:
 381              	.LBI193:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 382              		.loc 2 934 30 view .LVU124
 383              	.LBB195:
 384              		.loc 2 937 3 view .LVU125
 385              		.loc 2 937 3 is_stmt 0 view .LVU126
 386              	.LBE195:
 387              	.LBE199:
 203:lwIP/src/core/tcp_out.c ****   return seg;
 388              		.loc 1 203 3 is_stmt 1 view .LVU127
 204:lwIP/src/core/tcp_out.c **** }
 389              		.loc 1 204 3 view .LVU128
 390              	.L24:
 205:lwIP/src/core/tcp_out.c **** 
 391              		.loc 1 205 1 is_stmt 0 view .LVU129
 392 0074 2046     		mov	r0, r4
 393 0076 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 394              	.LVL32:
 395              	.L32:
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 396              		.loc 1 176 3 is_stmt 1 view .LVU130
 397 007a 0648     		ldr	r0, .L34
 398              	.LVL33:
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 399              		.loc 1 176 3 is_stmt 0 view .LVU131
 400 007c FFF7FEFF 		bl	printf
 401              	.LVL34:
 402              	.L28:
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 403              		.loc 1 176 3 is_stmt 1 view .LVU132
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 404              		.loc 1 176 3 view .LVU133
ARM GAS  /tmp/ccH0Y1hM.s 			page 31


 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 405              		.loc 1 176 3 view .LVU134
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 406              		.loc 1 176 3 view .LVU135
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 407              		.loc 1 176 3 view .LVU136
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 408              		.loc 1 176 3 view .LVU137
 409 0080 FEE7     		b	.L28
 410              	.L33:
 191:lwIP/src/core/tcp_out.c ****     TCP_STATS_INC(tcp.err);
 411              		.loc 1 191 118 view .LVU138
 192:lwIP/src/core/tcp_out.c ****     tcp_seg_free(seg);
 412              		.loc 1 192 27 view .LVU139
 193:lwIP/src/core/tcp_out.c ****     return NULL;
 413              		.loc 1 193 5 view .LVU140
 414 0082 2046     		mov	r0, r4
 194:lwIP/src/core/tcp_out.c ****   }
 415              		.loc 1 194 12 is_stmt 0 view .LVU141
 416 0084 5446     		mov	r4, r10
 417              	.LVL35:
 193:lwIP/src/core/tcp_out.c ****     return NULL;
 418              		.loc 1 193 5 view .LVU142
 419 0086 FFF7FEFF 		bl	tcp_seg_free
 420              	.LVL36:
 194:lwIP/src/core/tcp_out.c ****   }
 421              		.loc 1 194 5 is_stmt 1 view .LVU143
 194:lwIP/src/core/tcp_out.c ****   }
 422              		.loc 1 194 12 is_stmt 0 view .LVU144
 423 008a F3E7     		b	.L24
 424              	.LVL37:
 425              	.L31:
 169:lwIP/src/core/tcp_out.c ****     pbuf_free(p);
 426              		.loc 1 169 97 is_stmt 1 view .LVU145
 170:lwIP/src/core/tcp_out.c ****     return NULL;
 427              		.loc 1 170 5 view .LVU146
 428 008c 3846     		mov	r0, r7
 429              	.LVL38:
 170:lwIP/src/core/tcp_out.c ****     return NULL;
 430              		.loc 1 170 5 is_stmt 0 view .LVU147
 431 008e FFF7FEFF 		bl	pbuf_free
 432              	.LVL39:
 171:lwIP/src/core/tcp_out.c ****   }
 433              		.loc 1 171 5 is_stmt 1 view .LVU148
 171:lwIP/src/core/tcp_out.c ****   }
 434              		.loc 1 171 12 is_stmt 0 view .LVU149
 435 0092 EFE7     		b	.L24
 436              	.L35:
 437              		.align	2
 438              	.L34:
 439 0094 00000000 		.word	.LC2
 440              		.cfi_endproc
 441              	.LFE132:
 443              		.section	.rodata.tcp_output_control_segment.str1.4,"aMS",%progbits,1
 444              		.align	2
 445              	.LC3:
 446 0000 7463705F 		.ascii	"tcp_output_control_segment: invalid pbuf\000"
ARM GAS  /tmp/ccH0Y1hM.s 			page 32


 446      6F757470 
 446      75745F63 
 446      6F6E7472 
 446      6F6C5F73 
 447              		.section	.text.tcp_output_control_segment,"ax",%progbits
 448              		.align	1
 449              		.p2align 2,,3
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu fpv4-sp-d16
 455              	tcp_output_control_segment:
 456              	.LVL40:
 457              	.LFB124:
 273:lwIP/src/core/tcp_out.c **** #else /* TCP_OVERSIZE */
 274:lwIP/src/core/tcp_out.c **** #define tcp_pbuf_prealloc(layer, length, mx, os, pcb, api, fst) pbuf_alloc((layer), (length), PBUF_
 275:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 276:lwIP/src/core/tcp_out.c **** 
 277:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 278:lwIP/src/core/tcp_out.c **** /** Add a checksum of newly added data to the segment.
 279:lwIP/src/core/tcp_out.c ****  *
 280:lwIP/src/core/tcp_out.c ****  * Called by tcp_write and tcp_split_unsent_seg.
 281:lwIP/src/core/tcp_out.c ****  */
 282:lwIP/src/core/tcp_out.c **** static void
 283:lwIP/src/core/tcp_out.c **** tcp_seg_add_chksum(u16_t chksum, u16_t len, u16_t *seg_chksum,
 284:lwIP/src/core/tcp_out.c ****                    u8_t *seg_chksum_swapped)
 285:lwIP/src/core/tcp_out.c **** {
 286:lwIP/src/core/tcp_out.c ****   u32_t helper;
 287:lwIP/src/core/tcp_out.c ****   /* add chksum to old chksum and fold to u16_t */
 288:lwIP/src/core/tcp_out.c ****   helper = chksum + *seg_chksum;
 289:lwIP/src/core/tcp_out.c ****   chksum = FOLD_U32T(helper);
 290:lwIP/src/core/tcp_out.c ****   if ((len & 1) != 0) {
 291:lwIP/src/core/tcp_out.c ****     *seg_chksum_swapped = 1 - *seg_chksum_swapped;
 292:lwIP/src/core/tcp_out.c ****     chksum = SWAP_BYTES_IN_WORD(chksum);
 293:lwIP/src/core/tcp_out.c ****   }
 294:lwIP/src/core/tcp_out.c ****   *seg_chksum = chksum;
 295:lwIP/src/core/tcp_out.c **** }
 296:lwIP/src/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 297:lwIP/src/core/tcp_out.c **** 
 298:lwIP/src/core/tcp_out.c **** /** Checks if tcp_write is allowed or not (checks state, snd_buf and snd_queuelen).
 299:lwIP/src/core/tcp_out.c ****  *
 300:lwIP/src/core/tcp_out.c ****  * @param pcb the tcp pcb to check for
 301:lwIP/src/core/tcp_out.c ****  * @param len length of data to send (checked agains snd_buf)
 302:lwIP/src/core/tcp_out.c ****  * @return ERR_OK if tcp_write is allowed to proceed, another err_t otherwise
 303:lwIP/src/core/tcp_out.c ****  */
 304:lwIP/src/core/tcp_out.c **** static err_t
 305:lwIP/src/core/tcp_out.c **** tcp_write_checks(struct tcp_pcb *pcb, u16_t len)
 306:lwIP/src/core/tcp_out.c **** {
 307:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_write_checks: invalid pcb", pcb != NULL);
 308:lwIP/src/core/tcp_out.c **** 
 309:lwIP/src/core/tcp_out.c ****   /* connection is in invalid state for data transmission? */
 310:lwIP/src/core/tcp_out.c ****   if ((pcb->state != ESTABLISHED) &&
 311:lwIP/src/core/tcp_out.c ****       (pcb->state != CLOSE_WAIT) &&
 312:lwIP/src/core/tcp_out.c ****       (pcb->state != SYN_SENT) &&
 313:lwIP/src/core/tcp_out.c ****       (pcb->state != SYN_RCVD)) {
 314:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_STATE | LWIP_DBG_LEVEL_SEVERE, ("tcp_write() called in 
 315:lwIP/src/core/tcp_out.c ****     return ERR_CONN;
ARM GAS  /tmp/ccH0Y1hM.s 			page 33


 316:lwIP/src/core/tcp_out.c ****   } else if (len == 0) {
 317:lwIP/src/core/tcp_out.c ****     return ERR_OK;
 318:lwIP/src/core/tcp_out.c ****   }
 319:lwIP/src/core/tcp_out.c **** 
 320:lwIP/src/core/tcp_out.c ****   /* fail on too much data */
 321:lwIP/src/core/tcp_out.c ****   if (len > pcb->snd_buf) {
 322:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SEVERE, ("tcp_write: too much data (len=%"U16_F" 
 323:lwIP/src/core/tcp_out.c ****                 len, pcb->snd_buf));
 324:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 325:lwIP/src/core/tcp_out.c ****     return ERR_MEM;
 326:lwIP/src/core/tcp_out.c ****   }
 327:lwIP/src/core/tcp_out.c **** 
 328:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_write: queuelen: %"TCPWNDSIZE_F"\n", (tcpwnd_size_t)pcb->snd_qu
 329:lwIP/src/core/tcp_out.c **** 
 330:lwIP/src/core/tcp_out.c ****   /* If total number of pbufs on the unsent/unacked queues exceeds the
 331:lwIP/src/core/tcp_out.c ****    * configured maximum, return an error */
 332:lwIP/src/core/tcp_out.c ****   /* check for configured max queuelen and possible overflow */
 333:lwIP/src/core/tcp_out.c ****   if (pcb->snd_queuelen >= LWIP_MIN(TCP_SND_QUEUELEN, (TCP_SNDQUEUELEN_OVERFLOW + 1))) {
 334:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SEVERE, ("tcp_write: too long queue %"U16_F" (max
 335:lwIP/src/core/tcp_out.c ****                 pcb->snd_queuelen, (u16_t)TCP_SND_QUEUELEN));
 336:lwIP/src/core/tcp_out.c ****     TCP_STATS_INC(tcp.memerr);
 337:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 338:lwIP/src/core/tcp_out.c ****     return ERR_MEM;
 339:lwIP/src/core/tcp_out.c ****   }
 340:lwIP/src/core/tcp_out.c ****   if (pcb->snd_queuelen != 0) {
 341:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: pbufs on queue => at least one queue non-empty",
 342:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 343:lwIP/src/core/tcp_out.c ****   } else {
 344:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: no pbufs on queue => both queues empty",
 345:lwIP/src/core/tcp_out.c ****                 pcb->unacked == NULL && pcb->unsent == NULL);
 346:lwIP/src/core/tcp_out.c ****   }
 347:lwIP/src/core/tcp_out.c ****   return ERR_OK;
 348:lwIP/src/core/tcp_out.c **** }
 349:lwIP/src/core/tcp_out.c **** 
 350:lwIP/src/core/tcp_out.c **** /**
 351:lwIP/src/core/tcp_out.c ****  * @ingroup tcp_raw
 352:lwIP/src/core/tcp_out.c ****  * Write data for sending (but does not send it immediately).
 353:lwIP/src/core/tcp_out.c ****  *
 354:lwIP/src/core/tcp_out.c ****  * It waits in the expectation of more data being sent soon (as
 355:lwIP/src/core/tcp_out.c ****  * it can send them more efficiently by combining them together).
 356:lwIP/src/core/tcp_out.c ****  * To prompt the system to send data now, call tcp_output() after
 357:lwIP/src/core/tcp_out.c ****  * calling tcp_write().
 358:lwIP/src/core/tcp_out.c ****  * 
 359:lwIP/src/core/tcp_out.c ****  * This function enqueues the data pointed to by the argument dataptr. The length of
 360:lwIP/src/core/tcp_out.c ****  * the data is passed as the len parameter. The apiflags can be one or more of:
 361:lwIP/src/core/tcp_out.c ****  * - TCP_WRITE_FLAG_COPY: indicates whether the new memory should be allocated
 362:lwIP/src/core/tcp_out.c ****  *   for the data to be copied into. If this flag is not given, no new memory
 363:lwIP/src/core/tcp_out.c ****  *   should be allocated and the data should only be referenced by pointer. This
 364:lwIP/src/core/tcp_out.c ****  *   also means that the memory behind dataptr must not change until the data is
 365:lwIP/src/core/tcp_out.c ****  *   ACKed by the remote host
 366:lwIP/src/core/tcp_out.c ****  * - TCP_WRITE_FLAG_MORE: indicates that more data follows. If this is omitted,
 367:lwIP/src/core/tcp_out.c ****  *   the PSH flag is set in the last segment created by this call to tcp_write.
 368:lwIP/src/core/tcp_out.c ****  *   If this flag is given, the PSH flag is not set.
 369:lwIP/src/core/tcp_out.c ****  *
 370:lwIP/src/core/tcp_out.c ****  * The tcp_write() function will fail and return ERR_MEM if the length
 371:lwIP/src/core/tcp_out.c ****  * of the data exceeds the current send buffer size or if the length of
 372:lwIP/src/core/tcp_out.c ****  * the queue of outgoing segment is larger than the upper limit defined
ARM GAS  /tmp/ccH0Y1hM.s 			page 34


 373:lwIP/src/core/tcp_out.c ****  * in lwipopts.h. The number of bytes available in the output queue can
 374:lwIP/src/core/tcp_out.c ****  * be retrieved with the tcp_sndbuf() function.
 375:lwIP/src/core/tcp_out.c ****  *
 376:lwIP/src/core/tcp_out.c ****  * The proper way to use this function is to call the function with at
 377:lwIP/src/core/tcp_out.c ****  * most tcp_sndbuf() bytes of data. If the function returns ERR_MEM,
 378:lwIP/src/core/tcp_out.c ****  * the application should wait until some of the currently enqueued
 379:lwIP/src/core/tcp_out.c ****  * data has been successfully received by the other host and try again.
 380:lwIP/src/core/tcp_out.c ****  *
 381:lwIP/src/core/tcp_out.c ****  * @param pcb Protocol control block for the TCP connection to enqueue data for.
 382:lwIP/src/core/tcp_out.c ****  * @param arg Pointer to the data to be enqueued for sending.
 383:lwIP/src/core/tcp_out.c ****  * @param len Data length in bytes
 384:lwIP/src/core/tcp_out.c ****  * @param apiflags combination of following flags :
 385:lwIP/src/core/tcp_out.c ****  * - TCP_WRITE_FLAG_COPY (0x01) data will be copied into memory belonging to the stack
 386:lwIP/src/core/tcp_out.c ****  * - TCP_WRITE_FLAG_MORE (0x02) for TCP connection, PSH flag will not be set on last segment sent,
 387:lwIP/src/core/tcp_out.c ****  * @return ERR_OK if enqueued, another err_t on error
 388:lwIP/src/core/tcp_out.c ****  */
 389:lwIP/src/core/tcp_out.c **** err_t
 390:lwIP/src/core/tcp_out.c **** tcp_write(struct tcp_pcb *pcb, const void *arg, u16_t len, u8_t apiflags)
 391:lwIP/src/core/tcp_out.c **** {
 392:lwIP/src/core/tcp_out.c ****   struct pbuf *concat_p = NULL;
 393:lwIP/src/core/tcp_out.c ****   struct tcp_seg *last_unsent = NULL, *seg = NULL, *prev_seg = NULL, *queue = NULL;
 394:lwIP/src/core/tcp_out.c ****   u16_t pos = 0; /* position in 'arg' data */
 395:lwIP/src/core/tcp_out.c ****   u16_t queuelen;
 396:lwIP/src/core/tcp_out.c ****   u8_t optlen;
 397:lwIP/src/core/tcp_out.c ****   u8_t optflags = 0;
 398:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE
 399:lwIP/src/core/tcp_out.c ****   u16_t oversize = 0;
 400:lwIP/src/core/tcp_out.c ****   u16_t oversize_used = 0;
 401:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 402:lwIP/src/core/tcp_out.c ****   u16_t oversize_add = 0;
 403:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE_DBGCHECK*/
 404:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 405:lwIP/src/core/tcp_out.c ****   u16_t extendlen = 0;
 406:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 407:lwIP/src/core/tcp_out.c ****   u16_t concat_chksum = 0;
 408:lwIP/src/core/tcp_out.c ****   u8_t concat_chksum_swapped = 0;
 409:lwIP/src/core/tcp_out.c ****   u16_t concat_chksummed = 0;
 410:lwIP/src/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 411:lwIP/src/core/tcp_out.c ****   err_t err;
 412:lwIP/src/core/tcp_out.c ****   u16_t mss_local;
 413:lwIP/src/core/tcp_out.c **** 
 414:lwIP/src/core/tcp_out.c ****   LWIP_ERROR("tcp_write: invalid pcb", pcb != NULL, return ERR_ARG);
 415:lwIP/src/core/tcp_out.c **** 
 416:lwIP/src/core/tcp_out.c ****   /* don't allocate segments bigger than half the maximum window we ever received */
 417:lwIP/src/core/tcp_out.c ****   mss_local = LWIP_MIN(pcb->mss, TCPWND_MIN16(pcb->snd_wnd_max / 2));
 418:lwIP/src/core/tcp_out.c ****   mss_local = mss_local ? mss_local : pcb->mss;
 419:lwIP/src/core/tcp_out.c **** 
 420:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT_CORE_LOCKED();
 421:lwIP/src/core/tcp_out.c **** 
 422:lwIP/src/core/tcp_out.c **** #if LWIP_NETIF_TX_SINGLE_PBUF
 423:lwIP/src/core/tcp_out.c ****   /* Always copy to try to create single pbufs for TX */
 424:lwIP/src/core/tcp_out.c ****   apiflags |= TCP_WRITE_FLAG_COPY;
 425:lwIP/src/core/tcp_out.c **** #endif /* LWIP_NETIF_TX_SINGLE_PBUF */
 426:lwIP/src/core/tcp_out.c **** 
 427:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_write(pcb=%p, data=%p, len=%"U16_F", apiflags=%"U16_F")\n",
 428:lwIP/src/core/tcp_out.c ****                                  (void *)pcb, arg, len, (u16_t)apiflags));
 429:lwIP/src/core/tcp_out.c ****   LWIP_ERROR("tcp_write: arg == NULL (programmer violates API)",
ARM GAS  /tmp/ccH0Y1hM.s 			page 35


 430:lwIP/src/core/tcp_out.c ****              arg != NULL, return ERR_ARG;);
 431:lwIP/src/core/tcp_out.c **** 
 432:lwIP/src/core/tcp_out.c ****   err = tcp_write_checks(pcb, len);
 433:lwIP/src/core/tcp_out.c ****   if (err != ERR_OK) {
 434:lwIP/src/core/tcp_out.c ****     return err;
 435:lwIP/src/core/tcp_out.c ****   }
 436:lwIP/src/core/tcp_out.c ****   queuelen = pcb->snd_queuelen;
 437:lwIP/src/core/tcp_out.c **** 
 438:lwIP/src/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
 439:lwIP/src/core/tcp_out.c ****   if ((pcb->flags & TF_TIMESTAMP)) {
 440:lwIP/src/core/tcp_out.c ****     /* Make sure the timestamp option is only included in data segments if we
 441:lwIP/src/core/tcp_out.c ****        agreed about it with the remote host. */
 442:lwIP/src/core/tcp_out.c ****     optflags = TF_SEG_OPTS_TS;
 443:lwIP/src/core/tcp_out.c ****     optlen = LWIP_TCP_OPT_LENGTH_SEGMENT(TF_SEG_OPTS_TS, pcb);
 444:lwIP/src/core/tcp_out.c ****     /* ensure that segments can hold at least one data byte... */
 445:lwIP/src/core/tcp_out.c ****     mss_local = LWIP_MAX(mss_local, LWIP_TCP_OPT_LEN_TS + 1);
 446:lwIP/src/core/tcp_out.c ****   } else
 447:lwIP/src/core/tcp_out.c **** #endif /* LWIP_TCP_TIMESTAMPS */
 448:lwIP/src/core/tcp_out.c ****   {
 449:lwIP/src/core/tcp_out.c ****     optlen = LWIP_TCP_OPT_LENGTH_SEGMENT(0, pcb);
 450:lwIP/src/core/tcp_out.c ****   }
 451:lwIP/src/core/tcp_out.c **** 
 452:lwIP/src/core/tcp_out.c **** 
 453:lwIP/src/core/tcp_out.c ****   /*
 454:lwIP/src/core/tcp_out.c ****    * TCP segmentation is done in three phases with increasing complexity:
 455:lwIP/src/core/tcp_out.c ****    *
 456:lwIP/src/core/tcp_out.c ****    * 1. Copy data directly into an oversized pbuf.
 457:lwIP/src/core/tcp_out.c ****    * 2. Chain a new pbuf to the end of pcb->unsent.
 458:lwIP/src/core/tcp_out.c ****    * 3. Create new segments.
 459:lwIP/src/core/tcp_out.c ****    *
 460:lwIP/src/core/tcp_out.c ****    * We may run out of memory at any point. In that case we must
 461:lwIP/src/core/tcp_out.c ****    * return ERR_MEM and not change anything in pcb. Therefore, all
 462:lwIP/src/core/tcp_out.c ****    * changes are recorded in local variables and committed at the end
 463:lwIP/src/core/tcp_out.c ****    * of the function. Some pcb fields are maintained in local copies:
 464:lwIP/src/core/tcp_out.c ****    *
 465:lwIP/src/core/tcp_out.c ****    * queuelen = pcb->snd_queuelen
 466:lwIP/src/core/tcp_out.c ****    * oversize = pcb->unsent_oversize
 467:lwIP/src/core/tcp_out.c ****    *
 468:lwIP/src/core/tcp_out.c ****    * These variables are set consistently by the phases:
 469:lwIP/src/core/tcp_out.c ****    *
 470:lwIP/src/core/tcp_out.c ****    * seg points to the last segment tampered with.
 471:lwIP/src/core/tcp_out.c ****    *
 472:lwIP/src/core/tcp_out.c ****    * pos records progress as data is segmented.
 473:lwIP/src/core/tcp_out.c ****    */
 474:lwIP/src/core/tcp_out.c **** 
 475:lwIP/src/core/tcp_out.c ****   /* Find the tail of the unsent queue. */
 476:lwIP/src/core/tcp_out.c ****   if (pcb->unsent != NULL) {
 477:lwIP/src/core/tcp_out.c ****     u16_t space;
 478:lwIP/src/core/tcp_out.c ****     u16_t unsent_optlen;
 479:lwIP/src/core/tcp_out.c **** 
 480:lwIP/src/core/tcp_out.c ****     /* @todo: this could be sped up by keeping last_unsent in the pcb */
 481:lwIP/src/core/tcp_out.c ****     for (last_unsent = pcb->unsent; last_unsent->next != NULL;
 482:lwIP/src/core/tcp_out.c ****          last_unsent = last_unsent->next);
 483:lwIP/src/core/tcp_out.c **** 
 484:lwIP/src/core/tcp_out.c ****     /* Usable space at the end of the last unsent segment */
 485:lwIP/src/core/tcp_out.c ****     unsent_optlen = LWIP_TCP_OPT_LENGTH_SEGMENT(last_unsent->flags, pcb);
 486:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("mss_local is too small", mss_local >= last_unsent->len + unsent_optlen);
ARM GAS  /tmp/ccH0Y1hM.s 			page 36


 487:lwIP/src/core/tcp_out.c ****     space = mss_local - (last_unsent->len + unsent_optlen);
 488:lwIP/src/core/tcp_out.c **** 
 489:lwIP/src/core/tcp_out.c ****     /*
 490:lwIP/src/core/tcp_out.c ****      * Phase 1: Copy data directly into an oversized pbuf.
 491:lwIP/src/core/tcp_out.c ****      *
 492:lwIP/src/core/tcp_out.c ****      * The number of bytes copied is recorded in the oversize_used
 493:lwIP/src/core/tcp_out.c ****      * variable. The actual copying is done at the bottom of the
 494:lwIP/src/core/tcp_out.c ****      * function.
 495:lwIP/src/core/tcp_out.c ****      */
 496:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE
 497:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 498:lwIP/src/core/tcp_out.c ****     /* check that pcb->unsent_oversize matches last_unsent->oversize_left */
 499:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("unsent_oversize mismatch (pcb vs. last_unsent)",
 500:lwIP/src/core/tcp_out.c ****                 pcb->unsent_oversize == last_unsent->oversize_left);
 501:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE_DBGCHECK */
 502:lwIP/src/core/tcp_out.c ****     oversize = pcb->unsent_oversize;
 503:lwIP/src/core/tcp_out.c ****     if (oversize > 0) {
 504:lwIP/src/core/tcp_out.c ****       LWIP_ASSERT("inconsistent oversize vs. space", oversize <= space);
 505:lwIP/src/core/tcp_out.c ****       seg = last_unsent;
 506:lwIP/src/core/tcp_out.c ****       oversize_used = LWIP_MIN(space, LWIP_MIN(oversize, len));
 507:lwIP/src/core/tcp_out.c ****       pos += oversize_used;
 508:lwIP/src/core/tcp_out.c ****       oversize -= oversize_used;
 509:lwIP/src/core/tcp_out.c ****       space -= oversize_used;
 510:lwIP/src/core/tcp_out.c ****     }
 511:lwIP/src/core/tcp_out.c ****     /* now we are either finished or oversize is zero */
 512:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("inconsistent oversize vs. len", (oversize == 0) || (pos == len));
 513:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 514:lwIP/src/core/tcp_out.c **** 
 515:lwIP/src/core/tcp_out.c **** #if !LWIP_NETIF_TX_SINGLE_PBUF
 516:lwIP/src/core/tcp_out.c ****     /*
 517:lwIP/src/core/tcp_out.c ****      * Phase 2: Chain a new pbuf to the end of pcb->unsent.
 518:lwIP/src/core/tcp_out.c ****      *
 519:lwIP/src/core/tcp_out.c ****      * As an exception when NOT copying the data, if the given data buffer
 520:lwIP/src/core/tcp_out.c ****      * directly follows the last unsent data buffer in memory, extend the last
 521:lwIP/src/core/tcp_out.c ****      * ROM pbuf reference to the buffer, thus saving a ROM pbuf allocation.
 522:lwIP/src/core/tcp_out.c ****      *
 523:lwIP/src/core/tcp_out.c ****      * We don't extend segments containing SYN/FIN flags or options
 524:lwIP/src/core/tcp_out.c ****      * (len==0). The new pbuf is kept in concat_p and pbuf_cat'ed at
 525:lwIP/src/core/tcp_out.c ****      * the end.
 526:lwIP/src/core/tcp_out.c ****      *
 527:lwIP/src/core/tcp_out.c ****      * This phase is skipped for LWIP_NETIF_TX_SINGLE_PBUF as we could only execute
 528:lwIP/src/core/tcp_out.c ****      * it after rexmit puts a segment from unacked to unsent and at this point,
 529:lwIP/src/core/tcp_out.c ****      * oversize info is lost.
 530:lwIP/src/core/tcp_out.c ****      */
 531:lwIP/src/core/tcp_out.c ****     if ((pos < len) && (space > 0) && (last_unsent->len > 0)) {
 532:lwIP/src/core/tcp_out.c ****       u16_t seglen = LWIP_MIN(space, len - pos);
 533:lwIP/src/core/tcp_out.c ****       seg = last_unsent;
 534:lwIP/src/core/tcp_out.c **** 
 535:lwIP/src/core/tcp_out.c ****       /* Create a pbuf with a copy or reference to seglen bytes. We
 536:lwIP/src/core/tcp_out.c ****        * can use PBUF_RAW here since the data appears in the middle of
 537:lwIP/src/core/tcp_out.c ****        * a segment. A header will never be prepended. */
 538:lwIP/src/core/tcp_out.c ****       if (apiflags & TCP_WRITE_FLAG_COPY) {
 539:lwIP/src/core/tcp_out.c ****         /* Data is copied */
 540:lwIP/src/core/tcp_out.c ****         if ((concat_p = tcp_pbuf_prealloc(PBUF_RAW, seglen, space, &oversize, pcb, apiflags, 1)) ==
 541:lwIP/src/core/tcp_out.c ****           LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 542:lwIP/src/core/tcp_out.c ****                       ("tcp_write : could not allocate memory for pbuf copy size %"U16_F"\n",
 543:lwIP/src/core/tcp_out.c ****                        seglen));
ARM GAS  /tmp/ccH0Y1hM.s 			page 37


 544:lwIP/src/core/tcp_out.c ****           goto memerr;
 545:lwIP/src/core/tcp_out.c ****         }
 546:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 547:lwIP/src/core/tcp_out.c ****         oversize_add = oversize;
 548:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE_DBGCHECK */
 549:lwIP/src/core/tcp_out.c ****         TCP_DATA_COPY2(concat_p->payload, (const u8_t *)arg + pos, seglen, &concat_chksum, &concat_
 550:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 551:lwIP/src/core/tcp_out.c ****         concat_chksummed += seglen;
 552:lwIP/src/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 553:lwIP/src/core/tcp_out.c ****         queuelen += pbuf_clen(concat_p);
 554:lwIP/src/core/tcp_out.c ****       } else {
 555:lwIP/src/core/tcp_out.c ****         /* Data is not copied */
 556:lwIP/src/core/tcp_out.c ****         /* If the last unsent pbuf is of type PBUF_ROM, try to extend it. */
 557:lwIP/src/core/tcp_out.c ****         struct pbuf *p;
 558:lwIP/src/core/tcp_out.c ****         for (p = last_unsent->p; p->next != NULL; p = p->next);
 559:lwIP/src/core/tcp_out.c ****         if (((p->type_internal & (PBUF_TYPE_FLAG_STRUCT_DATA_CONTIGUOUS | PBUF_TYPE_FLAG_DATA_VOLAT
 560:lwIP/src/core/tcp_out.c ****             (const u8_t *)p->payload + p->len == (const u8_t *)arg) {
 561:lwIP/src/core/tcp_out.c ****           LWIP_ASSERT("tcp_write: ROM pbufs cannot be oversized", pos == 0);
 562:lwIP/src/core/tcp_out.c ****           extendlen = seglen;
 563:lwIP/src/core/tcp_out.c ****         } else {
 564:lwIP/src/core/tcp_out.c ****           if ((concat_p = pbuf_alloc(PBUF_RAW, seglen, PBUF_ROM)) == NULL) {
 565:lwIP/src/core/tcp_out.c ****             LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 566:lwIP/src/core/tcp_out.c ****                         ("tcp_write: could not allocate memory for zero-copy pbuf\n"));
 567:lwIP/src/core/tcp_out.c ****             goto memerr;
 568:lwIP/src/core/tcp_out.c ****           }
 569:lwIP/src/core/tcp_out.c ****           /* reference the non-volatile payload data */
 570:lwIP/src/core/tcp_out.c ****           ((struct pbuf_rom *)concat_p)->payload = (const u8_t *)arg + pos;
 571:lwIP/src/core/tcp_out.c ****           queuelen += pbuf_clen(concat_p);
 572:lwIP/src/core/tcp_out.c ****         }
 573:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 574:lwIP/src/core/tcp_out.c ****         /* calculate the checksum of nocopy-data */
 575:lwIP/src/core/tcp_out.c ****         tcp_seg_add_chksum(~inet_chksum((const u8_t *)arg + pos, seglen), seglen,
 576:lwIP/src/core/tcp_out.c ****                            &concat_chksum, &concat_chksum_swapped);
 577:lwIP/src/core/tcp_out.c ****         concat_chksummed += seglen;
 578:lwIP/src/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 579:lwIP/src/core/tcp_out.c ****       }
 580:lwIP/src/core/tcp_out.c **** 
 581:lwIP/src/core/tcp_out.c ****       pos += seglen;
 582:lwIP/src/core/tcp_out.c ****     }
 583:lwIP/src/core/tcp_out.c **** #endif /* !LWIP_NETIF_TX_SINGLE_PBUF */
 584:lwIP/src/core/tcp_out.c ****   } else {
 585:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE
 586:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("unsent_oversize mismatch (pcb->unsent is NULL)",
 587:lwIP/src/core/tcp_out.c ****                 pcb->unsent_oversize == 0);
 588:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 589:lwIP/src/core/tcp_out.c ****   }
 590:lwIP/src/core/tcp_out.c **** 
 591:lwIP/src/core/tcp_out.c ****   /*
 592:lwIP/src/core/tcp_out.c ****    * Phase 3: Create new segments.
 593:lwIP/src/core/tcp_out.c ****    *
 594:lwIP/src/core/tcp_out.c ****    * The new segments are chained together in the local 'queue'
 595:lwIP/src/core/tcp_out.c ****    * variable, ready to be appended to pcb->unsent.
 596:lwIP/src/core/tcp_out.c ****    */
 597:lwIP/src/core/tcp_out.c ****   while (pos < len) {
 598:lwIP/src/core/tcp_out.c ****     struct pbuf *p;
 599:lwIP/src/core/tcp_out.c ****     u16_t left = len - pos;
 600:lwIP/src/core/tcp_out.c ****     u16_t max_len = mss_local - optlen;
ARM GAS  /tmp/ccH0Y1hM.s 			page 38


 601:lwIP/src/core/tcp_out.c ****     u16_t seglen = LWIP_MIN(left, max_len);
 602:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 603:lwIP/src/core/tcp_out.c ****     u16_t chksum = 0;
 604:lwIP/src/core/tcp_out.c ****     u8_t chksum_swapped = 0;
 605:lwIP/src/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 606:lwIP/src/core/tcp_out.c **** 
 607:lwIP/src/core/tcp_out.c ****     if (apiflags & TCP_WRITE_FLAG_COPY) {
 608:lwIP/src/core/tcp_out.c ****       /* If copy is set, memory should be allocated and data copied
 609:lwIP/src/core/tcp_out.c ****        * into pbuf */
 610:lwIP/src/core/tcp_out.c ****       if ((p = tcp_pbuf_prealloc(PBUF_TRANSPORT, seglen + optlen, mss_local, &oversize, pcb, apifla
 611:lwIP/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_write : could not allocate mem
 612:lwIP/src/core/tcp_out.c ****         goto memerr;
 613:lwIP/src/core/tcp_out.c ****       }
 614:lwIP/src/core/tcp_out.c ****       LWIP_ASSERT("tcp_write: check that first pbuf can hold the complete seglen",
 615:lwIP/src/core/tcp_out.c ****                   (p->len >= seglen));
 616:lwIP/src/core/tcp_out.c ****       TCP_DATA_COPY2((char *)p->payload + optlen, (const u8_t *)arg + pos, seglen, &chksum, &chksum
 617:lwIP/src/core/tcp_out.c ****     } else {
 618:lwIP/src/core/tcp_out.c ****       /* Copy is not set: First allocate a pbuf for holding the data.
 619:lwIP/src/core/tcp_out.c ****        * Since the referenced data is available at least until it is
 620:lwIP/src/core/tcp_out.c ****        * sent out on the link (as it has to be ACKed by the remote
 621:lwIP/src/core/tcp_out.c ****        * party) we can safely use PBUF_ROM instead of PBUF_REF here.
 622:lwIP/src/core/tcp_out.c ****        */
 623:lwIP/src/core/tcp_out.c ****       struct pbuf *p2;
 624:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE
 625:lwIP/src/core/tcp_out.c ****       LWIP_ASSERT("oversize == 0", oversize == 0);
 626:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 627:lwIP/src/core/tcp_out.c ****       if ((p2 = pbuf_alloc(PBUF_TRANSPORT, seglen, PBUF_ROM)) == NULL) {
 628:lwIP/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_write: could not allocate memo
 629:lwIP/src/core/tcp_out.c ****         goto memerr;
 630:lwIP/src/core/tcp_out.c ****       }
 631:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 632:lwIP/src/core/tcp_out.c ****       /* calculate the checksum of nocopy-data */
 633:lwIP/src/core/tcp_out.c ****       chksum = ~inet_chksum((const u8_t *)arg + pos, seglen);
 634:lwIP/src/core/tcp_out.c ****       if (seglen & 1) {
 635:lwIP/src/core/tcp_out.c ****         chksum_swapped = 1;
 636:lwIP/src/core/tcp_out.c ****         chksum = SWAP_BYTES_IN_WORD(chksum);
 637:lwIP/src/core/tcp_out.c ****       }
 638:lwIP/src/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 639:lwIP/src/core/tcp_out.c ****       /* reference the non-volatile payload data */
 640:lwIP/src/core/tcp_out.c ****       ((struct pbuf_rom *)p2)->payload = (const u8_t *)arg + pos;
 641:lwIP/src/core/tcp_out.c **** 
 642:lwIP/src/core/tcp_out.c ****       /* Second, allocate a pbuf for the headers. */
 643:lwIP/src/core/tcp_out.c ****       if ((p = pbuf_alloc(PBUF_TRANSPORT, optlen, PBUF_RAM)) == NULL) {
 644:lwIP/src/core/tcp_out.c ****         /* If allocation fails, we have to deallocate the data pbuf as
 645:lwIP/src/core/tcp_out.c ****          * well. */
 646:lwIP/src/core/tcp_out.c ****         pbuf_free(p2);
 647:lwIP/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_write: could not allocate memo
 648:lwIP/src/core/tcp_out.c ****         goto memerr;
 649:lwIP/src/core/tcp_out.c ****       }
 650:lwIP/src/core/tcp_out.c ****       /* Concatenate the headers and data pbufs together. */
 651:lwIP/src/core/tcp_out.c ****       pbuf_cat(p/*header*/, p2/*data*/);
 652:lwIP/src/core/tcp_out.c ****     }
 653:lwIP/src/core/tcp_out.c **** 
 654:lwIP/src/core/tcp_out.c ****     queuelen += pbuf_clen(p);
 655:lwIP/src/core/tcp_out.c **** 
 656:lwIP/src/core/tcp_out.c ****     /* Now that there are more segments queued, we check again if the
 657:lwIP/src/core/tcp_out.c ****      * length of the queue exceeds the configured maximum or
ARM GAS  /tmp/ccH0Y1hM.s 			page 39


 658:lwIP/src/core/tcp_out.c ****      * overflows. */
 659:lwIP/src/core/tcp_out.c ****     if (queuelen > LWIP_MIN(TCP_SND_QUEUELEN, TCP_SNDQUEUELEN_OVERFLOW)) {
 660:lwIP/src/core/tcp_out.c ****       LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_write: queue too long %"U16_F" (
 661:lwIP/src/core/tcp_out.c ****                   queuelen, (int)TCP_SND_QUEUELEN));
 662:lwIP/src/core/tcp_out.c ****       pbuf_free(p);
 663:lwIP/src/core/tcp_out.c ****       goto memerr;
 664:lwIP/src/core/tcp_out.c ****     }
 665:lwIP/src/core/tcp_out.c **** 
 666:lwIP/src/core/tcp_out.c ****     if ((seg = tcp_create_segment(pcb, p, 0, pcb->snd_lbb + pos, optflags)) == NULL) {
 667:lwIP/src/core/tcp_out.c ****       goto memerr;
 668:lwIP/src/core/tcp_out.c ****     }
 669:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 670:lwIP/src/core/tcp_out.c ****     seg->oversize_left = oversize;
 671:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE_DBGCHECK */
 672:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 673:lwIP/src/core/tcp_out.c ****     seg->chksum = chksum;
 674:lwIP/src/core/tcp_out.c ****     seg->chksum_swapped = chksum_swapped;
 675:lwIP/src/core/tcp_out.c ****     seg->flags |= TF_SEG_DATA_CHECKSUMMED;
 676:lwIP/src/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 677:lwIP/src/core/tcp_out.c **** 
 678:lwIP/src/core/tcp_out.c ****     /* first segment of to-be-queued data? */
 679:lwIP/src/core/tcp_out.c ****     if (queue == NULL) {
 680:lwIP/src/core/tcp_out.c ****       queue = seg;
 681:lwIP/src/core/tcp_out.c ****     } else {
 682:lwIP/src/core/tcp_out.c ****       /* Attach the segment to the end of the queued segments */
 683:lwIP/src/core/tcp_out.c ****       LWIP_ASSERT("prev_seg != NULL", prev_seg != NULL);
 684:lwIP/src/core/tcp_out.c ****       prev_seg->next = seg;
 685:lwIP/src/core/tcp_out.c ****     }
 686:lwIP/src/core/tcp_out.c ****     /* remember last segment of to-be-queued data for next iteration */
 687:lwIP/src/core/tcp_out.c ****     prev_seg = seg;
 688:lwIP/src/core/tcp_out.c **** 
 689:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_TRACE, ("tcp_write: queueing %"U32_F":%"U32_F"\n",
 690:lwIP/src/core/tcp_out.c ****                 lwip_ntohl(seg->tcphdr->seqno),
 691:lwIP/src/core/tcp_out.c ****                 lwip_ntohl(seg->tcphdr->seqno) + TCP_TCPLEN(seg)));
 692:lwIP/src/core/tcp_out.c **** 
 693:lwIP/src/core/tcp_out.c ****     pos += seglen;
 694:lwIP/src/core/tcp_out.c ****   }
 695:lwIP/src/core/tcp_out.c **** 
 696:lwIP/src/core/tcp_out.c ****   /*
 697:lwIP/src/core/tcp_out.c ****    * All three segmentation phases were successful. We can commit the
 698:lwIP/src/core/tcp_out.c ****    * transaction.
 699:lwIP/src/core/tcp_out.c ****    */
 700:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 701:lwIP/src/core/tcp_out.c ****   if ((last_unsent != NULL) && (oversize_add != 0)) {
 702:lwIP/src/core/tcp_out.c ****     last_unsent->oversize_left += oversize_add;
 703:lwIP/src/core/tcp_out.c ****   }
 704:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE_DBGCHECK */
 705:lwIP/src/core/tcp_out.c **** 
 706:lwIP/src/core/tcp_out.c ****   /*
 707:lwIP/src/core/tcp_out.c ****    * Phase 1: If data has been added to the preallocated tail of
 708:lwIP/src/core/tcp_out.c ****    * last_unsent, we update the length fields of the pbuf chain.
 709:lwIP/src/core/tcp_out.c ****    */
 710:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE
 711:lwIP/src/core/tcp_out.c ****   if (oversize_used > 0) {
 712:lwIP/src/core/tcp_out.c ****     struct pbuf *p;
 713:lwIP/src/core/tcp_out.c ****     /* Bump tot_len of whole chain, len of tail */
 714:lwIP/src/core/tcp_out.c ****     for (p = last_unsent->p; p; p = p->next) {
ARM GAS  /tmp/ccH0Y1hM.s 			page 40


 715:lwIP/src/core/tcp_out.c ****       p->tot_len += oversize_used;
 716:lwIP/src/core/tcp_out.c ****       if (p->next == NULL) {
 717:lwIP/src/core/tcp_out.c ****         TCP_DATA_COPY((char *)p->payload + p->len, arg, oversize_used, last_unsent);
 718:lwIP/src/core/tcp_out.c ****         p->len += oversize_used;
 719:lwIP/src/core/tcp_out.c ****       }
 720:lwIP/src/core/tcp_out.c ****     }
 721:lwIP/src/core/tcp_out.c ****     last_unsent->len += oversize_used;
 722:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 723:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("last_unsent->oversize_left >= oversize_used",
 724:lwIP/src/core/tcp_out.c ****                 last_unsent->oversize_left >= oversize_used);
 725:lwIP/src/core/tcp_out.c ****     last_unsent->oversize_left -= oversize_used;
 726:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE_DBGCHECK */
 727:lwIP/src/core/tcp_out.c ****   }
 728:lwIP/src/core/tcp_out.c ****   pcb->unsent_oversize = oversize;
 729:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 730:lwIP/src/core/tcp_out.c **** 
 731:lwIP/src/core/tcp_out.c ****   /*
 732:lwIP/src/core/tcp_out.c ****    * Phase 2: concat_p can be concatenated onto last_unsent->p, unless we
 733:lwIP/src/core/tcp_out.c ****    * determined that the last ROM pbuf can be extended to include the new data.
 734:lwIP/src/core/tcp_out.c ****    */
 735:lwIP/src/core/tcp_out.c ****   if (concat_p != NULL) {
 736:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: cannot concatenate when pcb->unsent is empty",
 737:lwIP/src/core/tcp_out.c ****                 (last_unsent != NULL));
 738:lwIP/src/core/tcp_out.c ****     pbuf_cat(last_unsent->p, concat_p);
 739:lwIP/src/core/tcp_out.c ****     last_unsent->len += concat_p->tot_len;
 740:lwIP/src/core/tcp_out.c ****   } else if (extendlen > 0) {
 741:lwIP/src/core/tcp_out.c ****     struct pbuf *p;
 742:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: extension of reference requires reference",
 743:lwIP/src/core/tcp_out.c ****                 last_unsent != NULL && last_unsent->p != NULL);
 744:lwIP/src/core/tcp_out.c ****     for (p = last_unsent->p; p->next != NULL; p = p->next) {
 745:lwIP/src/core/tcp_out.c ****       p->tot_len += extendlen;
 746:lwIP/src/core/tcp_out.c ****     }
 747:lwIP/src/core/tcp_out.c ****     p->tot_len += extendlen;
 748:lwIP/src/core/tcp_out.c ****     p->len += extendlen;
 749:lwIP/src/core/tcp_out.c ****     last_unsent->len += extendlen;
 750:lwIP/src/core/tcp_out.c ****   }
 751:lwIP/src/core/tcp_out.c **** 
 752:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 753:lwIP/src/core/tcp_out.c ****   if (concat_chksummed) {
 754:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: concat checksum needs concatenated data",
 755:lwIP/src/core/tcp_out.c ****                 concat_p != NULL || extendlen > 0);
 756:lwIP/src/core/tcp_out.c ****     /*if concat checksumm swapped - swap it back */
 757:lwIP/src/core/tcp_out.c ****     if (concat_chksum_swapped) {
 758:lwIP/src/core/tcp_out.c ****       concat_chksum = SWAP_BYTES_IN_WORD(concat_chksum);
 759:lwIP/src/core/tcp_out.c ****     }
 760:lwIP/src/core/tcp_out.c ****     tcp_seg_add_chksum(concat_chksum, concat_chksummed, &last_unsent->chksum,
 761:lwIP/src/core/tcp_out.c ****                        &last_unsent->chksum_swapped);
 762:lwIP/src/core/tcp_out.c ****     last_unsent->flags |= TF_SEG_DATA_CHECKSUMMED;
 763:lwIP/src/core/tcp_out.c ****   }
 764:lwIP/src/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 765:lwIP/src/core/tcp_out.c **** 
 766:lwIP/src/core/tcp_out.c ****   /*
 767:lwIP/src/core/tcp_out.c ****    * Phase 3: Append queue to pcb->unsent. Queue may be NULL, but that
 768:lwIP/src/core/tcp_out.c ****    * is harmless
 769:lwIP/src/core/tcp_out.c ****    */
 770:lwIP/src/core/tcp_out.c ****   if (last_unsent == NULL) {
 771:lwIP/src/core/tcp_out.c ****     pcb->unsent = queue;
ARM GAS  /tmp/ccH0Y1hM.s 			page 41


 772:lwIP/src/core/tcp_out.c ****   } else {
 773:lwIP/src/core/tcp_out.c ****     last_unsent->next = queue;
 774:lwIP/src/core/tcp_out.c ****   }
 775:lwIP/src/core/tcp_out.c **** 
 776:lwIP/src/core/tcp_out.c ****   /*
 777:lwIP/src/core/tcp_out.c ****    * Finally update the pcb state.
 778:lwIP/src/core/tcp_out.c ****    */
 779:lwIP/src/core/tcp_out.c ****   pcb->snd_lbb += len;
 780:lwIP/src/core/tcp_out.c ****   pcb->snd_buf -= len;
 781:lwIP/src/core/tcp_out.c ****   pcb->snd_queuelen = queuelen;
 782:lwIP/src/core/tcp_out.c **** 
 783:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_write: %"S16_F" (after enqueued)\n",
 784:lwIP/src/core/tcp_out.c ****                                pcb->snd_queuelen));
 785:lwIP/src/core/tcp_out.c ****   if (pcb->snd_queuelen != 0) {
 786:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: valid queue length",
 787:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 788:lwIP/src/core/tcp_out.c ****   }
 789:lwIP/src/core/tcp_out.c **** 
 790:lwIP/src/core/tcp_out.c ****   /* Set the PSH flag in the last segment that we enqueued. */
 791:lwIP/src/core/tcp_out.c ****   if (seg != NULL && seg->tcphdr != NULL && ((apiflags & TCP_WRITE_FLAG_MORE) == 0)) {
 792:lwIP/src/core/tcp_out.c ****     TCPH_SET_FLAG(seg->tcphdr, TCP_PSH);
 793:lwIP/src/core/tcp_out.c ****   }
 794:lwIP/src/core/tcp_out.c **** 
 795:lwIP/src/core/tcp_out.c ****   return ERR_OK;
 796:lwIP/src/core/tcp_out.c **** memerr:
 797:lwIP/src/core/tcp_out.c ****   tcp_set_flags(pcb, TF_NAGLEMEMERR);
 798:lwIP/src/core/tcp_out.c ****   TCP_STATS_INC(tcp.memerr);
 799:lwIP/src/core/tcp_out.c **** 
 800:lwIP/src/core/tcp_out.c ****   if (concat_p != NULL) {
 801:lwIP/src/core/tcp_out.c ****     pbuf_free(concat_p);
 802:lwIP/src/core/tcp_out.c ****   }
 803:lwIP/src/core/tcp_out.c ****   if (queue != NULL) {
 804:lwIP/src/core/tcp_out.c ****     tcp_segs_free(queue);
 805:lwIP/src/core/tcp_out.c ****   }
 806:lwIP/src/core/tcp_out.c ****   if (pcb->snd_queuelen != 0) {
 807:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: valid queue length", pcb->unacked != NULL ||
 808:lwIP/src/core/tcp_out.c ****                 pcb->unsent != NULL);
 809:lwIP/src/core/tcp_out.c ****   }
 810:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG | LWIP_DBG_STATE, ("tcp_write: %"S16_F" (with mem err)\n", pcb->snd_qu
 811:lwIP/src/core/tcp_out.c ****   return ERR_MEM;
 812:lwIP/src/core/tcp_out.c **** }
 813:lwIP/src/core/tcp_out.c **** 
 814:lwIP/src/core/tcp_out.c **** /**
 815:lwIP/src/core/tcp_out.c ****  * Split segment on the head of the unsent queue.  If return is not
 816:lwIP/src/core/tcp_out.c ****  * ERR_OK, existing head remains intact
 817:lwIP/src/core/tcp_out.c ****  *
 818:lwIP/src/core/tcp_out.c ****  * The split is accomplished by creating a new TCP segment and pbuf
 819:lwIP/src/core/tcp_out.c ****  * which holds the remainder payload after the split.  The original
 820:lwIP/src/core/tcp_out.c ****  * pbuf is trimmed to new length.  This allows splitting of read-only
 821:lwIP/src/core/tcp_out.c ****  * pbufs
 822:lwIP/src/core/tcp_out.c ****  *
 823:lwIP/src/core/tcp_out.c ****  * @param pcb the tcp_pcb for which to split the unsent head
 824:lwIP/src/core/tcp_out.c ****  * @param split the amount of payload to remain in the head
 825:lwIP/src/core/tcp_out.c ****  */
 826:lwIP/src/core/tcp_out.c **** err_t
 827:lwIP/src/core/tcp_out.c **** tcp_split_unsent_seg(struct tcp_pcb *pcb, u16_t split)
 828:lwIP/src/core/tcp_out.c **** {
ARM GAS  /tmp/ccH0Y1hM.s 			page 42


 829:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg = NULL, *useg = NULL;
 830:lwIP/src/core/tcp_out.c ****   struct pbuf *p = NULL;
 831:lwIP/src/core/tcp_out.c ****   u8_t optlen;
 832:lwIP/src/core/tcp_out.c ****   u8_t optflags;
 833:lwIP/src/core/tcp_out.c ****   u8_t split_flags;
 834:lwIP/src/core/tcp_out.c ****   u8_t remainder_flags;
 835:lwIP/src/core/tcp_out.c ****   u16_t remainder;
 836:lwIP/src/core/tcp_out.c ****   u16_t offset;
 837:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 838:lwIP/src/core/tcp_out.c ****   u16_t chksum = 0;
 839:lwIP/src/core/tcp_out.c ****   u8_t chksum_swapped = 0;
 840:lwIP/src/core/tcp_out.c ****   struct pbuf *q;
 841:lwIP/src/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 842:lwIP/src/core/tcp_out.c **** 
 843:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_split_unsent_seg: invalid pcb", pcb != NULL);
 844:lwIP/src/core/tcp_out.c **** 
 845:lwIP/src/core/tcp_out.c ****   useg = pcb->unsent;
 846:lwIP/src/core/tcp_out.c ****   if (useg == NULL) {
 847:lwIP/src/core/tcp_out.c ****     return ERR_MEM;
 848:lwIP/src/core/tcp_out.c ****   }
 849:lwIP/src/core/tcp_out.c **** 
 850:lwIP/src/core/tcp_out.c ****   if (split == 0) {
 851:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("Can't split segment into length 0", 0);
 852:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 853:lwIP/src/core/tcp_out.c ****   }
 854:lwIP/src/core/tcp_out.c **** 
 855:lwIP/src/core/tcp_out.c ****   if (useg->len <= split) {
 856:lwIP/src/core/tcp_out.c ****     return ERR_OK;
 857:lwIP/src/core/tcp_out.c ****   }
 858:lwIP/src/core/tcp_out.c **** 
 859:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("split <= mss", split <= pcb->mss);
 860:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("useg->len > 0", useg->len > 0);
 861:lwIP/src/core/tcp_out.c **** 
 862:lwIP/src/core/tcp_out.c ****   /* We should check that we don't exceed TCP_SND_QUEUELEN but we need
 863:lwIP/src/core/tcp_out.c ****    * to split this packet so we may actually exceed the max value by
 864:lwIP/src/core/tcp_out.c ****    * one!
 865:lwIP/src/core/tcp_out.c ****    */
 866:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_enqueue: split_unsent_seg: %u\n", (unsigned int)pcb->snd_queuel
 867:lwIP/src/core/tcp_out.c **** 
 868:lwIP/src/core/tcp_out.c ****   optflags = useg->flags;
 869:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 870:lwIP/src/core/tcp_out.c ****   /* Remove since checksum is not stored until after tcp_create_segment() */
 871:lwIP/src/core/tcp_out.c ****   optflags &= ~TF_SEG_DATA_CHECKSUMMED;
 872:lwIP/src/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 873:lwIP/src/core/tcp_out.c ****   optlen = LWIP_TCP_OPT_LENGTH(optflags);
 874:lwIP/src/core/tcp_out.c ****   remainder = useg->len - split;
 875:lwIP/src/core/tcp_out.c **** 
 876:lwIP/src/core/tcp_out.c ****   /* Create new pbuf for the remainder of the split */
 877:lwIP/src/core/tcp_out.c ****   p = pbuf_alloc(PBUF_TRANSPORT, remainder + optlen, PBUF_RAM);
 878:lwIP/src/core/tcp_out.c ****   if (p == NULL) {
 879:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 880:lwIP/src/core/tcp_out.c ****                 ("tcp_split_unsent_seg: could not allocate memory for pbuf remainder %u\n", remaind
 881:lwIP/src/core/tcp_out.c ****     goto memerr;
 882:lwIP/src/core/tcp_out.c ****   }
 883:lwIP/src/core/tcp_out.c **** 
 884:lwIP/src/core/tcp_out.c ****   /* Offset into the original pbuf is past TCP/IP headers, options, and split amount */
 885:lwIP/src/core/tcp_out.c ****   offset = useg->p->tot_len - useg->len + split;
ARM GAS  /tmp/ccH0Y1hM.s 			page 43


 886:lwIP/src/core/tcp_out.c ****   /* Copy remainder into new pbuf, headers and options will not be filled out */
 887:lwIP/src/core/tcp_out.c ****   if (pbuf_copy_partial(useg->p, (u8_t *)p->payload + optlen, remainder, offset ) != remainder) {
 888:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 889:lwIP/src/core/tcp_out.c ****                 ("tcp_split_unsent_seg: could not copy pbuf remainder %u\n", remainder));
 890:lwIP/src/core/tcp_out.c ****     goto memerr;
 891:lwIP/src/core/tcp_out.c ****   }
 892:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 893:lwIP/src/core/tcp_out.c ****   /* calculate the checksum on remainder data */
 894:lwIP/src/core/tcp_out.c ****   tcp_seg_add_chksum(~inet_chksum((const u8_t *)p->payload + optlen, remainder), remainder,
 895:lwIP/src/core/tcp_out.c ****                      &chksum, &chksum_swapped);
 896:lwIP/src/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 897:lwIP/src/core/tcp_out.c **** 
 898:lwIP/src/core/tcp_out.c ****   /* Options are created when calling tcp_output() */
 899:lwIP/src/core/tcp_out.c **** 
 900:lwIP/src/core/tcp_out.c ****   /* Migrate flags from original segment */
 901:lwIP/src/core/tcp_out.c ****   split_flags = TCPH_FLAGS(useg->tcphdr);
 902:lwIP/src/core/tcp_out.c ****   remainder_flags = 0; /* ACK added in tcp_output() */
 903:lwIP/src/core/tcp_out.c **** 
 904:lwIP/src/core/tcp_out.c ****   if (split_flags & TCP_PSH) {
 905:lwIP/src/core/tcp_out.c ****     split_flags &= ~TCP_PSH;
 906:lwIP/src/core/tcp_out.c ****     remainder_flags |= TCP_PSH;
 907:lwIP/src/core/tcp_out.c ****   }
 908:lwIP/src/core/tcp_out.c ****   if (split_flags & TCP_FIN) {
 909:lwIP/src/core/tcp_out.c ****     split_flags &= ~TCP_FIN;
 910:lwIP/src/core/tcp_out.c ****     remainder_flags |= TCP_FIN;
 911:lwIP/src/core/tcp_out.c ****   }
 912:lwIP/src/core/tcp_out.c ****   /* SYN should be left on split, RST should not be present with data */
 913:lwIP/src/core/tcp_out.c **** 
 914:lwIP/src/core/tcp_out.c ****   seg = tcp_create_segment(pcb, p, remainder_flags, lwip_ntohl(useg->tcphdr->seqno) + split, optfla
 915:lwIP/src/core/tcp_out.c ****   if (seg == NULL) {
 916:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 917:lwIP/src/core/tcp_out.c ****                 ("tcp_split_unsent_seg: could not create new TCP segment\n"));
 918:lwIP/src/core/tcp_out.c ****     goto memerr;
 919:lwIP/src/core/tcp_out.c ****   }
 920:lwIP/src/core/tcp_out.c **** 
 921:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 922:lwIP/src/core/tcp_out.c ****   seg->chksum = chksum;
 923:lwIP/src/core/tcp_out.c ****   seg->chksum_swapped = chksum_swapped;
 924:lwIP/src/core/tcp_out.c ****   seg->flags |= TF_SEG_DATA_CHECKSUMMED;
 925:lwIP/src/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 926:lwIP/src/core/tcp_out.c **** 
 927:lwIP/src/core/tcp_out.c ****   /* Remove this segment from the queue since trimming it may free pbufs */
 928:lwIP/src/core/tcp_out.c ****   pcb->snd_queuelen -= pbuf_clen(useg->p);
 929:lwIP/src/core/tcp_out.c **** 
 930:lwIP/src/core/tcp_out.c ****   /* Trim the original pbuf into our split size.  At this point our remainder segment must be setup
 931:lwIP/src/core/tcp_out.c ****   successfully because we are modifying the original segment */
 932:lwIP/src/core/tcp_out.c ****   pbuf_realloc(useg->p, useg->p->tot_len - remainder);
 933:lwIP/src/core/tcp_out.c ****   useg->len -= remainder;
 934:lwIP/src/core/tcp_out.c ****   TCPH_SET_FLAG(useg->tcphdr, split_flags);
 935:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 936:lwIP/src/core/tcp_out.c ****   /* By trimming, realloc may have actually shrunk the pbuf, so clear oversize_left */
 937:lwIP/src/core/tcp_out.c ****   useg->oversize_left = 0;
 938:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE_DBGCHECK */
 939:lwIP/src/core/tcp_out.c **** 
 940:lwIP/src/core/tcp_out.c ****   /* Add back to the queue with new trimmed pbuf */
 941:lwIP/src/core/tcp_out.c ****   pcb->snd_queuelen += pbuf_clen(useg->p);
 942:lwIP/src/core/tcp_out.c **** 
ARM GAS  /tmp/ccH0Y1hM.s 			page 44


 943:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 944:lwIP/src/core/tcp_out.c ****   /* The checksum on the split segment is now incorrect. We need to re-run it over the split */
 945:lwIP/src/core/tcp_out.c ****   useg->chksum = 0;
 946:lwIP/src/core/tcp_out.c ****   useg->chksum_swapped = 0;
 947:lwIP/src/core/tcp_out.c ****   q = useg->p;
 948:lwIP/src/core/tcp_out.c ****   offset = q->tot_len - useg->len; /* Offset due to exposed headers */
 949:lwIP/src/core/tcp_out.c **** 
 950:lwIP/src/core/tcp_out.c ****   /* Advance to the pbuf where the offset ends */
 951:lwIP/src/core/tcp_out.c ****   while (q != NULL && offset > q->len) {
 952:lwIP/src/core/tcp_out.c ****     offset -= q->len;
 953:lwIP/src/core/tcp_out.c ****     q = q->next;
 954:lwIP/src/core/tcp_out.c ****   }
 955:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("Found start of payload pbuf", q != NULL);
 956:lwIP/src/core/tcp_out.c ****   /* Checksum the first payload pbuf accounting for offset, then other pbufs are all payload */
 957:lwIP/src/core/tcp_out.c ****   for (; q != NULL; offset = 0, q = q->next) {
 958:lwIP/src/core/tcp_out.c ****     tcp_seg_add_chksum(~inet_chksum((const u8_t *)q->payload + offset, q->len - offset), q->len - o
 959:lwIP/src/core/tcp_out.c ****                        &useg->chksum, &useg->chksum_swapped);
 960:lwIP/src/core/tcp_out.c ****   }
 961:lwIP/src/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
 962:lwIP/src/core/tcp_out.c **** 
 963:lwIP/src/core/tcp_out.c ****   /* Update number of segments on the queues. Note that length now may
 964:lwIP/src/core/tcp_out.c ****    * exceed TCP_SND_QUEUELEN! We don't have to touch pcb->snd_buf
 965:lwIP/src/core/tcp_out.c ****    * because the total amount of data is constant when packet is split */
 966:lwIP/src/core/tcp_out.c ****   pcb->snd_queuelen += pbuf_clen(seg->p);
 967:lwIP/src/core/tcp_out.c **** 
 968:lwIP/src/core/tcp_out.c ****   /* Finally insert remainder into queue after split (which stays head) */
 969:lwIP/src/core/tcp_out.c ****   seg->next = useg->next;
 970:lwIP/src/core/tcp_out.c ****   useg->next = seg;
 971:lwIP/src/core/tcp_out.c **** 
 972:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE
 973:lwIP/src/core/tcp_out.c ****   /* If remainder is last segment on the unsent, ensure we clear the oversize amount
 974:lwIP/src/core/tcp_out.c ****    * because the remainder is always sized to the exact remaining amount */
 975:lwIP/src/core/tcp_out.c ****   if (seg->next == NULL) {
 976:lwIP/src/core/tcp_out.c ****     pcb->unsent_oversize = 0;
 977:lwIP/src/core/tcp_out.c ****   }
 978:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 979:lwIP/src/core/tcp_out.c **** 
 980:lwIP/src/core/tcp_out.c ****   return ERR_OK;
 981:lwIP/src/core/tcp_out.c **** memerr:
 982:lwIP/src/core/tcp_out.c ****   TCP_STATS_INC(tcp.memerr);
 983:lwIP/src/core/tcp_out.c **** 
 984:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("seg == NULL", seg == NULL);
 985:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
 986:lwIP/src/core/tcp_out.c ****     pbuf_free(p);
 987:lwIP/src/core/tcp_out.c ****   }
 988:lwIP/src/core/tcp_out.c **** 
 989:lwIP/src/core/tcp_out.c ****   return ERR_MEM;
 990:lwIP/src/core/tcp_out.c **** }
 991:lwIP/src/core/tcp_out.c **** 
 992:lwIP/src/core/tcp_out.c **** /**
 993:lwIP/src/core/tcp_out.c ****  * Called by tcp_close() to send a segment including FIN flag but not data.
 994:lwIP/src/core/tcp_out.c ****  * This FIN may be added to an existing segment or a new, otherwise empty
 995:lwIP/src/core/tcp_out.c ****  * segment is enqueued.
 996:lwIP/src/core/tcp_out.c ****  *
 997:lwIP/src/core/tcp_out.c ****  * @param pcb the tcp_pcb over which to send a segment
 998:lwIP/src/core/tcp_out.c ****  * @return ERR_OK if sent, another err_t otherwise
 999:lwIP/src/core/tcp_out.c ****  */
ARM GAS  /tmp/ccH0Y1hM.s 			page 45


1000:lwIP/src/core/tcp_out.c **** err_t
1001:lwIP/src/core/tcp_out.c **** tcp_send_fin(struct tcp_pcb *pcb)
1002:lwIP/src/core/tcp_out.c **** {
1003:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_send_fin: invalid pcb", pcb != NULL);
1004:lwIP/src/core/tcp_out.c **** 
1005:lwIP/src/core/tcp_out.c ****   /* first, try to add the fin to the last unsent segment */
1006:lwIP/src/core/tcp_out.c ****   if (pcb->unsent != NULL) {
1007:lwIP/src/core/tcp_out.c ****     struct tcp_seg *last_unsent;
1008:lwIP/src/core/tcp_out.c ****     for (last_unsent = pcb->unsent; last_unsent->next != NULL;
1009:lwIP/src/core/tcp_out.c ****          last_unsent = last_unsent->next);
1010:lwIP/src/core/tcp_out.c **** 
1011:lwIP/src/core/tcp_out.c ****     if ((TCPH_FLAGS(last_unsent->tcphdr) & (TCP_SYN | TCP_FIN | TCP_RST)) == 0) {
1012:lwIP/src/core/tcp_out.c ****       /* no SYN/FIN/RST flag in the header, we can add the FIN flag */
1013:lwIP/src/core/tcp_out.c ****       TCPH_SET_FLAG(last_unsent->tcphdr, TCP_FIN);
1014:lwIP/src/core/tcp_out.c ****       tcp_set_flags(pcb, TF_FIN);
1015:lwIP/src/core/tcp_out.c ****       return ERR_OK;
1016:lwIP/src/core/tcp_out.c ****     }
1017:lwIP/src/core/tcp_out.c ****   }
1018:lwIP/src/core/tcp_out.c ****   /* no data, no length, flags, copy=1, no optdata */
1019:lwIP/src/core/tcp_out.c ****   return tcp_enqueue_flags(pcb, TCP_FIN);
1020:lwIP/src/core/tcp_out.c **** }
1021:lwIP/src/core/tcp_out.c **** 
1022:lwIP/src/core/tcp_out.c **** /**
1023:lwIP/src/core/tcp_out.c ****  * Enqueue SYN or FIN for transmission.
1024:lwIP/src/core/tcp_out.c ****  *
1025:lwIP/src/core/tcp_out.c ****  * Called by @ref tcp_connect, tcp_listen_input, and @ref tcp_close
1026:lwIP/src/core/tcp_out.c ****  * (via @ref tcp_send_fin)
1027:lwIP/src/core/tcp_out.c ****  *
1028:lwIP/src/core/tcp_out.c ****  * @param pcb Protocol control block for the TCP connection.
1029:lwIP/src/core/tcp_out.c ****  * @param flags TCP header flags to set in the outgoing segment.
1030:lwIP/src/core/tcp_out.c ****  */
1031:lwIP/src/core/tcp_out.c **** err_t
1032:lwIP/src/core/tcp_out.c **** tcp_enqueue_flags(struct tcp_pcb *pcb, u8_t flags)
1033:lwIP/src/core/tcp_out.c **** {
1034:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
1035:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg;
1036:lwIP/src/core/tcp_out.c ****   u8_t optflags = 0;
1037:lwIP/src/core/tcp_out.c ****   u8_t optlen = 0;
1038:lwIP/src/core/tcp_out.c **** 
1039:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_enqueue_flags: queuelen: %"U16_F"\n", (u16_t)pcb->snd_queuelen)
1040:lwIP/src/core/tcp_out.c **** 
1041:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: need either TCP_SYN or TCP_FIN in flags (programmer violates API)
1042:lwIP/src/core/tcp_out.c ****               (flags & (TCP_SYN | TCP_FIN)) != 0);
1043:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid pcb", pcb != NULL);
1044:lwIP/src/core/tcp_out.c **** 
1045:lwIP/src/core/tcp_out.c ****   /* No need to check pcb->snd_queuelen if only SYN or FIN are allowed! */
1046:lwIP/src/core/tcp_out.c **** 
1047:lwIP/src/core/tcp_out.c ****   /* Get options for this segment. This is a special case since this is the
1048:lwIP/src/core/tcp_out.c ****      only place where a SYN can be sent. */
1049:lwIP/src/core/tcp_out.c ****   if (flags & TCP_SYN) {
1050:lwIP/src/core/tcp_out.c ****     optflags = TF_SEG_OPTS_MSS;
1051:lwIP/src/core/tcp_out.c **** #if LWIP_WND_SCALE
1052:lwIP/src/core/tcp_out.c ****     if ((pcb->state != SYN_RCVD) || (pcb->flags & TF_WND_SCALE)) {
1053:lwIP/src/core/tcp_out.c ****       /* In a <SYN,ACK> (sent in state SYN_RCVD), the window scale option may only
1054:lwIP/src/core/tcp_out.c ****          be sent if we received a window scale option from the remote host. */
1055:lwIP/src/core/tcp_out.c ****       optflags |= TF_SEG_OPTS_WND_SCALE;
1056:lwIP/src/core/tcp_out.c ****     }
ARM GAS  /tmp/ccH0Y1hM.s 			page 46


1057:lwIP/src/core/tcp_out.c **** #endif /* LWIP_WND_SCALE */
1058:lwIP/src/core/tcp_out.c **** #if LWIP_TCP_SACK_OUT
1059:lwIP/src/core/tcp_out.c ****     if ((pcb->state != SYN_RCVD) || (pcb->flags & TF_SACK)) {
1060:lwIP/src/core/tcp_out.c ****       /* In a <SYN,ACK> (sent in state SYN_RCVD), the SACK_PERM option may only
1061:lwIP/src/core/tcp_out.c ****          be sent if we received a SACK_PERM option from the remote host. */
1062:lwIP/src/core/tcp_out.c ****       optflags |= TF_SEG_OPTS_SACK_PERM;
1063:lwIP/src/core/tcp_out.c ****     }
1064:lwIP/src/core/tcp_out.c **** #endif /* LWIP_TCP_SACK_OUT */
1065:lwIP/src/core/tcp_out.c ****   }
1066:lwIP/src/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
1067:lwIP/src/core/tcp_out.c ****   if ((pcb->flags & TF_TIMESTAMP) || ((flags & TCP_SYN) && (pcb->state != SYN_RCVD))) {
1068:lwIP/src/core/tcp_out.c ****     /* Make sure the timestamp option is only included in data segments if we
1069:lwIP/src/core/tcp_out.c ****        agreed about it with the remote host (and in active open SYN segments). */
1070:lwIP/src/core/tcp_out.c ****     optflags |= TF_SEG_OPTS_TS;
1071:lwIP/src/core/tcp_out.c ****   }
1072:lwIP/src/core/tcp_out.c **** #endif /* LWIP_TCP_TIMESTAMPS */
1073:lwIP/src/core/tcp_out.c ****   optlen = LWIP_TCP_OPT_LENGTH_SEGMENT(optflags, pcb);
1074:lwIP/src/core/tcp_out.c **** 
1075:lwIP/src/core/tcp_out.c ****   /* Allocate pbuf with room for TCP header + options */
1076:lwIP/src/core/tcp_out.c ****   if ((p = pbuf_alloc(PBUF_TRANSPORT, optlen, PBUF_RAM)) == NULL) {
1077:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
1078:lwIP/src/core/tcp_out.c ****     TCP_STATS_INC(tcp.memerr);
1079:lwIP/src/core/tcp_out.c ****     return ERR_MEM;
1080:lwIP/src/core/tcp_out.c ****   }
1081:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: check that first pbuf can hold optlen",
1082:lwIP/src/core/tcp_out.c ****               (p->len >= optlen));
1083:lwIP/src/core/tcp_out.c **** 
1084:lwIP/src/core/tcp_out.c ****   /* Allocate memory for tcp_seg, and fill in fields. */
1085:lwIP/src/core/tcp_out.c ****   if ((seg = tcp_create_segment(pcb, p, flags, pcb->snd_lbb, optflags)) == NULL) {
1086:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
1087:lwIP/src/core/tcp_out.c ****     TCP_STATS_INC(tcp.memerr);
1088:lwIP/src/core/tcp_out.c ****     return ERR_MEM;
1089:lwIP/src/core/tcp_out.c ****   }
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("seg->tcphdr not aligned", ((mem_ptr_t)seg->tcphdr % LWIP_MIN(MEM_ALIGNMENT, 4)) == 0
1091:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
1092:lwIP/src/core/tcp_out.c **** 
1093:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_TRACE,
1094:lwIP/src/core/tcp_out.c ****               ("tcp_enqueue_flags: queueing %"U32_F":%"U32_F" (0x%"X16_F")\n",
1095:lwIP/src/core/tcp_out.c ****                lwip_ntohl(seg->tcphdr->seqno),
1096:lwIP/src/core/tcp_out.c ****                lwip_ntohl(seg->tcphdr->seqno) + TCP_TCPLEN(seg),
1097:lwIP/src/core/tcp_out.c ****                (u16_t)flags));
1098:lwIP/src/core/tcp_out.c **** 
1099:lwIP/src/core/tcp_out.c ****   /* Now append seg to pcb->unsent queue */
1100:lwIP/src/core/tcp_out.c ****   if (pcb->unsent == NULL) {
1101:lwIP/src/core/tcp_out.c ****     pcb->unsent = seg;
1102:lwIP/src/core/tcp_out.c ****   } else {
1103:lwIP/src/core/tcp_out.c ****     struct tcp_seg *useg;
1104:lwIP/src/core/tcp_out.c ****     for (useg = pcb->unsent; useg->next != NULL; useg = useg->next);
1105:lwIP/src/core/tcp_out.c ****     useg->next = seg;
1106:lwIP/src/core/tcp_out.c ****   }
1107:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE
1108:lwIP/src/core/tcp_out.c ****   /* The new unsent tail has no space */
1109:lwIP/src/core/tcp_out.c ****   pcb->unsent_oversize = 0;
1110:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
1111:lwIP/src/core/tcp_out.c **** 
1112:lwIP/src/core/tcp_out.c ****   /* SYN and FIN bump the sequence number */
1113:lwIP/src/core/tcp_out.c ****   if ((flags & TCP_SYN) || (flags & TCP_FIN)) {
ARM GAS  /tmp/ccH0Y1hM.s 			page 47


1114:lwIP/src/core/tcp_out.c ****     pcb->snd_lbb++;
1115:lwIP/src/core/tcp_out.c ****     /* optlen does not influence snd_buf */
1116:lwIP/src/core/tcp_out.c ****   }
1117:lwIP/src/core/tcp_out.c ****   if (flags & TCP_FIN) {
1118:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_FIN);
1119:lwIP/src/core/tcp_out.c ****   }
1120:lwIP/src/core/tcp_out.c **** 
1121:lwIP/src/core/tcp_out.c ****   /* update number of segments on the queues */
1122:lwIP/src/core/tcp_out.c ****   pcb->snd_queuelen += pbuf_clen(seg->p);
1123:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_enqueue_flags: %"S16_F" (after enqueued)\n", pcb->snd_queuelen)
1124:lwIP/src/core/tcp_out.c ****   if (pcb->snd_queuelen != 0) {
1125:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_enqueue_flags: invalid queue length",
1126:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
1127:lwIP/src/core/tcp_out.c ****   }
1128:lwIP/src/core/tcp_out.c **** 
1129:lwIP/src/core/tcp_out.c ****   return ERR_OK;
1130:lwIP/src/core/tcp_out.c **** }
1131:lwIP/src/core/tcp_out.c **** 
1132:lwIP/src/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
1133:lwIP/src/core/tcp_out.c **** /* Build a timestamp option (12 bytes long) at the specified options pointer)
1134:lwIP/src/core/tcp_out.c ****  *
1135:lwIP/src/core/tcp_out.c ****  * @param pcb tcp_pcb
1136:lwIP/src/core/tcp_out.c ****  * @param opts option pointer where to store the timestamp option
1137:lwIP/src/core/tcp_out.c ****  */
1138:lwIP/src/core/tcp_out.c **** static void
1139:lwIP/src/core/tcp_out.c **** tcp_build_timestamp_option(const struct tcp_pcb *pcb, u32_t *opts)
1140:lwIP/src/core/tcp_out.c **** {
1141:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_build_timestamp_option: invalid pcb", pcb != NULL);
1142:lwIP/src/core/tcp_out.c **** 
1143:lwIP/src/core/tcp_out.c ****   /* Pad with two NOP options to make everything nicely aligned */
1144:lwIP/src/core/tcp_out.c ****   opts[0] = PP_HTONL(0x0101080A);
1145:lwIP/src/core/tcp_out.c ****   opts[1] = lwip_htonl(sys_now());
1146:lwIP/src/core/tcp_out.c ****   opts[2] = lwip_htonl(pcb->ts_recent);
1147:lwIP/src/core/tcp_out.c **** }
1148:lwIP/src/core/tcp_out.c **** #endif
1149:lwIP/src/core/tcp_out.c **** 
1150:lwIP/src/core/tcp_out.c **** #if LWIP_TCP_SACK_OUT
1151:lwIP/src/core/tcp_out.c **** /**
1152:lwIP/src/core/tcp_out.c ****  * Calculates the number of SACK entries that should be generated.
1153:lwIP/src/core/tcp_out.c ****  * It takes into account whether TF_SACK flag is set,
1154:lwIP/src/core/tcp_out.c ****  * the number of SACK entries in tcp_pcb that are valid,
1155:lwIP/src/core/tcp_out.c ****  * as well as the available options size.
1156:lwIP/src/core/tcp_out.c ****  *
1157:lwIP/src/core/tcp_out.c ****  * @param pcb tcp_pcb
1158:lwIP/src/core/tcp_out.c ****  * @param optlen the length of other TCP options (in bytes)
1159:lwIP/src/core/tcp_out.c ****  * @return the number of SACK ranges that can be used
1160:lwIP/src/core/tcp_out.c ****  */
1161:lwIP/src/core/tcp_out.c **** static u8_t
1162:lwIP/src/core/tcp_out.c **** tcp_get_num_sacks(const struct tcp_pcb *pcb, u8_t optlen)
1163:lwIP/src/core/tcp_out.c **** {
1164:lwIP/src/core/tcp_out.c ****   u8_t num_sacks = 0;
1165:lwIP/src/core/tcp_out.c **** 
1166:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_get_num_sacks: invalid pcb", pcb != NULL);
1167:lwIP/src/core/tcp_out.c **** 
1168:lwIP/src/core/tcp_out.c ****   if (pcb->flags & TF_SACK) {
1169:lwIP/src/core/tcp_out.c ****     u8_t i;
1170:lwIP/src/core/tcp_out.c **** 
ARM GAS  /tmp/ccH0Y1hM.s 			page 48


1171:lwIP/src/core/tcp_out.c ****     /* The first SACK takes up 12 bytes (it includes SACK header and two NOP options),
1172:lwIP/src/core/tcp_out.c ****        each additional one - 8 bytes. */
1173:lwIP/src/core/tcp_out.c ****     optlen += 12;
1174:lwIP/src/core/tcp_out.c **** 
1175:lwIP/src/core/tcp_out.c ****     /* Max options size = 40, number of SACK array entries = LWIP_TCP_MAX_SACK_NUM */
1176:lwIP/src/core/tcp_out.c ****     for (i = 0; (i < LWIP_TCP_MAX_SACK_NUM) && (optlen <= TCP_MAX_OPTION_BYTES) &&
1177:lwIP/src/core/tcp_out.c ****          LWIP_TCP_SACK_VALID(pcb, i); ++i) {
1178:lwIP/src/core/tcp_out.c ****       ++num_sacks;
1179:lwIP/src/core/tcp_out.c ****       optlen += 8;
1180:lwIP/src/core/tcp_out.c ****     }
1181:lwIP/src/core/tcp_out.c ****   }
1182:lwIP/src/core/tcp_out.c **** 
1183:lwIP/src/core/tcp_out.c ****   return num_sacks;
1184:lwIP/src/core/tcp_out.c **** }
1185:lwIP/src/core/tcp_out.c **** 
1186:lwIP/src/core/tcp_out.c **** /** Build a SACK option (12 or more bytes long) at the specified options pointer)
1187:lwIP/src/core/tcp_out.c ****  *
1188:lwIP/src/core/tcp_out.c ****  * @param pcb tcp_pcb
1189:lwIP/src/core/tcp_out.c ****  * @param opts option pointer where to store the SACK option
1190:lwIP/src/core/tcp_out.c ****  * @param num_sacks the number of SACKs to store
1191:lwIP/src/core/tcp_out.c ****  */
1192:lwIP/src/core/tcp_out.c **** static void
1193:lwIP/src/core/tcp_out.c **** tcp_build_sack_option(const struct tcp_pcb *pcb, u32_t *opts, u8_t num_sacks)
1194:lwIP/src/core/tcp_out.c **** {
1195:lwIP/src/core/tcp_out.c ****   u8_t i;
1196:lwIP/src/core/tcp_out.c **** 
1197:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_build_sack_option: invalid pcb", pcb != NULL);
1198:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_build_sack_option: invalid opts", opts != NULL);
1199:lwIP/src/core/tcp_out.c **** 
1200:lwIP/src/core/tcp_out.c ****   /* Pad with two NOP options to make everything nicely aligned.
1201:lwIP/src/core/tcp_out.c ****      We add the length (of just the SACK option, not the NOPs in front of it),
1202:lwIP/src/core/tcp_out.c ****      which is 2B of header, plus 8B for each SACK. */
1203:lwIP/src/core/tcp_out.c ****   *(opts++) = PP_HTONL(0x01010500 + 2 + num_sacks * 8);
1204:lwIP/src/core/tcp_out.c **** 
1205:lwIP/src/core/tcp_out.c ****   for (i = 0; i < num_sacks; ++i) {
1206:lwIP/src/core/tcp_out.c ****     *(opts++) = lwip_htonl(pcb->rcv_sacks[i].left);
1207:lwIP/src/core/tcp_out.c ****     *(opts++) = lwip_htonl(pcb->rcv_sacks[i].right);
1208:lwIP/src/core/tcp_out.c ****   }
1209:lwIP/src/core/tcp_out.c **** }
1210:lwIP/src/core/tcp_out.c **** 
1211:lwIP/src/core/tcp_out.c **** #endif
1212:lwIP/src/core/tcp_out.c **** 
1213:lwIP/src/core/tcp_out.c **** #if LWIP_WND_SCALE
1214:lwIP/src/core/tcp_out.c **** /** Build a window scale option (3 bytes long) at the specified options pointer)
1215:lwIP/src/core/tcp_out.c ****  *
1216:lwIP/src/core/tcp_out.c ****  * @param opts option pointer where to store the window scale option
1217:lwIP/src/core/tcp_out.c ****  */
1218:lwIP/src/core/tcp_out.c **** static void
1219:lwIP/src/core/tcp_out.c **** tcp_build_wnd_scale_option(u32_t *opts)
1220:lwIP/src/core/tcp_out.c **** {
1221:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_build_wnd_scale_option: invalid opts", opts != NULL);
1222:lwIP/src/core/tcp_out.c **** 
1223:lwIP/src/core/tcp_out.c ****   /* Pad with one NOP option to make everything nicely aligned */
1224:lwIP/src/core/tcp_out.c ****   opts[0] = PP_HTONL(0x01030300 | TCP_RCV_SCALE);
1225:lwIP/src/core/tcp_out.c **** }
1226:lwIP/src/core/tcp_out.c **** #endif
1227:lwIP/src/core/tcp_out.c **** 
ARM GAS  /tmp/ccH0Y1hM.s 			page 49


1228:lwIP/src/core/tcp_out.c **** /**
1229:lwIP/src/core/tcp_out.c ****  * @ingroup tcp_raw
1230:lwIP/src/core/tcp_out.c ****  * Find out what we can send and send it
1231:lwIP/src/core/tcp_out.c ****  *
1232:lwIP/src/core/tcp_out.c ****  * @param pcb Protocol control block for the TCP connection to send data
1233:lwIP/src/core/tcp_out.c ****  * @return ERR_OK if data has been sent or nothing to send
1234:lwIP/src/core/tcp_out.c ****  *         another err_t on error
1235:lwIP/src/core/tcp_out.c ****  */
1236:lwIP/src/core/tcp_out.c **** err_t
1237:lwIP/src/core/tcp_out.c **** tcp_output(struct tcp_pcb *pcb)
1238:lwIP/src/core/tcp_out.c **** {
1239:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg, *useg;
1240:lwIP/src/core/tcp_out.c ****   u32_t wnd, snd_nxt;
1241:lwIP/src/core/tcp_out.c ****   err_t err;
1242:lwIP/src/core/tcp_out.c ****   struct netif *netif;
1243:lwIP/src/core/tcp_out.c **** #if TCP_CWND_DEBUG
1244:lwIP/src/core/tcp_out.c ****   s16_t i = 0;
1245:lwIP/src/core/tcp_out.c **** #endif /* TCP_CWND_DEBUG */
1246:lwIP/src/core/tcp_out.c **** 
1247:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT_CORE_LOCKED();
1248:lwIP/src/core/tcp_out.c **** 
1249:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output: invalid pcb", pcb != NULL);
1250:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
1251:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("don't call tcp_output for listen-pcbs",
1252:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
1253:lwIP/src/core/tcp_out.c **** 
1254:lwIP/src/core/tcp_out.c ****   /* First, check if we are invoked by the TCP input processing
1255:lwIP/src/core/tcp_out.c ****      code. If so, we do not output anything. Instead, we rely on the
1256:lwIP/src/core/tcp_out.c ****      input processing code to call us when input processing is done
1257:lwIP/src/core/tcp_out.c ****      with. */
1258:lwIP/src/core/tcp_out.c ****   if (tcp_input_pcb == pcb) {
1259:lwIP/src/core/tcp_out.c ****     return ERR_OK;
1260:lwIP/src/core/tcp_out.c ****   }
1261:lwIP/src/core/tcp_out.c **** 
1262:lwIP/src/core/tcp_out.c ****   wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);
1263:lwIP/src/core/tcp_out.c **** 
1264:lwIP/src/core/tcp_out.c ****   seg = pcb->unsent;
1265:lwIP/src/core/tcp_out.c **** 
1266:lwIP/src/core/tcp_out.c ****   if (seg == NULL) {
1267:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_output: nothing to send (%p)\n",
1268:lwIP/src/core/tcp_out.c ****                                    (void *)pcb->unsent));
1269:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_CWND_DEBUG, ("tcp_output: snd_wnd %"TCPWNDSIZE_F
1270:lwIP/src/core/tcp_out.c ****                                  ", cwnd %"TCPWNDSIZE_F", wnd %"U32_F
1271:lwIP/src/core/tcp_out.c ****                                  ", seg == NULL, ack %"U32_F"\n",
1272:lwIP/src/core/tcp_out.c ****                                  pcb->snd_wnd, pcb->cwnd, wnd, pcb->lastack));
1273:lwIP/src/core/tcp_out.c **** 
1274:lwIP/src/core/tcp_out.c ****     /* If the TF_ACK_NOW flag is set and the ->unsent queue is empty, construct
1275:lwIP/src/core/tcp_out.c ****      * an empty ACK segment and send it. */
1276:lwIP/src/core/tcp_out.c ****     if (pcb->flags & TF_ACK_NOW) {
1277:lwIP/src/core/tcp_out.c ****       return tcp_send_empty_ack(pcb);
1278:lwIP/src/core/tcp_out.c ****     }
1279:lwIP/src/core/tcp_out.c ****     /* nothing to send: shortcut out of here */
1280:lwIP/src/core/tcp_out.c ****     goto output_done;
1281:lwIP/src/core/tcp_out.c ****   } else {
1282:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_CWND_DEBUG,
1283:lwIP/src/core/tcp_out.c ****                 ("tcp_output: snd_wnd %"TCPWNDSIZE_F", cwnd %"TCPWNDSIZE_F", wnd %"U32_F
1284:lwIP/src/core/tcp_out.c ****                  ", effwnd %"U32_F", seq %"U32_F", ack %"U32_F"\n",
ARM GAS  /tmp/ccH0Y1hM.s 			page 50


1285:lwIP/src/core/tcp_out.c ****                  pcb->snd_wnd, pcb->cwnd, wnd,
1286:lwIP/src/core/tcp_out.c ****                  lwip_ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len,
1287:lwIP/src/core/tcp_out.c ****                  lwip_ntohl(seg->tcphdr->seqno), pcb->lastack));
1288:lwIP/src/core/tcp_out.c ****   }
1289:lwIP/src/core/tcp_out.c **** 
1290:lwIP/src/core/tcp_out.c ****   netif = tcp_route(pcb, &pcb->local_ip, &pcb->remote_ip);
1291:lwIP/src/core/tcp_out.c ****   if (netif == NULL) {
1292:lwIP/src/core/tcp_out.c ****     return ERR_RTE;
1293:lwIP/src/core/tcp_out.c ****   }
1294:lwIP/src/core/tcp_out.c **** 
1295:lwIP/src/core/tcp_out.c ****   /* If we don't have a local IP address, we get one from netif */
1296:lwIP/src/core/tcp_out.c ****   if (ip_addr_isany(&pcb->local_ip)) {
1297:lwIP/src/core/tcp_out.c ****     const ip_addr_t *local_ip = ip_netif_get_local_ip(netif, &pcb->remote_ip);
1298:lwIP/src/core/tcp_out.c ****     if (local_ip == NULL) {
1299:lwIP/src/core/tcp_out.c ****       return ERR_RTE;
1300:lwIP/src/core/tcp_out.c ****     }
1301:lwIP/src/core/tcp_out.c ****     ip_addr_copy(pcb->local_ip, *local_ip);
1302:lwIP/src/core/tcp_out.c ****   }
1303:lwIP/src/core/tcp_out.c **** 
1304:lwIP/src/core/tcp_out.c ****   /* Handle the current segment not fitting within the window */
1305:lwIP/src/core/tcp_out.c ****   if (lwip_ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len > wnd) {
1306:lwIP/src/core/tcp_out.c ****     /* We need to start the persistent timer when the next unsent segment does not fit
1307:lwIP/src/core/tcp_out.c ****      * within the remaining (could be 0) send window and RTO timer is not running (we
1308:lwIP/src/core/tcp_out.c ****      * have no in-flight data). If window is still too small after persist timer fires,
1309:lwIP/src/core/tcp_out.c ****      * then we split the segment. We don't consider the congestion window since a cwnd
1310:lwIP/src/core/tcp_out.c ****      * smaller than 1 SMSS implies in-flight data
1311:lwIP/src/core/tcp_out.c ****      */
1312:lwIP/src/core/tcp_out.c ****     if (wnd == pcb->snd_wnd && pcb->unacked == NULL && pcb->persist_backoff == 0) {
1313:lwIP/src/core/tcp_out.c ****       pcb->persist_cnt = 0;
1314:lwIP/src/core/tcp_out.c ****       pcb->persist_backoff = 1;
1315:lwIP/src/core/tcp_out.c ****       pcb->persist_probe = 0;
1316:lwIP/src/core/tcp_out.c ****     }
1317:lwIP/src/core/tcp_out.c ****     /* We need an ACK, but can't send data now, so send an empty ACK */
1318:lwIP/src/core/tcp_out.c ****     if (pcb->flags & TF_ACK_NOW) {
1319:lwIP/src/core/tcp_out.c ****       return tcp_send_empty_ack(pcb);
1320:lwIP/src/core/tcp_out.c ****     }
1321:lwIP/src/core/tcp_out.c ****     goto output_done;
1322:lwIP/src/core/tcp_out.c ****   }
1323:lwIP/src/core/tcp_out.c ****   /* Stop persist timer, above conditions are not active */
1324:lwIP/src/core/tcp_out.c ****   pcb->persist_backoff = 0;
1325:lwIP/src/core/tcp_out.c **** 
1326:lwIP/src/core/tcp_out.c ****   /* useg should point to last segment on unacked queue */
1327:lwIP/src/core/tcp_out.c ****   useg = pcb->unacked;
1328:lwIP/src/core/tcp_out.c ****   if (useg != NULL) {
1329:lwIP/src/core/tcp_out.c ****     for (; useg->next != NULL; useg = useg->next);
1330:lwIP/src/core/tcp_out.c ****   }
1331:lwIP/src/core/tcp_out.c ****   /* data available and window allows it to be sent? */
1332:lwIP/src/core/tcp_out.c ****   while (seg != NULL &&
1333:lwIP/src/core/tcp_out.c ****          lwip_ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len <= wnd) {
1334:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("RST not expected here!",
1335:lwIP/src/core/tcp_out.c ****                 (TCPH_FLAGS(seg->tcphdr) & TCP_RST) == 0);
1336:lwIP/src/core/tcp_out.c ****     /* Stop sending if the nagle algorithm would prevent it
1337:lwIP/src/core/tcp_out.c ****      * Don't stop:
1338:lwIP/src/core/tcp_out.c ****      * - if tcp_write had a memory error before (prevent delayed ACK timeout) or
1339:lwIP/src/core/tcp_out.c ****      * - if FIN was already enqueued for this PCB (SYN is always alone in a segment -
1340:lwIP/src/core/tcp_out.c ****      *   either seg->next != NULL or pcb->unacked == NULL;
1341:lwIP/src/core/tcp_out.c ****      *   RST is no sent using tcp_write/tcp_output.
ARM GAS  /tmp/ccH0Y1hM.s 			page 51


1342:lwIP/src/core/tcp_out.c ****      */
1343:lwIP/src/core/tcp_out.c ****     if ((tcp_do_output_nagle(pcb) == 0) &&
1344:lwIP/src/core/tcp_out.c ****         ((pcb->flags & (TF_NAGLEMEMERR | TF_FIN)) == 0)) {
1345:lwIP/src/core/tcp_out.c ****       break;
1346:lwIP/src/core/tcp_out.c ****     }
1347:lwIP/src/core/tcp_out.c **** #if TCP_CWND_DEBUG
1348:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_CWND_DEBUG, ("tcp_output: snd_wnd %"TCPWNDSIZE_F", cwnd %"TCPWNDSIZE_F", wnd %"
1349:lwIP/src/core/tcp_out.c ****                                  pcb->snd_wnd, pcb->cwnd, wnd,
1350:lwIP/src/core/tcp_out.c ****                                  lwip_ntohl(seg->tcphdr->seqno) + seg->len -
1351:lwIP/src/core/tcp_out.c ****                                  pcb->lastack,
1352:lwIP/src/core/tcp_out.c ****                                  lwip_ntohl(seg->tcphdr->seqno), pcb->lastack, i));
1353:lwIP/src/core/tcp_out.c ****     ++i;
1354:lwIP/src/core/tcp_out.c **** #endif /* TCP_CWND_DEBUG */
1355:lwIP/src/core/tcp_out.c **** 
1356:lwIP/src/core/tcp_out.c ****     if (pcb->state != SYN_SENT) {
1357:lwIP/src/core/tcp_out.c ****       TCPH_SET_FLAG(seg->tcphdr, TCP_ACK);
1358:lwIP/src/core/tcp_out.c ****     }
1359:lwIP/src/core/tcp_out.c **** 
1360:lwIP/src/core/tcp_out.c ****     err = tcp_output_segment(seg, pcb, netif);
1361:lwIP/src/core/tcp_out.c ****     if (err != ERR_OK) {
1362:lwIP/src/core/tcp_out.c ****       /* segment could not be sent, for whatever reason */
1363:lwIP/src/core/tcp_out.c ****       tcp_set_flags(pcb, TF_NAGLEMEMERR);
1364:lwIP/src/core/tcp_out.c ****       return err;
1365:lwIP/src/core/tcp_out.c ****     }
1366:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
1367:lwIP/src/core/tcp_out.c ****     seg->oversize_left = 0;
1368:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE_DBGCHECK */
1369:lwIP/src/core/tcp_out.c ****     pcb->unsent = seg->next;
1370:lwIP/src/core/tcp_out.c ****     if (pcb->state != SYN_SENT) {
1371:lwIP/src/core/tcp_out.c ****       tcp_clear_flags(pcb, TF_ACK_DELAY | TF_ACK_NOW);
1372:lwIP/src/core/tcp_out.c ****     }
1373:lwIP/src/core/tcp_out.c ****     snd_nxt = lwip_ntohl(seg->tcphdr->seqno) + TCP_TCPLEN(seg);
1374:lwIP/src/core/tcp_out.c ****     if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
1375:lwIP/src/core/tcp_out.c ****       pcb->snd_nxt = snd_nxt;
1376:lwIP/src/core/tcp_out.c ****     }
1377:lwIP/src/core/tcp_out.c ****     /* put segment on unacknowledged list if length > 0 */
1378:lwIP/src/core/tcp_out.c ****     if (TCP_TCPLEN(seg) > 0) {
1379:lwIP/src/core/tcp_out.c ****       seg->next = NULL;
1380:lwIP/src/core/tcp_out.c ****       /* unacked list is empty? */
1381:lwIP/src/core/tcp_out.c ****       if (pcb->unacked == NULL) {
1382:lwIP/src/core/tcp_out.c ****         pcb->unacked = seg;
1383:lwIP/src/core/tcp_out.c ****         useg = seg;
1384:lwIP/src/core/tcp_out.c ****         /* unacked list is not empty? */
1385:lwIP/src/core/tcp_out.c ****       } else {
1386:lwIP/src/core/tcp_out.c ****         /* In the case of fast retransmit, the packet should not go to the tail
1387:lwIP/src/core/tcp_out.c ****          * of the unacked queue, but rather somewhere before it. We need to check for
1388:lwIP/src/core/tcp_out.c ****          * this case. -STJ Jul 27, 2004 */
1389:lwIP/src/core/tcp_out.c ****         if (TCP_SEQ_LT(lwip_ntohl(seg->tcphdr->seqno), lwip_ntohl(useg->tcphdr->seqno))) {
1390:lwIP/src/core/tcp_out.c ****           /* add segment to before tail of unacked list, keeping the list sorted */
1391:lwIP/src/core/tcp_out.c ****           struct tcp_seg **cur_seg = &(pcb->unacked);
1392:lwIP/src/core/tcp_out.c ****           while (*cur_seg &&
1393:lwIP/src/core/tcp_out.c ****                  TCP_SEQ_LT(lwip_ntohl((*cur_seg)->tcphdr->seqno), lwip_ntohl(seg->tcphdr->seqno)))
1394:lwIP/src/core/tcp_out.c ****             cur_seg = &((*cur_seg)->next );
1395:lwIP/src/core/tcp_out.c ****           }
1396:lwIP/src/core/tcp_out.c ****           seg->next = (*cur_seg);
1397:lwIP/src/core/tcp_out.c ****           (*cur_seg) = seg;
1398:lwIP/src/core/tcp_out.c ****         } else {
ARM GAS  /tmp/ccH0Y1hM.s 			page 52


1399:lwIP/src/core/tcp_out.c ****           /* add segment to tail of unacked list */
1400:lwIP/src/core/tcp_out.c ****           useg->next = seg;
1401:lwIP/src/core/tcp_out.c ****           useg = useg->next;
1402:lwIP/src/core/tcp_out.c ****         }
1403:lwIP/src/core/tcp_out.c ****       }
1404:lwIP/src/core/tcp_out.c ****       /* do not queue empty segments on the unacked list */
1405:lwIP/src/core/tcp_out.c ****     } else {
1406:lwIP/src/core/tcp_out.c ****       tcp_seg_free(seg);
1407:lwIP/src/core/tcp_out.c ****     }
1408:lwIP/src/core/tcp_out.c ****     seg = pcb->unsent;
1409:lwIP/src/core/tcp_out.c ****   }
1410:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE
1411:lwIP/src/core/tcp_out.c ****   if (pcb->unsent == NULL) {
1412:lwIP/src/core/tcp_out.c ****     /* last unsent has been removed, reset unsent_oversize */
1413:lwIP/src/core/tcp_out.c ****     pcb->unsent_oversize = 0;
1414:lwIP/src/core/tcp_out.c ****   }
1415:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
1416:lwIP/src/core/tcp_out.c **** 
1417:lwIP/src/core/tcp_out.c **** output_done:
1418:lwIP/src/core/tcp_out.c ****   tcp_clear_flags(pcb, TF_NAGLEMEMERR);
1419:lwIP/src/core/tcp_out.c ****   return ERR_OK;
1420:lwIP/src/core/tcp_out.c **** }
1421:lwIP/src/core/tcp_out.c **** 
1422:lwIP/src/core/tcp_out.c **** /** Check if a segment's pbufs are used by someone else than TCP.
1423:lwIP/src/core/tcp_out.c ****  * This can happen on retransmission if the pbuf of this segment is still
1424:lwIP/src/core/tcp_out.c ****  * referenced by the netif driver due to deferred transmission.
1425:lwIP/src/core/tcp_out.c ****  * This is the case (only!) if someone down the TX call path called
1426:lwIP/src/core/tcp_out.c ****  * pbuf_ref() on one of the pbufs!
1427:lwIP/src/core/tcp_out.c ****  *
1428:lwIP/src/core/tcp_out.c ****  * @arg seg the tcp segment to check
1429:lwIP/src/core/tcp_out.c ****  * @return 1 if ref != 1, 0 if ref == 1
1430:lwIP/src/core/tcp_out.c ****  */
1431:lwIP/src/core/tcp_out.c **** static int
1432:lwIP/src/core/tcp_out.c **** tcp_output_segment_busy(const struct tcp_seg *seg)
1433:lwIP/src/core/tcp_out.c **** {
1434:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_segment_busy: invalid seg", seg != NULL);
1435:lwIP/src/core/tcp_out.c **** 
1436:lwIP/src/core/tcp_out.c ****   /* We only need to check the first pbuf here:
1437:lwIP/src/core/tcp_out.c ****      If a pbuf is queued for transmission, a driver calls pbuf_ref(),
1438:lwIP/src/core/tcp_out.c ****      which only changes the ref count of the first pbuf */
1439:lwIP/src/core/tcp_out.c ****   if (seg->p->ref != 1) {
1440:lwIP/src/core/tcp_out.c ****     /* other reference found */
1441:lwIP/src/core/tcp_out.c ****     return 1;
1442:lwIP/src/core/tcp_out.c ****   }
1443:lwIP/src/core/tcp_out.c ****   /* no other references found */
1444:lwIP/src/core/tcp_out.c ****   return 0;
1445:lwIP/src/core/tcp_out.c **** }
1446:lwIP/src/core/tcp_out.c **** 
1447:lwIP/src/core/tcp_out.c **** /**
1448:lwIP/src/core/tcp_out.c ****  * Called by tcp_output() to actually send a TCP segment over IP.
1449:lwIP/src/core/tcp_out.c ****  *
1450:lwIP/src/core/tcp_out.c ****  * @param seg the tcp_seg to send
1451:lwIP/src/core/tcp_out.c ****  * @param pcb the tcp_pcb for the TCP connection used to send the segment
1452:lwIP/src/core/tcp_out.c ****  * @param netif the netif used to send the segment
1453:lwIP/src/core/tcp_out.c ****  */
1454:lwIP/src/core/tcp_out.c **** static err_t
1455:lwIP/src/core/tcp_out.c **** tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb, struct netif *netif)
ARM GAS  /tmp/ccH0Y1hM.s 			page 53


1456:lwIP/src/core/tcp_out.c **** {
1457:lwIP/src/core/tcp_out.c ****   err_t err;
1458:lwIP/src/core/tcp_out.c ****   u16_t len;
1459:lwIP/src/core/tcp_out.c ****   u32_t *opts;
1460:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
1461:lwIP/src/core/tcp_out.c ****   int seg_chksum_was_swapped = 0;
1462:lwIP/src/core/tcp_out.c **** #endif
1463:lwIP/src/core/tcp_out.c **** 
1464:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_segment: invalid seg", seg != NULL);
1465:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_segment: invalid pcb", pcb != NULL);
1466:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_segment: invalid netif", netif != NULL);
1467:lwIP/src/core/tcp_out.c **** 
1468:lwIP/src/core/tcp_out.c ****   if (tcp_output_segment_busy(seg)) {
1469:lwIP/src/core/tcp_out.c ****     /* This should not happen: rexmit functions should have checked this.
1470:lwIP/src/core/tcp_out.c ****        However, since this function modifies p->len, we must not continue in this case. */
1471:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_RTO_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_output_segment: segment busy\n"));
1472:lwIP/src/core/tcp_out.c ****     return ERR_OK;
1473:lwIP/src/core/tcp_out.c ****   }
1474:lwIP/src/core/tcp_out.c **** 
1475:lwIP/src/core/tcp_out.c ****   /* The TCP header has already been constructed, but the ackno and
1476:lwIP/src/core/tcp_out.c ****    wnd fields remain. */
1477:lwIP/src/core/tcp_out.c ****   seg->tcphdr->ackno = lwip_htonl(pcb->rcv_nxt);
1478:lwIP/src/core/tcp_out.c **** 
1479:lwIP/src/core/tcp_out.c ****   /* advertise our receive window size in this TCP segment */
1480:lwIP/src/core/tcp_out.c **** #if LWIP_WND_SCALE
1481:lwIP/src/core/tcp_out.c ****   if (seg->flags & TF_SEG_OPTS_WND_SCALE) {
1482:lwIP/src/core/tcp_out.c ****     /* The Window field in a SYN segment itself (the only type where we send
1483:lwIP/src/core/tcp_out.c ****        the window scale option) is never scaled. */
1484:lwIP/src/core/tcp_out.c ****     seg->tcphdr->wnd = lwip_htons(TCPWND_MIN16(pcb->rcv_ann_wnd));
1485:lwIP/src/core/tcp_out.c ****   } else
1486:lwIP/src/core/tcp_out.c **** #endif /* LWIP_WND_SCALE */
1487:lwIP/src/core/tcp_out.c ****   {
1488:lwIP/src/core/tcp_out.c ****     seg->tcphdr->wnd = lwip_htons(TCPWND_MIN16(RCV_WND_SCALE(pcb, pcb->rcv_ann_wnd)));
1489:lwIP/src/core/tcp_out.c ****   }
1490:lwIP/src/core/tcp_out.c **** 
1491:lwIP/src/core/tcp_out.c ****   pcb->rcv_ann_right_edge = pcb->rcv_nxt + pcb->rcv_ann_wnd;
1492:lwIP/src/core/tcp_out.c **** 
1493:lwIP/src/core/tcp_out.c ****   /* Add any requested options.  NB MSS option is only set on SYN
1494:lwIP/src/core/tcp_out.c ****      packets, so ignore it here */
1495:lwIP/src/core/tcp_out.c ****   /* cast through void* to get rid of alignment warnings */
1496:lwIP/src/core/tcp_out.c ****   opts = (u32_t *)(void *)(seg->tcphdr + 1);
1497:lwIP/src/core/tcp_out.c ****   if (seg->flags & TF_SEG_OPTS_MSS) {
1498:lwIP/src/core/tcp_out.c ****     u16_t mss;
1499:lwIP/src/core/tcp_out.c **** #if TCP_CALCULATE_EFF_SEND_MSS
1500:lwIP/src/core/tcp_out.c ****     mss = tcp_eff_send_mss_netif(TCP_MSS, netif, &pcb->remote_ip);
1501:lwIP/src/core/tcp_out.c **** #else /* TCP_CALCULATE_EFF_SEND_MSS */
1502:lwIP/src/core/tcp_out.c ****     mss = TCP_MSS;
1503:lwIP/src/core/tcp_out.c **** #endif /* TCP_CALCULATE_EFF_SEND_MSS */
1504:lwIP/src/core/tcp_out.c ****     *opts = TCP_BUILD_MSS_OPTION(mss);
1505:lwIP/src/core/tcp_out.c ****     opts += 1;
1506:lwIP/src/core/tcp_out.c ****   }
1507:lwIP/src/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
1508:lwIP/src/core/tcp_out.c ****   pcb->ts_lastacksent = pcb->rcv_nxt;
1509:lwIP/src/core/tcp_out.c **** 
1510:lwIP/src/core/tcp_out.c ****   if (seg->flags & TF_SEG_OPTS_TS) {
1511:lwIP/src/core/tcp_out.c ****     tcp_build_timestamp_option(pcb, opts);
1512:lwIP/src/core/tcp_out.c ****     opts += 3;
ARM GAS  /tmp/ccH0Y1hM.s 			page 54


1513:lwIP/src/core/tcp_out.c ****   }
1514:lwIP/src/core/tcp_out.c **** #endif
1515:lwIP/src/core/tcp_out.c **** #if LWIP_WND_SCALE
1516:lwIP/src/core/tcp_out.c ****   if (seg->flags & TF_SEG_OPTS_WND_SCALE) {
1517:lwIP/src/core/tcp_out.c ****     tcp_build_wnd_scale_option(opts);
1518:lwIP/src/core/tcp_out.c ****     opts += 1;
1519:lwIP/src/core/tcp_out.c ****   }
1520:lwIP/src/core/tcp_out.c **** #endif
1521:lwIP/src/core/tcp_out.c **** #if LWIP_TCP_SACK_OUT
1522:lwIP/src/core/tcp_out.c ****   if (seg->flags & TF_SEG_OPTS_SACK_PERM) {
1523:lwIP/src/core/tcp_out.c ****     /* Pad with two NOP options to make everything nicely aligned
1524:lwIP/src/core/tcp_out.c ****      * NOTE: When we send both timestamp and SACK_PERM options,
1525:lwIP/src/core/tcp_out.c ****      * we could use the first two NOPs before the timestamp to store SACK_PERM option,
1526:lwIP/src/core/tcp_out.c ****      * but that would complicate the code.
1527:lwIP/src/core/tcp_out.c ****      */
1528:lwIP/src/core/tcp_out.c ****     *(opts++) = PP_HTONL(0x01010402);
1529:lwIP/src/core/tcp_out.c ****   }
1530:lwIP/src/core/tcp_out.c **** #endif
1531:lwIP/src/core/tcp_out.c **** 
1532:lwIP/src/core/tcp_out.c ****   /* Set retransmission timer running if it is not currently enabled
1533:lwIP/src/core/tcp_out.c ****      This must be set before checking the route. */
1534:lwIP/src/core/tcp_out.c ****   if (pcb->rtime < 0) {
1535:lwIP/src/core/tcp_out.c ****     pcb->rtime = 0;
1536:lwIP/src/core/tcp_out.c ****   }
1537:lwIP/src/core/tcp_out.c **** 
1538:lwIP/src/core/tcp_out.c ****   if (pcb->rttest == 0) {
1539:lwIP/src/core/tcp_out.c ****     pcb->rttest = tcp_ticks;
1540:lwIP/src/core/tcp_out.c ****     pcb->rtseq = lwip_ntohl(seg->tcphdr->seqno);
1541:lwIP/src/core/tcp_out.c **** 
1542:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_RTO_DEBUG, ("tcp_output_segment: rtseq %"U32_F"\n", pcb->rtseq));
1543:lwIP/src/core/tcp_out.c ****   }
1544:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_output_segment: %"U32_F":%"U32_F"\n",
1545:lwIP/src/core/tcp_out.c ****                                  lwip_htonl(seg->tcphdr->seqno), lwip_htonl(seg->tcphdr->seqno) +
1546:lwIP/src/core/tcp_out.c ****                                  seg->len));
1547:lwIP/src/core/tcp_out.c **** 
1548:lwIP/src/core/tcp_out.c ****   len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);
1549:lwIP/src/core/tcp_out.c ****   if (len == 0) {
1550:lwIP/src/core/tcp_out.c ****     /** Exclude retransmitted segments from this count. */
1551:lwIP/src/core/tcp_out.c ****     MIB2_STATS_INC(mib2.tcpoutsegs);
1552:lwIP/src/core/tcp_out.c ****   }
1553:lwIP/src/core/tcp_out.c **** 
1554:lwIP/src/core/tcp_out.c ****   seg->p->len -= len;
1555:lwIP/src/core/tcp_out.c ****   seg->p->tot_len -= len;
1556:lwIP/src/core/tcp_out.c **** 
1557:lwIP/src/core/tcp_out.c ****   seg->p->payload = seg->tcphdr;
1558:lwIP/src/core/tcp_out.c **** 
1559:lwIP/src/core/tcp_out.c ****   seg->tcphdr->chksum = 0;
1560:lwIP/src/core/tcp_out.c **** 
1561:lwIP/src/core/tcp_out.c **** #ifdef LWIP_HOOK_TCP_OUT_ADD_TCPOPTS
1562:lwIP/src/core/tcp_out.c ****   opts = LWIP_HOOK_TCP_OUT_ADD_TCPOPTS(seg->p, seg->tcphdr, pcb, opts);
1563:lwIP/src/core/tcp_out.c **** #endif
1564:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("options not filled", (u8_t *)opts == ((u8_t *)(seg->tcphdr + 1)) + LWIP_TCP_OPT_LENG
1565:lwIP/src/core/tcp_out.c **** 
1566:lwIP/src/core/tcp_out.c **** #if CHECKSUM_GEN_TCP
1567:lwIP/src/core/tcp_out.c ****   IF__NETIF_CHECKSUM_ENABLED(netif, NETIF_CHECKSUM_GEN_TCP) {
1568:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
1569:lwIP/src/core/tcp_out.c ****     u32_t acc;
ARM GAS  /tmp/ccH0Y1hM.s 			page 55


1570:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY_SANITY_CHECK
1571:lwIP/src/core/tcp_out.c ****     u16_t chksum_slow = ip_chksum_pseudo(seg->p, IP_PROTO_TCP,
1572:lwIP/src/core/tcp_out.c ****                                          seg->p->tot_len, &pcb->local_ip, &pcb->remote_ip);
1573:lwIP/src/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY_SANITY_CHECK */
1574:lwIP/src/core/tcp_out.c ****     if ((seg->flags & TF_SEG_DATA_CHECKSUMMED) == 0) {
1575:lwIP/src/core/tcp_out.c ****       LWIP_ASSERT("data included but not checksummed",
1576:lwIP/src/core/tcp_out.c ****                   seg->p->tot_len == TCPH_HDRLEN_BYTES(seg->tcphdr));
1577:lwIP/src/core/tcp_out.c ****     }
1578:lwIP/src/core/tcp_out.c **** 
1579:lwIP/src/core/tcp_out.c ****     /* rebuild TCP header checksum (TCP header changes for retransmissions!) */
1580:lwIP/src/core/tcp_out.c ****     acc = ip_chksum_pseudo_partial(seg->p, IP_PROTO_TCP,
1581:lwIP/src/core/tcp_out.c ****                                    seg->p->tot_len, TCPH_HDRLEN_BYTES(seg->tcphdr), &pcb->local_ip,
1582:lwIP/src/core/tcp_out.c ****     /* add payload checksum */
1583:lwIP/src/core/tcp_out.c ****     if (seg->chksum_swapped) {
1584:lwIP/src/core/tcp_out.c ****       seg_chksum_was_swapped = 1;
1585:lwIP/src/core/tcp_out.c ****       seg->chksum = SWAP_BYTES_IN_WORD(seg->chksum);
1586:lwIP/src/core/tcp_out.c ****       seg->chksum_swapped = 0;
1587:lwIP/src/core/tcp_out.c ****     }
1588:lwIP/src/core/tcp_out.c ****     acc = (u16_t)~acc + seg->chksum;
1589:lwIP/src/core/tcp_out.c ****     seg->tcphdr->chksum = (u16_t)~FOLD_U32T(acc);
1590:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY_SANITY_CHECK
1591:lwIP/src/core/tcp_out.c ****     if (chksum_slow != seg->tcphdr->chksum) {
1592:lwIP/src/core/tcp_out.c ****       TCP_CHECKSUM_ON_COPY_SANITY_CHECK_FAIL(
1593:lwIP/src/core/tcp_out.c ****         ("tcp_output_segment: calculated checksum is %"X16_F" instead of %"X16_F"\n",
1594:lwIP/src/core/tcp_out.c ****          seg->tcphdr->chksum, chksum_slow));
1595:lwIP/src/core/tcp_out.c ****       seg->tcphdr->chksum = chksum_slow;
1596:lwIP/src/core/tcp_out.c ****     }
1597:lwIP/src/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY_SANITY_CHECK */
1598:lwIP/src/core/tcp_out.c **** #else /* TCP_CHECKSUM_ON_COPY */
1599:lwIP/src/core/tcp_out.c ****     seg->tcphdr->chksum = ip_chksum_pseudo(seg->p, IP_PROTO_TCP,
1600:lwIP/src/core/tcp_out.c ****                                            seg->p->tot_len, &pcb->local_ip, &pcb->remote_ip);
1601:lwIP/src/core/tcp_out.c **** #endif /* TCP_CHECKSUM_ON_COPY */
1602:lwIP/src/core/tcp_out.c ****   }
1603:lwIP/src/core/tcp_out.c **** #endif /* CHECKSUM_GEN_TCP */
1604:lwIP/src/core/tcp_out.c ****   TCP_STATS_INC(tcp.xmit);
1605:lwIP/src/core/tcp_out.c **** 
1606:lwIP/src/core/tcp_out.c ****   NETIF_SET_HINTS(netif, &(pcb->netif_hints));
1607:lwIP/src/core/tcp_out.c ****   err = ip_output_if(seg->p, &pcb->local_ip, &pcb->remote_ip, pcb->ttl,
1608:lwIP/src/core/tcp_out.c ****                      pcb->tos, IP_PROTO_TCP, netif);
1609:lwIP/src/core/tcp_out.c ****   NETIF_RESET_HINTS(netif);
1610:lwIP/src/core/tcp_out.c **** 
1611:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
1612:lwIP/src/core/tcp_out.c ****   if (seg_chksum_was_swapped) {
1613:lwIP/src/core/tcp_out.c ****     /* if data is added to this segment later, chksum needs to be swapped,
1614:lwIP/src/core/tcp_out.c ****        so restore this now */
1615:lwIP/src/core/tcp_out.c ****     seg->chksum = SWAP_BYTES_IN_WORD(seg->chksum);
1616:lwIP/src/core/tcp_out.c ****     seg->chksum_swapped = 1;
1617:lwIP/src/core/tcp_out.c ****   }
1618:lwIP/src/core/tcp_out.c **** #endif
1619:lwIP/src/core/tcp_out.c **** 
1620:lwIP/src/core/tcp_out.c ****   return err;
1621:lwIP/src/core/tcp_out.c **** }
1622:lwIP/src/core/tcp_out.c **** 
1623:lwIP/src/core/tcp_out.c **** /**
1624:lwIP/src/core/tcp_out.c ****  * Requeue all unacked segments for retransmission
1625:lwIP/src/core/tcp_out.c ****  *
1626:lwIP/src/core/tcp_out.c ****  * Called by tcp_slowtmr() for slow retransmission.
ARM GAS  /tmp/ccH0Y1hM.s 			page 56


1627:lwIP/src/core/tcp_out.c ****  *
1628:lwIP/src/core/tcp_out.c ****  * @param pcb the tcp_pcb for which to re-enqueue all unacked segments
1629:lwIP/src/core/tcp_out.c ****  */
1630:lwIP/src/core/tcp_out.c **** err_t
1631:lwIP/src/core/tcp_out.c **** tcp_rexmit_rto_prepare(struct tcp_pcb *pcb)
1632:lwIP/src/core/tcp_out.c **** {
1633:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg;
1634:lwIP/src/core/tcp_out.c **** 
1635:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rexmit_rto_prepare: invalid pcb", pcb != NULL);
1636:lwIP/src/core/tcp_out.c **** 
1637:lwIP/src/core/tcp_out.c ****   if (pcb->unacked == NULL) {
1638:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
1639:lwIP/src/core/tcp_out.c ****   }
1640:lwIP/src/core/tcp_out.c **** 
1641:lwIP/src/core/tcp_out.c ****   /* Move all unacked segments to the head of the unsent queue.
1642:lwIP/src/core/tcp_out.c ****      However, give up if any of the unsent pbufs are still referenced by the
1643:lwIP/src/core/tcp_out.c ****      netif driver due to deferred transmission. No point loading the link further
1644:lwIP/src/core/tcp_out.c ****      if it is struggling to flush its buffered writes. */
1645:lwIP/src/core/tcp_out.c ****   for (seg = pcb->unacked; seg->next != NULL; seg = seg->next) {
1646:lwIP/src/core/tcp_out.c ****     if (tcp_output_segment_busy(seg)) {
1647:lwIP/src/core/tcp_out.c ****       LWIP_DEBUGF(TCP_RTO_DEBUG, ("tcp_rexmit_rto: segment busy\n"));
1648:lwIP/src/core/tcp_out.c ****       return ERR_VAL;
1649:lwIP/src/core/tcp_out.c ****     }
1650:lwIP/src/core/tcp_out.c ****   }
1651:lwIP/src/core/tcp_out.c ****   if (tcp_output_segment_busy(seg)) {
1652:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_RTO_DEBUG, ("tcp_rexmit_rto: segment busy\n"));
1653:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
1654:lwIP/src/core/tcp_out.c ****   }
1655:lwIP/src/core/tcp_out.c ****   /* concatenate unsent queue after unacked queue */
1656:lwIP/src/core/tcp_out.c ****   seg->next = pcb->unsent;
1657:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
1658:lwIP/src/core/tcp_out.c ****   /* if last unsent changed, we need to update unsent_oversize */
1659:lwIP/src/core/tcp_out.c ****   if (pcb->unsent == NULL) {
1660:lwIP/src/core/tcp_out.c ****     pcb->unsent_oversize = seg->oversize_left;
1661:lwIP/src/core/tcp_out.c ****   }
1662:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE_DBGCHECK */
1663:lwIP/src/core/tcp_out.c ****   /* unsent queue is the concatenated queue (of unacked, unsent) */
1664:lwIP/src/core/tcp_out.c ****   pcb->unsent = pcb->unacked;
1665:lwIP/src/core/tcp_out.c ****   /* unacked queue is now empty */
1666:lwIP/src/core/tcp_out.c ****   pcb->unacked = NULL;
1667:lwIP/src/core/tcp_out.c **** 
1668:lwIP/src/core/tcp_out.c ****   /* Mark RTO in-progress */
1669:lwIP/src/core/tcp_out.c ****   tcp_set_flags(pcb, TF_RTO);
1670:lwIP/src/core/tcp_out.c ****   /* Record the next byte following retransmit */
1671:lwIP/src/core/tcp_out.c ****   pcb->rto_end = lwip_ntohl(seg->tcphdr->seqno) + TCP_TCPLEN(seg);
1672:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
1673:lwIP/src/core/tcp_out.c ****   pcb->rttest = 0;
1674:lwIP/src/core/tcp_out.c **** 
1675:lwIP/src/core/tcp_out.c ****   return ERR_OK;
1676:lwIP/src/core/tcp_out.c **** }
1677:lwIP/src/core/tcp_out.c **** 
1678:lwIP/src/core/tcp_out.c **** /**
1679:lwIP/src/core/tcp_out.c ****  * Requeue all unacked segments for retransmission
1680:lwIP/src/core/tcp_out.c ****  *
1681:lwIP/src/core/tcp_out.c ****  * Called by tcp_slowtmr() for slow retransmission.
1682:lwIP/src/core/tcp_out.c ****  *
1683:lwIP/src/core/tcp_out.c ****  * @param pcb the tcp_pcb for which to re-enqueue all unacked segments
ARM GAS  /tmp/ccH0Y1hM.s 			page 57


1684:lwIP/src/core/tcp_out.c ****  */
1685:lwIP/src/core/tcp_out.c **** void
1686:lwIP/src/core/tcp_out.c **** tcp_rexmit_rto_commit(struct tcp_pcb *pcb)
1687:lwIP/src/core/tcp_out.c **** {
1688:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rexmit_rto_commit: invalid pcb", pcb != NULL);
1689:lwIP/src/core/tcp_out.c **** 
1690:lwIP/src/core/tcp_out.c ****   /* increment number of retransmissions */
1691:lwIP/src/core/tcp_out.c ****   if (pcb->nrtx < 0xFF) {
1692:lwIP/src/core/tcp_out.c ****     ++pcb->nrtx;
1693:lwIP/src/core/tcp_out.c ****   }
1694:lwIP/src/core/tcp_out.c ****   /* Do the actual retransmission */
1695:lwIP/src/core/tcp_out.c ****   tcp_output(pcb);
1696:lwIP/src/core/tcp_out.c **** }
1697:lwIP/src/core/tcp_out.c **** 
1698:lwIP/src/core/tcp_out.c **** /**
1699:lwIP/src/core/tcp_out.c ****  * Requeue all unacked segments for retransmission
1700:lwIP/src/core/tcp_out.c ****  *
1701:lwIP/src/core/tcp_out.c ****  * Called by tcp_process() only, tcp_slowtmr() needs to do some things between
1702:lwIP/src/core/tcp_out.c ****  * "prepare" and "commit".
1703:lwIP/src/core/tcp_out.c ****  *
1704:lwIP/src/core/tcp_out.c ****  * @param pcb the tcp_pcb for which to re-enqueue all unacked segments
1705:lwIP/src/core/tcp_out.c ****  */
1706:lwIP/src/core/tcp_out.c **** void
1707:lwIP/src/core/tcp_out.c **** tcp_rexmit_rto(struct tcp_pcb *pcb)
1708:lwIP/src/core/tcp_out.c **** {
1709:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rexmit_rto: invalid pcb", pcb != NULL);
1710:lwIP/src/core/tcp_out.c **** 
1711:lwIP/src/core/tcp_out.c ****   if (tcp_rexmit_rto_prepare(pcb) == ERR_OK) {
1712:lwIP/src/core/tcp_out.c ****     tcp_rexmit_rto_commit(pcb);
1713:lwIP/src/core/tcp_out.c ****   }
1714:lwIP/src/core/tcp_out.c **** }
1715:lwIP/src/core/tcp_out.c **** 
1716:lwIP/src/core/tcp_out.c **** /**
1717:lwIP/src/core/tcp_out.c ****  * Requeue the first unacked segment for retransmission
1718:lwIP/src/core/tcp_out.c ****  *
1719:lwIP/src/core/tcp_out.c ****  * Called by tcp_receive() for fast retransmit.
1720:lwIP/src/core/tcp_out.c ****  *
1721:lwIP/src/core/tcp_out.c ****  * @param pcb the tcp_pcb for which to retransmit the first unacked segment
1722:lwIP/src/core/tcp_out.c ****  */
1723:lwIP/src/core/tcp_out.c **** err_t
1724:lwIP/src/core/tcp_out.c **** tcp_rexmit(struct tcp_pcb *pcb)
1725:lwIP/src/core/tcp_out.c **** {
1726:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg;
1727:lwIP/src/core/tcp_out.c ****   struct tcp_seg **cur_seg;
1728:lwIP/src/core/tcp_out.c **** 
1729:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rexmit: invalid pcb", pcb != NULL);
1730:lwIP/src/core/tcp_out.c **** 
1731:lwIP/src/core/tcp_out.c ****   if (pcb->unacked == NULL) {
1732:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
1733:lwIP/src/core/tcp_out.c ****   }
1734:lwIP/src/core/tcp_out.c **** 
1735:lwIP/src/core/tcp_out.c ****   seg = pcb->unacked;
1736:lwIP/src/core/tcp_out.c **** 
1737:lwIP/src/core/tcp_out.c ****   /* Give up if the segment is still referenced by the netif driver
1738:lwIP/src/core/tcp_out.c ****      due to deferred transmission. */
1739:lwIP/src/core/tcp_out.c ****   if (tcp_output_segment_busy(seg)) {
1740:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_RTO_DEBUG, ("tcp_rexmit busy\n"));
ARM GAS  /tmp/ccH0Y1hM.s 			page 58


1741:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
1742:lwIP/src/core/tcp_out.c ****   }
1743:lwIP/src/core/tcp_out.c **** 
1744:lwIP/src/core/tcp_out.c ****   /* Move the first unacked segment to the unsent queue */
1745:lwIP/src/core/tcp_out.c ****   /* Keep the unsent queue sorted. */
1746:lwIP/src/core/tcp_out.c ****   pcb->unacked = seg->next;
1747:lwIP/src/core/tcp_out.c **** 
1748:lwIP/src/core/tcp_out.c ****   cur_seg = &(pcb->unsent);
1749:lwIP/src/core/tcp_out.c ****   while (*cur_seg &&
1750:lwIP/src/core/tcp_out.c ****          TCP_SEQ_LT(lwip_ntohl((*cur_seg)->tcphdr->seqno), lwip_ntohl(seg->tcphdr->seqno))) {
1751:lwIP/src/core/tcp_out.c ****     cur_seg = &((*cur_seg)->next );
1752:lwIP/src/core/tcp_out.c ****   }
1753:lwIP/src/core/tcp_out.c ****   seg->next = *cur_seg;
1754:lwIP/src/core/tcp_out.c ****   *cur_seg = seg;
1755:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE
1756:lwIP/src/core/tcp_out.c ****   if (seg->next == NULL) {
1757:lwIP/src/core/tcp_out.c ****     /* the retransmitted segment is last in unsent, so reset unsent_oversize */
1758:lwIP/src/core/tcp_out.c ****     pcb->unsent_oversize = 0;
1759:lwIP/src/core/tcp_out.c ****   }
1760:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
1761:lwIP/src/core/tcp_out.c **** 
1762:lwIP/src/core/tcp_out.c ****   if (pcb->nrtx < 0xFF) {
1763:lwIP/src/core/tcp_out.c ****     ++pcb->nrtx;
1764:lwIP/src/core/tcp_out.c ****   }
1765:lwIP/src/core/tcp_out.c **** 
1766:lwIP/src/core/tcp_out.c ****   /* Don't take any rtt measurements after retransmitting. */
1767:lwIP/src/core/tcp_out.c ****   pcb->rttest = 0;
1768:lwIP/src/core/tcp_out.c **** 
1769:lwIP/src/core/tcp_out.c ****   /* Do the actual retransmission. */
1770:lwIP/src/core/tcp_out.c ****   MIB2_STATS_INC(mib2.tcpretranssegs);
1771:lwIP/src/core/tcp_out.c ****   /* No need to call tcp_output: we are always called from tcp_input()
1772:lwIP/src/core/tcp_out.c ****      and thus tcp_output directly returns. */
1773:lwIP/src/core/tcp_out.c ****   return ERR_OK;
1774:lwIP/src/core/tcp_out.c **** }
1775:lwIP/src/core/tcp_out.c **** 
1776:lwIP/src/core/tcp_out.c **** 
1777:lwIP/src/core/tcp_out.c **** /**
1778:lwIP/src/core/tcp_out.c ****  * Handle retransmission after three dupacks received
1779:lwIP/src/core/tcp_out.c ****  *
1780:lwIP/src/core/tcp_out.c ****  * @param pcb the tcp_pcb for which to retransmit the first unacked segment
1781:lwIP/src/core/tcp_out.c ****  */
1782:lwIP/src/core/tcp_out.c **** void
1783:lwIP/src/core/tcp_out.c **** tcp_rexmit_fast(struct tcp_pcb *pcb)
1784:lwIP/src/core/tcp_out.c **** {
1785:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rexmit_fast: invalid pcb", pcb != NULL);
1786:lwIP/src/core/tcp_out.c **** 
1787:lwIP/src/core/tcp_out.c ****   if (pcb->unacked != NULL && !(pcb->flags & TF_INFR)) {
1788:lwIP/src/core/tcp_out.c ****     /* This is fast retransmit. Retransmit the first unacked segment. */
1789:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_FR_DEBUG,
1790:lwIP/src/core/tcp_out.c ****                 ("tcp_receive: dupacks %"U16_F" (%"U32_F
1791:lwIP/src/core/tcp_out.c ****                  "), fast retransmit %"U32_F"\n",
1792:lwIP/src/core/tcp_out.c ****                  (u16_t)pcb->dupacks, pcb->lastack,
1793:lwIP/src/core/tcp_out.c ****                  lwip_ntohl(pcb->unacked->tcphdr->seqno)));
1794:lwIP/src/core/tcp_out.c ****     if (tcp_rexmit(pcb) == ERR_OK) {
1795:lwIP/src/core/tcp_out.c ****       /* Set ssthresh to half of the minimum of the current
1796:lwIP/src/core/tcp_out.c ****        * cwnd and the advertised window */
1797:lwIP/src/core/tcp_out.c ****       pcb->ssthresh = LWIP_MIN(pcb->cwnd, pcb->snd_wnd) / 2;
ARM GAS  /tmp/ccH0Y1hM.s 			page 59


1798:lwIP/src/core/tcp_out.c **** 
1799:lwIP/src/core/tcp_out.c ****       /* The minimum value for ssthresh should be 2 MSS */
1800:lwIP/src/core/tcp_out.c ****       if (pcb->ssthresh < (2U * pcb->mss)) {
1801:lwIP/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_FR_DEBUG,
1802:lwIP/src/core/tcp_out.c ****                     ("tcp_receive: The minimum value for ssthresh %"TCPWNDSIZE_F
1803:lwIP/src/core/tcp_out.c ****                      " should be min 2 mss %"U16_F"...\n",
1804:lwIP/src/core/tcp_out.c ****                      pcb->ssthresh, (u16_t)(2 * pcb->mss)));
1805:lwIP/src/core/tcp_out.c ****         pcb->ssthresh = 2 * pcb->mss;
1806:lwIP/src/core/tcp_out.c ****       }
1807:lwIP/src/core/tcp_out.c **** 
1808:lwIP/src/core/tcp_out.c ****       pcb->cwnd = pcb->ssthresh + 3 * pcb->mss;
1809:lwIP/src/core/tcp_out.c ****       tcp_set_flags(pcb, TF_INFR);
1810:lwIP/src/core/tcp_out.c **** 
1811:lwIP/src/core/tcp_out.c ****       /* Reset the retransmission timer to prevent immediate rto retransmissions */
1812:lwIP/src/core/tcp_out.c ****       pcb->rtime = 0;
1813:lwIP/src/core/tcp_out.c ****     }
1814:lwIP/src/core/tcp_out.c ****   }
1815:lwIP/src/core/tcp_out.c **** }
1816:lwIP/src/core/tcp_out.c **** 
1817:lwIP/src/core/tcp_out.c **** static struct pbuf *
1818:lwIP/src/core/tcp_out.c **** tcp_output_alloc_header_common(u32_t ackno, u16_t optlen, u16_t datalen,
1819:lwIP/src/core/tcp_out.c ****                         u32_t seqno_be /* already in network byte order */,
1820:lwIP/src/core/tcp_out.c ****                         u16_t src_port, u16_t dst_port, u8_t flags, u16_t wnd)
1821:lwIP/src/core/tcp_out.c **** {
1822:lwIP/src/core/tcp_out.c ****   struct tcp_hdr *tcphdr;
1823:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
1824:lwIP/src/core/tcp_out.c **** 
1825:lwIP/src/core/tcp_out.c ****   p = pbuf_alloc(PBUF_IP, TCP_HLEN + optlen + datalen, PBUF_RAM);
1826:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
1827:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("check that first pbuf can hold struct tcp_hdr",
1828:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
1829:lwIP/src/core/tcp_out.c ****     tcphdr = (struct tcp_hdr *)p->payload;
1830:lwIP/src/core/tcp_out.c ****     tcphdr->src = lwip_htons(src_port);
1831:lwIP/src/core/tcp_out.c ****     tcphdr->dest = lwip_htons(dst_port);
1832:lwIP/src/core/tcp_out.c ****     tcphdr->seqno = seqno_be;
1833:lwIP/src/core/tcp_out.c ****     tcphdr->ackno = lwip_htonl(ackno);
1834:lwIP/src/core/tcp_out.c ****     TCPH_HDRLEN_FLAGS_SET(tcphdr, (5 + optlen / 4), flags);
1835:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
1836:lwIP/src/core/tcp_out.c ****     tcphdr->chksum = 0;
1837:lwIP/src/core/tcp_out.c ****     tcphdr->urgp = 0;
1838:lwIP/src/core/tcp_out.c ****   }
1839:lwIP/src/core/tcp_out.c ****   return p;
1840:lwIP/src/core/tcp_out.c **** }
1841:lwIP/src/core/tcp_out.c **** 
1842:lwIP/src/core/tcp_out.c **** /** Allocate a pbuf and create a tcphdr at p->payload, used for output
1843:lwIP/src/core/tcp_out.c ****  * functions other than the default tcp_output -> tcp_output_segment
1844:lwIP/src/core/tcp_out.c ****  * (e.g. tcp_send_empty_ack, etc.)
1845:lwIP/src/core/tcp_out.c ****  *
1846:lwIP/src/core/tcp_out.c ****  * @param pcb tcp pcb for which to send a packet (used to initialize tcp_hdr)
1847:lwIP/src/core/tcp_out.c ****  * @param optlen length of header-options
1848:lwIP/src/core/tcp_out.c ****  * @param datalen length of tcp data to reserve in pbuf
1849:lwIP/src/core/tcp_out.c ****  * @param seqno_be seqno in network byte order (big-endian)
1850:lwIP/src/core/tcp_out.c ****  * @return pbuf with p->payload being the tcp_hdr
1851:lwIP/src/core/tcp_out.c ****  */
1852:lwIP/src/core/tcp_out.c **** static struct pbuf *
1853:lwIP/src/core/tcp_out.c **** tcp_output_alloc_header(struct tcp_pcb *pcb, u16_t optlen, u16_t datalen,
1854:lwIP/src/core/tcp_out.c ****                         u32_t seqno_be /* already in network byte order */)
ARM GAS  /tmp/ccH0Y1hM.s 			page 60


1855:lwIP/src/core/tcp_out.c **** {
1856:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
1857:lwIP/src/core/tcp_out.c **** 
1858:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_alloc_header: invalid pcb", pcb != NULL);
1859:lwIP/src/core/tcp_out.c **** 
1860:lwIP/src/core/tcp_out.c ****   p = tcp_output_alloc_header_common(pcb->rcv_nxt, optlen, datalen,
1861:lwIP/src/core/tcp_out.c ****     seqno_be, pcb->local_port, pcb->remote_port, TCP_ACK,
1862:lwIP/src/core/tcp_out.c ****     TCPWND_MIN16(RCV_WND_SCALE(pcb, pcb->rcv_ann_wnd)));
1863:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
1864:lwIP/src/core/tcp_out.c ****     /* If we're sending a packet, update the announced right window edge */
1865:lwIP/src/core/tcp_out.c ****     pcb->rcv_ann_right_edge = pcb->rcv_nxt + pcb->rcv_ann_wnd;
1866:lwIP/src/core/tcp_out.c ****   }
1867:lwIP/src/core/tcp_out.c ****   return p;
1868:lwIP/src/core/tcp_out.c **** }
1869:lwIP/src/core/tcp_out.c **** 
1870:lwIP/src/core/tcp_out.c **** /* Fill in options for control segments */
1871:lwIP/src/core/tcp_out.c **** static void
1872:lwIP/src/core/tcp_out.c **** tcp_output_fill_options(const struct tcp_pcb *pcb, struct pbuf *p, u8_t optflags, u8_t num_sacks)
1873:lwIP/src/core/tcp_out.c **** {
1874:lwIP/src/core/tcp_out.c ****   struct tcp_hdr *tcphdr;
1875:lwIP/src/core/tcp_out.c ****   u32_t *opts;
1876:lwIP/src/core/tcp_out.c ****   u16_t sacks_len = 0;
1877:lwIP/src/core/tcp_out.c **** 
1878:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_fill_options: invalid pbuf", p != NULL);
1879:lwIP/src/core/tcp_out.c **** 
1880:lwIP/src/core/tcp_out.c ****   tcphdr = (struct tcp_hdr *)p->payload;
1881:lwIP/src/core/tcp_out.c ****   opts = (u32_t *)(void *)(tcphdr + 1);
1882:lwIP/src/core/tcp_out.c **** 
1883:lwIP/src/core/tcp_out.c ****   /* NB. MSS and window scale options are only sent on SYNs, so ignore them here */
1884:lwIP/src/core/tcp_out.c **** 
1885:lwIP/src/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
1886:lwIP/src/core/tcp_out.c ****   if (optflags & TF_SEG_OPTS_TS) {
1887:lwIP/src/core/tcp_out.c ****     tcp_build_timestamp_option(pcb, opts);
1888:lwIP/src/core/tcp_out.c ****     opts += 3;
1889:lwIP/src/core/tcp_out.c ****   }
1890:lwIP/src/core/tcp_out.c **** #endif
1891:lwIP/src/core/tcp_out.c **** 
1892:lwIP/src/core/tcp_out.c **** #if LWIP_TCP_SACK_OUT
1893:lwIP/src/core/tcp_out.c ****   if (pcb && (num_sacks > 0)) {
1894:lwIP/src/core/tcp_out.c ****     tcp_build_sack_option(pcb, opts, num_sacks);
1895:lwIP/src/core/tcp_out.c ****     /* 1 word for SACKs header (including 2xNOP), and 2 words for each SACK */
1896:lwIP/src/core/tcp_out.c ****     sacks_len = 1 + num_sacks * 2;
1897:lwIP/src/core/tcp_out.c ****     opts += sacks_len;
1898:lwIP/src/core/tcp_out.c ****   }
1899:lwIP/src/core/tcp_out.c **** #else
1900:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(num_sacks);
1901:lwIP/src/core/tcp_out.c **** #endif
1902:lwIP/src/core/tcp_out.c **** 
1903:lwIP/src/core/tcp_out.c **** #ifdef LWIP_HOOK_TCP_OUT_ADD_TCPOPTS
1904:lwIP/src/core/tcp_out.c ****   opts = LWIP_HOOK_TCP_OUT_ADD_TCPOPTS(p, tcphdr, pcb, opts);
1905:lwIP/src/core/tcp_out.c **** #endif
1906:lwIP/src/core/tcp_out.c **** 
1907:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(pcb);
1908:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(sacks_len);
1909:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("options not filled", (u8_t *)opts == ((u8_t *)(tcphdr + 1)) + sacks_len * 4 + LWIP_T
1910:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(optflags); /* for LWIP_NOASSERT */
1911:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(opts); /* for LWIP_NOASSERT */
ARM GAS  /tmp/ccH0Y1hM.s 			page 61


1912:lwIP/src/core/tcp_out.c **** }
1913:lwIP/src/core/tcp_out.c **** 
1914:lwIP/src/core/tcp_out.c **** /** Output a control segment pbuf to IP.
1915:lwIP/src/core/tcp_out.c ****  *
1916:lwIP/src/core/tcp_out.c ****  * Called from tcp_rst, tcp_send_empty_ack, tcp_keepalive and tcp_zero_window_probe,
1917:lwIP/src/core/tcp_out.c ****  * this function combines selecting a netif for transmission, generating the tcp
1918:lwIP/src/core/tcp_out.c ****  * header checksum and calling ip_output_if while handling netif hints and stats.
1919:lwIP/src/core/tcp_out.c ****  */
1920:lwIP/src/core/tcp_out.c **** static err_t
1921:lwIP/src/core/tcp_out.c **** tcp_output_control_segment(const struct tcp_pcb *pcb, struct pbuf *p,
1922:lwIP/src/core/tcp_out.c ****                            const ip_addr_t *src, const ip_addr_t *dst)
1923:lwIP/src/core/tcp_out.c **** {
 458              		.loc 1 1923 1 is_stmt 1 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
1924:lwIP/src/core/tcp_out.c ****   err_t err;
 462              		.loc 1 1924 3 view .LVU151
1925:lwIP/src/core/tcp_out.c ****   struct netif *netif;
 463              		.loc 1 1925 3 view .LVU152
1926:lwIP/src/core/tcp_out.c **** 
1927:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_control_segment: invalid pbuf", p != NULL);
 464              		.loc 1 1927 3 view .LVU153
 465              		.loc 1 1927 3 view .LVU154
1923:lwIP/src/core/tcp_out.c ****   err_t err;
 466              		.loc 1 1923 1 is_stmt 0 view .LVU155
 467 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 468              	.LCFI2:
 469              		.cfi_def_cfa_offset 28
 470              		.cfi_offset 4, -28
 471              		.cfi_offset 5, -24
 472              		.cfi_offset 6, -20
 473              		.cfi_offset 7, -16
 474              		.cfi_offset 8, -12
 475              		.cfi_offset 9, -8
 476              		.cfi_offset 14, -4
 477 0004 85B0     		sub	sp, sp, #20
 478              	.LCFI3:
 479              		.cfi_def_cfa_offset 48
 480              		.loc 1 1927 3 view .LVU156
 481 0006 0029     		cmp	r1, #0
 482 0008 3AD0     		beq	.L58
 483              		.loc 1 1927 3 is_stmt 1 view .LVU157
1928:lwIP/src/core/tcp_out.c **** 
1929:lwIP/src/core/tcp_out.c ****   netif = tcp_route(pcb, src, dst);
 484              		.loc 1 1929 3 view .LVU158
 485 000a 8046     		mov	r8, r0
 486 000c 0C46     		mov	r4, r1
 487 000e 1746     		mov	r7, r2
 488              	.LVL41:
 489              	.LBB204:
 490              	.LBI204:
 132:lwIP/src/core/tcp_out.c **** {
 491              		.loc 1 132 1 view .LVU159
 492              	.LBB205:
 134:lwIP/src/core/tcp_out.c **** 
 493              		.loc 1 134 3 view .LVU160
ARM GAS  /tmp/ccH0Y1hM.s 			page 62


 136:lwIP/src/core/tcp_out.c ****     return netif_get_by_index(pcb->netif_idx);
 494              		.loc 1 136 3 view .LVU161
 495 0010 1E46     		mov	r6, r3
 136:lwIP/src/core/tcp_out.c ****     return netif_get_by_index(pcb->netif_idx);
 496              		.loc 1 136 6 is_stmt 0 view .LVU162
 497 0012 0028     		cmp	r0, #0
 498 0014 38D0     		beq	.L39
 136:lwIP/src/core/tcp_out.c ****     return netif_get_by_index(pcb->netif_idx);
 499              		.loc 1 136 28 view .LVU163
 500 0016 007A     		ldrb	r0, [r0, #8]	@ zero_extendqisi2
 501              	.LVL42:
 136:lwIP/src/core/tcp_out.c ****     return netif_get_by_index(pcb->netif_idx);
 502              		.loc 1 136 21 view .LVU164
 503 0018 20BB     		cbnz	r0, .L59
 139:lwIP/src/core/tcp_out.c ****   }
 504              		.loc 1 139 5 is_stmt 1 view .LVU165
 139:lwIP/src/core/tcp_out.c ****   }
 505              		.loc 1 139 12 is_stmt 0 view .LVU166
 506 001a 1846     		mov	r0, r3
 507 001c FFF7FEFF 		bl	ip4_route
 508              	.LVL43:
 139:lwIP/src/core/tcp_out.c ****   }
 509              		.loc 1 139 12 view .LVU167
 510              	.LBE205:
 511              	.LBE204:
1930:lwIP/src/core/tcp_out.c ****   if (netif == NULL) {
 512              		.loc 1 1930 3 is_stmt 1 view .LVU168
 513              		.loc 1 1930 6 is_stmt 0 view .LVU169
 514 0020 0546     		mov	r5, r0
 515 0022 20B3     		cbz	r0, .L44
 516              	.L55:
 517              	.LBB208:
1931:lwIP/src/core/tcp_out.c ****     err = ERR_RTE;
1932:lwIP/src/core/tcp_out.c ****   } else {
1933:lwIP/src/core/tcp_out.c ****     u8_t ttl, tos;
 518              		.loc 1 1933 5 is_stmt 1 view .LVU170
 519              	.LBB209:
1934:lwIP/src/core/tcp_out.c **** #if CHECKSUM_GEN_TCP
1935:lwIP/src/core/tcp_out.c ****     IF__NETIF_CHECKSUM_ENABLED(netif, NETIF_CHECKSUM_GEN_TCP) {
1936:lwIP/src/core/tcp_out.c ****       struct tcp_hdr *tcphdr = (struct tcp_hdr *)p->payload;
 520              		.loc 1 1936 7 view .LVU171
1937:lwIP/src/core/tcp_out.c ****       tcphdr->chksum = ip_chksum_pseudo(p, IP_PROTO_TCP, p->tot_len,
 521              		.loc 1 1937 24 is_stmt 0 view .LVU172
 522 0024 0096     		str	r6, [sp]
 523 0026 3B46     		mov	r3, r7
1936:lwIP/src/core/tcp_out.c ****       tcphdr->chksum = ip_chksum_pseudo(p, IP_PROTO_TCP, p->tot_len,
 524              		.loc 1 1936 23 view .LVU173
 525 0028 D4F80490 		ldr	r9, [r4, #4]
 526              	.LVL44:
 527              		.loc 1 1937 7 is_stmt 1 view .LVU174
 528              		.loc 1 1937 24 is_stmt 0 view .LVU175
 529 002c 0621     		movs	r1, #6
 530 002e 2289     		ldrh	r2, [r4, #8]
 531 0030 2046     		mov	r0, r4
 532              	.LVL45:
 533              		.loc 1 1937 24 view .LVU176
 534 0032 FFF7FEFF 		bl	ip_chksum_pseudo
ARM GAS  /tmp/ccH0Y1hM.s 			page 63


 535              	.LVL46:
 536              		.loc 1 1937 22 view .LVU177
 537 0036 A9F81000 		strh	r0, [r9, #16]	@ unaligned
 538              	.LBE209:
1938:lwIP/src/core/tcp_out.c ****                                         src, dst);
1939:lwIP/src/core/tcp_out.c ****     }
1940:lwIP/src/core/tcp_out.c **** #endif
1941:lwIP/src/core/tcp_out.c ****     if (pcb != NULL) {
 539              		.loc 1 1941 5 is_stmt 1 view .LVU178
 540              	.LVL47:
1942:lwIP/src/core/tcp_out.c ****       NETIF_SET_HINTS(netif, LWIP_CONST_CAST(struct netif_hint*, &(pcb->netif_hints)));
 541              		.loc 1 1942 87 view .LVU179
1943:lwIP/src/core/tcp_out.c ****       ttl = pcb->ttl;
 542              		.loc 1 1943 7 view .LVU180
 543              		.loc 1 1943 11 is_stmt 0 view .LVU181
 544 003a 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 545              	.LVL48:
1944:lwIP/src/core/tcp_out.c ****       tos = pcb->tos;
 546              		.loc 1 1944 7 is_stmt 1 view .LVU182
 547              		.loc 1 1944 11 is_stmt 0 view .LVU183
 548 003e 98F80A10 		ldrb	r1, [r8, #10]	@ zero_extendqisi2
 549              	.LVL49:
 550              	.L46:
1945:lwIP/src/core/tcp_out.c ****     } else {
1946:lwIP/src/core/tcp_out.c ****       /* Send output with hardcoded TTL/HL since we have no access to the pcb */
1947:lwIP/src/core/tcp_out.c ****       ttl = TCP_TTL;
1948:lwIP/src/core/tcp_out.c ****       tos = 0;
1949:lwIP/src/core/tcp_out.c ****     }
1950:lwIP/src/core/tcp_out.c ****     TCP_STATS_INC(tcp.xmit);
 551              		.loc 1 1950 28 is_stmt 1 view .LVU184
1951:lwIP/src/core/tcp_out.c ****     err = ip_output_if(p, src, dst, ttl, tos, IP_PROTO_TCP, netif);
 552              		.loc 1 1951 5 view .LVU185
 553              		.loc 1 1951 11 is_stmt 0 view .LVU186
 554 0042 0620     		movs	r0, #6
 555 0044 3246     		mov	r2, r6
 556 0046 0295     		str	r5, [sp, #8]
 557 0048 0091     		str	r1, [sp]
 558 004a 3946     		mov	r1, r7
 559              	.LVL50:
 560              		.loc 1 1951 11 view .LVU187
 561 004c 0190     		str	r0, [sp, #4]
 562 004e 2046     		mov	r0, r4
 563 0050 FFF7FEFF 		bl	ip4_output_if
 564              	.LVL51:
 565              		.loc 1 1951 11 view .LVU188
 566 0054 0546     		mov	r5, r0
 567              	.LVL52:
1952:lwIP/src/core/tcp_out.c ****     NETIF_RESET_HINTS(netif);
 568              		.loc 1 1952 29 is_stmt 1 view .LVU189
 569              	.LBE208:
1953:lwIP/src/core/tcp_out.c ****   }
1954:lwIP/src/core/tcp_out.c ****   pbuf_free(p);
 570              		.loc 1 1954 3 view .LVU190
 571 0056 2046     		mov	r0, r4
 572 0058 FFF7FEFF 		bl	pbuf_free
 573              	.LVL53:
1955:lwIP/src/core/tcp_out.c ****   return err;
ARM GAS  /tmp/ccH0Y1hM.s 			page 64


 574              		.loc 1 1955 3 view .LVU191
1956:lwIP/src/core/tcp_out.c **** }
 575              		.loc 1 1956 1 is_stmt 0 view .LVU192
 576 005c 2846     		mov	r0, r5
 577 005e 05B0     		add	sp, sp, #20
 578              	.LCFI4:
 579              		.cfi_remember_state
 580              		.cfi_def_cfa_offset 28
 581              		@ sp needed
 582 0060 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 583              	.LVL54:
 584              	.L59:
 585              	.LCFI5:
 586              		.cfi_restore_state
 587              	.LBB212:
 588              	.LBB206:
 137:lwIP/src/core/tcp_out.c ****   } else {
 589              		.loc 1 137 5 is_stmt 1 view .LVU193
 137:lwIP/src/core/tcp_out.c ****   } else {
 590              		.loc 1 137 12 is_stmt 0 view .LVU194
 591 0064 FFF7FEFF 		bl	netif_get_by_index
 592              	.LVL55:
 137:lwIP/src/core/tcp_out.c ****   } else {
 593              		.loc 1 137 12 view .LVU195
 594              	.LBE206:
 595              	.LBE212:
1930:lwIP/src/core/tcp_out.c ****     err = ERR_RTE;
 596              		.loc 1 1930 3 is_stmt 1 view .LVU196
1930:lwIP/src/core/tcp_out.c ****     err = ERR_RTE;
 597              		.loc 1 1930 6 is_stmt 0 view .LVU197
 598 0068 0546     		mov	r5, r0
 599 006a 0028     		cmp	r0, #0
 600 006c DAD1     		bne	.L55
 601              	.L44:
1931:lwIP/src/core/tcp_out.c ****   } else {
 602              		.loc 1 1931 9 view .LVU198
 603 006e 6FF00305 		mvn	r5, #3
 604              	.LVL56:
 605              	.LBB213:
1952:lwIP/src/core/tcp_out.c ****   }
 606              		.loc 1 1952 29 is_stmt 1 view .LVU199
 607              	.LBE213:
1954:lwIP/src/core/tcp_out.c ****   return err;
 608              		.loc 1 1954 3 view .LVU200
 609 0072 2046     		mov	r0, r4
 610              	.LVL57:
1954:lwIP/src/core/tcp_out.c ****   return err;
 611              		.loc 1 1954 3 is_stmt 0 view .LVU201
 612 0074 FFF7FEFF 		bl	pbuf_free
 613              	.LVL58:
1955:lwIP/src/core/tcp_out.c **** }
 614              		.loc 1 1955 3 is_stmt 1 view .LVU202
 615              		.loc 1 1956 1 is_stmt 0 view .LVU203
 616 0078 2846     		mov	r0, r5
 617 007a 05B0     		add	sp, sp, #20
 618              	.LCFI6:
 619              		.cfi_remember_state
ARM GAS  /tmp/ccH0Y1hM.s 			page 65


 620              		.cfi_def_cfa_offset 28
 621              		@ sp needed
 622 007c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 623              	.LVL59:
 624              	.L58:
 625              	.LCFI7:
 626              		.cfi_restore_state
1927:lwIP/src/core/tcp_out.c **** 
 627              		.loc 1 1927 3 is_stmt 1 discriminator 1 view .LVU204
 628 0080 0B48     		ldr	r0, .L60
 629              	.LVL60:
1927:lwIP/src/core/tcp_out.c **** 
 630              		.loc 1 1927 3 is_stmt 0 discriminator 1 view .LVU205
 631 0082 FFF7FEFF 		bl	printf
 632              	.LVL61:
 633              	.L38:
1927:lwIP/src/core/tcp_out.c **** 
 634              		.loc 1 1927 3 is_stmt 1 discriminator 1 view .LVU206
1927:lwIP/src/core/tcp_out.c **** 
 635              		.loc 1 1927 3 discriminator 1 view .LVU207
1927:lwIP/src/core/tcp_out.c **** 
 636              		.loc 1 1927 3 discriminator 1 view .LVU208
1927:lwIP/src/core/tcp_out.c **** 
 637              		.loc 1 1927 3 discriminator 1 view .LVU209
1927:lwIP/src/core/tcp_out.c **** 
 638              		.loc 1 1927 3 discriminator 1 view .LVU210
1927:lwIP/src/core/tcp_out.c **** 
 639              		.loc 1 1927 3 discriminator 1 view .LVU211
 640 0086 FEE7     		b	.L38
 641              	.LVL62:
 642              	.L39:
 643              	.LBB214:
 644              	.LBB207:
 139:lwIP/src/core/tcp_out.c ****   }
 645              		.loc 1 139 5 view .LVU212
 139:lwIP/src/core/tcp_out.c ****   }
 646              		.loc 1 139 12 is_stmt 0 view .LVU213
 647 0088 1846     		mov	r0, r3
 648              	.LVL63:
 139:lwIP/src/core/tcp_out.c ****   }
 649              		.loc 1 139 12 view .LVU214
 650 008a FFF7FEFF 		bl	ip4_route
 651              	.LVL64:
 139:lwIP/src/core/tcp_out.c ****   }
 652              		.loc 1 139 12 view .LVU215
 653              	.LBE207:
 654              	.LBE214:
1930:lwIP/src/core/tcp_out.c ****     err = ERR_RTE;
 655              		.loc 1 1930 3 is_stmt 1 view .LVU216
1930:lwIP/src/core/tcp_out.c ****     err = ERR_RTE;
 656              		.loc 1 1930 6 is_stmt 0 view .LVU217
 657 008e 0546     		mov	r5, r0
 658 0090 0028     		cmp	r0, #0
 659 0092 ECD0     		beq	.L44
 660              	.LBB215:
1933:lwIP/src/core/tcp_out.c **** #if CHECKSUM_GEN_TCP
 661              		.loc 1 1933 5 is_stmt 1 view .LVU218
ARM GAS  /tmp/ccH0Y1hM.s 			page 66


 662              	.LBB210:
1936:lwIP/src/core/tcp_out.c ****       tcphdr->chksum = ip_chksum_pseudo(p, IP_PROTO_TCP, p->tot_len,
 663              		.loc 1 1936 7 view .LVU219
1937:lwIP/src/core/tcp_out.c ****                                         src, dst);
 664              		.loc 1 1937 24 is_stmt 0 view .LVU220
 665 0094 0096     		str	r6, [sp]
 666 0096 3B46     		mov	r3, r7
1936:lwIP/src/core/tcp_out.c ****       tcphdr->chksum = ip_chksum_pseudo(p, IP_PROTO_TCP, p->tot_len,
 667              		.loc 1 1936 23 view .LVU221
 668 0098 D4F80490 		ldr	r9, [r4, #4]
 669              	.LVL65:
1937:lwIP/src/core/tcp_out.c ****                                         src, dst);
 670              		.loc 1 1937 7 is_stmt 1 view .LVU222
1937:lwIP/src/core/tcp_out.c ****                                         src, dst);
 671              		.loc 1 1937 24 is_stmt 0 view .LVU223
 672 009c 0621     		movs	r1, #6
 673 009e 2289     		ldrh	r2, [r4, #8]
 674 00a0 2046     		mov	r0, r4
 675              	.LVL66:
1937:lwIP/src/core/tcp_out.c ****                                         src, dst);
 676              		.loc 1 1937 24 view .LVU224
 677 00a2 FFF7FEFF 		bl	ip_chksum_pseudo
 678              	.LVL67:
 679              	.LBE210:
1948:lwIP/src/core/tcp_out.c ****     }
 680              		.loc 1 1948 11 view .LVU225
 681 00a6 4146     		mov	r1, r8
1947:lwIP/src/core/tcp_out.c ****       tos = 0;
 682              		.loc 1 1947 11 view .LVU226
 683 00a8 FF23     		movs	r3, #255
 684              	.LBB211:
1937:lwIP/src/core/tcp_out.c ****                                         src, dst);
 685              		.loc 1 1937 22 view .LVU227
 686 00aa A9F81000 		strh	r0, [r9, #16]	@ unaligned
 687              	.LBE211:
1941:lwIP/src/core/tcp_out.c ****       NETIF_SET_HINTS(netif, LWIP_CONST_CAST(struct netif_hint*, &(pcb->netif_hints)));
 688              		.loc 1 1941 5 is_stmt 1 view .LVU228
 689 00ae C8E7     		b	.L46
 690              	.L61:
 691              		.align	2
 692              	.L60:
 693 00b0 00000000 		.word	.LC3
 694              	.LBE215:
 695              		.cfi_endproc
 696              	.LFE124:
 698              		.section	.rodata.tcp_create_segment.str1.4,"aMS",%progbits,1
 699              		.align	2
 700              	.LC4:
 701 0000 7463705F 		.ascii	"tcp_create_segment: invalid pcb\000"
 701      63726561 
 701      74655F73 
 701      65676D65 
 701      6E743A20 
 702              		.align	2
 703              	.LC5:
 704 0020 7463705F 		.ascii	"tcp_create_segment: invalid pbuf\000"
 704      63726561 
ARM GAS  /tmp/ccH0Y1hM.s 			page 67


 704      74655F73 
 704      65676D65 
 704      6E743A20 
 705              		.section	.text.tcp_create_segment,"ax",%progbits
 706              		.align	1
 707              		.p2align 2,,3
 708              		.syntax unified
 709              		.thumb
 710              		.thumb_func
 711              		.fpu fpv4-sp-d16
 713              	tcp_create_segment:
 714              	.LVL68:
 715              	.LFB106:
 159:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg;
 716              		.loc 1 159 1 view -0
 717              		.cfi_startproc
 718              		@ args = 4, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 160:lwIP/src/core/tcp_out.c ****   u8_t optlen;
 720              		.loc 1 160 3 view .LVU230
 161:lwIP/src/core/tcp_out.c **** 
 721              		.loc 1 161 3 view .LVU231
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 722              		.loc 1 163 3 view .LVU232
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 723              		.loc 1 163 3 view .LVU233
 159:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg;
 724              		.loc 1 159 1 is_stmt 0 view .LVU234
 725 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 726              	.LCFI8:
 727              		.cfi_def_cfa_offset 32
 728              		.cfi_offset 4, -32
 729              		.cfi_offset 5, -28
 730              		.cfi_offset 6, -24
 731              		.cfi_offset 7, -20
 732              		.cfi_offset 8, -16
 733              		.cfi_offset 9, -12
 734              		.cfi_offset 10, -8
 735              		.cfi_offset 14, -4
 159:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg;
 736              		.loc 1 159 1 view .LVU235
 737 0004 9DF820A0 		ldrb	r10, [sp, #32]	@ zero_extendqisi2
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 738              		.loc 1 163 3 view .LVU236
 739 0008 0028     		cmp	r0, #0
 740 000a 42D0     		beq	.L73
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 741              		.loc 1 163 3 is_stmt 1 discriminator 2 view .LVU237
 164:lwIP/src/core/tcp_out.c **** 
 742              		.loc 1 164 3 discriminator 2 view .LVU238
 164:lwIP/src/core/tcp_out.c **** 
 743              		.loc 1 164 3 discriminator 2 view .LVU239
 744 000c 8946     		mov	r9, r1
 745 000e 0029     		cmp	r1, #0
 746 0010 3BD0     		beq	.L74
 747              	.LBB226:
 748              	.LBB227:
ARM GAS  /tmp/ccH0Y1hM.s 			page 68


 166:lwIP/src/core/tcp_out.c **** 
 749              		.loc 1 166 12 is_stmt 0 view .LVU240
 750 0012 4FEA8A05 		lsl	r5, r10, #2
 751 0016 8046     		mov	r8, r0
 752              	.LVL69:
 168:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no memory.\n"));
 753              		.loc 1 168 32 view .LVU241
 754 0018 0320     		movs	r0, #3
 755              	.LVL70:
 168:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no memory.\n"));
 756              		.loc 1 168 32 view .LVU242
 757 001a 1646     		mov	r6, r2
 758              	.LVL71:
 168:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no memory.\n"));
 759              		.loc 1 168 32 view .LVU243
 760 001c 1F46     		mov	r7, r3
 761              	.LVL72:
 168:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no memory.\n"));
 762              		.loc 1 168 32 view .LVU244
 763              	.LBE227:
 764              	.LBI226:
 158:lwIP/src/core/tcp_out.c **** {
 765              		.loc 1 158 1 is_stmt 1 view .LVU245
 766              	.LBB248:
 164:lwIP/src/core/tcp_out.c **** 
 767              		.loc 1 164 3 view .LVU246
 166:lwIP/src/core/tcp_out.c **** 
 768              		.loc 1 166 3 view .LVU247
 166:lwIP/src/core/tcp_out.c **** 
 769              		.loc 1 166 10 is_stmt 0 view .LVU248
 770 001e 05F00405 		and	r5, r5, #4
 771              	.LVL73:
 168:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no memory.\n"));
 772              		.loc 1 168 3 is_stmt 1 view .LVU249
 168:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no memory.\n"));
 773              		.loc 1 168 32 is_stmt 0 view .LVU250
 774 0022 FFF7FEFF 		bl	memp_malloc
 775              	.LVL74:
 168:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no memory.\n"));
 776              		.loc 1 168 6 view .LVU251
 777 0026 0446     		mov	r4, r0
 778 0028 0028     		cmp	r0, #0
 779 002a 3BD0     		beq	.L75
 173:lwIP/src/core/tcp_out.c ****   seg->next = NULL;
 780              		.loc 1 173 3 is_stmt 1 view .LVU252
 173:lwIP/src/core/tcp_out.c ****   seg->next = NULL;
 781              		.loc 1 173 14 is_stmt 0 view .LVU253
 782 002c 80F80AA0 		strb	r10, [r0, #10]
 174:lwIP/src/core/tcp_out.c ****   seg->p = p;
 783              		.loc 1 174 3 is_stmt 1 view .LVU254
 174:lwIP/src/core/tcp_out.c ****   seg->p = p;
 784              		.loc 1 174 13 is_stmt 0 view .LVU255
 785 0030 4FF0000A 		mov	r10, #0
 786              	.LVL75:
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 787              		.loc 1 176 3 view .LVU256
 788 0034 B9F80830 		ldrh	r3, [r9, #8]
ARM GAS  /tmp/ccH0Y1hM.s 			page 69


 789 0038 AAB2     		uxth	r2, r5
 790 003a AB42     		cmp	r3, r5
 174:lwIP/src/core/tcp_out.c ****   seg->p = p;
 791              		.loc 1 174 13 view .LVU257
 792 003c C0E900A9 		strd	r10, r9, [r0]
 175:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("p->tot_len >= optlen", p->tot_len >= optlen);
 793              		.loc 1 175 3 is_stmt 1 view .LVU258
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 794              		.loc 1 176 3 view .LVU259
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 795              		.loc 1 176 3 view .LVU260
 796 0040 1FD3     		bcc	.L76
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 797              		.loc 1 176 3 view .LVU261
 177:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 798              		.loc 1 177 3 view .LVU262
 177:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 799              		.loc 1 177 25 is_stmt 0 view .LVU263
 800 0042 9B1A     		subs	r3, r3, r2
 190:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no room for TCP he
 801              		.loc 1 190 7 view .LVU264
 802 0044 4846     		mov	r0, r9
 803              	.LVL76:
 190:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no room for TCP he
 804              		.loc 1 190 7 view .LVU265
 805 0046 1421     		movs	r1, #20
 177:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 806              		.loc 1 177 12 view .LVU266
 807 0048 2381     		strh	r3, [r4, #8]	@ movhi
 190:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no room for TCP he
 808              		.loc 1 190 3 is_stmt 1 view .LVU267
 190:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no room for TCP he
 809              		.loc 1 190 7 is_stmt 0 view .LVU268
 810 004a FFF7FEFF 		bl	pbuf_add_header
 811              	.LVL77:
 190:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_create_segment: no room for TCP he
 812              		.loc 1 190 6 view .LVU269
 813 004e 0246     		mov	r2, r0
 814 0050 18BB     		cbnz	r0, .L77
 196:lwIP/src/core/tcp_out.c ****   seg->tcphdr->src = lwip_htons(pcb->local_port);
 815              		.loc 1 196 3 is_stmt 1 view .LVU270
 201:lwIP/src/core/tcp_out.c ****   /* wnd and chksum are set in tcp_output */
 816              		.loc 1 201 3 is_stmt 0 view .LVU271
 817 0052 A908     		lsrs	r1, r5, #2
 818              	.LBB228:
 819              	.LBB229:
 820              		.loc 2 937 19 view .LVU272
 821 0054 B8F81800 		ldrh	r0, [r8, #24]
 822              	.LBE229:
 823              	.LBE228:
 824              	.LBB232:
 825              	.LBB233:
 826 0058 B8F81650 		ldrh	r5, [r8, #22]
 827              	.LVL78:
 828              		.loc 2 937 19 view .LVU273
 829              	.LBE233:
 830              	.LBE232:
ARM GAS  /tmp/ccH0Y1hM.s 			page 70


 831              	.LBB236:
 832              	.LBB237:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 833              		.loc 2 903 10 view .LVU274
 834 005c 3FBA     		rev	r7, r7
 835              	.LVL79:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 836              		.loc 2 903 10 view .LVU275
 837              	.LBE237:
 838              	.LBE236:
 201:lwIP/src/core/tcp_out.c ****   /* wnd and chksum are set in tcp_output */
 839              		.loc 1 201 3 view .LVU276
 840 005e 0531     		adds	r1, r1, #5
 196:lwIP/src/core/tcp_out.c ****   seg->tcphdr->src = lwip_htons(pcb->local_port);
 841              		.loc 1 196 41 view .LVU277
 842 0060 6368     		ldr	r3, [r4, #4]
 843              	.LBB239:
 844              	.LBB234:
 845              		.loc 2 937 19 view .LVU278
 846 0062 6DBA     		rev16	r5, r5
 847              	.LBE234:
 848              	.LBE239:
 849              	.LBB240:
 850              	.LBB230:
 851 0064 40BA     		rev16	r0, r0
 852              	.LBE230:
 853              	.LBE240:
 201:lwIP/src/core/tcp_out.c ****   /* wnd and chksum are set in tcp_output */
 854              		.loc 1 201 3 view .LVU279
 855 0066 46EA0131 		orr	r1, r6, r1, lsl #12
 196:lwIP/src/core/tcp_out.c ****   seg->tcphdr->src = lwip_htons(pcb->local_port);
 856              		.loc 1 196 41 view .LVU280
 857 006a 5B68     		ldr	r3, [r3, #4]
 858              	.LBB241:
 859              	.LBB242:
 860              		.loc 2 937 19 view .LVU281
 861 006c 49BA     		rev16	r1, r1
 862              	.LBE242:
 863              	.LBE241:
 196:lwIP/src/core/tcp_out.c ****   seg->tcphdr->src = lwip_htons(pcb->local_port);
 864              		.loc 1 196 15 view .LVU282
 865 006e E360     		str	r3, [r4, #12]
 197:lwIP/src/core/tcp_out.c ****   seg->tcphdr->dest = lwip_htons(pcb->remote_port);
 866              		.loc 1 197 3 is_stmt 1 view .LVU283
 867              	.LVL80:
 868              	.LBB244:
 869              	.LBI232:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 870              		.loc 2 934 30 view .LVU284
 871              	.LBB235:
 872              		.loc 2 937 3 view .LVU285
 873              		.loc 2 937 3 is_stmt 0 view .LVU286
 874              	.LBE235:
 875              	.LBE244:
 199:lwIP/src/core/tcp_out.c ****   /* ackno is set in tcp_output */
 876              		.loc 1 199 22 view .LVU287
 877 0070 5F60     		str	r7, [r3, #4]	@ unaligned
ARM GAS  /tmp/ccH0Y1hM.s 			page 71


 203:lwIP/src/core/tcp_out.c ****   return seg;
 878              		.loc 1 203 21 view .LVU288
 879 0072 9A74     		strb	r2, [r3, #18]
 201:lwIP/src/core/tcp_out.c ****   /* wnd and chksum are set in tcp_output */
 880              		.loc 1 201 3 view .LVU289
 881 0074 9981     		strh	r1, [r3, #12]	@ unaligned
 203:lwIP/src/core/tcp_out.c ****   return seg;
 882              		.loc 1 203 21 view .LVU290
 883 0076 DA74     		strb	r2, [r3, #19]
 197:lwIP/src/core/tcp_out.c ****   seg->tcphdr->dest = lwip_htons(pcb->remote_port);
 884              		.loc 1 197 20 view .LVU291
 885 0078 1D80     		strh	r5, [r3]	@ unaligned
 198:lwIP/src/core/tcp_out.c ****   seg->tcphdr->seqno = lwip_htonl(seqno);
 886              		.loc 1 198 3 is_stmt 1 view .LVU292
 887              	.LBB245:
 888              	.LBI228:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 889              		.loc 2 934 30 view .LVU293
 890              	.LBB231:
 891              		.loc 2 937 3 view .LVU294
 892              	.LBE231:
 893              	.LBE245:
 198:lwIP/src/core/tcp_out.c ****   seg->tcphdr->seqno = lwip_htonl(seqno);
 894              		.loc 1 198 21 is_stmt 0 view .LVU295
 895 007a 5880     		strh	r0, [r3, #2]	@ unaligned
 199:lwIP/src/core/tcp_out.c ****   /* ackno is set in tcp_output */
 896              		.loc 1 199 3 is_stmt 1 view .LVU296
 897              	.LVL81:
 898              	.LBB246:
 899              	.LBI236:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 900              		.loc 2 900 31 view .LVU297
 901              	.LBB238:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 902              		.loc 2 903 3 view .LVU298
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 903              		.loc 2 903 3 is_stmt 0 view .LVU299
 904              	.LBE238:
 905              	.LBE246:
 201:lwIP/src/core/tcp_out.c ****   /* wnd and chksum are set in tcp_output */
 906              		.loc 1 201 3 is_stmt 1 view .LVU300
 907              	.LBB247:
 908              	.LBI241:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 909              		.loc 2 934 30 view .LVU301
 910              	.LBB243:
 911              		.loc 2 937 3 view .LVU302
 912              		.loc 2 937 3 is_stmt 0 view .LVU303
 913              	.LBE243:
 914              	.LBE247:
 203:lwIP/src/core/tcp_out.c ****   return seg;
 915              		.loc 1 203 3 is_stmt 1 view .LVU304
 204:lwIP/src/core/tcp_out.c **** }
 916              		.loc 1 204 3 view .LVU305
 917              	.L62:
 204:lwIP/src/core/tcp_out.c **** }
 918              		.loc 1 204 3 is_stmt 0 view .LVU306
ARM GAS  /tmp/ccH0Y1hM.s 			page 72


 919              	.LBE248:
 920              	.LBE226:
 205:lwIP/src/core/tcp_out.c **** 
 921              		.loc 1 205 1 view .LVU307
 922 007c 2046     		mov	r0, r4
 923 007e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 924              	.LVL82:
 925              	.L76:
 926              	.LBB251:
 927              	.LBB249:
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 928              		.loc 1 176 3 is_stmt 1 view .LVU308
 929 0082 0A48     		ldr	r0, .L78
 930              	.LVL83:
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 931              		.loc 1 176 3 is_stmt 0 view .LVU309
 932 0084 FFF7FEFF 		bl	printf
 933              	.LVL84:
 934              	.L70:
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 935              		.loc 1 176 3 is_stmt 1 view .LVU310
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 936              		.loc 1 176 3 view .LVU311
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 937              		.loc 1 176 3 view .LVU312
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 938              		.loc 1 176 3 view .LVU313
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 939              		.loc 1 176 3 view .LVU314
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 940              		.loc 1 176 3 view .LVU315
 941 0088 FEE7     		b	.L70
 942              	.LVL85:
 943              	.L74:
 176:lwIP/src/core/tcp_out.c ****   seg->len = p->tot_len - optlen;
 944              		.loc 1 176 3 is_stmt 0 view .LVU316
 945              	.LBE249:
 946              	.LBE251:
 164:lwIP/src/core/tcp_out.c **** 
 947              		.loc 1 164 3 is_stmt 1 discriminator 1 view .LVU317
 948 008a 0948     		ldr	r0, .L78+4
 949              	.LVL86:
 164:lwIP/src/core/tcp_out.c **** 
 950              		.loc 1 164 3 is_stmt 0 discriminator 1 view .LVU318
 951 008c FFF7FEFF 		bl	printf
 952              	.LVL87:
 953              	.L66:
 164:lwIP/src/core/tcp_out.c **** 
 954              		.loc 1 164 3 is_stmt 1 discriminator 2 view .LVU319
 164:lwIP/src/core/tcp_out.c **** 
 955              		.loc 1 164 3 discriminator 2 view .LVU320
 164:lwIP/src/core/tcp_out.c **** 
 956              		.loc 1 164 3 discriminator 2 view .LVU321
 164:lwIP/src/core/tcp_out.c **** 
 957              		.loc 1 164 3 discriminator 2 view .LVU322
 164:lwIP/src/core/tcp_out.c **** 
 958              		.loc 1 164 3 discriminator 2 view .LVU323
ARM GAS  /tmp/ccH0Y1hM.s 			page 73


 164:lwIP/src/core/tcp_out.c **** 
 959              		.loc 1 164 3 discriminator 2 view .LVU324
 960 0090 FEE7     		b	.L66
 961              	.LVL88:
 962              	.L73:
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 963              		.loc 1 163 3 discriminator 1 view .LVU325
 964 0092 0848     		ldr	r0, .L78+8
 965              	.LVL89:
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 966              		.loc 1 163 3 is_stmt 0 discriminator 1 view .LVU326
 967 0094 FFF7FEFF 		bl	printf
 968              	.LVL90:
 969              	.L64:
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 970              		.loc 1 163 3 is_stmt 1 discriminator 1 view .LVU327
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 971              		.loc 1 163 3 discriminator 1 view .LVU328
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 972              		.loc 1 163 3 discriminator 1 view .LVU329
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 973              		.loc 1 163 3 discriminator 1 view .LVU330
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 974              		.loc 1 163 3 discriminator 1 view .LVU331
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 975              		.loc 1 163 3 discriminator 1 view .LVU332
 976 0098 FEE7     		b	.L64
 977              	.LVL91:
 978              	.L77:
 979              	.LBB252:
 980              	.LBB250:
 191:lwIP/src/core/tcp_out.c ****     TCP_STATS_INC(tcp.err);
 981              		.loc 1 191 118 view .LVU333
 192:lwIP/src/core/tcp_out.c ****     tcp_seg_free(seg);
 982              		.loc 1 192 27 view .LVU334
 193:lwIP/src/core/tcp_out.c ****     return NULL;
 983              		.loc 1 193 5 view .LVU335
 984 009a 2046     		mov	r0, r4
 194:lwIP/src/core/tcp_out.c ****   }
 985              		.loc 1 194 12 is_stmt 0 view .LVU336
 986 009c 5446     		mov	r4, r10
 987              	.LVL92:
 193:lwIP/src/core/tcp_out.c ****     return NULL;
 988              		.loc 1 193 5 view .LVU337
 989 009e FFF7FEFF 		bl	tcp_seg_free
 990              	.LVL93:
 194:lwIP/src/core/tcp_out.c ****   }
 991              		.loc 1 194 5 is_stmt 1 view .LVU338
 194:lwIP/src/core/tcp_out.c ****   }
 992              		.loc 1 194 12 is_stmt 0 view .LVU339
 993 00a2 EBE7     		b	.L62
 994              	.LVL94:
 995              	.L75:
 169:lwIP/src/core/tcp_out.c ****     pbuf_free(p);
 996              		.loc 1 169 97 is_stmt 1 view .LVU340
 170:lwIP/src/core/tcp_out.c ****     return NULL;
 997              		.loc 1 170 5 view .LVU341
ARM GAS  /tmp/ccH0Y1hM.s 			page 74


 998 00a4 4846     		mov	r0, r9
 999              	.LVL95:
 170:lwIP/src/core/tcp_out.c ****     return NULL;
 1000              		.loc 1 170 5 is_stmt 0 view .LVU342
 1001 00a6 FFF7FEFF 		bl	pbuf_free
 1002              	.LVL96:
 171:lwIP/src/core/tcp_out.c ****   }
 1003              		.loc 1 171 5 is_stmt 1 view .LVU343
 171:lwIP/src/core/tcp_out.c ****   }
 1004              		.loc 1 171 12 is_stmt 0 view .LVU344
 1005 00aa E7E7     		b	.L62
 1006              	.L79:
 1007              		.align	2
 1008              	.L78:
 1009 00ac 00000000 		.word	.LC2
 1010 00b0 20000000 		.word	.LC5
 1011 00b4 00000000 		.word	.LC4
 1012              	.LBE250:
 1013              	.LBE252:
 1014              		.cfi_endproc
 1015              	.LFE106:
 1017              		.section	.rodata.tcp_write.str1.4,"aMS",%progbits,1
 1018              		.align	2
 1019              	.LC6:
 1020 0000 7463705F 		.ascii	"tcp_write: invalid pcb\000"
 1020      77726974 
 1020      653A2069 
 1020      6E76616C 
 1020      69642070 
 1021 0017 00       		.align	2
 1022              	.LC7:
 1023 0018 7463705F 		.ascii	"tcp_write: arg == NULL (programmer violates API)\000"
 1023      77726974 
 1023      653A2061 
 1023      7267203D 
 1023      3D204E55 
 1024 0049 000000   		.align	2
 1025              	.LC8:
 1026 004c 7463705F 		.ascii	"tcp_write: pbufs on queue => at least one queue non"
 1026      77726974 
 1026      653A2070 
 1026      62756673 
 1026      206F6E20 
 1027 007f 2D656D70 		.ascii	"-empty\000"
 1027      747900
 1028 0086 0000     		.align	2
 1029              	.LC9:
 1030 0088 7463705F 		.ascii	"tcp_write: no pbufs on queue => both queues empty\000"
 1030      77726974 
 1030      653A206E 
 1030      6F207062 
 1030      75667320 
 1031 00ba 0000     		.align	2
 1032              	.LC10:
 1033 00bc 6D73735F 		.ascii	"mss_local is too small\000"
 1033      6C6F6361 
 1033      6C206973 
ARM GAS  /tmp/ccH0Y1hM.s 			page 75


 1033      20746F6F 
 1033      20736D61 
 1034 00d3 00       		.align	2
 1035              	.LC11:
 1036 00d4 696E636F 		.ascii	"inconsistent oversize vs. space\000"
 1036      6E736973 
 1036      74656E74 
 1036      206F7665 
 1036      7273697A 
 1037              		.align	2
 1038              	.LC12:
 1039 00f4 696E636F 		.ascii	"inconsistent oversize vs. len\000"
 1039      6E736973 
 1039      74656E74 
 1039      206F7665 
 1039      7273697A 
 1040 0112 0000     		.align	2
 1041              	.LC13:
 1042 0114 7463705F 		.ascii	"tcp_write: ROM pbufs cannot be oversized\000"
 1042      77726974 
 1042      653A2052 
 1042      4F4D2070 
 1042      62756673 
 1043 013d 000000   		.align	2
 1044              	.LC14:
 1045 0140 756E7365 		.ascii	"unsent_oversize mismatch (pcb->unsent is NULL)\000"
 1045      6E745F6F 
 1045      76657273 
 1045      697A6520 
 1045      6D69736D 
 1046 016f 00       		.align	2
 1047              	.LC15:
 1048 0170 7463705F 		.ascii	"tcp_write: check that first pbuf can hold the compl"
 1048      77726974 
 1048      653A2063 
 1048      6865636B 
 1048      20746861 
 1049 01a3 65746520 		.ascii	"ete seglen\000"
 1049      7365676C 
 1049      656E00
 1050 01ae 0000     		.align	2
 1051              	.LC16:
 1052 01b0 6F766572 		.ascii	"oversize == 0\000"
 1052      73697A65 
 1052      203D3D20 
 1052      3000
 1053 01be 0000     		.align	2
 1054              	.LC17:
 1055 01c0 70726576 		.ascii	"prev_seg != NULL\000"
 1055      5F736567 
 1055      20213D20 
 1055      4E554C4C 
 1055      00
 1056 01d1 000000   		.align	2
 1057              	.LC18:
 1058 01d4 7463705F 		.ascii	"tcp_write: cannot concatenate when pcb->unsent is e"
 1058      77726974 
ARM GAS  /tmp/ccH0Y1hM.s 			page 76


 1058      653A2063 
 1058      616E6E6F 
 1058      7420636F 
 1059 0207 6D707479 		.ascii	"mpty\000"
 1059      00
 1060              		.align	2
 1061              	.LC19:
 1062 020c 7463705F 		.ascii	"tcp_write: extension of reference requires referenc"
 1062      77726974 
 1062      653A2065 
 1062      7874656E 
 1062      73696F6E 
 1063 023f 6500     		.ascii	"e\000"
 1064 0241 000000   		.align	2
 1065              	.LC20:
 1066 0244 7463705F 		.ascii	"tcp_write: valid queue length\000"
 1066      77726974 
 1066      653A2076 
 1066      616C6964 
 1066      20717565 
 1067              		.section	.text.tcp_write,"ax",%progbits
 1068              		.align	1
 1069              		.p2align 2,,3
 1070              		.global	tcp_write
 1071              		.syntax unified
 1072              		.thumb
 1073              		.thumb_func
 1074              		.fpu fpv4-sp-d16
 1076              	tcp_write:
 1077              	.LVL97:
 1078              	.LFB109:
 391:lwIP/src/core/tcp_out.c ****   struct pbuf *concat_p = NULL;
 1079              		.loc 1 391 1 is_stmt 1 view -0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 48
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 392:lwIP/src/core/tcp_out.c ****   struct tcp_seg *last_unsent = NULL, *seg = NULL, *prev_seg = NULL, *queue = NULL;
 1083              		.loc 1 392 3 view .LVU346
 393:lwIP/src/core/tcp_out.c ****   u16_t pos = 0; /* position in 'arg' data */
 1084              		.loc 1 393 3 view .LVU347
 394:lwIP/src/core/tcp_out.c ****   u16_t queuelen;
 1085              		.loc 1 394 3 view .LVU348
 395:lwIP/src/core/tcp_out.c ****   u8_t optlen;
 1086              		.loc 1 395 3 view .LVU349
 396:lwIP/src/core/tcp_out.c ****   u8_t optflags = 0;
 1087              		.loc 1 396 3 view .LVU350
 397:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE
 1088              		.loc 1 397 3 view .LVU351
 399:lwIP/src/core/tcp_out.c ****   u16_t oversize_used = 0;
 1089              		.loc 1 399 3 view .LVU352
 391:lwIP/src/core/tcp_out.c ****   struct pbuf *concat_p = NULL;
 1090              		.loc 1 391 1 is_stmt 0 view .LVU353
 1091 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1092              	.LCFI9:
 1093              		.cfi_def_cfa_offset 36
 1094              		.cfi_offset 4, -36
 1095              		.cfi_offset 5, -32
ARM GAS  /tmp/ccH0Y1hM.s 			page 77


 1096              		.cfi_offset 6, -28
 1097              		.cfi_offset 7, -24
 1098              		.cfi_offset 8, -20
 1099              		.cfi_offset 9, -16
 1100              		.cfi_offset 10, -12
 1101              		.cfi_offset 11, -8
 1102              		.cfi_offset 14, -4
 399:lwIP/src/core/tcp_out.c ****   u16_t oversize_used = 0;
 1103              		.loc 1 399 9 view .LVU354
 1104 0004 0025     		movs	r5, #0
 391:lwIP/src/core/tcp_out.c ****   struct pbuf *concat_p = NULL;
 1105              		.loc 1 391 1 view .LVU355
 1106 0006 91B0     		sub	sp, sp, #68
 1107              	.LCFI10:
 1108              		.cfi_def_cfa_offset 104
 391:lwIP/src/core/tcp_out.c ****   struct pbuf *concat_p = NULL;
 1109              		.loc 1 391 1 view .LVU356
 1110 0008 CDE90621 		strd	r2, r1, [sp, #24]
 1111 000c 0993     		str	r3, [sp, #36]
 399:lwIP/src/core/tcp_out.c ****   u16_t oversize_used = 0;
 1112              		.loc 1 399 9 view .LVU357
 1113 000e ADF83E50 		strh	r5, [sp, #62]	@ movhi
 400:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 1114              		.loc 1 400 3 is_stmt 1 view .LVU358
 1115              	.LVL98:
 405:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 1116              		.loc 1 405 3 view .LVU359
 411:lwIP/src/core/tcp_out.c ****   u16_t mss_local;
 1117              		.loc 1 411 3 view .LVU360
 412:lwIP/src/core/tcp_out.c **** 
 1118              		.loc 1 412 3 view .LVU361
 414:lwIP/src/core/tcp_out.c **** 
 1119              		.loc 1 414 3 view .LVU362
 414:lwIP/src/core/tcp_out.c **** 
 1120              		.loc 1 414 3 view .LVU363
 1121 0012 0028     		cmp	r0, #0
 1122 0014 72D0     		beq	.L231
 414:lwIP/src/core/tcp_out.c **** 
 1123              		.loc 1 414 3 discriminator 2 view .LVU364
 417:lwIP/src/core/tcp_out.c ****   mss_local = mss_local ? mss_local : pcb->mss;
 1124              		.loc 1 417 3 discriminator 2 view .LVU365
 417:lwIP/src/core/tcp_out.c ****   mss_local = mss_local ? mss_local : pcb->mss;
 1125              		.loc 1 417 15 is_stmt 0 discriminator 2 view .LVU366
 1126 0016 B0F86230 		ldrh	r3, [r0, #98]
 1127              	.LVL99:
 417:lwIP/src/core/tcp_out.c ****   mss_local = mss_local ? mss_local : pcb->mss;
 1128              		.loc 1 417 15 discriminator 2 view .LVU367
 1129 001a 0446     		mov	r4, r0
 1130 001c 428E     		ldrh	r2, [r0, #50]
 1131              	.LVL100:
 417:lwIP/src/core/tcp_out.c ****   mss_local = mss_local ? mss_local : pcb->mss;
 1132              		.loc 1 417 13 discriminator 2 view .LVU368
 1133 001e 5B08     		lsrs	r3, r3, #1
 1134 0020 9342     		cmp	r3, r2
 1135 0022 28BF     		it	cs
 1136 0024 1346     		movcs	r3, r2
 1137              	.LVL101:
ARM GAS  /tmp/ccH0Y1hM.s 			page 78


 418:lwIP/src/core/tcp_out.c **** 
 1138              		.loc 1 418 3 is_stmt 1 discriminator 2 view .LVU369
 418:lwIP/src/core/tcp_out.c **** 
 1139              		.loc 1 418 13 is_stmt 0 discriminator 2 view .LVU370
 1140 0026 1946     		mov	r1, r3
 1141              	.LVL102:
 418:lwIP/src/core/tcp_out.c **** 
 1142              		.loc 1 418 13 discriminator 2 view .LVU371
 1143 0028 002B     		cmp	r3, #0
 1144 002a 08BF     		it	eq
 1145 002c 1146     		moveq	r1, r2
 429:lwIP/src/core/tcp_out.c ****              arg != NULL, return ERR_ARG;);
 1146              		.loc 1 429 3 discriminator 2 view .LVU372
 1147 002e 079B     		ldr	r3, [sp, #28]
 1148              	.LVL103:
 418:lwIP/src/core/tcp_out.c **** 
 1149              		.loc 1 418 13 discriminator 2 view .LVU373
 1150 0030 0A91     		str	r1, [sp, #40]
 1151              	.LVL104:
 420:lwIP/src/core/tcp_out.c **** 
 1152              		.loc 1 420 28 is_stmt 1 discriminator 2 view .LVU374
 428:lwIP/src/core/tcp_out.c ****   LWIP_ERROR("tcp_write: arg == NULL (programmer violates API)",
 1153              		.loc 1 428 74 discriminator 2 view .LVU375
 429:lwIP/src/core/tcp_out.c ****              arg != NULL, return ERR_ARG;);
 1154              		.loc 1 429 3 discriminator 2 view .LVU376
 429:lwIP/src/core/tcp_out.c ****              arg != NULL, return ERR_ARG;);
 1155              		.loc 1 429 3 discriminator 2 view .LVU377
 1156 0032 EBB1     		cbz	r3, .L232
 429:lwIP/src/core/tcp_out.c ****              arg != NULL, return ERR_ARG;);
 1157              		.loc 1 429 3 view .LVU378
 429:lwIP/src/core/tcp_out.c ****              arg != NULL, return ERR_ARG;);
 1158              		.loc 1 429 3 view .LVU379
 432:lwIP/src/core/tcp_out.c ****   if (err != ERR_OK) {
 1159              		.loc 1 432 3 view .LVU380
 1160              	.LVL105:
 1161              	.LBB262:
 1162              	.LBI262:
 305:lwIP/src/core/tcp_out.c **** {
 1163              		.loc 1 305 1 view .LVU381
 1164              	.LBB263:
 307:lwIP/src/core/tcp_out.c **** 
 1165              		.loc 1 307 3 view .LVU382
 307:lwIP/src/core/tcp_out.c **** 
 1166              		.loc 1 307 3 view .LVU383
 307:lwIP/src/core/tcp_out.c **** 
 1167              		.loc 1 307 3 view .LVU384
 310:lwIP/src/core/tcp_out.c ****       (pcb->state != CLOSE_WAIT) &&
 1168              		.loc 1 310 3 view .LVU385
 310:lwIP/src/core/tcp_out.c ****       (pcb->state != CLOSE_WAIT) &&
 1169              		.loc 1 310 11 is_stmt 0 view .LVU386
 1170 0034 037D     		ldrb	r3, [r0, #20]	@ zero_extendqisi2
 311:lwIP/src/core/tcp_out.c ****       (pcb->state != SYN_SENT) &&
 1171              		.loc 1 311 34 view .LVU387
 1172 0036 9A1E     		subs	r2, r3, #2
 312:lwIP/src/core/tcp_out.c ****       (pcb->state != SYN_RCVD)) {
 1173              		.loc 1 312 32 view .LVU388
 1174 0038 022A     		cmp	r2, #2
ARM GAS  /tmp/ccH0Y1hM.s 			page 79


 1175 003a 02D9     		bls	.L172
 1176 003c 072B     		cmp	r3, #7
 1177 003e 40F04F81 		bne	.L159
 1178              	.L172:
 316:lwIP/src/core/tcp_out.c ****     return ERR_OK;
 1179              		.loc 1 316 10 is_stmt 1 view .LVU389
 316:lwIP/src/core/tcp_out.c ****     return ERR_OK;
 1180              		.loc 1 316 13 is_stmt 0 view .LVU390
 1181 0042 069A     		ldr	r2, [sp, #24]
 1182 0044 002A     		cmp	r2, #0
 1183 0046 50D0     		beq	.L88
 321:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SEVERE, ("tcp_write: too much data (len=%"U16_F" 
 1184              		.loc 1 321 3 is_stmt 1 view .LVU391
 321:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SEVERE, ("tcp_write: too much data (len=%"U16_F" 
 1185              		.loc 1 321 6 is_stmt 0 view .LVU392
 1186 0048 B4F86430 		ldrh	r3, [r4, #100]
 1187 004c 9342     		cmp	r3, r2
 1188 004e C0F0A480 		bcc	.L90
 328:lwIP/src/core/tcp_out.c **** 
 1189              		.loc 1 328 108 is_stmt 1 view .LVU393
 333:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SEVERE, ("tcp_write: too long queue %"U16_F" (max
 1190              		.loc 1 333 3 view .LVU394
 333:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SEVERE, ("tcp_write: too long queue %"U16_F" (max
 1191              		.loc 1 333 10 is_stmt 0 view .LVU395
 1192 0052 B4F86620 		ldrh	r2, [r4, #102]
 333:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SEVERE, ("tcp_write: too long queue %"U16_F" (max
 1193              		.loc 1 333 6 view .LVU396
 1194 0056 072A     		cmp	r2, #7
 333:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SEVERE, ("tcp_write: too long queue %"U16_F" (max
 1195              		.loc 1 333 10 view .LVU397
 1196 0058 0592     		str	r2, [sp, #20]
 333:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SEVERE, ("tcp_write: too long queue %"U16_F" (max
 1197              		.loc 1 333 6 view .LVU398
 1198 005a 00F29E80 		bhi	.L90
 340:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: pbufs on queue => at least one queue non-empty",
 1199              		.loc 1 340 3 is_stmt 1 view .LVU399
 1200 005e 236F     		ldr	r3, [r4, #112]
 340:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: pbufs on queue => at least one queue non-empty",
 1201              		.loc 1 340 6 is_stmt 0 view .LVU400
 1202 0060 52B9     		cbnz	r2, .L233
 344:lwIP/src/core/tcp_out.c ****                 pcb->unacked == NULL && pcb->unsent == NULL);
 1203              		.loc 1 344 5 is_stmt 1 view .LVU401
 344:lwIP/src/core/tcp_out.c ****                 pcb->unacked == NULL && pcb->unsent == NULL);
 1204              		.loc 1 344 5 view .LVU402
 1205 0062 002B     		cmp	r3, #0
 1206 0064 00F08580 		beq	.L234
 1207              	.L95:
 344:lwIP/src/core/tcp_out.c ****                 pcb->unacked == NULL && pcb->unsent == NULL);
 1208              		.loc 1 344 5 view .LVU403
 1209 0068 BB48     		ldr	r0, .L250
 1210              	.LVL106:
 344:lwIP/src/core/tcp_out.c ****                 pcb->unacked == NULL && pcb->unsent == NULL);
 1211              		.loc 1 344 5 is_stmt 0 view .LVU404
 1212 006a FFF7FEFF 		bl	printf
 1213              	.LVL107:
 1214              	.L97:
 344:lwIP/src/core/tcp_out.c ****                 pcb->unacked == NULL && pcb->unsent == NULL);
ARM GAS  /tmp/ccH0Y1hM.s 			page 80


 1215              		.loc 1 344 5 is_stmt 1 view .LVU405
 344:lwIP/src/core/tcp_out.c ****                 pcb->unacked == NULL && pcb->unsent == NULL);
 1216              		.loc 1 344 5 view .LVU406
 344:lwIP/src/core/tcp_out.c ****                 pcb->unacked == NULL && pcb->unsent == NULL);
 1217              		.loc 1 344 5 view .LVU407
 344:lwIP/src/core/tcp_out.c ****                 pcb->unacked == NULL && pcb->unsent == NULL);
 1218              		.loc 1 344 5 view .LVU408
 344:lwIP/src/core/tcp_out.c ****                 pcb->unacked == NULL && pcb->unsent == NULL);
 1219              		.loc 1 344 5 view .LVU409
 344:lwIP/src/core/tcp_out.c ****                 pcb->unacked == NULL && pcb->unsent == NULL);
 1220              		.loc 1 344 5 view .LVU410
 1221 006e FEE7     		b	.L97
 1222              	.LVL108:
 1223              	.L232:
 344:lwIP/src/core/tcp_out.c ****                 pcb->unacked == NULL && pcb->unsent == NULL);
 1224              		.loc 1 344 5 is_stmt 0 view .LVU411
 1225              	.LBE263:
 1226              	.LBE262:
 429:lwIP/src/core/tcp_out.c ****              arg != NULL, return ERR_ARG;);
 1227              		.loc 1 429 3 is_stmt 1 discriminator 1 view .LVU412
 1228 0070 BA48     		ldr	r0, .L250+4
 1229              	.LVL109:
 429:lwIP/src/core/tcp_out.c ****              arg != NULL, return ERR_ARG;);
 1230              		.loc 1 429 3 is_stmt 0 discriminator 1 view .LVU413
 1231 0072 FFF7FEFF 		bl	printf
 1232              	.LVL110:
 1233              	.L85:
 429:lwIP/src/core/tcp_out.c ****              arg != NULL, return ERR_ARG;);
 1234              		.loc 1 429 3 is_stmt 1 discriminator 2 view .LVU414
 429:lwIP/src/core/tcp_out.c ****              arg != NULL, return ERR_ARG;);
 1235              		.loc 1 429 3 discriminator 2 view .LVU415
 429:lwIP/src/core/tcp_out.c ****              arg != NULL, return ERR_ARG;);
 1236              		.loc 1 429 3 discriminator 2 view .LVU416
 429:lwIP/src/core/tcp_out.c ****              arg != NULL, return ERR_ARG;);
 1237              		.loc 1 429 3 discriminator 2 view .LVU417
 429:lwIP/src/core/tcp_out.c ****              arg != NULL, return ERR_ARG;);
 1238              		.loc 1 429 3 discriminator 2 view .LVU418
 429:lwIP/src/core/tcp_out.c ****              arg != NULL, return ERR_ARG;);
 1239              		.loc 1 429 3 discriminator 2 view .LVU419
 1240 0076 FEE7     		b	.L85
 1241              	.LVL111:
 1242              	.L233:
 1243              	.LBB268:
 1244              	.LBB264:
 341:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1245              		.loc 1 341 5 view .LVU420
 341:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1246              		.loc 1 341 5 view .LVU421
 1247 0078 D4F86C80 		ldr	r8, [r4, #108]
 1248 007c 002B     		cmp	r3, #0
 1249 007e 00F08480 		beq	.L235
 1250              	.LVL112:
 341:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1251              		.loc 1 341 5 is_stmt 0 view .LVU422
 1252              	.LBE264:
 1253              	.LBE268:
 436:lwIP/src/core/tcp_out.c **** 
ARM GAS  /tmp/ccH0Y1hM.s 			page 81


 1254              		.loc 1 436 3 is_stmt 1 view .LVU423
 449:lwIP/src/core/tcp_out.c ****   }
 1255              		.loc 1 449 5 view .LVU424
 476:lwIP/src/core/tcp_out.c ****     u16_t space;
 1256              		.loc 1 476 3 view .LVU425
 476:lwIP/src/core/tcp_out.c ****     u16_t space;
 1257              		.loc 1 476 6 is_stmt 0 view .LVU426
 1258 0082 B8F1000F 		cmp	r8, #0
 1259 0086 00F03281 		beq	.L98
 1260              	.LVL113:
 1261              	.L223:
 476:lwIP/src/core/tcp_out.c ****     u16_t space;
 1262              		.loc 1 476 6 view .LVU427
 1263 008a 4346     		mov	r3, r8
 1264              	.LVL114:
 1265              	.L99:
 1266              	.LBB269:
 481:lwIP/src/core/tcp_out.c ****          last_unsent = last_unsent->next);
 1267              		.loc 1 481 37 is_stmt 1 discriminator 1 view .LVU428
 1268 008c 1F46     		mov	r7, r3
 481:lwIP/src/core/tcp_out.c ****          last_unsent = last_unsent->next);
 1269              		.loc 1 481 48 is_stmt 0 discriminator 1 view .LVU429
 1270 008e 1B68     		ldr	r3, [r3]
 1271              	.LVL115:
 481:lwIP/src/core/tcp_out.c ****          last_unsent = last_unsent->next);
 1272              		.loc 1 481 5 discriminator 1 view .LVU430
 1273 0090 002B     		cmp	r3, #0
 1274 0092 FBD1     		bne	.L99
 485:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("mss_local is too small", mss_local >= last_unsent->len + unsent_optlen);
 1275              		.loc 1 485 5 is_stmt 1 view .LVU431
 1276 0094 9846     		mov	r8, r3
 485:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("mss_local is too small", mss_local >= last_unsent->len + unsent_optlen);
 1277              		.loc 1 485 21 is_stmt 0 view .LVU432
 1278 0096 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 486:lwIP/src/core/tcp_out.c ****     space = mss_local - (last_unsent->len + unsent_optlen);
 1279              		.loc 1 486 5 view .LVU433
 1280 0098 3989     		ldrh	r1, [r7, #8]
 485:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("mss_local is too small", mss_local >= last_unsent->len + unsent_optlen);
 1281              		.loc 1 485 21 view .LVU434
 1282 009a 9B00     		lsls	r3, r3, #2
 486:lwIP/src/core/tcp_out.c ****     space = mss_local - (last_unsent->len + unsent_optlen);
 1283              		.loc 1 486 5 view .LVU435
 1284 009c 0A98     		ldr	r0, [sp, #40]
 1285              	.LVL116:
 485:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("mss_local is too small", mss_local >= last_unsent->len + unsent_optlen);
 1286              		.loc 1 485 19 view .LVU436
 1287 009e 03F00403 		and	r3, r3, #4
 1288              	.LVL117:
 486:lwIP/src/core/tcp_out.c ****     space = mss_local - (last_unsent->len + unsent_optlen);
 1289              		.loc 1 486 5 is_stmt 1 view .LVU437
 486:lwIP/src/core/tcp_out.c ****     space = mss_local - (last_unsent->len + unsent_optlen);
 1290              		.loc 1 486 5 view .LVU438
 1291 00a2 CA18     		adds	r2, r1, r3
 1292 00a4 9042     		cmp	r0, r2
 1293 00a6 60DB     		blt	.L236
 486:lwIP/src/core/tcp_out.c ****     space = mss_local - (last_unsent->len + unsent_optlen);
 1294              		.loc 1 486 5 discriminator 2 view .LVU439
ARM GAS  /tmp/ccH0Y1hM.s 			page 82


 487:lwIP/src/core/tcp_out.c **** 
 1295              		.loc 1 487 5 discriminator 2 view .LVU440
 487:lwIP/src/core/tcp_out.c **** 
 1296              		.loc 1 487 11 is_stmt 0 discriminator 2 view .LVU441
 1297 00a8 421A     		subs	r2, r0, r1
 502:lwIP/src/core/tcp_out.c ****     if (oversize > 0) {
 1298              		.loc 1 502 19 discriminator 2 view .LVU442
 1299 00aa B4F86860 		ldrh	r6, [r4, #104]
 487:lwIP/src/core/tcp_out.c **** 
 1300              		.loc 1 487 11 discriminator 2 view .LVU443
 1301 00ae D31A     		subs	r3, r2, r3
 1302              	.LVL118:
 502:lwIP/src/core/tcp_out.c ****     if (oversize > 0) {
 1303              		.loc 1 502 14 discriminator 2 view .LVU444
 1304 00b0 ADF83E60 		strh	r6, [sp, #62]	@ movhi
 487:lwIP/src/core/tcp_out.c **** 
 1305              		.loc 1 487 11 discriminator 2 view .LVU445
 1306 00b4 9AB2     		uxth	r2, r3
 1307              	.LVL119:
 502:lwIP/src/core/tcp_out.c ****     if (oversize > 0) {
 1308              		.loc 1 502 5 is_stmt 1 discriminator 2 view .LVU446
 503:lwIP/src/core/tcp_out.c ****       LWIP_ASSERT("inconsistent oversize vs. space", oversize <= space);
 1309              		.loc 1 503 5 discriminator 2 view .LVU447
 503:lwIP/src/core/tcp_out.c ****       LWIP_ASSERT("inconsistent oversize vs. space", oversize <= space);
 1310              		.loc 1 503 8 is_stmt 0 discriminator 2 view .LVU448
 1311 00b6 2EB3     		cbz	r6, .L160
 504:lwIP/src/core/tcp_out.c ****       seg = last_unsent;
 1312              		.loc 1 504 7 is_stmt 1 view .LVU449
 504:lwIP/src/core/tcp_out.c ****       seg = last_unsent;
 1313              		.loc 1 504 7 view .LVU450
 1314 00b8 9642     		cmp	r6, r2
 1315 00ba 00F21481 		bhi	.L237
 504:lwIP/src/core/tcp_out.c ****       seg = last_unsent;
 1316              		.loc 1 504 7 discriminator 2 view .LVU451
 505:lwIP/src/core/tcp_out.c ****       oversize_used = LWIP_MIN(space, LWIP_MIN(oversize, len));
 1317              		.loc 1 505 7 discriminator 2 view .LVU452
 1318              	.LVL120:
 506:lwIP/src/core/tcp_out.c ****       pos += oversize_used;
 1319              		.loc 1 506 7 discriminator 2 view .LVU453
 506:lwIP/src/core/tcp_out.c ****       pos += oversize_used;
 1320              		.loc 1 506 21 is_stmt 0 discriminator 2 view .LVU454
 1321 00be 069D     		ldr	r5, [sp, #24]
 1322 00c0 B542     		cmp	r5, r6
 1323 00c2 2B46     		mov	r3, r5
 1324 00c4 28BF     		it	cs
 1325 00c6 3346     		movcs	r3, r6
 1326 00c8 9342     		cmp	r3, r2
 1327 00ca 28BF     		it	cs
 1328 00cc 1346     		movcs	r3, r2
 1329              	.LVL121:
 507:lwIP/src/core/tcp_out.c ****       oversize -= oversize_used;
 1330              		.loc 1 507 7 is_stmt 1 discriminator 2 view .LVU455
 508:lwIP/src/core/tcp_out.c ****       space -= oversize_used;
 1331              		.loc 1 508 7 discriminator 2 view .LVU456
 508:lwIP/src/core/tcp_out.c ****       space -= oversize_used;
 1332              		.loc 1 508 16 is_stmt 0 discriminator 2 view .LVU457
 1333 00ce F01A     		subs	r0, r6, r3
ARM GAS  /tmp/ccH0Y1hM.s 			page 83


 1334 00d0 80B2     		uxth	r0, r0
 1335 00d2 ADF83E00 		strh	r0, [sp, #62]	@ movhi
 509:lwIP/src/core/tcp_out.c ****     }
 1336              		.loc 1 509 7 is_stmt 1 discriminator 2 view .LVU458
 1337              	.LVL122:
 512:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 1338              		.loc 1 512 5 discriminator 2 view .LVU459
 512:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 1339              		.loc 1 512 5 discriminator 2 view .LVU460
 1340 00d6 0028     		cmp	r0, #0
 1341 00d8 00F03881 		beq	.L173
 1342 00dc 9D42     		cmp	r5, r3
 1343 00de 00F03581 		beq	.L173
 512:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 1344              		.loc 1 512 5 discriminator 1 view .LVU461
 1345 00e2 9F48     		ldr	r0, .L250+8
 1346 00e4 FFF7FEFF 		bl	printf
 1347              	.LVL123:
 1348              	.L107:
 512:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 1349              		.loc 1 512 5 discriminator 5 view .LVU462
 512:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 1350              		.loc 1 512 5 discriminator 5 view .LVU463
 512:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 1351              		.loc 1 512 5 discriminator 5 view .LVU464
 512:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 1352              		.loc 1 512 5 discriminator 5 view .LVU465
 512:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 1353              		.loc 1 512 5 discriminator 5 view .LVU466
 512:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 1354              		.loc 1 512 5 discriminator 5 view .LVU467
 1355 00e8 FEE7     		b	.L107
 1356              	.LVL124:
 1357              	.L88:
 512:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 1358              		.loc 1 512 5 is_stmt 0 discriminator 5 view .LVU468
 1359 00ea B4F86630 		ldrh	r3, [r4, #102]
 1360 00ee D4F86C80 		ldr	r8, [r4, #108]
 1361              	.LVL125:
 512:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 1362              		.loc 1 512 5 discriminator 5 view .LVU469
 1363              	.LBE269:
 436:lwIP/src/core/tcp_out.c **** 
 1364              		.loc 1 436 3 is_stmt 1 view .LVU470
 449:lwIP/src/core/tcp_out.c ****   }
 1365              		.loc 1 449 5 view .LVU471
 476:lwIP/src/core/tcp_out.c ****     u16_t space;
 1366              		.loc 1 476 3 view .LVU472
 1367 00f2 0593     		str	r3, [sp, #20]
 476:lwIP/src/core/tcp_out.c ****     u16_t space;
 1368              		.loc 1 476 6 is_stmt 0 view .LVU473
 1369 00f4 B8F1000F 		cmp	r8, #0
 1370 00f8 C7D1     		bne	.L223
 1371 00fa F8E0     		b	.L98
 1372              	.LVL126:
 1373              	.L231:
 414:lwIP/src/core/tcp_out.c **** 
ARM GAS  /tmp/ccH0Y1hM.s 			page 84


 1374              		.loc 1 414 3 is_stmt 1 discriminator 1 view .LVU474
 1375 00fc 9948     		ldr	r0, .L250+12
 1376              	.LVL127:
 414:lwIP/src/core/tcp_out.c **** 
 1377              		.loc 1 414 3 is_stmt 0 discriminator 1 view .LVU475
 1378 00fe FFF7FEFF 		bl	printf
 1379              	.LVL128:
 1380              	.L82:
 414:lwIP/src/core/tcp_out.c **** 
 1381              		.loc 1 414 3 is_stmt 1 discriminator 1 view .LVU476
 414:lwIP/src/core/tcp_out.c **** 
 1382              		.loc 1 414 3 discriminator 1 view .LVU477
 414:lwIP/src/core/tcp_out.c **** 
 1383              		.loc 1 414 3 discriminator 1 view .LVU478
 414:lwIP/src/core/tcp_out.c **** 
 1384              		.loc 1 414 3 discriminator 1 view .LVU479
 414:lwIP/src/core/tcp_out.c **** 
 1385              		.loc 1 414 3 discriminator 1 view .LVU480
 414:lwIP/src/core/tcp_out.c **** 
 1386              		.loc 1 414 3 discriminator 1 view .LVU481
 1387 0102 FEE7     		b	.L82
 1388              	.LVL129:
 1389              	.L160:
 393:lwIP/src/core/tcp_out.c ****   u16_t pos = 0; /* position in 'arg' data */
 1390              		.loc 1 393 40 is_stmt 0 view .LVU482
 1391 0104 C346     		mov	fp, r8
 1392              	.LVL130:
 1393              	.L102:
 1394              	.LBB280:
 512:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 1395              		.loc 1 512 5 is_stmt 1 discriminator 2 view .LVU483
 531:lwIP/src/core/tcp_out.c ****       u16_t seglen = LWIP_MIN(space, len - pos);
 1396              		.loc 1 531 5 discriminator 2 view .LVU484
 531:lwIP/src/core/tcp_out.c ****       u16_t seglen = LWIP_MIN(space, len - pos);
 1397              		.loc 1 531 36 is_stmt 0 discriminator 2 view .LVU485
 1398 0106 069B     		ldr	r3, [sp, #24]
 1399 0108 002A     		cmp	r2, #0
 1400 010a 18BF     		it	ne
 1401 010c B342     		cmpne	r3, r6
 1402 010e 40F2C181 		bls	.L161
 1403 0112 0029     		cmp	r1, #0
 1404 0114 00F0BE81 		beq	.L161
 1405              	.LBB270:
 532:lwIP/src/core/tcp_out.c ****       seg = last_unsent;
 1406              		.loc 1 532 7 is_stmt 1 view .LVU486
 532:lwIP/src/core/tcp_out.c ****       seg = last_unsent;
 1407              		.loc 1 532 22 is_stmt 0 view .LVU487
 1408 0118 A3EB0609 		sub	r9, r3, r6
 538:lwIP/src/core/tcp_out.c ****         /* Data is copied */
 1409              		.loc 1 538 10 view .LVU488
 1410 011c 099B     		ldr	r3, [sp, #36]
 532:lwIP/src/core/tcp_out.c ****       seg = last_unsent;
 1411              		.loc 1 532 22 view .LVU489
 1412 011e 9145     		cmp	r9, r2
 1413 0120 A8BF     		it	ge
 1414 0122 9146     		movge	r9, r2
 538:lwIP/src/core/tcp_out.c ****         /* Data is copied */
ARM GAS  /tmp/ccH0Y1hM.s 			page 85


 1415              		.loc 1 538 10 view .LVU490
 1416 0124 D907     		lsls	r1, r3, #31
 532:lwIP/src/core/tcp_out.c ****       seg = last_unsent;
 1417              		.loc 1 532 13 view .LVU491
 1418 0126 1FFA89FA 		uxth	r10, r9
 1419              	.LVL131:
 533:lwIP/src/core/tcp_out.c **** 
 1420              		.loc 1 533 7 is_stmt 1 view .LVU492
 538:lwIP/src/core/tcp_out.c ****         /* Data is copied */
 1421              		.loc 1 538 7 view .LVU493
 538:lwIP/src/core/tcp_out.c ****         /* Data is copied */
 1422              		.loc 1 538 10 is_stmt 0 view .LVU494
 1423 012a 00F1BF81 		bmi	.L238
 1424              	.LBB271:
 557:lwIP/src/core/tcp_out.c ****         for (p = last_unsent->p; p->next != NULL; p = p->next);
 1425              		.loc 1 557 9 is_stmt 1 view .LVU495
 558:lwIP/src/core/tcp_out.c ****         if (((p->type_internal & (PBUF_TYPE_FLAG_STRUCT_DATA_CONTIGUOUS | PBUF_TYPE_FLAG_DATA_VOLAT
 1426              		.loc 1 558 9 view .LVU496
 558:lwIP/src/core/tcp_out.c ****         if (((p->type_internal & (PBUF_TYPE_FLAG_STRUCT_DATA_CONTIGUOUS | PBUF_TYPE_FLAG_DATA_VOLAT
 1427              		.loc 1 558 16 is_stmt 0 view .LVU497
 1428 012e 7D68     		ldr	r5, [r7, #4]
 1429              	.LVL132:
 1430              	.L112:
 558:lwIP/src/core/tcp_out.c ****         if (((p->type_internal & (PBUF_TYPE_FLAG_STRUCT_DATA_CONTIGUOUS | PBUF_TYPE_FLAG_DATA_VOLAT
 1431              		.loc 1 558 34 is_stmt 1 discriminator 1 view .LVU498
 1432 0130 2B46     		mov	r3, r5
 558:lwIP/src/core/tcp_out.c ****         if (((p->type_internal & (PBUF_TYPE_FLAG_STRUCT_DATA_CONTIGUOUS | PBUF_TYPE_FLAG_DATA_VOLAT
 1433              		.loc 1 558 35 is_stmt 0 discriminator 1 view .LVU499
 1434 0132 2D68     		ldr	r5, [r5]
 1435              	.LVL133:
 558:lwIP/src/core/tcp_out.c ****         if (((p->type_internal & (PBUF_TYPE_FLAG_STRUCT_DATA_CONTIGUOUS | PBUF_TYPE_FLAG_DATA_VOLAT
 1436              		.loc 1 558 9 discriminator 1 view .LVU500
 1437 0134 002D     		cmp	r5, #0
 1438 0136 FBD1     		bne	.L112
 559:lwIP/src/core/tcp_out.c ****             (const u8_t *)p->payload + p->len == (const u8_t *)arg) {
 1439              		.loc 1 559 9 is_stmt 1 view .LVU501
 559:lwIP/src/core/tcp_out.c ****             (const u8_t *)p->payload + p->len == (const u8_t *)arg) {
 1440              		.loc 1 559 12 is_stmt 0 view .LVU502
 1441 0138 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 1442              	.LVL134:
 559:lwIP/src/core/tcp_out.c ****             (const u8_t *)p->payload + p->len == (const u8_t *)arg) {
 1443              		.loc 1 559 12 view .LVU503
 1444 013a 12F0C00F 		tst	r2, #192
 1445 013e 06D1     		bne	.L113
 560:lwIP/src/core/tcp_out.c ****           LWIP_ASSERT("tcp_write: ROM pbufs cannot be oversized", pos == 0);
 1446              		.loc 1 560 41 discriminator 1 view .LVU504
 1447 0140 5A89     		ldrh	r2, [r3, #10]
 560:lwIP/src/core/tcp_out.c ****           LWIP_ASSERT("tcp_write: ROM pbufs cannot be oversized", pos == 0);
 1448              		.loc 1 560 38 discriminator 1 view .LVU505
 1449 0142 5B68     		ldr	r3, [r3, #4]
 1450              	.LVL135:
 560:lwIP/src/core/tcp_out.c ****           LWIP_ASSERT("tcp_write: ROM pbufs cannot be oversized", pos == 0);
 1451              		.loc 1 560 38 discriminator 1 view .LVU506
 1452 0144 1344     		add	r3, r3, r2
 559:lwIP/src/core/tcp_out.c ****             (const u8_t *)p->payload + p->len == (const u8_t *)arg) {
 1453              		.loc 1 559 112 discriminator 1 view .LVU507
 1454 0146 079A     		ldr	r2, [sp, #28]
ARM GAS  /tmp/ccH0Y1hM.s 			page 86


 1455 0148 9A42     		cmp	r2, r3
 1456 014a 00F0D381 		beq	.L239
 1457              	.L113:
 564:lwIP/src/core/tcp_out.c ****             LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 1458              		.loc 1 564 11 is_stmt 1 view .LVU508
 564:lwIP/src/core/tcp_out.c ****             LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 1459              		.loc 1 564 27 is_stmt 0 view .LVU509
 1460 014e 0122     		movs	r2, #1
 1461 0150 5146     		mov	r1, r10
 1462 0152 0020     		movs	r0, #0
 1463 0154 FFF7FEFF 		bl	pbuf_alloc
 1464              	.LVL136:
 564:lwIP/src/core/tcp_out.c ****             LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 1465              		.loc 1 564 14 view .LVU510
 1466 0158 0546     		mov	r5, r0
 1467 015a 0028     		cmp	r0, #0
 1468 015c 40F0D581 		bne	.L240
 1469              	.L110:
 1470              	.LVL137:
 564:lwIP/src/core/tcp_out.c ****             LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 1471              		.loc 1 564 14 view .LVU511
 1472              	.LBE271:
 1473              	.LBE270:
 1474              	.LBE280:
 797:lwIP/src/core/tcp_out.c ****   TCP_STATS_INC(tcp.memerr);
 1475              		.loc 1 797 3 is_stmt 1 view .LVU512
 797:lwIP/src/core/tcp_out.c ****   TCP_STATS_INC(tcp.memerr);
 1476              		.loc 1 797 3 view .LVU513
 1477 0160 638B     		ldrh	r3, [r4, #26]
 1478 0162 43F08003 		orr	r3, r3, #128
 1479 0166 6383     		strh	r3, [r4, #26]	@ movhi
 797:lwIP/src/core/tcp_out.c ****   TCP_STATS_INC(tcp.memerr);
 1480              		.loc 1 797 3 view .LVU514
 798:lwIP/src/core/tcp_out.c **** 
 1481              		.loc 1 798 28 view .LVU515
 800:lwIP/src/core/tcp_out.c ****     pbuf_free(concat_p);
 1482              		.loc 1 800 3 view .LVU516
 1483 0168 7BE1     		b	.L152
 1484              	.LVL138:
 1485              	.L236:
 1486              	.LBB281:
 486:lwIP/src/core/tcp_out.c ****     space = mss_local - (last_unsent->len + unsent_optlen);
 1487              		.loc 1 486 5 discriminator 1 view .LVU517
 1488 016a 7F48     		ldr	r0, .L250+16
 1489 016c FFF7FEFF 		bl	printf
 1490              	.LVL139:
 1491              	.L101:
 486:lwIP/src/core/tcp_out.c ****     space = mss_local - (last_unsent->len + unsent_optlen);
 1492              		.loc 1 486 5 discriminator 3 view .LVU518
 486:lwIP/src/core/tcp_out.c ****     space = mss_local - (last_unsent->len + unsent_optlen);
 1493              		.loc 1 486 5 discriminator 3 view .LVU519
 486:lwIP/src/core/tcp_out.c ****     space = mss_local - (last_unsent->len + unsent_optlen);
 1494              		.loc 1 486 5 discriminator 3 view .LVU520
 486:lwIP/src/core/tcp_out.c ****     space = mss_local - (last_unsent->len + unsent_optlen);
 1495              		.loc 1 486 5 discriminator 3 view .LVU521
 486:lwIP/src/core/tcp_out.c ****     space = mss_local - (last_unsent->len + unsent_optlen);
 1496              		.loc 1 486 5 discriminator 3 view .LVU522
ARM GAS  /tmp/ccH0Y1hM.s 			page 87


 486:lwIP/src/core/tcp_out.c ****     space = mss_local - (last_unsent->len + unsent_optlen);
 1497              		.loc 1 486 5 discriminator 3 view .LVU523
 1498 0170 FEE7     		b	.L101
 1499              	.LVL140:
 1500              	.L234:
 486:lwIP/src/core/tcp_out.c ****     space = mss_local - (last_unsent->len + unsent_optlen);
 1501              		.loc 1 486 5 is_stmt 0 discriminator 3 view .LVU524
 1502              	.LBE281:
 1503              	.LBB282:
 1504              	.LBB265:
 344:lwIP/src/core/tcp_out.c ****                 pcb->unacked == NULL && pcb->unsent == NULL);
 1505              		.loc 1 344 5 view .LVU525
 1506 0172 E36E     		ldr	r3, [r4, #108]
 1507 0174 002B     		cmp	r3, #0
 1508 0176 7FF477AF 		bne	.L95
 1509              	.LVL141:
 344:lwIP/src/core/tcp_out.c ****                 pcb->unacked == NULL && pcb->unsent == NULL);
 1510              		.loc 1 344 5 view .LVU526
 1511              	.LBE265:
 1512              	.LBE282:
 586:lwIP/src/core/tcp_out.c ****                 pcb->unsent_oversize == 0);
 1513              		.loc 1 586 5 is_stmt 1 view .LVU527
 586:lwIP/src/core/tcp_out.c ****                 pcb->unsent_oversize == 0);
 1514              		.loc 1 586 5 view .LVU528
 1515 017a B4F86830 		ldrh	r3, [r4, #104]
 1516 017e 0593     		str	r3, [sp, #20]
 1517 0180 A3B1     		cbz	r3, .L158
 1518              	.LVL142:
 1519              	.L157:
 586:lwIP/src/core/tcp_out.c ****                 pcb->unsent_oversize == 0);
 1520              		.loc 1 586 5 discriminator 1 view .LVU529
 1521 0182 7A48     		ldr	r0, .L250+20
 1522              	.LVL143:
 586:lwIP/src/core/tcp_out.c ****                 pcb->unsent_oversize == 0);
 1523              		.loc 1 586 5 is_stmt 0 discriminator 1 view .LVU530
 1524 0184 FFF7FEFF 		bl	printf
 1525              	.LVL144:
 1526              	.L117:
 586:lwIP/src/core/tcp_out.c ****                 pcb->unsent_oversize == 0);
 1527              		.loc 1 586 5 is_stmt 1 discriminator 8 view .LVU531
 586:lwIP/src/core/tcp_out.c ****                 pcb->unsent_oversize == 0);
 1528              		.loc 1 586 5 discriminator 8 view .LVU532
 586:lwIP/src/core/tcp_out.c ****                 pcb->unsent_oversize == 0);
 1529              		.loc 1 586 5 discriminator 8 view .LVU533
 586:lwIP/src/core/tcp_out.c ****                 pcb->unsent_oversize == 0);
 1530              		.loc 1 586 5 discriminator 8 view .LVU534
 586:lwIP/src/core/tcp_out.c ****                 pcb->unsent_oversize == 0);
 1531              		.loc 1 586 5 discriminator 8 view .LVU535
 586:lwIP/src/core/tcp_out.c ****                 pcb->unsent_oversize == 0);
 1532              		.loc 1 586 5 discriminator 8 view .LVU536
 1533 0188 FEE7     		b	.L117
 1534              	.LVL145:
 1535              	.L235:
 1536              	.LBB283:
 1537              	.LBB266:
 341:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1538              		.loc 1 341 5 is_stmt 0 view .LVU537
ARM GAS  /tmp/ccH0Y1hM.s 			page 88


 1539 018a B8F1000F 		cmp	r8, #0
 1540 018e 7FF47CAF 		bne	.L223
 341:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1541              		.loc 1 341 5 is_stmt 1 view .LVU538
 1542 0192 7748     		ldr	r0, .L250+24
 1543              	.LVL146:
 341:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1544              		.loc 1 341 5 is_stmt 0 view .LVU539
 1545 0194 FFF7FEFF 		bl	printf
 1546              	.LVL147:
 1547              	.L94:
 341:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1548              		.loc 1 341 5 is_stmt 1 view .LVU540
 341:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1549              		.loc 1 341 5 view .LVU541
 341:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1550              		.loc 1 341 5 view .LVU542
 341:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1551              		.loc 1 341 5 view .LVU543
 341:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1552              		.loc 1 341 5 view .LVU544
 341:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1553              		.loc 1 341 5 view .LVU545
 1554 0198 FEE7     		b	.L94
 1555              	.LVL148:
 1556              	.L90:
 323:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 1557              		.loc 1 323 36 view .LVU546
 324:lwIP/src/core/tcp_out.c ****     return ERR_MEM;
 1558              		.loc 1 324 5 view .LVU547
 324:lwIP/src/core/tcp_out.c ****     return ERR_MEM;
 1559              		.loc 1 324 5 view .LVU548
 1560 019a 638B     		ldrh	r3, [r4, #26]
 325:lwIP/src/core/tcp_out.c ****   }
 1561              		.loc 1 325 12 is_stmt 0 view .LVU549
 1562 019c 4FF0FF30 		mov	r0, #-1
 1563              	.LVL149:
 324:lwIP/src/core/tcp_out.c ****     return ERR_MEM;
 1564              		.loc 1 324 5 view .LVU550
 1565 01a0 43F08003 		orr	r3, r3, #128
 1566 01a4 6383     		strh	r3, [r4, #26]	@ movhi
 324:lwIP/src/core/tcp_out.c ****     return ERR_MEM;
 1567              		.loc 1 324 5 is_stmt 1 view .LVU551
 325:lwIP/src/core/tcp_out.c ****   }
 1568              		.loc 1 325 5 view .LVU552
 1569              	.LVL150:
 325:lwIP/src/core/tcp_out.c ****   }
 1570              		.loc 1 325 5 is_stmt 0 view .LVU553
 1571              	.LBE266:
 1572              	.LBE283:
 433:lwIP/src/core/tcp_out.c ****     return err;
 1573              		.loc 1 433 3 is_stmt 1 view .LVU554
 1574              	.L220:
 812:lwIP/src/core/tcp_out.c **** 
 1575              		.loc 1 812 1 is_stmt 0 view .LVU555
 1576 01a6 11B0     		add	sp, sp, #68
 1577              	.LCFI11:
ARM GAS  /tmp/ccH0Y1hM.s 			page 89


 1578              		.cfi_remember_state
 1579              		.cfi_def_cfa_offset 36
 1580              		@ sp needed
 1581 01a8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1582              	.LVL151:
 1583              	.L158:
 1584              	.LCFI12:
 1585              		.cfi_restore_state
 405:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 1586              		.loc 1 405 9 view .LVU556
 1587 01ac 4FF00009 		mov	r9, #0
 400:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 1588              		.loc 1 400 9 view .LVU557
 1589 01b0 4E46     		mov	r6, r9
 1590 01b2 4946     		mov	r1, r9
 393:lwIP/src/core/tcp_out.c ****   u16_t pos = 0; /* position in 'arg' data */
 1591              		.loc 1 393 19 view .LVU558
 1592 01b4 4F46     		mov	r7, r9
 392:lwIP/src/core/tcp_out.c ****   struct tcp_seg *last_unsent = NULL, *seg = NULL, *prev_seg = NULL, *queue = NULL;
 1593              		.loc 1 392 16 view .LVU559
 1594 01b6 4D46     		mov	r5, r9
 1595              	.LVL152:
 1596              	.L133:
 392:lwIP/src/core/tcp_out.c ****   struct tcp_seg *last_unsent = NULL, *seg = NULL, *prev_seg = NULL, *queue = NULL;
 1597              		.loc 1 392 16 view .LVU560
 1598 01b8 099B     		ldr	r3, [sp, #36]
 1599 01ba 4FF00008 		mov	r8, #0
 1600 01be 0895     		str	r5, [sp, #32]
 1601 01c0 0D46     		mov	r5, r1
 1602 01c2 03F00103 		and	r3, r3, #1
 1603 01c6 CDE90B83 		strd	r8, r3, [sp, #44]
 1604 01ca 069B     		ldr	r3, [sp, #24]
 1605 01cc 45E0     		b	.L131
 1606              	.LVL153:
 1607              	.L118:
 1608              	.LBB284:
 1609              	.LBB285:
 623:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE
 1610              		.loc 1 623 7 is_stmt 1 view .LVU561
 625:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 1611              		.loc 1 625 7 view .LVU562
 625:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 1612              		.loc 1 625 7 view .LVU563
 1613 01ce BDF83E30 		ldrh	r3, [sp, #62]
 1614 01d2 002B     		cmp	r3, #0
 1615 01d4 40F05A81 		bne	.L241
 625:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 1616              		.loc 1 625 7 discriminator 2 view .LVU564
 627:lwIP/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_write: could not allocate memo
 1617              		.loc 1 627 7 discriminator 2 view .LVU565
 627:lwIP/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_write: could not allocate memo
 1618              		.loc 1 627 17 is_stmt 0 discriminator 2 view .LVU566
 1619 01d8 0122     		movs	r2, #1
 1620 01da 5146     		mov	r1, r10
 1621 01dc 3620     		movs	r0, #54
 1622 01de FFF7FEFF 		bl	pbuf_alloc
 1623              	.LVL154:
ARM GAS  /tmp/ccH0Y1hM.s 			page 90


 627:lwIP/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_write: could not allocate memo
 1624              		.loc 1 627 10 discriminator 2 view .LVU567
 1625 01e2 0346     		mov	r3, r0
 1626 01e4 0028     		cmp	r0, #0
 1627 01e6 00F04F81 		beq	.L226
 640:lwIP/src/core/tcp_out.c **** 
 1628              		.loc 1 640 7 is_stmt 1 view .LVU568
 640:lwIP/src/core/tcp_out.c **** 
 1629              		.loc 1 640 60 is_stmt 0 view .LVU569
 1630 01ea 079A     		ldr	r2, [sp, #28]
 643:lwIP/src/core/tcp_out.c ****         /* If allocation fails, we have to deallocate the data pbuf as
 1631              		.loc 1 643 16 view .LVU570
 1632 01ec 3620     		movs	r0, #54
 1633              	.LVL155:
 643:lwIP/src/core/tcp_out.c ****         /* If allocation fails, we have to deallocate the data pbuf as
 1634              		.loc 1 643 16 view .LVU571
 1635 01ee 0C99     		ldr	r1, [sp, #48]
 640:lwIP/src/core/tcp_out.c **** 
 1636              		.loc 1 640 60 view .LVU572
 1637 01f0 02EB050C 		add	ip, r2, r5
 643:lwIP/src/core/tcp_out.c ****         /* If allocation fails, we have to deallocate the data pbuf as
 1638              		.loc 1 643 16 view .LVU573
 1639 01f4 4FF42072 		mov	r2, #640
 640:lwIP/src/core/tcp_out.c **** 
 1640              		.loc 1 640 40 view .LVU574
 1641 01f8 0D93     		str	r3, [sp, #52]
 643:lwIP/src/core/tcp_out.c ****         /* If allocation fails, we have to deallocate the data pbuf as
 1642              		.loc 1 643 7 is_stmt 1 view .LVU575
 640:lwIP/src/core/tcp_out.c **** 
 1643              		.loc 1 640 40 is_stmt 0 view .LVU576
 1644 01fa C3F804C0 		str	ip, [r3, #4]
 643:lwIP/src/core/tcp_out.c ****         /* If allocation fails, we have to deallocate the data pbuf as
 1645              		.loc 1 643 16 view .LVU577
 1646 01fe FFF7FEFF 		bl	pbuf_alloc
 1647              	.LVL156:
 643:lwIP/src/core/tcp_out.c ****         /* If allocation fails, we have to deallocate the data pbuf as
 1648              		.loc 1 643 10 view .LVU578
 1649 0202 0D9B     		ldr	r3, [sp, #52]
 1650 0204 8346     		mov	fp, r0
 1651 0206 0028     		cmp	r0, #0
 1652 0208 00F03681 		beq	.L242
 651:lwIP/src/core/tcp_out.c ****     }
 1653              		.loc 1 651 7 is_stmt 1 view .LVU579
 1654 020c 1946     		mov	r1, r3
 1655 020e FFF7FEFF 		bl	pbuf_cat
 1656              	.LVL157:
 1657              	.L122:
 651:lwIP/src/core/tcp_out.c ****     }
 1658              		.loc 1 651 7 is_stmt 0 view .LVU580
 1659              	.LBE285:
 654:lwIP/src/core/tcp_out.c **** 
 1660              		.loc 1 654 5 is_stmt 1 view .LVU581
 654:lwIP/src/core/tcp_out.c **** 
 1661              		.loc 1 654 17 is_stmt 0 view .LVU582
 1662 0212 5846     		mov	r0, fp
 1663 0214 FFF7FEFF 		bl	pbuf_clen
 1664              	.LVL158:
ARM GAS  /tmp/ccH0Y1hM.s 			page 91


 654:lwIP/src/core/tcp_out.c **** 
 1665              		.loc 1 654 14 view .LVU583
 1666 0218 059B     		ldr	r3, [sp, #20]
 1667 021a 0344     		add	r3, r3, r0
 1668 021c 9BB2     		uxth	r3, r3
 659:lwIP/src/core/tcp_out.c ****       LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_write: queue too long %"U16_F" (
 1669              		.loc 1 659 8 view .LVU584
 1670 021e 082B     		cmp	r3, #8
 654:lwIP/src/core/tcp_out.c **** 
 1671              		.loc 1 654 14 view .LVU585
 1672 0220 0593     		str	r3, [sp, #20]
 1673              	.LVL159:
 659:lwIP/src/core/tcp_out.c ****       LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_write: queue too long %"U16_F" (
 1674              		.loc 1 659 5 is_stmt 1 view .LVU586
 659:lwIP/src/core/tcp_out.c ****       LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_write: queue too long %"U16_F" (
 1675              		.loc 1 659 8 is_stmt 0 view .LVU587
 1676 0222 00F20C81 		bhi	.L243
 666:lwIP/src/core/tcp_out.c ****       goto memerr;
 1677              		.loc 1 666 5 is_stmt 1 view .LVU588
 666:lwIP/src/core/tcp_out.c ****       goto memerr;
 1678              		.loc 1 666 16 is_stmt 0 view .LVU589
 1679 0226 E36D     		ldr	r3, [r4, #92]
 1680              	.LVL160:
 666:lwIP/src/core/tcp_out.c ****       goto memerr;
 1681              		.loc 1 666 16 view .LVU590
 1682 0228 0022     		movs	r2, #0
 1683 022a 5946     		mov	r1, fp
 1684 022c 2046     		mov	r0, r4
 1685 022e 2B44     		add	r3, r3, r5
 1686 0230 0092     		str	r2, [sp]
 1687 0232 FFF7FEFF 		bl	tcp_create_segment
 1688              	.LVL161:
 666:lwIP/src/core/tcp_out.c ****       goto memerr;
 1689              		.loc 1 666 8 view .LVU591
 1690 0236 0028     		cmp	r0, #0
 1691 0238 00F02681 		beq	.L226
 679:lwIP/src/core/tcp_out.c ****       queue = seg;
 1692              		.loc 1 679 5 is_stmt 1 view .LVU592
 679:lwIP/src/core/tcp_out.c ****       queue = seg;
 1693              		.loc 1 679 8 is_stmt 0 view .LVU593
 1694 023c B8F1000F 		cmp	r8, #0
 1695 0240 37D0     		beq	.L163
 683:lwIP/src/core/tcp_out.c ****       prev_seg->next = seg;
 1696              		.loc 1 683 7 is_stmt 1 view .LVU594
 683:lwIP/src/core/tcp_out.c ****       prev_seg->next = seg;
 1697              		.loc 1 683 7 view .LVU595
 1698 0242 0B9B     		ldr	r3, [sp, #44]
 1699 0244 002B     		cmp	r3, #0
 1700 0246 00F02D81 		beq	.L244
 683:lwIP/src/core/tcp_out.c ****       prev_seg->next = seg;
 1701              		.loc 1 683 7 discriminator 2 view .LVU596
 684:lwIP/src/core/tcp_out.c ****     }
 1702              		.loc 1 684 7 discriminator 2 view .LVU597
 684:lwIP/src/core/tcp_out.c ****     }
 1703              		.loc 1 684 22 is_stmt 0 discriminator 2 view .LVU598
 1704 024a 1860     		str	r0, [r3]
 1705              	.LVL162:
ARM GAS  /tmp/ccH0Y1hM.s 			page 92


 1706              	.L128:
 687:lwIP/src/core/tcp_out.c **** 
 1707              		.loc 1 687 5 is_stmt 1 view .LVU599
 691:lwIP/src/core/tcp_out.c **** 
 1708              		.loc 1 691 67 view .LVU600
 693:lwIP/src/core/tcp_out.c ****   }
 1709              		.loc 1 693 5 view .LVU601
 693:lwIP/src/core/tcp_out.c ****   }
 1710              		.loc 1 693 9 is_stmt 0 view .LVU602
 1711 024c AA44     		add	r10, r10, r5
 1712              	.LVL163:
 693:lwIP/src/core/tcp_out.c ****   }
 1713              		.loc 1 693 9 view .LVU603
 1714              	.LBE284:
 597:lwIP/src/core/tcp_out.c ****     struct pbuf *p;
 1715              		.loc 1 597 9 view .LVU604
 1716 024e 069B     		ldr	r3, [sp, #24]
 1717              	.LBB288:
 693:lwIP/src/core/tcp_out.c ****   }
 1718              		.loc 1 693 9 view .LVU605
 1719 0250 1FFA8AF5 		uxth	r5, r10
 1720              	.LVL164:
 693:lwIP/src/core/tcp_out.c ****   }
 1721              		.loc 1 693 9 view .LVU606
 1722              	.LBE288:
 597:lwIP/src/core/tcp_out.c ****     struct pbuf *p;
 1723              		.loc 1 597 9 is_stmt 1 view .LVU607
 1724 0254 AB42     		cmp	r3, r5
 1725 0256 2ED9     		bls	.L245
 1726 0258 0B90     		str	r0, [sp, #44]
 1727              	.LVL165:
 1728              	.L131:
 1729              	.LBB289:
 598:lwIP/src/core/tcp_out.c ****     u16_t left = len - pos;
 1730              		.loc 1 598 5 view .LVU608
 599:lwIP/src/core/tcp_out.c ****     u16_t max_len = mss_local - optlen;
 1731              		.loc 1 599 5 view .LVU609
 600:lwIP/src/core/tcp_out.c ****     u16_t seglen = LWIP_MIN(left, max_len);
 1732              		.loc 1 600 5 view .LVU610
 601:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 1733              		.loc 1 601 5 view .LVU611
 599:lwIP/src/core/tcp_out.c ****     u16_t max_len = mss_local - optlen;
 1734              		.loc 1 599 11 is_stmt 0 view .LVU612
 1735 025a A3EB050A 		sub	r10, r3, r5
 601:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 1736              		.loc 1 601 11 view .LVU613
 1737 025e 0A9B     		ldr	r3, [sp, #40]
 1738 0260 1FFA8AFA 		uxth	r10, r10
 1739 0264 9A45     		cmp	r10, r3
 1740 0266 28BF     		it	cs
 1741 0268 9A46     		movcs	r10, r3
 607:lwIP/src/core/tcp_out.c ****       /* If copy is set, memory should be allocated and data copied
 1742              		.loc 1 607 8 view .LVU614
 1743 026a 0C9B     		ldr	r3, [sp, #48]
 601:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 1744              		.loc 1 601 11 view .LVU615
 1745 026c 1FFA8AFA 		uxth	r10, r10
ARM GAS  /tmp/ccH0Y1hM.s 			page 93


 1746              	.LVL166:
 607:lwIP/src/core/tcp_out.c ****       /* If copy is set, memory should be allocated and data copied
 1747              		.loc 1 607 5 is_stmt 1 view .LVU616
 607:lwIP/src/core/tcp_out.c ****       /* If copy is set, memory should be allocated and data copied
 1748              		.loc 1 607 8 is_stmt 0 view .LVU617
 1749 0270 002B     		cmp	r3, #0
 1750 0272 ACD0     		beq	.L118
 610:lwIP/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_write : could not allocate mem
 1751              		.loc 1 610 7 is_stmt 1 view .LVU618
 610:lwIP/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_write : could not allocate mem
 1752              		.loc 1 610 16 is_stmt 0 view .LVU619
 1753 0274 B8FA88FC 		clz	ip, r8
 1754 0278 099B     		ldr	r3, [sp, #36]
 1755 027a 0A9A     		ldr	r2, [sp, #40]
 1756 027c 5146     		mov	r1, r10
 1757 027e 4FEA5C1C 		lsr	ip, ip, #5
 1758 0282 3620     		movs	r0, #54
 1759 0284 CDE90043 		strd	r4, r3, [sp]
 1760 0288 CDF808C0 		str	ip, [sp, #8]
 1761 028c 0DF13E03 		add	r3, sp, #62
 1762 0290 FFF7FEFF 		bl	tcp_pbuf_prealloc
 1763              	.LVL167:
 610:lwIP/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_write : could not allocate mem
 1764              		.loc 1 610 10 view .LVU620
 1765 0294 8346     		mov	fp, r0
 1766 0296 0028     		cmp	r0, #0
 1767 0298 00F0F680 		beq	.L226
 614:lwIP/src/core/tcp_out.c ****                   (p->len >= seglen));
 1768              		.loc 1 614 7 is_stmt 1 view .LVU621
 614:lwIP/src/core/tcp_out.c ****                   (p->len >= seglen));
 1769              		.loc 1 614 7 view .LVU622
 1770 029c 4389     		ldrh	r3, [r0, #10]
 1771 029e 5345     		cmp	r3, r10
 1772 02a0 C0F02F81 		bcc	.L246
 614:lwIP/src/core/tcp_out.c ****                   (p->len >= seglen));
 1773              		.loc 1 614 7 discriminator 2 view .LVU623
 616:lwIP/src/core/tcp_out.c ****     } else {
 1774              		.loc 1 616 7 discriminator 2 view .LVU624
 1775 02a4 079B     		ldr	r3, [sp, #28]
 1776 02a6 5246     		mov	r2, r10
 1777 02a8 4068     		ldr	r0, [r0, #4]
 1778              	.LVL168:
 616:lwIP/src/core/tcp_out.c ****     } else {
 1779              		.loc 1 616 7 is_stmt 0 discriminator 2 view .LVU625
 1780 02aa 5919     		adds	r1, r3, r5
 1781 02ac FFF7FEFF 		bl	memcpy
 1782              	.LVL169:
 1783 02b0 AFE7     		b	.L122
 1784              	.LVL170:
 1785              	.L163:
 616:lwIP/src/core/tcp_out.c ****     } else {
 1786              		.loc 1 616 7 discriminator 2 view .LVU626
 1787 02b2 8046     		mov	r8, r0
 1788              	.LVL171:
 616:lwIP/src/core/tcp_out.c ****     } else {
 1789              		.loc 1 616 7 discriminator 2 view .LVU627
 1790 02b4 CAE7     		b	.L128
ARM GAS  /tmp/ccH0Y1hM.s 			page 94


 1791              	.LVL172:
 1792              	.L245:
 616:lwIP/src/core/tcp_out.c ****     } else {
 1793              		.loc 1 616 7 discriminator 2 view .LVU628
 1794 02b6 089D     		ldr	r5, [sp, #32]
 1795              	.LVL173:
 616:lwIP/src/core/tcp_out.c ****     } else {
 1796              		.loc 1 616 7 discriminator 2 view .LVU629
 1797 02b8 8346     		mov	fp, r0
 1798              	.LVL174:
 1799              	.L132:
 616:lwIP/src/core/tcp_out.c ****     } else {
 1800              		.loc 1 616 7 discriminator 2 view .LVU630
 1801              	.LBE289:
 711:lwIP/src/core/tcp_out.c ****     struct pbuf *p;
 1802              		.loc 1 711 3 is_stmt 1 view .LVU631
 711:lwIP/src/core/tcp_out.c ****     struct pbuf *p;
 1803              		.loc 1 711 6 is_stmt 0 view .LVU632
 1804 02ba 002E     		cmp	r6, #0
 1805 02bc 00F08B80 		beq	.L134
 1806              	.LBB290:
 712:lwIP/src/core/tcp_out.c ****     /* Bump tot_len of whole chain, len of tail */
 1807              		.loc 1 712 5 is_stmt 1 view .LVU633
 714:lwIP/src/core/tcp_out.c ****       p->tot_len += oversize_used;
 1808              		.loc 1 714 5 view .LVU634
 714:lwIP/src/core/tcp_out.c ****       p->tot_len += oversize_used;
 1809              		.loc 1 714 12 is_stmt 0 view .LVU635
 1810 02c0 D7F804A0 		ldr	r10, [r7, #4]
 1811              	.LVL175:
 714:lwIP/src/core/tcp_out.c ****       p->tot_len += oversize_used;
 1812              		.loc 1 714 30 is_stmt 1 view .LVU636
 714:lwIP/src/core/tcp_out.c ****       p->tot_len += oversize_used;
 1813              		.loc 1 714 5 is_stmt 0 view .LVU637
 1814 02c4 BAF1000F 		cmp	r10, #0
 1815 02c8 71D0     		beq	.L135
 1816              	.L137:
 715:lwIP/src/core/tcp_out.c ****       if (p->next == NULL) {
 1817              		.loc 1 715 7 is_stmt 1 view .LVU638
 715:lwIP/src/core/tcp_out.c ****       if (p->next == NULL) {
 1818              		.loc 1 715 18 is_stmt 0 view .LVU639
 1819 02ca BAF80820 		ldrh	r2, [r10, #8]
 716:lwIP/src/core/tcp_out.c ****         TCP_DATA_COPY((char *)p->payload + p->len, arg, oversize_used, last_unsent);
 1820              		.loc 1 716 12 view .LVU640
 1821 02ce DAF80030 		ldr	r3, [r10]
 715:lwIP/src/core/tcp_out.c ****       if (p->next == NULL) {
 1822              		.loc 1 715 18 view .LVU641
 1823 02d2 3244     		add	r2, r2, r6
 1824 02d4 AAF80820 		strh	r2, [r10, #8]	@ movhi
 716:lwIP/src/core/tcp_out.c ****         TCP_DATA_COPY((char *)p->payload + p->len, arg, oversize_used, last_unsent);
 1825              		.loc 1 716 7 is_stmt 1 view .LVU642
 716:lwIP/src/core/tcp_out.c ****         TCP_DATA_COPY((char *)p->payload + p->len, arg, oversize_used, last_unsent);
 1826              		.loc 1 716 10 is_stmt 0 view .LVU643
 1827 02d8 002B     		cmp	r3, #0
 1828 02da 56D0     		beq	.L247
 1829              	.LVL176:
 1830              	.L136:
 716:lwIP/src/core/tcp_out.c ****         TCP_DATA_COPY((char *)p->payload + p->len, arg, oversize_used, last_unsent);
ARM GAS  /tmp/ccH0Y1hM.s 			page 95


 1831              		.loc 1 716 10 view .LVU644
 1832              	.LBE290:
 405:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 1833              		.loc 1 405 9 view .LVU645
 1834 02dc 9A46     		mov	r10, r3
 1835 02de F4E7     		b	.L137
 1836              	.LVL177:
 1837              	.L159:
 1838              	.LBB291:
 1839              	.LBB267:
 315:lwIP/src/core/tcp_out.c ****   } else if (len == 0) {
 1840              		.loc 1 315 12 view .LVU646
 1841 02e0 6FF00A00 		mvn	r0, #10
 1842              	.LVL178:
 315:lwIP/src/core/tcp_out.c ****   } else if (len == 0) {
 1843              		.loc 1 315 12 view .LVU647
 1844 02e4 5FE7     		b	.L220
 1845              	.LVL179:
 1846              	.L237:
 315:lwIP/src/core/tcp_out.c ****   } else if (len == 0) {
 1847              		.loc 1 315 12 view .LVU648
 1848              	.LBE267:
 1849              	.LBE291:
 1850              	.LBB292:
 504:lwIP/src/core/tcp_out.c ****       seg = last_unsent;
 1851              		.loc 1 504 7 is_stmt 1 discriminator 1 view .LVU649
 1852 02e6 2348     		ldr	r0, .L250+28
 1853 02e8 FFF7FEFF 		bl	printf
 1854              	.LVL180:
 1855              	.L104:
 504:lwIP/src/core/tcp_out.c ****       seg = last_unsent;
 1856              		.loc 1 504 7 discriminator 4 view .LVU650
 504:lwIP/src/core/tcp_out.c ****       seg = last_unsent;
 1857              		.loc 1 504 7 discriminator 4 view .LVU651
 504:lwIP/src/core/tcp_out.c ****       seg = last_unsent;
 1858              		.loc 1 504 7 discriminator 4 view .LVU652
 504:lwIP/src/core/tcp_out.c ****       seg = last_unsent;
 1859              		.loc 1 504 7 discriminator 4 view .LVU653
 504:lwIP/src/core/tcp_out.c ****       seg = last_unsent;
 1860              		.loc 1 504 7 discriminator 4 view .LVU654
 504:lwIP/src/core/tcp_out.c ****       seg = last_unsent;
 1861              		.loc 1 504 7 discriminator 4 view .LVU655
 1862 02ec FEE7     		b	.L104
 1863              	.LVL181:
 1864              	.L98:
 504:lwIP/src/core/tcp_out.c ****       seg = last_unsent;
 1865              		.loc 1 504 7 is_stmt 0 discriminator 4 view .LVU656
 1866              	.LBE292:
 586:lwIP/src/core/tcp_out.c ****                 pcb->unsent_oversize == 0);
 1867              		.loc 1 586 5 is_stmt 1 discriminator 2 view .LVU657
 586:lwIP/src/core/tcp_out.c ****                 pcb->unsent_oversize == 0);
 1868              		.loc 1 586 5 discriminator 2 view .LVU658
 1869 02ee B4F86830 		ldrh	r3, [r4, #104]
 1870 02f2 002B     		cmp	r3, #0
 1871 02f4 7FF445AF 		bne	.L157
 597:lwIP/src/core/tcp_out.c ****     struct pbuf *p;
 1872              		.loc 1 597 9 view .LVU659
ARM GAS  /tmp/ccH0Y1hM.s 			page 96


 1873 02f8 069B     		ldr	r3, [sp, #24]
 1874 02fa 002B     		cmp	r3, #0
 1875 02fc 7FF456AF 		bne	.L158
 711:lwIP/src/core/tcp_out.c ****     struct pbuf *p;
 1876              		.loc 1 711 3 view .LVU660
 728:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 1877              		.loc 1 728 3 view .LVU661
 728:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 1878              		.loc 1 728 24 is_stmt 0 view .LVU662
 1879 0300 BDF83E30 		ldrh	r3, [sp, #62]
 393:lwIP/src/core/tcp_out.c ****   u16_t pos = 0; /* position in 'arg' data */
 1880              		.loc 1 393 40 view .LVU663
 1881 0304 DDF818B0 		ldr	fp, [sp, #24]
 728:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 1882              		.loc 1 728 24 view .LVU664
 1883 0308 A4F86830 		strh	r3, [r4, #104]	@ movhi
 735:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: cannot concatenate when pcb->unsent is empty",
 1884              		.loc 1 735 3 is_stmt 1 view .LVU665
 1885              	.LVL182:
 1886              	.L222:
 771:lwIP/src/core/tcp_out.c ****   } else {
 1887              		.loc 1 771 5 view .LVU666
 771:lwIP/src/core/tcp_out.c ****   } else {
 1888              		.loc 1 771 17 is_stmt 0 view .LVU667
 1889 030c C4F86C80 		str	r8, [r4, #108]
 1890              	.L149:
 779:lwIP/src/core/tcp_out.c ****   pcb->snd_buf -= len;
 1891              		.loc 1 779 3 is_stmt 1 view .LVU668
 779:lwIP/src/core/tcp_out.c ****   pcb->snd_buf -= len;
 1892              		.loc 1 779 16 is_stmt 0 view .LVU669
 1893 0310 E26D     		ldr	r2, [r4, #92]
 780:lwIP/src/core/tcp_out.c ****   pcb->snd_queuelen = queuelen;
 1894              		.loc 1 780 16 view .LVU670
 1895 0312 B4F86430 		ldrh	r3, [r4, #100]
 779:lwIP/src/core/tcp_out.c ****   pcb->snd_buf -= len;
 1896              		.loc 1 779 16 view .LVU671
 1897 0316 0699     		ldr	r1, [sp, #24]
 781:lwIP/src/core/tcp_out.c **** 
 1898              		.loc 1 781 21 view .LVU672
 1899 0318 0598     		ldr	r0, [sp, #20]
 779:lwIP/src/core/tcp_out.c ****   pcb->snd_buf -= len;
 1900              		.loc 1 779 16 view .LVU673
 1901 031a 0A44     		add	r2, r2, r1
 780:lwIP/src/core/tcp_out.c ****   pcb->snd_queuelen = queuelen;
 1902              		.loc 1 780 16 view .LVU674
 1903 031c 5B1A     		subs	r3, r3, r1
 781:lwIP/src/core/tcp_out.c **** 
 1904              		.loc 1 781 21 view .LVU675
 1905 031e A4F86600 		strh	r0, [r4, #102]	@ movhi
 779:lwIP/src/core/tcp_out.c ****   pcb->snd_buf -= len;
 1906              		.loc 1 779 16 view .LVU676
 1907 0322 E265     		str	r2, [r4, #92]
 780:lwIP/src/core/tcp_out.c ****   pcb->snd_queuelen = queuelen;
 1908              		.loc 1 780 3 is_stmt 1 view .LVU677
 780:lwIP/src/core/tcp_out.c ****   pcb->snd_queuelen = queuelen;
 1909              		.loc 1 780 16 is_stmt 0 view .LVU678
 1910 0324 A4F86430 		strh	r3, [r4, #100]	@ movhi
ARM GAS  /tmp/ccH0Y1hM.s 			page 97


 781:lwIP/src/core/tcp_out.c **** 
 1911              		.loc 1 781 3 is_stmt 1 view .LVU679
 784:lwIP/src/core/tcp_out.c ****   if (pcb->snd_queuelen != 0) {
 1912              		.loc 1 784 51 view .LVU680
 785:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: valid queue length",
 1913              		.loc 1 785 3 view .LVU681
 785:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: valid queue length",
 1914              		.loc 1 785 6 is_stmt 0 view .LVU682
 1915 0328 08B1     		cbz	r0, .L150
 786:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1916              		.loc 1 786 5 is_stmt 1 view .LVU683
 786:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1917              		.loc 1 786 5 view .LVU684
 1918 032a 236F     		ldr	r3, [r4, #112]
 1919 032c 23B3     		cbz	r3, .L248
 1920              	.L150:
 786:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1921              		.loc 1 786 5 discriminator 4 view .LVU685
 791:lwIP/src/core/tcp_out.c ****     TCPH_SET_FLAG(seg->tcphdr, TCP_PSH);
 1922              		.loc 1 791 3 discriminator 4 view .LVU686
 791:lwIP/src/core/tcp_out.c ****     TCPH_SET_FLAG(seg->tcphdr, TCP_PSH);
 1923              		.loc 1 791 6 is_stmt 0 discriminator 4 view .LVU687
 1924 032e BBF1000F 		cmp	fp, #0
 1925 0332 28D0     		beq	.L168
 791:lwIP/src/core/tcp_out.c ****     TCPH_SET_FLAG(seg->tcphdr, TCP_PSH);
 1926              		.loc 1 791 25 discriminator 1 view .LVU688
 1927 0334 DBF80C30 		ldr	r3, [fp, #12]
 791:lwIP/src/core/tcp_out.c ****     TCPH_SET_FLAG(seg->tcphdr, TCP_PSH);
 1928              		.loc 1 791 19 discriminator 1 view .LVU689
 1929 0338 2BB3     		cbz	r3, .L168
 791:lwIP/src/core/tcp_out.c ****     TCPH_SET_FLAG(seg->tcphdr, TCP_PSH);
 1930              		.loc 1 791 42 discriminator 2 view .LVU690
 1931 033a 099A     		ldr	r2, [sp, #36]
 1932 033c 12F00200 		ands	r0, r2, #2
 1933 0340 21D1     		bne	.L168
 792:lwIP/src/core/tcp_out.c ****   }
 1934              		.loc 1 792 5 is_stmt 1 view .LVU691
 1935              	.LVL183:
 1936              		.loc 2 937 3 view .LVU692
 792:lwIP/src/core/tcp_out.c ****   }
 1937              		.loc 1 792 5 is_stmt 0 view .LVU693
 1938 0342 9A89     		ldrh	r2, [r3, #12]	@ unaligned
 1939 0344 42F40062 		orr	r2, r2, #2048
 1940 0348 9A81     		strh	r2, [r3, #12]	@ unaligned
 1941 034a 2CE7     		b	.L220
 1942              	.LVL184:
 1943              	.L173:
 1944              	.LBB293:
 509:lwIP/src/core/tcp_out.c ****     }
 1945              		.loc 1 509 13 view .LVU694
 1946 034c D21A     		subs	r2, r2, r3
 1947              	.LVL185:
 507:lwIP/src/core/tcp_out.c ****       oversize -= oversize_used;
 1948              		.loc 1 507 11 view .LVU695
 1949 034e 1E46     		mov	r6, r3
 509:lwIP/src/core/tcp_out.c ****     }
 1950              		.loc 1 509 13 view .LVU696
ARM GAS  /tmp/ccH0Y1hM.s 			page 98


 1951 0350 BB46     		mov	fp, r7
 1952 0352 92B2     		uxth	r2, r2
 1953 0354 D7E6     		b	.L102
 1954              	.L251:
 1955 0356 00BF     		.align	2
 1956              	.L250:
 1957 0358 88000000 		.word	.LC9
 1958 035c 18000000 		.word	.LC7
 1959 0360 F4000000 		.word	.LC12
 1960 0364 00000000 		.word	.LC6
 1961 0368 BC000000 		.word	.LC10
 1962 036c 40010000 		.word	.LC14
 1963 0370 4C000000 		.word	.LC8
 1964 0374 D4000000 		.word	.LC11
 1965              	.LVL186:
 1966              	.L248:
 509:lwIP/src/core/tcp_out.c ****     }
 1967              		.loc 1 509 13 view .LVU697
 1968              	.LBE293:
 786:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1969              		.loc 1 786 5 discriminator 1 view .LVU698
 1970 0378 E36E     		ldr	r3, [r4, #108]
 1971 037a 002B     		cmp	r3, #0
 1972 037c D7D1     		bne	.L150
 786:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1973              		.loc 1 786 5 is_stmt 1 discriminator 3 view .LVU699
 1974 037e 6648     		ldr	r0, .L252
 1975 0380 FFF7FEFF 		bl	printf
 1976              	.LVL187:
 1977              	.L151:
 786:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1978              		.loc 1 786 5 discriminator 14 view .LVU700
 786:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1979              		.loc 1 786 5 discriminator 14 view .LVU701
 786:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1980              		.loc 1 786 5 discriminator 14 view .LVU702
 786:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1981              		.loc 1 786 5 discriminator 14 view .LVU703
 786:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1982              		.loc 1 786 5 discriminator 14 view .LVU704
 786:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 1983              		.loc 1 786 5 discriminator 14 view .LVU705
 1984 0384 FEE7     		b	.L151
 1985              	.L168:
 795:lwIP/src/core/tcp_out.c **** memerr:
 1986              		.loc 1 795 10 is_stmt 0 view .LVU706
 1987 0386 0020     		movs	r0, #0
 1988 0388 0DE7     		b	.L220
 1989              	.LVL188:
 1990              	.L247:
 1991              	.LBB294:
 717:lwIP/src/core/tcp_out.c ****         p->len += oversize_used;
 1992              		.loc 1 717 9 is_stmt 1 view .LVU707
 1993 038a DAF80430 		ldr	r3, [r10, #4]
 1994 038e 3246     		mov	r2, r6
 1995 0390 BAF80A00 		ldrh	r0, [r10, #10]
 1996 0394 0799     		ldr	r1, [sp, #28]
ARM GAS  /tmp/ccH0Y1hM.s 			page 99


 1997 0396 1844     		add	r0, r0, r3
 1998 0398 FFF7FEFF 		bl	memcpy
 1999              	.LVL189:
 718:lwIP/src/core/tcp_out.c ****       }
 2000              		.loc 1 718 9 view .LVU708
 718:lwIP/src/core/tcp_out.c ****       }
 2001              		.loc 1 718 16 is_stmt 0 view .LVU709
 2002 039c BAF80A10 		ldrh	r1, [r10, #10]
 714:lwIP/src/core/tcp_out.c ****       p->tot_len += oversize_used;
 2003              		.loc 1 714 35 view .LVU710
 2004 03a0 DAF80030 		ldr	r3, [r10]
 718:lwIP/src/core/tcp_out.c ****       }
 2005              		.loc 1 718 16 view .LVU711
 2006 03a4 3144     		add	r1, r1, r6
 2007 03a6 AAF80A10 		strh	r1, [r10, #10]	@ movhi
 714:lwIP/src/core/tcp_out.c ****       p->tot_len += oversize_used;
 2008              		.loc 1 714 33 is_stmt 1 view .LVU712
 2009              	.LVL190:
 714:lwIP/src/core/tcp_out.c ****       p->tot_len += oversize_used;
 2010              		.loc 1 714 30 view .LVU713
 714:lwIP/src/core/tcp_out.c ****       p->tot_len += oversize_used;
 2011              		.loc 1 714 5 is_stmt 0 view .LVU714
 2012 03aa 002B     		cmp	r3, #0
 2013 03ac 96D1     		bne	.L136
 2014              	.LVL191:
 2015              	.L135:
 721:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 2016              		.loc 1 721 5 is_stmt 1 view .LVU715
 721:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 2017              		.loc 1 721 22 is_stmt 0 view .LVU716
 2018 03ae 3B89     		ldrh	r3, [r7, #8]
 2019              	.LBE294:
 728:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 2020              		.loc 1 728 24 view .LVU717
 2021 03b0 BDF83E20 		ldrh	r2, [sp, #62]
 2022              	.LBB295:
 721:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 2023              		.loc 1 721 22 view .LVU718
 2024 03b4 1E44     		add	r6, r6, r3
 2025 03b6 3E81     		strh	r6, [r7, #8]	@ movhi
 2026              	.LBE295:
 728:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 2027              		.loc 1 728 3 is_stmt 1 view .LVU719
 728:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 2028              		.loc 1 728 24 is_stmt 0 view .LVU720
 2029 03b8 A4F86820 		strh	r2, [r4, #104]	@ movhi
 735:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: cannot concatenate when pcb->unsent is empty",
 2030              		.loc 1 735 3 is_stmt 1 view .LVU721
 735:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: cannot concatenate when pcb->unsent is empty",
 2031              		.loc 1 735 6 is_stmt 0 view .LVU722
 2032 03bc 002D     		cmp	r5, #0
 2033 03be 32D0     		beq	.L249
 2034              	.L138:
 736:lwIP/src/core/tcp_out.c ****                 (last_unsent != NULL));
 2035              		.loc 1 736 5 is_stmt 1 view .LVU723
 738:lwIP/src/core/tcp_out.c ****     last_unsent->len += concat_p->tot_len;
 2036              		.loc 1 738 5 view .LVU724
ARM GAS  /tmp/ccH0Y1hM.s 			page 100


 2037 03c0 2946     		mov	r1, r5
 2038 03c2 7868     		ldr	r0, [r7, #4]
 2039 03c4 FFF7FEFF 		bl	pbuf_cat
 2040              	.LVL192:
 739:lwIP/src/core/tcp_out.c ****   } else if (extendlen > 0) {
 2041              		.loc 1 739 5 view .LVU725
 739:lwIP/src/core/tcp_out.c ****   } else if (extendlen > 0) {
 2042              		.loc 1 739 22 is_stmt 0 view .LVU726
 2043 03c8 2A89     		ldrh	r2, [r5, #8]
 2044 03ca 3B89     		ldrh	r3, [r7, #8]
 2045 03cc 1344     		add	r3, r3, r2
 2046 03ce 3B81     		strh	r3, [r7, #8]	@ movhi
 2047              	.L142:
 773:lwIP/src/core/tcp_out.c ****   }
 2048              		.loc 1 773 5 is_stmt 1 view .LVU727
 773:lwIP/src/core/tcp_out.c ****   }
 2049              		.loc 1 773 23 is_stmt 0 view .LVU728
 2050 03d0 C7F80080 		str	r8, [r7]
 2051 03d4 9CE7     		b	.L149
 2052              	.L134:
 728:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 2053              		.loc 1 728 3 is_stmt 1 view .LVU729
 728:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 2054              		.loc 1 728 24 is_stmt 0 view .LVU730
 2055 03d6 BDF83E30 		ldrh	r3, [sp, #62]
 2056 03da A4F86830 		strh	r3, [r4, #104]	@ movhi
 735:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: cannot concatenate when pcb->unsent is empty",
 2057              		.loc 1 735 3 is_stmt 1 view .LVU731
 735:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: cannot concatenate when pcb->unsent is empty",
 2058              		.loc 1 735 6 is_stmt 0 view .LVU732
 2059 03de 2DB1     		cbz	r5, .L140
 736:lwIP/src/core/tcp_out.c ****                 (last_unsent != NULL));
 2060              		.loc 1 736 5 is_stmt 1 view .LVU733
 736:lwIP/src/core/tcp_out.c ****                 (last_unsent != NULL));
 2061              		.loc 1 736 5 view .LVU734
 2062 03e0 002F     		cmp	r7, #0
 2063 03e2 EDD1     		bne	.L138
 736:lwIP/src/core/tcp_out.c ****                 (last_unsent != NULL));
 2064              		.loc 1 736 5 discriminator 1 view .LVU735
 2065 03e4 4D48     		ldr	r0, .L252+4
 2066 03e6 FFF7FEFF 		bl	printf
 2067              	.LVL193:
 2068              	.L141:
 736:lwIP/src/core/tcp_out.c ****                 (last_unsent != NULL));
 2069              		.loc 1 736 5 discriminator 12 view .LVU736
 736:lwIP/src/core/tcp_out.c ****                 (last_unsent != NULL));
 2070              		.loc 1 736 5 discriminator 12 view .LVU737
 736:lwIP/src/core/tcp_out.c ****                 (last_unsent != NULL));
 2071              		.loc 1 736 5 discriminator 12 view .LVU738
 736:lwIP/src/core/tcp_out.c ****                 (last_unsent != NULL));
 2072              		.loc 1 736 5 discriminator 12 view .LVU739
 736:lwIP/src/core/tcp_out.c ****                 (last_unsent != NULL));
 2073              		.loc 1 736 5 discriminator 12 view .LVU740
 736:lwIP/src/core/tcp_out.c ****                 (last_unsent != NULL));
 2074              		.loc 1 736 5 discriminator 12 view .LVU741
 2075 03ea FEE7     		b	.L141
 2076              	.L140:
ARM GAS  /tmp/ccH0Y1hM.s 			page 101


 740:lwIP/src/core/tcp_out.c ****     struct pbuf *p;
 2077              		.loc 1 740 10 view .LVU742
 740:lwIP/src/core/tcp_out.c ****     struct pbuf *p;
 2078              		.loc 1 740 13 is_stmt 0 view .LVU743
 2079 03ec B9F1000F 		cmp	r9, #0
 2080 03f0 21D0     		beq	.L143
 2081              	.LBB296:
 741:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: extension of reference requires reference",
 2082              		.loc 1 741 5 is_stmt 1 view .LVU744
 742:lwIP/src/core/tcp_out.c ****                 last_unsent != NULL && last_unsent->p != NULL);
 2083              		.loc 1 742 5 view .LVU745
 742:lwIP/src/core/tcp_out.c ****                 last_unsent != NULL && last_unsent->p != NULL);
 2084              		.loc 1 742 5 view .LVU746
 2085 03f2 E7B1     		cbz	r7, .L144
 2086              	.L155:
 742:lwIP/src/core/tcp_out.c ****                 last_unsent != NULL && last_unsent->p != NULL);
 2087              		.loc 1 742 5 is_stmt 0 discriminator 2 view .LVU747
 2088 03f4 7B68     		ldr	r3, [r7, #4]
 2089 03f6 D3B1     		cbz	r3, .L144
 2090              	.LVL194:
 744:lwIP/src/core/tcp_out.c ****       p->tot_len += extendlen;
 2091              		.loc 1 744 30 is_stmt 1 view .LVU748
 744:lwIP/src/core/tcp_out.c ****       p->tot_len += extendlen;
 2092              		.loc 1 744 31 is_stmt 0 view .LVU749
 2093 03f8 1A68     		ldr	r2, [r3]
 744:lwIP/src/core/tcp_out.c ****       p->tot_len += extendlen;
 2094              		.loc 1 744 5 view .LVU750
 2095 03fa 12B9     		cbnz	r2, .L145
 2096 03fc 08E0     		b	.L146
 2097              	.LVL195:
 2098              	.L165:
 744:lwIP/src/core/tcp_out.c ****       p->tot_len += extendlen;
 2099              		.loc 1 744 5 view .LVU751
 2100 03fe 1346     		mov	r3, r2
 2101 0400 0246     		mov	r2, r0
 2102              	.LVL196:
 2103              	.L145:
 745:lwIP/src/core/tcp_out.c ****     }
 2104              		.loc 1 745 7 is_stmt 1 discriminator 3 view .LVU752
 745:lwIP/src/core/tcp_out.c ****     }
 2105              		.loc 1 745 18 is_stmt 0 discriminator 3 view .LVU753
 2106 0402 1989     		ldrh	r1, [r3, #8]
 744:lwIP/src/core/tcp_out.c ****       p->tot_len += extendlen;
 2107              		.loc 1 744 31 discriminator 3 view .LVU754
 2108 0404 1068     		ldr	r0, [r2]
 745:lwIP/src/core/tcp_out.c ****     }
 2109              		.loc 1 745 18 discriminator 3 view .LVU755
 2110 0406 4944     		add	r1, r1, r9
 2111 0408 1981     		strh	r1, [r3, #8]	@ movhi
 744:lwIP/src/core/tcp_out.c ****       p->tot_len += extendlen;
 2112              		.loc 1 744 47 is_stmt 1 discriminator 3 view .LVU756
 2113              	.LVL197:
 744:lwIP/src/core/tcp_out.c ****       p->tot_len += extendlen;
 2114              		.loc 1 744 30 discriminator 3 view .LVU757
 2115 040a 1346     		mov	r3, r2
 744:lwIP/src/core/tcp_out.c ****       p->tot_len += extendlen;
 2116              		.loc 1 744 5 is_stmt 0 discriminator 3 view .LVU758
ARM GAS  /tmp/ccH0Y1hM.s 			page 102


 2117 040c 0028     		cmp	r0, #0
 2118 040e F6D1     		bne	.L165
 2119              	.LVL198:
 2120              	.L146:
 747:lwIP/src/core/tcp_out.c ****     p->len += extendlen;
 2121              		.loc 1 747 5 is_stmt 1 view .LVU759
 749:lwIP/src/core/tcp_out.c ****   }
 2122              		.loc 1 749 22 is_stmt 0 view .LVU760
 2123 0410 3A89     		ldrh	r2, [r7, #8]
 747:lwIP/src/core/tcp_out.c ****     p->len += extendlen;
 2124              		.loc 1 747 16 view .LVU761
 2125 0412 1889     		ldrh	r0, [r3, #8]
 748:lwIP/src/core/tcp_out.c ****     last_unsent->len += extendlen;
 2126              		.loc 1 748 12 view .LVU762
 2127 0414 5989     		ldrh	r1, [r3, #10]
 747:lwIP/src/core/tcp_out.c ****     p->len += extendlen;
 2128              		.loc 1 747 16 view .LVU763
 2129 0416 4844     		add	r0, r0, r9
 748:lwIP/src/core/tcp_out.c ****     last_unsent->len += extendlen;
 2130              		.loc 1 748 12 view .LVU764
 2131 0418 4944     		add	r1, r1, r9
 749:lwIP/src/core/tcp_out.c ****   }
 2132              		.loc 1 749 22 view .LVU765
 2133 041a 9144     		add	r9, r9, r2
 747:lwIP/src/core/tcp_out.c ****     p->len += extendlen;
 2134              		.loc 1 747 16 view .LVU766
 2135 041c 1881     		strh	r0, [r3, #8]	@ movhi
 748:lwIP/src/core/tcp_out.c ****     last_unsent->len += extendlen;
 2136              		.loc 1 748 5 is_stmt 1 view .LVU767
 748:lwIP/src/core/tcp_out.c ****     last_unsent->len += extendlen;
 2137              		.loc 1 748 12 is_stmt 0 view .LVU768
 2138 041e 5981     		strh	r1, [r3, #10]	@ movhi
 749:lwIP/src/core/tcp_out.c ****   }
 2139              		.loc 1 749 5 is_stmt 1 view .LVU769
 749:lwIP/src/core/tcp_out.c ****   }
 2140              		.loc 1 749 22 is_stmt 0 view .LVU770
 2141 0420 A7F80890 		strh	r9, [r7, #8]	@ movhi
 2142 0424 D4E7     		b	.L142
 2143              	.LVL199:
 2144              	.L249:
 749:lwIP/src/core/tcp_out.c ****   }
 2145              		.loc 1 749 22 view .LVU771
 2146              	.LBE296:
 740:lwIP/src/core/tcp_out.c ****     struct pbuf *p;
 2147              		.loc 1 740 10 is_stmt 1 view .LVU772
 740:lwIP/src/core/tcp_out.c ****     struct pbuf *p;
 2148              		.loc 1 740 13 is_stmt 0 view .LVU773
 2149 0426 B9F1000F 		cmp	r9, #0
 2150 042a E3D1     		bne	.L155
 2151 042c D0E7     		b	.L142
 2152              	.L144:
 2153              	.LBB297:
 742:lwIP/src/core/tcp_out.c ****                 last_unsent != NULL && last_unsent->p != NULL);
 2154              		.loc 1 742 5 is_stmt 1 discriminator 3 view .LVU774
 2155 042e 3C48     		ldr	r0, .L252+8
 2156 0430 FFF7FEFF 		bl	printf
 2157              	.LVL200:
ARM GAS  /tmp/ccH0Y1hM.s 			page 103


 2158              	.L147:
 742:lwIP/src/core/tcp_out.c ****                 last_unsent != NULL && last_unsent->p != NULL);
 2159              		.loc 1 742 5 discriminator 13 view .LVU775
 742:lwIP/src/core/tcp_out.c ****                 last_unsent != NULL && last_unsent->p != NULL);
 2160              		.loc 1 742 5 discriminator 13 view .LVU776
 742:lwIP/src/core/tcp_out.c ****                 last_unsent != NULL && last_unsent->p != NULL);
 2161              		.loc 1 742 5 discriminator 13 view .LVU777
 742:lwIP/src/core/tcp_out.c ****                 last_unsent != NULL && last_unsent->p != NULL);
 2162              		.loc 1 742 5 discriminator 13 view .LVU778
 742:lwIP/src/core/tcp_out.c ****                 last_unsent != NULL && last_unsent->p != NULL);
 2163              		.loc 1 742 5 discriminator 13 view .LVU779
 742:lwIP/src/core/tcp_out.c ****                 last_unsent != NULL && last_unsent->p != NULL);
 2164              		.loc 1 742 5 discriminator 13 view .LVU780
 2165 0434 FEE7     		b	.L147
 2166              	.L143:
 742:lwIP/src/core/tcp_out.c ****                 last_unsent != NULL && last_unsent->p != NULL);
 2167              		.loc 1 742 5 is_stmt 0 discriminator 13 view .LVU781
 2168              	.LBE297:
 770:lwIP/src/core/tcp_out.c ****     pcb->unsent = queue;
 2169              		.loc 1 770 3 is_stmt 1 view .LVU782
 770:lwIP/src/core/tcp_out.c ****     pcb->unsent = queue;
 2170              		.loc 1 770 6 is_stmt 0 view .LVU783
 2171 0436 002F     		cmp	r7, #0
 2172 0438 3FF468AF 		beq	.L222
 2173 043c C8E7     		b	.L142
 2174              	.LVL201:
 2175              	.L243:
 2176              	.LBB298:
 662:lwIP/src/core/tcp_out.c ****       goto memerr;
 2177              		.loc 1 662 7 view .LVU784
 2178 043e 5846     		mov	r0, fp
 2179 0440 089D     		ldr	r5, [sp, #32]
 2180              	.LVL202:
 661:lwIP/src/core/tcp_out.c ****       pbuf_free(p);
 2181              		.loc 1 661 52 is_stmt 1 view .LVU785
 662:lwIP/src/core/tcp_out.c ****       goto memerr;
 2182              		.loc 1 662 7 view .LVU786
 2183 0442 FFF7FEFF 		bl	pbuf_free
 2184              	.LVL203:
 663:lwIP/src/core/tcp_out.c ****     }
 2185              		.loc 1 663 7 view .LVU787
 2186              	.L126:
 663:lwIP/src/core/tcp_out.c ****     }
 2187              		.loc 1 663 7 is_stmt 0 view .LVU788
 2188              	.LBE298:
 797:lwIP/src/core/tcp_out.c ****   TCP_STATS_INC(tcp.memerr);
 2189              		.loc 1 797 3 is_stmt 1 view .LVU789
 797:lwIP/src/core/tcp_out.c ****   TCP_STATS_INC(tcp.memerr);
 2190              		.loc 1 797 3 view .LVU790
 2191 0446 638B     		ldrh	r3, [r4, #26]
 2192 0448 43F08003 		orr	r3, r3, #128
 2193 044c 6383     		strh	r3, [r4, #26]	@ movhi
 797:lwIP/src/core/tcp_out.c ****   TCP_STATS_INC(tcp.memerr);
 2194              		.loc 1 797 3 view .LVU791
 798:lwIP/src/core/tcp_out.c **** 
 2195              		.loc 1 798 28 view .LVU792
 800:lwIP/src/core/tcp_out.c ****     pbuf_free(concat_p);
ARM GAS  /tmp/ccH0Y1hM.s 			page 104


 2196              		.loc 1 800 3 view .LVU793
 800:lwIP/src/core/tcp_out.c ****     pbuf_free(concat_p);
 2197              		.loc 1 800 6 is_stmt 0 view .LVU794
 2198 044e 15B1     		cbz	r5, .L153
 801:lwIP/src/core/tcp_out.c ****   }
 2199              		.loc 1 801 5 is_stmt 1 view .LVU795
 2200 0450 2846     		mov	r0, r5
 2201 0452 FFF7FEFF 		bl	pbuf_free
 2202              	.LVL204:
 2203              	.L153:
 803:lwIP/src/core/tcp_out.c ****     tcp_segs_free(queue);
 2204              		.loc 1 803 3 view .LVU796
 803:lwIP/src/core/tcp_out.c ****     tcp_segs_free(queue);
 2205              		.loc 1 803 6 is_stmt 0 view .LVU797
 2206 0456 B8F1000F 		cmp	r8, #0
 2207 045a 02D0     		beq	.L152
 804:lwIP/src/core/tcp_out.c ****   }
 2208              		.loc 1 804 5 is_stmt 1 view .LVU798
 2209 045c 4046     		mov	r0, r8
 2210 045e FFF7FEFF 		bl	tcp_segs_free
 2211              	.LVL205:
 2212              	.L152:
 806:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: valid queue length", pcb->unacked != NULL ||
 2213              		.loc 1 806 3 view .LVU799
 806:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_write: valid queue length", pcb->unacked != NULL ||
 2214              		.loc 1 806 6 is_stmt 0 view .LVU800
 2215 0462 B4F86630 		ldrh	r3, [r4, #102]
 2216 0466 63B1     		cbz	r3, .L171
 807:lwIP/src/core/tcp_out.c ****                 pcb->unsent != NULL);
 2217              		.loc 1 807 5 is_stmt 1 view .LVU801
 807:lwIP/src/core/tcp_out.c ****                 pcb->unsent != NULL);
 2218              		.loc 1 807 5 view .LVU802
 2219 0468 236F     		ldr	r3, [r4, #112]
 2220 046a 53B9     		cbnz	r3, .L171
 807:lwIP/src/core/tcp_out.c ****                 pcb->unsent != NULL);
 2221              		.loc 1 807 5 is_stmt 0 discriminator 1 view .LVU803
 2222 046c E36E     		ldr	r3, [r4, #108]
 2223 046e 43B9     		cbnz	r3, .L171
 807:lwIP/src/core/tcp_out.c ****                 pcb->unsent != NULL);
 2224              		.loc 1 807 5 is_stmt 1 discriminator 3 view .LVU804
 2225 0470 2948     		ldr	r0, .L252
 2226 0472 FFF7FEFF 		bl	printf
 2227              	.LVL206:
 2228              	.L154:
 807:lwIP/src/core/tcp_out.c ****                 pcb->unsent != NULL);
 2229              		.loc 1 807 5 discriminator 15 view .LVU805
 807:lwIP/src/core/tcp_out.c ****                 pcb->unsent != NULL);
 2230              		.loc 1 807 5 discriminator 15 view .LVU806
 807:lwIP/src/core/tcp_out.c ****                 pcb->unsent != NULL);
 2231              		.loc 1 807 5 discriminator 15 view .LVU807
 807:lwIP/src/core/tcp_out.c ****                 pcb->unsent != NULL);
 2232              		.loc 1 807 5 discriminator 15 view .LVU808
 807:lwIP/src/core/tcp_out.c ****                 pcb->unsent != NULL);
 2233              		.loc 1 807 5 discriminator 15 view .LVU809
 807:lwIP/src/core/tcp_out.c ****                 pcb->unsent != NULL);
 2234              		.loc 1 807 5 discriminator 15 view .LVU810
 2235 0476 FEE7     		b	.L154
ARM GAS  /tmp/ccH0Y1hM.s 			page 105


 2236              	.LVL207:
 2237              	.L242:
 2238              	.LBB299:
 2239              	.LBB286:
 646:lwIP/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_write: could not allocate memo
 2240              		.loc 1 646 9 is_stmt 0 view .LVU811
 2241 0478 1846     		mov	r0, r3
 2242              	.LVL208:
 646:lwIP/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_write: could not allocate memo
 2243              		.loc 1 646 9 view .LVU812
 2244 047a 089D     		ldr	r5, [sp, #32]
 2245              	.LVL209:
 646:lwIP/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_write: could not allocate memo
 2246              		.loc 1 646 9 is_stmt 1 view .LVU813
 2247 047c FFF7FEFF 		bl	pbuf_free
 2248              	.LVL210:
 647:lwIP/src/core/tcp_out.c ****         goto memerr;
 2249              		.loc 1 647 123 view .LVU814
 648:lwIP/src/core/tcp_out.c ****       }
 2250              		.loc 1 648 9 view .LVU815
 2251 0480 E1E7     		b	.L126
 2252              	.LVL211:
 2253              	.L171:
 648:lwIP/src/core/tcp_out.c ****       }
 2254              		.loc 1 648 9 is_stmt 0 view .LVU816
 2255              	.LBE286:
 2256              	.LBE299:
 811:lwIP/src/core/tcp_out.c **** }
 2257              		.loc 1 811 10 view .LVU817
 2258 0482 4FF0FF30 		mov	r0, #-1
 2259 0486 8EE6     		b	.L220
 2260              	.LVL212:
 2261              	.L226:
 811:lwIP/src/core/tcp_out.c **** }
 2262              		.loc 1 811 10 view .LVU818
 2263 0488 089D     		ldr	r5, [sp, #32]
 2264              	.LVL213:
 811:lwIP/src/core/tcp_out.c **** }
 2265              		.loc 1 811 10 view .LVU819
 2266 048a DCE7     		b	.L126
 2267              	.LVL214:
 2268              	.L241:
 2269              	.LBB300:
 2270              	.LBB287:
 625:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 2271              		.loc 1 625 7 is_stmt 1 discriminator 1 view .LVU820
 2272 048c 2548     		ldr	r0, .L252+12
 2273 048e FFF7FEFF 		bl	printf
 2274              	.LVL215:
 2275              	.L124:
 625:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 2276              		.loc 1 625 7 discriminator 10 view .LVU821
 625:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 2277              		.loc 1 625 7 discriminator 10 view .LVU822
 625:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 2278              		.loc 1 625 7 discriminator 10 view .LVU823
 625:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
ARM GAS  /tmp/ccH0Y1hM.s 			page 106


 2279              		.loc 1 625 7 discriminator 10 view .LVU824
 625:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 2280              		.loc 1 625 7 discriminator 10 view .LVU825
 625:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 2281              		.loc 1 625 7 discriminator 10 view .LVU826
 2282 0492 FEE7     		b	.L124
 2283              	.LVL216:
 2284              	.L161:
 625:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 2285              		.loc 1 625 7 is_stmt 0 discriminator 10 view .LVU827
 2286              	.LBE287:
 2287              	.LBE300:
 392:lwIP/src/core/tcp_out.c ****   struct tcp_seg *last_unsent = NULL, *seg = NULL, *prev_seg = NULL, *queue = NULL;
 2288              		.loc 1 392 16 view .LVU828
 2289 0494 0025     		movs	r5, #0
 2290              	.LBB301:
 2291 0496 3146     		mov	r1, r6
 2292              	.LBE301:
 405:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 2293              		.loc 1 405 9 view .LVU829
 2294 0498 A946     		mov	r9, r5
 2295              	.LVL217:
 2296              	.L108:
 597:lwIP/src/core/tcp_out.c ****     struct pbuf *p;
 2297              		.loc 1 597 9 is_stmt 1 view .LVU830
 2298 049a 069B     		ldr	r3, [sp, #24]
 2299 049c 8B42     		cmp	r3, r1
 2300 049e 3FF68BAE 		bhi	.L133
 597:lwIP/src/core/tcp_out.c ****     struct pbuf *p;
 2301              		.loc 1 597 9 is_stmt 0 view .LVU831
 2302 04a2 0AE7     		b	.L132
 2303              	.LVL218:
 2304              	.L244:
 2305              	.LBB302:
 683:lwIP/src/core/tcp_out.c ****       prev_seg->next = seg;
 2306              		.loc 1 683 7 is_stmt 1 discriminator 1 view .LVU832
 2307 04a4 2048     		ldr	r0, .L252+16
 2308              	.LVL219:
 683:lwIP/src/core/tcp_out.c ****       prev_seg->next = seg;
 2309              		.loc 1 683 7 is_stmt 0 discriminator 1 view .LVU833
 2310 04a6 FFF7FEFF 		bl	printf
 2311              	.LVL220:
 2312              	.L130:
 683:lwIP/src/core/tcp_out.c ****       prev_seg->next = seg;
 2313              		.loc 1 683 7 is_stmt 1 discriminator 11 view .LVU834
 683:lwIP/src/core/tcp_out.c ****       prev_seg->next = seg;
 2314              		.loc 1 683 7 discriminator 11 view .LVU835
 683:lwIP/src/core/tcp_out.c ****       prev_seg->next = seg;
 2315              		.loc 1 683 7 discriminator 11 view .LVU836
 683:lwIP/src/core/tcp_out.c ****       prev_seg->next = seg;
 2316              		.loc 1 683 7 discriminator 11 view .LVU837
 683:lwIP/src/core/tcp_out.c ****       prev_seg->next = seg;
 2317              		.loc 1 683 7 discriminator 11 view .LVU838
 683:lwIP/src/core/tcp_out.c ****       prev_seg->next = seg;
 2318              		.loc 1 683 7 discriminator 11 view .LVU839
 2319 04aa FEE7     		b	.L130
 2320              	.LVL221:
ARM GAS  /tmp/ccH0Y1hM.s 			page 107


 2321              	.L238:
 683:lwIP/src/core/tcp_out.c ****       prev_seg->next = seg;
 2322              		.loc 1 683 7 is_stmt 0 discriminator 11 view .LVU840
 2323              	.LBE302:
 2324              	.LBB303:
 2325              	.LBB276:
 540:lwIP/src/core/tcp_out.c ****           LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 2326              		.loc 1 540 9 is_stmt 1 view .LVU841
 2327 04ac 1946     		mov	r1, r3
 540:lwIP/src/core/tcp_out.c ****           LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 2328              		.loc 1 540 25 is_stmt 0 view .LVU842
 2329 04ae 0123     		movs	r3, #1
 2330 04b0 0020     		movs	r0, #0
 2331 04b2 0293     		str	r3, [sp, #8]
 2332              	.LVL222:
 540:lwIP/src/core/tcp_out.c ****           LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 2333              		.loc 1 540 25 view .LVU843
 2334 04b4 0DF13E03 		add	r3, sp, #62
 2335 04b8 CDE90041 		strd	r4, r1, [sp]
 2336 04bc 5146     		mov	r1, r10
 2337 04be FFF7FEFF 		bl	tcp_pbuf_prealloc
 2338              	.LVL223:
 540:lwIP/src/core/tcp_out.c ****           LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 2339              		.loc 1 540 12 view .LVU844
 2340 04c2 0546     		mov	r5, r0
 2341 04c4 0028     		cmp	r0, #0
 2342 04c6 3FF44BAE 		beq	.L110
 549:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 2343              		.loc 1 549 9 is_stmt 1 view .LVU845
 2344 04ca 079B     		ldr	r3, [sp, #28]
 2345 04cc 5246     		mov	r2, r10
 2346 04ce 4068     		ldr	r0, [r0, #4]
 2347              	.LVL224:
 549:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 2348              		.loc 1 549 9 is_stmt 0 view .LVU846
 2349              	.LBE276:
 2350              	.LBE303:
 405:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 2351              		.loc 1 405 9 view .LVU847
 2352 04d0 4FF00009 		mov	r9, #0
 2353              	.LBB304:
 2354              	.LBB277:
 549:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 2355              		.loc 1 549 9 view .LVU848
 2356 04d4 9919     		adds	r1, r3, r6
 2357 04d6 FFF7FEFF 		bl	memcpy
 2358              	.LVL225:
 553:lwIP/src/core/tcp_out.c ****       } else {
 2359              		.loc 1 553 9 is_stmt 1 view .LVU849
 553:lwIP/src/core/tcp_out.c ****       } else {
 2360              		.loc 1 553 21 is_stmt 0 view .LVU850
 2361 04da 2846     		mov	r0, r5
 2362              	.LVL226:
 2363              	.L230:
 2364              	.LBB272:
 571:lwIP/src/core/tcp_out.c ****         }
 2365              		.loc 1 571 11 is_stmt 1 view .LVU851
ARM GAS  /tmp/ccH0Y1hM.s 			page 108


 571:lwIP/src/core/tcp_out.c ****         }
 2366              		.loc 1 571 23 is_stmt 0 view .LVU852
 2367 04dc FFF7FEFF 		bl	pbuf_clen
 2368              	.LVL227:
 571:lwIP/src/core/tcp_out.c ****         }
 2369              		.loc 1 571 20 view .LVU853
 2370 04e0 059B     		ldr	r3, [sp, #20]
 2371 04e2 1844     		add	r0, r0, r3
 2372 04e4 83B2     		uxth	r3, r0
 2373 04e6 0593     		str	r3, [sp, #20]
 2374              	.LVL228:
 2375              	.L111:
 571:lwIP/src/core/tcp_out.c ****         }
 2376              		.loc 1 571 20 view .LVU854
 2377              	.LBE272:
 581:lwIP/src/core/tcp_out.c ****     }
 2378              		.loc 1 581 7 is_stmt 1 view .LVU855
 581:lwIP/src/core/tcp_out.c ****     }
 2379              		.loc 1 581 11 is_stmt 0 view .LVU856
 2380 04e8 B244     		add	r10, r10, r6
 2381              	.LVL229:
 581:lwIP/src/core/tcp_out.c ****     }
 2382              		.loc 1 581 11 view .LVU857
 2383 04ea BB46     		mov	fp, r7
 2384 04ec 1FFA8AF3 		uxth	r3, r10
 2385 04f0 1946     		mov	r1, r3
 2386              	.LVL230:
 581:lwIP/src/core/tcp_out.c ****     }
 2387              		.loc 1 581 11 view .LVU858
 2388 04f2 D2E7     		b	.L108
 2389              	.LVL231:
 2390              	.L239:
 2391              	.LBB273:
 561:lwIP/src/core/tcp_out.c ****           extendlen = seglen;
 2392              		.loc 1 561 11 is_stmt 1 view .LVU859
 561:lwIP/src/core/tcp_out.c ****           extendlen = seglen;
 2393              		.loc 1 561 11 view .LVU860
 2394 04f4 1EB1     		cbz	r6, .L162
 561:lwIP/src/core/tcp_out.c ****           extendlen = seglen;
 2395              		.loc 1 561 11 discriminator 1 view .LVU861
 2396 04f6 0D48     		ldr	r0, .L252+20
 2397 04f8 FFF7FEFF 		bl	printf
 2398              	.LVL232:
 2399              	.L114:
 561:lwIP/src/core/tcp_out.c ****           extendlen = seglen;
 2400              		.loc 1 561 11 discriminator 6 view .LVU862
 561:lwIP/src/core/tcp_out.c ****           extendlen = seglen;
 2401              		.loc 1 561 11 discriminator 6 view .LVU863
 561:lwIP/src/core/tcp_out.c ****           extendlen = seglen;
 2402              		.loc 1 561 11 discriminator 6 view .LVU864
 561:lwIP/src/core/tcp_out.c ****           extendlen = seglen;
 2403              		.loc 1 561 11 discriminator 6 view .LVU865
 561:lwIP/src/core/tcp_out.c ****           extendlen = seglen;
 2404              		.loc 1 561 11 discriminator 6 view .LVU866
 561:lwIP/src/core/tcp_out.c ****           extendlen = seglen;
 2405              		.loc 1 561 11 discriminator 6 view .LVU867
 2406 04fc FEE7     		b	.L114
ARM GAS  /tmp/ccH0Y1hM.s 			page 109


 2407              	.LVL233:
 2408              	.L162:
 562:lwIP/src/core/tcp_out.c ****         } else {
 2409              		.loc 1 562 21 is_stmt 0 view .LVU868
 2410 04fe D146     		mov	r9, r10
 2411 0500 F2E7     		b	.L111
 2412              	.LVL234:
 2413              	.L246:
 562:lwIP/src/core/tcp_out.c ****         } else {
 2414              		.loc 1 562 21 view .LVU869
 2415              	.LBE273:
 2416              	.LBE277:
 2417              	.LBE304:
 2418              	.LBB305:
 614:lwIP/src/core/tcp_out.c ****                   (p->len >= seglen));
 2419              		.loc 1 614 7 is_stmt 1 discriminator 1 view .LVU870
 2420 0502 0B48     		ldr	r0, .L252+24
 2421              	.LVL235:
 614:lwIP/src/core/tcp_out.c ****                   (p->len >= seglen));
 2422              		.loc 1 614 7 is_stmt 0 discriminator 1 view .LVU871
 2423 0504 FFF7FEFF 		bl	printf
 2424              	.LVL236:
 2425              	.L121:
 614:lwIP/src/core/tcp_out.c ****                   (p->len >= seglen));
 2426              		.loc 1 614 7 is_stmt 1 discriminator 9 view .LVU872
 614:lwIP/src/core/tcp_out.c ****                   (p->len >= seglen));
 2427              		.loc 1 614 7 discriminator 9 view .LVU873
 614:lwIP/src/core/tcp_out.c ****                   (p->len >= seglen));
 2428              		.loc 1 614 7 discriminator 9 view .LVU874
 614:lwIP/src/core/tcp_out.c ****                   (p->len >= seglen));
 2429              		.loc 1 614 7 discriminator 9 view .LVU875
 614:lwIP/src/core/tcp_out.c ****                   (p->len >= seglen));
 2430              		.loc 1 614 7 discriminator 9 view .LVU876
 614:lwIP/src/core/tcp_out.c ****                   (p->len >= seglen));
 2431              		.loc 1 614 7 discriminator 9 view .LVU877
 2432 0508 FEE7     		b	.L121
 2433              	.LVL237:
 2434              	.L240:
 614:lwIP/src/core/tcp_out.c ****                   (p->len >= seglen));
 2435              		.loc 1 614 7 is_stmt 0 discriminator 9 view .LVU878
 2436              	.LBE305:
 2437              	.LBB306:
 2438              	.LBB278:
 2439              	.LBB274:
 570:lwIP/src/core/tcp_out.c ****           queuelen += pbuf_clen(concat_p);
 2440              		.loc 1 570 11 is_stmt 1 view .LVU879
 570:lwIP/src/core/tcp_out.c ****           queuelen += pbuf_clen(concat_p);
 2441              		.loc 1 570 70 is_stmt 0 view .LVU880
 2442 050a 079B     		ldr	r3, [sp, #28]
 2443              	.LBE274:
 2444              	.LBE278:
 2445              	.LBE306:
 405:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 2446              		.loc 1 405 9 view .LVU881
 2447 050c 4FF00009 		mov	r9, #0
 2448              	.LBB307:
 2449              	.LBB279:
ARM GAS  /tmp/ccH0Y1hM.s 			page 110


 2450              	.LBB275:
 570:lwIP/src/core/tcp_out.c ****           queuelen += pbuf_clen(concat_p);
 2451              		.loc 1 570 70 view .LVU882
 2452 0510 3344     		add	r3, r3, r6
 570:lwIP/src/core/tcp_out.c ****           queuelen += pbuf_clen(concat_p);
 2453              		.loc 1 570 50 view .LVU883
 2454 0512 4360     		str	r3, [r0, #4]
 2455 0514 E2E7     		b	.L230
 2456              	.L253:
 2457 0516 00BF     		.align	2
 2458              	.L252:
 2459 0518 44020000 		.word	.LC20
 2460 051c D4010000 		.word	.LC18
 2461 0520 0C020000 		.word	.LC19
 2462 0524 B0010000 		.word	.LC16
 2463 0528 C0010000 		.word	.LC17
 2464 052c 14010000 		.word	.LC13
 2465 0530 70010000 		.word	.LC15
 2466              	.LBE275:
 2467              	.LBE279:
 2468              	.LBE307:
 2469              		.cfi_endproc
 2470              	.LFE109:
 2472              		.section	.rodata.tcp_split_unsent_seg.str1.4,"aMS",%progbits,1
 2473              		.align	2
 2474              	.LC21:
 2475 0000 7463705F 		.ascii	"tcp_split_unsent_seg: invalid pcb\000"
 2475      73706C69 
 2475      745F756E 
 2475      73656E74 
 2475      5F736567 
 2476 0022 0000     		.align	2
 2477              	.LC22:
 2478 0024 43616E27 		.ascii	"Can't split segment into length 0\000"
 2478      74207370 
 2478      6C697420 
 2478      7365676D 
 2478      656E7420 
 2479 0046 0000     		.align	2
 2480              	.LC23:
 2481 0048 73706C69 		.ascii	"split <= mss\000"
 2481      74203C3D 
 2481      206D7373 
 2481      00
 2482 0055 000000   		.align	2
 2483              	.LC24:
 2484 0058 75736567 		.ascii	"useg->len > 0\000"
 2484      2D3E6C65 
 2484      6E203E20 
 2484      3000
 2485              		.section	.text.tcp_split_unsent_seg,"ax",%progbits
 2486              		.align	1
 2487              		.p2align 2,,3
 2488              		.global	tcp_split_unsent_seg
 2489              		.syntax unified
 2490              		.thumb
 2491              		.thumb_func
ARM GAS  /tmp/ccH0Y1hM.s 			page 111


 2492              		.fpu fpv4-sp-d16
 2494              	tcp_split_unsent_seg:
 2495              	.LVL238:
 2496              	.LFB110:
 828:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg = NULL, *useg = NULL;
 2497              		.loc 1 828 1 is_stmt 1 view -0
 2498              		.cfi_startproc
 2499              		@ args = 0, pretend = 0, frame = 0
 2500              		@ frame_needed = 0, uses_anonymous_args = 0
 829:lwIP/src/core/tcp_out.c ****   struct pbuf *p = NULL;
 2501              		.loc 1 829 3 view .LVU885
 830:lwIP/src/core/tcp_out.c ****   u8_t optlen;
 2502              		.loc 1 830 3 view .LVU886
 831:lwIP/src/core/tcp_out.c ****   u8_t optflags;
 2503              		.loc 1 831 3 view .LVU887
 832:lwIP/src/core/tcp_out.c ****   u8_t split_flags;
 2504              		.loc 1 832 3 view .LVU888
 833:lwIP/src/core/tcp_out.c ****   u8_t remainder_flags;
 2505              		.loc 1 833 3 view .LVU889
 834:lwIP/src/core/tcp_out.c ****   u16_t remainder;
 2506              		.loc 1 834 3 view .LVU890
 835:lwIP/src/core/tcp_out.c ****   u16_t offset;
 2507              		.loc 1 835 3 view .LVU891
 836:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 2508              		.loc 1 836 3 view .LVU892
 843:lwIP/src/core/tcp_out.c **** 
 2509              		.loc 1 843 3 view .LVU893
 843:lwIP/src/core/tcp_out.c **** 
 2510              		.loc 1 843 3 view .LVU894
 828:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg = NULL, *useg = NULL;
 2511              		.loc 1 828 1 is_stmt 0 view .LVU895
 2512 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2513              	.LCFI13:
 2514              		.cfi_def_cfa_offset 36
 2515              		.cfi_offset 4, -36
 2516              		.cfi_offset 5, -32
 2517              		.cfi_offset 6, -28
 2518              		.cfi_offset 7, -24
 2519              		.cfi_offset 8, -20
 2520              		.cfi_offset 9, -16
 2521              		.cfi_offset 10, -12
 2522              		.cfi_offset 11, -8
 2523              		.cfi_offset 14, -4
 2524 0004 83B0     		sub	sp, sp, #12
 2525              	.LCFI14:
 2526              		.cfi_def_cfa_offset 48
 843:lwIP/src/core/tcp_out.c **** 
 2527              		.loc 1 843 3 view .LVU896
 2528 0006 0028     		cmp	r0, #0
 2529 0008 00F09480 		beq	.L284
 843:lwIP/src/core/tcp_out.c **** 
 2530              		.loc 1 843 3 is_stmt 1 discriminator 2 view .LVU897
 845:lwIP/src/core/tcp_out.c ****   if (useg == NULL) {
 2531              		.loc 1 845 3 discriminator 2 view .LVU898
 845:lwIP/src/core/tcp_out.c ****   if (useg == NULL) {
 2532              		.loc 1 845 8 is_stmt 0 discriminator 2 view .LVU899
 2533 000c C56E     		ldr	r5, [r0, #108]
ARM GAS  /tmp/ccH0Y1hM.s 			page 112


 2534              	.LVL239:
 846:lwIP/src/core/tcp_out.c ****     return ERR_MEM;
 2535              		.loc 1 846 3 is_stmt 1 discriminator 2 view .LVU900
 2536 000e 0646     		mov	r6, r0
 846:lwIP/src/core/tcp_out.c ****     return ERR_MEM;
 2537              		.loc 1 846 6 is_stmt 0 discriminator 2 view .LVU901
 2538 0010 002D     		cmp	r5, #0
 2539 0012 00F09A80 		beq	.L283
 850:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("Can't split segment into length 0", 0);
 2540              		.loc 1 850 3 is_stmt 1 view .LVU902
 2541 0016 0C46     		mov	r4, r1
 850:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("Can't split segment into length 0", 0);
 2542              		.loc 1 850 6 is_stmt 0 view .LVU903
 2543 0018 0029     		cmp	r1, #0
 2544 001a 00F08780 		beq	.L285
 855:lwIP/src/core/tcp_out.c ****     return ERR_OK;
 2545              		.loc 1 855 3 is_stmt 1 view .LVU904
 855:lwIP/src/core/tcp_out.c ****     return ERR_OK;
 2546              		.loc 1 855 11 is_stmt 0 view .LVU905
 2547 001e B5F808A0 		ldrh	r10, [r5, #8]
 855:lwIP/src/core/tcp_out.c ****     return ERR_OK;
 2548              		.loc 1 855 6 view .LVU906
 2549 0022 8A45     		cmp	r10, r1
 2550 0024 7ED9     		bls	.L271
 859:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("useg->len > 0", useg->len > 0);
 2551              		.loc 1 859 3 is_stmt 1 view .LVU907
 859:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("useg->len > 0", useg->len > 0);
 2552              		.loc 1 859 3 view .LVU908
 2553 0026 438E     		ldrh	r3, [r0, #50]
 2554 0028 8B42     		cmp	r3, r1
 2555 002a C0F09180 		bcc	.L286
 859:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("useg->len > 0", useg->len > 0);
 2556              		.loc 1 859 3 discriminator 2 view .LVU909
 860:lwIP/src/core/tcp_out.c **** 
 2557              		.loc 1 860 3 discriminator 2 view .LVU910
 860:lwIP/src/core/tcp_out.c **** 
 2558              		.loc 1 860 3 discriminator 2 view .LVU911
 2559 002e BAF1000F 		cmp	r10, #0
 2560 0032 00F08380 		beq	.L287
 860:lwIP/src/core/tcp_out.c **** 
 2561              		.loc 1 860 3 discriminator 2 view .LVU912
 866:lwIP/src/core/tcp_out.c **** 
 2562              		.loc 1 866 104 discriminator 2 view .LVU913
 868:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 2563              		.loc 1 868 3 discriminator 2 view .LVU914
 868:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 2564              		.loc 1 868 12 is_stmt 0 discriminator 2 view .LVU915
 2565 0036 95F80A80 		ldrb	r8, [r5, #10]	@ zero_extendqisi2
 2566              	.LVL240:
 873:lwIP/src/core/tcp_out.c ****   remainder = useg->len - split;
 2567              		.loc 1 873 3 is_stmt 1 discriminator 2 view .LVU916
 874:lwIP/src/core/tcp_out.c **** 
 2568              		.loc 1 874 13 is_stmt 0 discriminator 2 view .LVU917
 2569 003a AAEB0107 		sub	r7, r10, r1
 877:lwIP/src/core/tcp_out.c ****   if (p == NULL) {
 2570              		.loc 1 877 7 discriminator 2 view .LVU918
 2571 003e 4FF42072 		mov	r2, #640
ARM GAS  /tmp/ccH0Y1hM.s 			page 113


 2572 0042 3620     		movs	r0, #54
 2573              	.LVL241:
 873:lwIP/src/core/tcp_out.c ****   remainder = useg->len - split;
 2574              		.loc 1 873 12 discriminator 2 view .LVU919
 2575 0044 4FEA880B 		lsl	fp, r8, #2
 874:lwIP/src/core/tcp_out.c **** 
 2576              		.loc 1 874 13 discriminator 2 view .LVU920
 2577 0048 BFB2     		uxth	r7, r7
 873:lwIP/src/core/tcp_out.c ****   remainder = useg->len - split;
 2578              		.loc 1 873 10 discriminator 2 view .LVU921
 2579 004a 0BF0040B 		and	fp, fp, #4
 2580              	.LVL242:
 874:lwIP/src/core/tcp_out.c **** 
 2581              		.loc 1 874 3 is_stmt 1 discriminator 2 view .LVU922
 877:lwIP/src/core/tcp_out.c ****   if (p == NULL) {
 2582              		.loc 1 877 3 discriminator 2 view .LVU923
 877:lwIP/src/core/tcp_out.c ****   if (p == NULL) {
 2583              		.loc 1 877 7 is_stmt 0 discriminator 2 view .LVU924
 2584 004e 07EB0B01 		add	r1, r7, fp
 2585              	.LVL243:
 877:lwIP/src/core/tcp_out.c ****   if (p == NULL) {
 2586              		.loc 1 877 7 discriminator 2 view .LVU925
 2587 0052 89B2     		uxth	r1, r1
 2588 0054 FFF7FEFF 		bl	pbuf_alloc
 2589              	.LVL244:
 878:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 2590              		.loc 1 878 3 is_stmt 1 discriminator 2 view .LVU926
 878:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 2591              		.loc 1 878 6 is_stmt 0 discriminator 2 view .LVU927
 2592 0058 8146     		mov	r9, r0
 2593 005a 0028     		cmp	r0, #0
 2594 005c 75D0     		beq	.L283
 885:lwIP/src/core/tcp_out.c ****   /* Copy remainder into new pbuf, headers and options will not be filled out */
 2595              		.loc 1 885 3 is_stmt 1 view .LVU928
 885:lwIP/src/core/tcp_out.c ****   /* Copy remainder into new pbuf, headers and options will not be filled out */
 2596              		.loc 1 885 16 is_stmt 0 view .LVU929
 2597 005e 6868     		ldr	r0, [r5, #4]
 2598              	.LVL245:
 887:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 2599              		.loc 1 887 3 is_stmt 1 view .LVU930
 887:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 2600              		.loc 1 887 7 is_stmt 0 view .LVU931
 2601 0060 3A46     		mov	r2, r7
 885:lwIP/src/core/tcp_out.c ****   /* Copy remainder into new pbuf, headers and options will not be filled out */
 2602              		.loc 1 885 29 view .LVU932
 2603 0062 2989     		ldrh	r1, [r5, #8]
 2604 0064 0389     		ldrh	r3, [r0, #8]
 2605 0066 5B1A     		subs	r3, r3, r1
 887:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 2606              		.loc 1 887 7 view .LVU933
 2607 0068 D9F80410 		ldr	r1, [r9, #4]
 885:lwIP/src/core/tcp_out.c ****   /* Copy remainder into new pbuf, headers and options will not be filled out */
 2608              		.loc 1 885 10 view .LVU934
 2609 006c 2344     		add	r3, r3, r4
 887:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 2610              		.loc 1 887 7 view .LVU935
 2611 006e 5944     		add	r1, r1, fp
ARM GAS  /tmp/ccH0Y1hM.s 			page 114


 2612 0070 9BB2     		uxth	r3, r3
 2613 0072 FFF7FEFF 		bl	pbuf_copy_partial
 2614              	.LVL246:
 887:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 2615              		.loc 1 887 6 view .LVU936
 2616 0076 B842     		cmp	r0, r7
 2617 0078 64D1     		bne	.L267
 901:lwIP/src/core/tcp_out.c ****   remainder_flags = 0; /* ACK added in tcp_output() */
 2618              		.loc 1 901 3 is_stmt 1 view .LVU937
 901:lwIP/src/core/tcp_out.c ****   remainder_flags = 0; /* ACK added in tcp_output() */
 2619              		.loc 1 901 17 is_stmt 0 view .LVU938
 2620 007a E968     		ldr	r1, [r5, #12]
 2621              	.LVL247:
 2622              	.LBB308:
 2623              	.LBI308:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 2624              		.loc 2 934 30 is_stmt 1 view .LVU939
 2625              	.LBB309:
 2626              		.loc 2 937 3 view .LVU940
 2627              		.loc 2 937 3 is_stmt 0 view .LVU941
 2628              	.LBE309:
 2629              	.LBE308:
 901:lwIP/src/core/tcp_out.c ****   remainder_flags = 0; /* ACK added in tcp_output() */
 2630              		.loc 1 901 17 view .LVU942
 2631 007c 8A89     		ldrh	r2, [r1, #12]	@ unaligned
 2632              	.LBB311:
 2633              	.LBB310:
 2634              		.loc 2 937 19 view .LVU943
 2635 007e 52BA     		rev16	r2, r2
 2636              	.LBE310:
 2637              	.LBE311:
 901:lwIP/src/core/tcp_out.c ****   remainder_flags = 0; /* ACK added in tcp_output() */
 2638              		.loc 1 901 17 view .LVU944
 2639 0080 D3B2     		uxtb	r3, r2
 2640              	.LVL248:
 902:lwIP/src/core/tcp_out.c **** 
 2641              		.loc 1 902 3 is_stmt 1 view .LVU945
 904:lwIP/src/core/tcp_out.c ****     split_flags &= ~TCP_PSH;
 2642              		.loc 1 904 3 view .LVU946
 904:lwIP/src/core/tcp_out.c ****     split_flags &= ~TCP_PSH;
 2643              		.loc 1 904 6 is_stmt 0 view .LVU947
 2644 0082 12F00802 		ands	r2, r2, #8
 2645 0086 67D1     		bne	.L268
 901:lwIP/src/core/tcp_out.c ****   remainder_flags = 0; /* ACK added in tcp_output() */
 2646              		.loc 1 901 15 view .LVU948
 2647 0088 03F03F07 		and	r7, r3, #63
 2648              	.LVL249:
 901:lwIP/src/core/tcp_out.c ****   remainder_flags = 0; /* ACK added in tcp_output() */
 2649              		.loc 1 901 15 view .LVU949
 2650 008c 0123     		movs	r3, #1
 2651              	.LVL250:
 2652              	.L269:
 908:lwIP/src/core/tcp_out.c ****     split_flags &= ~TCP_FIN;
 2653              		.loc 1 908 3 is_stmt 1 view .LVU950
 908:lwIP/src/core/tcp_out.c ****     split_flags &= ~TCP_FIN;
 2654              		.loc 1 908 6 is_stmt 0 view .LVU951
 2655 008e F807     		lsls	r0, r7, #31
ARM GAS  /tmp/ccH0Y1hM.s 			page 115


 2656 0090 02D5     		bpl	.L270
 909:lwIP/src/core/tcp_out.c ****     remainder_flags |= TCP_FIN;
 2657              		.loc 1 909 5 is_stmt 1 view .LVU952
 909:lwIP/src/core/tcp_out.c ****     remainder_flags |= TCP_FIN;
 2658              		.loc 1 909 17 is_stmt 0 view .LVU953
 2659 0092 07F0FE07 		and	r7, r7, #254
 2660              	.LVL251:
 910:lwIP/src/core/tcp_out.c ****   }
 2661              		.loc 1 910 5 is_stmt 1 view .LVU954
 910:lwIP/src/core/tcp_out.c ****   }
 2662              		.loc 1 910 21 is_stmt 0 view .LVU955
 2663 0096 1A46     		mov	r2, r3
 2664              	.LVL252:
 2665              	.L270:
 914:lwIP/src/core/tcp_out.c ****   if (seg == NULL) {
 2666              		.loc 1 914 3 is_stmt 1 view .LVU956
 2667              	.LBB312:
 2668              	.LBI312:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 2669              		.loc 2 900 31 view .LVU957
 2670              	.LBB313:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 2671              		.loc 2 903 3 view .LVU958
 2672              	.LBE313:
 2673              	.LBE312:
 914:lwIP/src/core/tcp_out.c ****   if (seg == NULL) {
 2674              		.loc 1 914 53 is_stmt 0 view .LVU959
 2675 0098 4B68     		ldr	r3, [r1, #4]	@ unaligned
 914:lwIP/src/core/tcp_out.c ****   if (seg == NULL) {
 2676              		.loc 1 914 9 view .LVU960
 2677 009a 3046     		mov	r0, r6
 2678 009c CDF80080 		str	r8, [sp]
 2679              	.LVL253:
 914:lwIP/src/core/tcp_out.c ****   if (seg == NULL) {
 2680              		.loc 1 914 9 view .LVU961
 2681 00a0 4946     		mov	r1, r9
 2682              	.LBB315:
 2683              	.LBB314:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 2684              		.loc 2 903 10 view .LVU962
 2685 00a2 1BBA     		rev	r3, r3
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 2686              		.loc 2 903 10 view .LVU963
 2687              	.LBE314:
 2688              	.LBE315:
 914:lwIP/src/core/tcp_out.c ****   if (seg == NULL) {
 2689              		.loc 1 914 9 view .LVU964
 2690 00a4 2344     		add	r3, r3, r4
 2691 00a6 FFF7FEFF 		bl	tcp_create_segment
 2692              	.LVL254:
 915:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 2693              		.loc 1 915 3 is_stmt 1 view .LVU965
 915:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 2694              		.loc 1 915 6 is_stmt 0 view .LVU966
 2695 00aa 8046     		mov	r8, r0
 2696              	.LVL255:
 915:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
ARM GAS  /tmp/ccH0Y1hM.s 			page 116


 2697              		.loc 1 915 6 view .LVU967
 2698 00ac 0028     		cmp	r0, #0
 2699 00ae 49D0     		beq	.L267
 928:lwIP/src/core/tcp_out.c **** 
 2700              		.loc 1 928 3 is_stmt 1 view .LVU968
 928:lwIP/src/core/tcp_out.c **** 
 2701              		.loc 1 928 24 is_stmt 0 view .LVU969
 2702 00b0 6868     		ldr	r0, [r5, #4]
 2703              	.LVL256:
 928:lwIP/src/core/tcp_out.c **** 
 2704              		.loc 1 928 24 view .LVU970
 2705 00b2 A4EB0A04 		sub	r4, r4, r10
 2706              	.LVL257:
 928:lwIP/src/core/tcp_out.c **** 
 2707              		.loc 1 928 24 view .LVU971
 2708 00b6 FFF7FEFF 		bl	pbuf_clen
 2709              	.LVL258:
 932:lwIP/src/core/tcp_out.c ****   useg->len -= remainder;
 2710              		.loc 1 932 3 view .LVU972
 2711 00ba D5F804C0 		ldr	ip, [r5, #4]
 928:lwIP/src/core/tcp_out.c **** 
 2712              		.loc 1 928 21 view .LVU973
 2713 00be B6F86610 		ldrh	r1, [r6, #102]
 2714 00c2 A4B2     		uxth	r4, r4
 932:lwIP/src/core/tcp_out.c ****   useg->len -= remainder;
 2715              		.loc 1 932 3 view .LVU974
 2716 00c4 BCF80830 		ldrh	r3, [ip, #8]
 928:lwIP/src/core/tcp_out.c **** 
 2717              		.loc 1 928 21 view .LVU975
 2718 00c8 0A1A     		subs	r2, r1, r0
 932:lwIP/src/core/tcp_out.c ****   useg->len -= remainder;
 2719              		.loc 1 932 3 view .LVU976
 2720 00ca 6046     		mov	r0, ip
 2721 00cc 2344     		add	r3, r3, r4
 928:lwIP/src/core/tcp_out.c **** 
 2722              		.loc 1 928 21 view .LVU977
 2723 00ce A6F86620 		strh	r2, [r6, #102]	@ movhi
 932:lwIP/src/core/tcp_out.c ****   useg->len -= remainder;
 2724              		.loc 1 932 3 is_stmt 1 view .LVU978
 2725 00d2 99B2     		uxth	r1, r3
 2726 00d4 FFF7FEFF 		bl	pbuf_realloc
 2727              	.LVL259:
 933:lwIP/src/core/tcp_out.c ****   TCPH_SET_FLAG(useg->tcphdr, split_flags);
 2728              		.loc 1 933 3 view .LVU979
 933:lwIP/src/core/tcp_out.c ****   TCPH_SET_FLAG(useg->tcphdr, split_flags);
 2729              		.loc 1 933 13 is_stmt 0 view .LVU980
 2730 00d8 2989     		ldrh	r1, [r5, #8]
 934:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 2731              		.loc 1 934 3 view .LVU981
 2732 00da EA68     		ldr	r2, [r5, #12]
 2733              	.LBB316:
 2734              	.LBB317:
 2735              		.loc 2 937 19 view .LVU982
 2736 00dc 7BBA     		rev16	r3, r7
 2737              	.LBE317:
 2738              	.LBE316:
 933:lwIP/src/core/tcp_out.c ****   TCPH_SET_FLAG(useg->tcphdr, split_flags);
ARM GAS  /tmp/ccH0Y1hM.s 			page 117


 2739              		.loc 1 933 13 view .LVU983
 2740 00de 0C44     		add	r4, r4, r1
 941:lwIP/src/core/tcp_out.c **** 
 2741              		.loc 1 941 24 view .LVU984
 2742 00e0 6868     		ldr	r0, [r5, #4]
 2743              	.LBB320:
 2744              	.LBB318:
 2745              		.loc 2 937 19 view .LVU985
 2746 00e2 9BB2     		uxth	r3, r3
 2747              	.LBE318:
 2748              	.LBE320:
 933:lwIP/src/core/tcp_out.c ****   TCPH_SET_FLAG(useg->tcphdr, split_flags);
 2749              		.loc 1 933 13 view .LVU986
 2750 00e4 2C81     		strh	r4, [r5, #8]	@ movhi
 934:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 2751              		.loc 1 934 3 is_stmt 1 view .LVU987
 2752              	.LVL260:
 2753              	.LBB321:
 2754              	.LBI316:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 2755              		.loc 2 934 30 view .LVU988
 2756              	.LBB319:
 2757              		.loc 2 937 3 view .LVU989
 2758              		.loc 2 937 3 is_stmt 0 view .LVU990
 2759              	.LBE319:
 2760              	.LBE321:
 934:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 2761              		.loc 1 934 3 view .LVU991
 2762 00e6 9189     		ldrh	r1, [r2, #12]	@ unaligned
 2763 00e8 0B43     		orrs	r3, r3, r1
 2764 00ea 9381     		strh	r3, [r2, #12]	@ unaligned
 941:lwIP/src/core/tcp_out.c **** 
 2765              		.loc 1 941 3 is_stmt 1 view .LVU992
 941:lwIP/src/core/tcp_out.c **** 
 2766              		.loc 1 941 24 is_stmt 0 view .LVU993
 2767 00ec FFF7FEFF 		bl	pbuf_clen
 2768              	.LVL261:
 941:lwIP/src/core/tcp_out.c **** 
 2769              		.loc 1 941 21 view .LVU994
 2770 00f0 B6F86620 		ldrh	r2, [r6, #102]
 941:lwIP/src/core/tcp_out.c **** 
 2771              		.loc 1 941 24 view .LVU995
 2772 00f4 0346     		mov	r3, r0
 966:lwIP/src/core/tcp_out.c **** 
 2773              		.loc 1 966 24 view .LVU996
 2774 00f6 D8F80400 		ldr	r0, [r8, #4]
 941:lwIP/src/core/tcp_out.c **** 
 2775              		.loc 1 941 21 view .LVU997
 2776 00fa 1344     		add	r3, r3, r2
 2777 00fc A6F86630 		strh	r3, [r6, #102]	@ movhi
 966:lwIP/src/core/tcp_out.c **** 
 2778              		.loc 1 966 3 is_stmt 1 view .LVU998
 966:lwIP/src/core/tcp_out.c **** 
 2779              		.loc 1 966 24 is_stmt 0 view .LVU999
 2780 0100 FFF7FEFF 		bl	pbuf_clen
 2781              	.LVL262:
 966:lwIP/src/core/tcp_out.c **** 
ARM GAS  /tmp/ccH0Y1hM.s 			page 118


 2782              		.loc 1 966 21 view .LVU1000
 2783 0104 B6F86620 		ldrh	r2, [r6, #102]
 969:lwIP/src/core/tcp_out.c ****   useg->next = seg;
 2784              		.loc 1 969 19 view .LVU1001
 2785 0108 2B68     		ldr	r3, [r5]
 966:lwIP/src/core/tcp_out.c **** 
 2786              		.loc 1 966 21 view .LVU1002
 2787 010a 1044     		add	r0, r0, r2
 2788 010c A6F86600 		strh	r0, [r6, #102]	@ movhi
 969:lwIP/src/core/tcp_out.c ****   useg->next = seg;
 2789              		.loc 1 969 3 is_stmt 1 view .LVU1003
 969:lwIP/src/core/tcp_out.c ****   useg->next = seg;
 2790              		.loc 1 969 13 is_stmt 0 view .LVU1004
 2791 0110 C8F80030 		str	r3, [r8]
 970:lwIP/src/core/tcp_out.c **** 
 2792              		.loc 1 970 3 is_stmt 1 view .LVU1005
 970:lwIP/src/core/tcp_out.c **** 
 2793              		.loc 1 970 14 is_stmt 0 view .LVU1006
 2794 0114 C5F80080 		str	r8, [r5]
 975:lwIP/src/core/tcp_out.c ****     pcb->unsent_oversize = 0;
 2795              		.loc 1 975 3 is_stmt 1 view .LVU1007
 975:lwIP/src/core/tcp_out.c ****     pcb->unsent_oversize = 0;
 2796              		.loc 1 975 6 is_stmt 0 view .LVU1008
 2797 0118 D8F80000 		ldr	r0, [r8]
 2798 011c 10B9     		cbnz	r0, .L271
 976:lwIP/src/core/tcp_out.c ****   }
 2799              		.loc 1 976 5 is_stmt 1 view .LVU1009
 976:lwIP/src/core/tcp_out.c ****   }
 2800              		.loc 1 976 26 is_stmt 0 view .LVU1010
 2801 011e A6F86800 		strh	r0, [r6, #104]	@ movhi
 2802 0122 00E0     		b	.L281
 2803              	.LVL263:
 2804              	.L271:
 856:lwIP/src/core/tcp_out.c ****   }
 2805              		.loc 1 856 12 view .LVU1011
 2806 0124 0020     		movs	r0, #0
 2807              	.L281:
 990:lwIP/src/core/tcp_out.c **** 
 2808              		.loc 1 990 1 view .LVU1012
 2809 0126 03B0     		add	sp, sp, #12
 2810              	.LCFI15:
 2811              		.cfi_remember_state
 2812              		.cfi_def_cfa_offset 36
 2813              		@ sp needed
 2814 0128 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2815              	.LVL264:
 2816              	.L285:
 2817              	.LCFI16:
 2818              		.cfi_restore_state
 851:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 2819              		.loc 1 851 5 is_stmt 1 discriminator 1 view .LVU1013
 851:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 2820              		.loc 1 851 5 discriminator 1 view .LVU1014
 851:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 2821              		.loc 1 851 5 discriminator 1 view .LVU1015
 2822 012c 0D48     		ldr	r0, .L288
 2823              	.LVL265:
ARM GAS  /tmp/ccH0Y1hM.s 			page 119


 851:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 2824              		.loc 1 851 5 is_stmt 0 discriminator 1 view .LVU1016
 2825 012e FFF7FEFF 		bl	printf
 2826              	.LVL266:
 2827              	.L260:
 851:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 2828              		.loc 1 851 5 is_stmt 1 discriminator 2 view .LVU1017
 851:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 2829              		.loc 1 851 5 discriminator 2 view .LVU1018
 851:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 2830              		.loc 1 851 5 discriminator 2 view .LVU1019
 851:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 2831              		.loc 1 851 5 discriminator 2 view .LVU1020
 851:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 2832              		.loc 1 851 5 discriminator 2 view .LVU1021
 851:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 2833              		.loc 1 851 5 discriminator 2 view .LVU1022
 2834 0132 FEE7     		b	.L260
 2835              	.LVL267:
 2836              	.L284:
 843:lwIP/src/core/tcp_out.c **** 
 2837              		.loc 1 843 3 discriminator 1 view .LVU1023
 2838 0134 0C48     		ldr	r0, .L288+4
 2839              	.LVL268:
 843:lwIP/src/core/tcp_out.c **** 
 2840              		.loc 1 843 3 is_stmt 0 discriminator 1 view .LVU1024
 2841 0136 FFF7FEFF 		bl	printf
 2842              	.LVL269:
 2843              	.L256:
 843:lwIP/src/core/tcp_out.c **** 
 2844              		.loc 1 843 3 is_stmt 1 discriminator 1 view .LVU1025
 843:lwIP/src/core/tcp_out.c **** 
 2845              		.loc 1 843 3 discriminator 1 view .LVU1026
 843:lwIP/src/core/tcp_out.c **** 
 2846              		.loc 1 843 3 discriminator 1 view .LVU1027
 843:lwIP/src/core/tcp_out.c **** 
 2847              		.loc 1 843 3 discriminator 1 view .LVU1028
 843:lwIP/src/core/tcp_out.c **** 
 2848              		.loc 1 843 3 discriminator 1 view .LVU1029
 843:lwIP/src/core/tcp_out.c **** 
 2849              		.loc 1 843 3 discriminator 1 view .LVU1030
 2850 013a FEE7     		b	.L256
 2851              	.LVL270:
 2852              	.L287:
 860:lwIP/src/core/tcp_out.c **** 
 2853              		.loc 1 860 3 discriminator 1 view .LVU1031
 2854 013c 0B48     		ldr	r0, .L288+8
 2855              	.LVL271:
 860:lwIP/src/core/tcp_out.c **** 
 2856              		.loc 1 860 3 is_stmt 0 discriminator 1 view .LVU1032
 2857 013e FFF7FEFF 		bl	printf
 2858              	.LVL272:
 2859              	.L265:
 860:lwIP/src/core/tcp_out.c **** 
 2860              		.loc 1 860 3 is_stmt 1 discriminator 4 view .LVU1033
 860:lwIP/src/core/tcp_out.c **** 
 2861              		.loc 1 860 3 discriminator 4 view .LVU1034
ARM GAS  /tmp/ccH0Y1hM.s 			page 120


 860:lwIP/src/core/tcp_out.c **** 
 2862              		.loc 1 860 3 discriminator 4 view .LVU1035
 860:lwIP/src/core/tcp_out.c **** 
 2863              		.loc 1 860 3 discriminator 4 view .LVU1036
 860:lwIP/src/core/tcp_out.c **** 
 2864              		.loc 1 860 3 discriminator 4 view .LVU1037
 860:lwIP/src/core/tcp_out.c **** 
 2865              		.loc 1 860 3 discriminator 4 view .LVU1038
 2866 0142 FEE7     		b	.L265
 2867              	.LVL273:
 2868              	.L267:
 984:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
 2869              		.loc 1 984 3 view .LVU1039
 985:lwIP/src/core/tcp_out.c ****     pbuf_free(p);
 2870              		.loc 1 985 3 view .LVU1040
 2871              	.LDL1:
 986:lwIP/src/core/tcp_out.c ****   }
 2872              		.loc 1 986 5 view .LVU1041
 2873 0144 4846     		mov	r0, r9
 2874 0146 FFF7FEFF 		bl	pbuf_free
 2875              	.LVL274:
 2876              	.L283:
 989:lwIP/src/core/tcp_out.c **** }
 2877              		.loc 1 989 10 is_stmt 0 view .LVU1042
 2878 014a 4FF0FF30 		mov	r0, #-1
 2879 014e EAE7     		b	.L281
 2880              	.LVL275:
 2881              	.L286:
 859:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("useg->len > 0", useg->len > 0);
 2882              		.loc 1 859 3 is_stmt 1 discriminator 1 view .LVU1043
 2883 0150 0748     		ldr	r0, .L288+12
 2884              	.LVL276:
 859:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("useg->len > 0", useg->len > 0);
 2885              		.loc 1 859 3 is_stmt 0 discriminator 1 view .LVU1044
 2886 0152 FFF7FEFF 		bl	printf
 2887              	.LVL277:
 2888              	.L263:
 859:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("useg->len > 0", useg->len > 0);
 2889              		.loc 1 859 3 is_stmt 1 discriminator 3 view .LVU1045
 859:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("useg->len > 0", useg->len > 0);
 2890              		.loc 1 859 3 discriminator 3 view .LVU1046
 859:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("useg->len > 0", useg->len > 0);
 2891              		.loc 1 859 3 discriminator 3 view .LVU1047
 859:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("useg->len > 0", useg->len > 0);
 2892              		.loc 1 859 3 discriminator 3 view .LVU1048
 859:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("useg->len > 0", useg->len > 0);
 2893              		.loc 1 859 3 discriminator 3 view .LVU1049
 859:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("useg->len > 0", useg->len > 0);
 2894              		.loc 1 859 3 discriminator 3 view .LVU1050
 2895 0156 FEE7     		b	.L263
 2896              	.LVL278:
 2897              	.L268:
 905:lwIP/src/core/tcp_out.c ****     remainder_flags |= TCP_PSH;
 2898              		.loc 1 905 5 view .LVU1051
 905:lwIP/src/core/tcp_out.c ****     remainder_flags |= TCP_PSH;
 2899              		.loc 1 905 17 is_stmt 0 view .LVU1052
 2900 0158 03F03707 		and	r7, r3, #55
ARM GAS  /tmp/ccH0Y1hM.s 			page 121


 2901              	.LVL279:
 906:lwIP/src/core/tcp_out.c ****   }
 2902              		.loc 1 906 5 is_stmt 1 view .LVU1053
 906:lwIP/src/core/tcp_out.c ****   }
 2903              		.loc 1 906 21 is_stmt 0 view .LVU1054
 2904 015c 0822     		movs	r2, #8
 905:lwIP/src/core/tcp_out.c ****     remainder_flags |= TCP_PSH;
 2905              		.loc 1 905 17 view .LVU1055
 2906 015e 0923     		movs	r3, #9
 2907 0160 95E7     		b	.L269
 2908              	.L289:
 2909 0162 00BF     		.align	2
 2910              	.L288:
 2911 0164 24000000 		.word	.LC22
 2912 0168 00000000 		.word	.LC21
 2913 016c 58000000 		.word	.LC24
 2914 0170 48000000 		.word	.LC23
 2915              		.cfi_endproc
 2916              	.LFE110:
 2918              		.section	.rodata.tcp_send_fin.str1.4,"aMS",%progbits,1
 2919              		.align	2
 2920              	.LC25:
 2921 0000 7463705F 		.ascii	"tcp_send_fin: invalid pcb\000"
 2921      73656E64 
 2921      5F66696E 
 2921      3A20696E 
 2921      76616C69 
 2922 001a 0000     		.align	2
 2923              	.LC26:
 2924 001c 7365672D 		.ascii	"seg->tcphdr not aligned\000"
 2924      3E746370 
 2924      68647220 
 2924      6E6F7420 
 2924      616C6967 
 2925              		.align	2
 2926              	.LC27:
 2927 0034 7463705F 		.ascii	"tcp_enqueue_flags: invalid segment length\000"
 2927      656E7175 
 2927      6575655F 
 2927      666C6167 
 2927      733A2069 
 2928 005e 0000     		.align	2
 2929              	.LC28:
 2930 0060 7463705F 		.ascii	"tcp_enqueue_flags: invalid queue length\000"
 2930      656E7175 
 2930      6575655F 
 2930      666C6167 
 2930      733A2069 
 2931              		.section	.text.tcp_send_fin,"ax",%progbits
 2932              		.align	1
 2933              		.p2align 2,,3
 2934              		.global	tcp_send_fin
 2935              		.syntax unified
 2936              		.thumb
 2937              		.thumb_func
 2938              		.fpu fpv4-sp-d16
 2940              	tcp_send_fin:
ARM GAS  /tmp/ccH0Y1hM.s 			page 122


 2941              	.LVL280:
 2942              	.LFB111:
1002:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_send_fin: invalid pcb", pcb != NULL);
 2943              		.loc 1 1002 1 is_stmt 1 view -0
 2944              		.cfi_startproc
 2945              		@ args = 0, pretend = 0, frame = 0
 2946              		@ frame_needed = 0, uses_anonymous_args = 0
1003:lwIP/src/core/tcp_out.c **** 
 2947              		.loc 1 1003 3 view .LVU1057
1003:lwIP/src/core/tcp_out.c **** 
 2948              		.loc 1 1003 3 view .LVU1058
1002:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_send_fin: invalid pcb", pcb != NULL);
 2949              		.loc 1 1002 1 is_stmt 0 view .LVU1059
 2950 0000 30B5     		push	{r4, r5, lr}
 2951              	.LCFI17:
 2952              		.cfi_def_cfa_offset 12
 2953              		.cfi_offset 4, -12
 2954              		.cfi_offset 5, -8
 2955              		.cfi_offset 14, -4
 2956 0002 83B0     		sub	sp, sp, #12
 2957              	.LCFI18:
 2958              		.cfi_def_cfa_offset 24
1003:lwIP/src/core/tcp_out.c **** 
 2959              		.loc 1 1003 3 view .LVU1060
 2960 0004 0028     		cmp	r0, #0
 2961 0006 33D0     		beq	.L316
1003:lwIP/src/core/tcp_out.c **** 
 2962              		.loc 1 1003 3 is_stmt 1 discriminator 2 view .LVU1061
1006:lwIP/src/core/tcp_out.c ****     struct tcp_seg *last_unsent;
 2963              		.loc 1 1006 3 discriminator 2 view .LVU1062
1006:lwIP/src/core/tcp_out.c ****     struct tcp_seg *last_unsent;
 2964              		.loc 1 1006 10 is_stmt 0 discriminator 2 view .LVU1063
 2965 0008 C36E     		ldr	r3, [r0, #108]
 2966 000a 0446     		mov	r4, r0
1006:lwIP/src/core/tcp_out.c ****     struct tcp_seg *last_unsent;
 2967              		.loc 1 1006 6 discriminator 2 view .LVU1064
 2968 000c 4BB1     		cbz	r3, .L293
 2969              	.L294:
 2970              	.LVL281:
 2971              	.LBB332:
1008:lwIP/src/core/tcp_out.c ****          last_unsent = last_unsent->next);
 2972              		.loc 1 1008 37 is_stmt 1 discriminator 1 view .LVU1065
 2973 000e 1A46     		mov	r2, r3
1008:lwIP/src/core/tcp_out.c ****          last_unsent = last_unsent->next);
 2974              		.loc 1 1008 48 is_stmt 0 discriminator 1 view .LVU1066
 2975 0010 1B68     		ldr	r3, [r3]
 2976              	.LVL282:
1008:lwIP/src/core/tcp_out.c ****          last_unsent = last_unsent->next);
 2977              		.loc 1 1008 5 discriminator 1 view .LVU1067
 2978 0012 002B     		cmp	r3, #0
 2979 0014 FBD1     		bne	.L294
1011:lwIP/src/core/tcp_out.c ****       /* no SYN/FIN/RST flag in the header, we can add the FIN flag */
 2980              		.loc 1 1011 5 is_stmt 1 view .LVU1068
1011:lwIP/src/core/tcp_out.c ****       /* no SYN/FIN/RST flag in the header, we can add the FIN flag */
 2981              		.loc 1 1011 10 is_stmt 0 view .LVU1069
 2982 0016 D068     		ldr	r0, [r2, #12]
 2983              	.LVL283:
ARM GAS  /tmp/ccH0Y1hM.s 			page 123


1011:lwIP/src/core/tcp_out.c ****       /* no SYN/FIN/RST flag in the header, we can add the FIN flag */
 2984              		.loc 1 1011 10 view .LVU1070
 2985 0018 8289     		ldrh	r2, [r0, #12]	@ unaligned
 2986              	.LVL284:
 2987              	.LBB333:
 2988              	.LBB334:
 2989              		.loc 2 937 19 view .LVU1071
 2990 001a 51BA     		rev16	r1, r2
 2991              	.LBE334:
 2992              	.LBE333:
1011:lwIP/src/core/tcp_out.c ****       /* no SYN/FIN/RST flag in the header, we can add the FIN flag */
 2993              		.loc 1 1011 10 view .LVU1072
 2994 001c 92B2     		uxth	r2, r2
 2995              	.LVL285:
 2996              	.LBB336:
 2997              	.LBI333:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 2998              		.loc 2 934 30 is_stmt 1 view .LVU1073
 2999              	.LBB335:
 3000              		.loc 2 937 3 view .LVU1074
 3001              		.loc 2 937 3 is_stmt 0 view .LVU1075
 3002              	.LBE335:
 3003              	.LBE336:
1011:lwIP/src/core/tcp_out.c ****       /* no SYN/FIN/RST flag in the header, we can add the FIN flag */
 3004              		.loc 1 1011 8 view .LVU1076
 3005 001e 4907     		lsls	r1, r1, #29
 3006 0020 1CD0     		beq	.L317
 3007              	.L293:
1011:lwIP/src/core/tcp_out.c ****       /* no SYN/FIN/RST flag in the header, we can add the FIN flag */
 3008              		.loc 1 1011 8 view .LVU1077
 3009              	.LBE332:
1019:lwIP/src/core/tcp_out.c **** }
 3010              		.loc 1 1019 3 is_stmt 1 view .LVU1078
 3011              	.LVL286:
 3012              	.LBB337:
 3013              	.LBI337:
1032:lwIP/src/core/tcp_out.c **** {
 3014              		.loc 1 1032 1 view .LVU1079
 3015              	.LBB338:
1034:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg;
 3016              		.loc 1 1034 3 view .LVU1080
1035:lwIP/src/core/tcp_out.c ****   u8_t optflags = 0;
 3017              		.loc 1 1035 3 view .LVU1081
1036:lwIP/src/core/tcp_out.c ****   u8_t optlen = 0;
 3018              		.loc 1 1036 3 view .LVU1082
1037:lwIP/src/core/tcp_out.c **** 
 3019              		.loc 1 1037 3 view .LVU1083
1039:lwIP/src/core/tcp_out.c **** 
 3020              		.loc 1 1039 101 view .LVU1084
1041:lwIP/src/core/tcp_out.c ****               (flags & (TCP_SYN | TCP_FIN)) != 0);
 3021              		.loc 1 1041 3 view .LVU1085
1041:lwIP/src/core/tcp_out.c ****               (flags & (TCP_SYN | TCP_FIN)) != 0);
 3022              		.loc 1 1041 3 view .LVU1086
1041:lwIP/src/core/tcp_out.c ****               (flags & (TCP_SYN | TCP_FIN)) != 0);
 3023              		.loc 1 1041 3 view .LVU1087
1043:lwIP/src/core/tcp_out.c **** 
 3024              		.loc 1 1043 3 view .LVU1088
ARM GAS  /tmp/ccH0Y1hM.s 			page 124


1043:lwIP/src/core/tcp_out.c **** 
 3025              		.loc 1 1043 3 view .LVU1089
 3026              	.LBB339:
 3027              	.LBI339:
1032:lwIP/src/core/tcp_out.c **** {
 3028              		.loc 1 1032 1 view .LVU1090
 3029              	.LBB340:
1043:lwIP/src/core/tcp_out.c **** 
 3030              		.loc 1 1043 3 view .LVU1091
1049:lwIP/src/core/tcp_out.c ****     optflags = TF_SEG_OPTS_MSS;
 3031              		.loc 1 1049 3 view .LVU1092
1073:lwIP/src/core/tcp_out.c **** 
 3032              		.loc 1 1073 3 view .LVU1093
1076:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 3033              		.loc 1 1076 3 view .LVU1094
1076:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 3034              		.loc 1 1076 12 is_stmt 0 view .LVU1095
 3035 0022 0021     		movs	r1, #0
 3036 0024 4FF42072 		mov	r2, #640
 3037 0028 3620     		movs	r0, #54
 3038 002a FFF7FEFF 		bl	pbuf_alloc
 3039              	.LVL287:
1076:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 3040              		.loc 1 1076 6 view .LVU1096
 3041 002e 0146     		mov	r1, r0
 3042 0030 30B3     		cbz	r0, .L315
1081:lwIP/src/core/tcp_out.c ****               (p->len >= optlen));
 3043              		.loc 1 1081 3 is_stmt 1 view .LVU1097
1081:lwIP/src/core/tcp_out.c ****               (p->len >= optlen));
 3044              		.loc 1 1081 3 view .LVU1098
1081:lwIP/src/core/tcp_out.c ****               (p->len >= optlen));
 3045              		.loc 1 1081 3 view .LVU1099
1085:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 3046              		.loc 1 1085 3 view .LVU1100
 3047              	.LVL288:
 3048              	.LBB341:
 3049              	.LBI341:
 158:lwIP/src/core/tcp_out.c **** {
 3050              		.loc 1 158 1 view .LVU1101
 3051              	.LBB342:
 160:lwIP/src/core/tcp_out.c ****   u8_t optlen;
 3052              		.loc 1 160 3 view .LVU1102
 161:lwIP/src/core/tcp_out.c **** 
 3053              		.loc 1 161 3 view .LVU1103
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 3054              		.loc 1 163 3 view .LVU1104
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 3055              		.loc 1 163 3 view .LVU1105
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 3056              		.loc 1 163 3 view .LVU1106
 164:lwIP/src/core/tcp_out.c **** 
 3057              		.loc 1 164 3 view .LVU1107
 164:lwIP/src/core/tcp_out.c **** 
 3058              		.loc 1 164 3 view .LVU1108
 3059 0032 0020     		movs	r0, #0
 3060              	.LVL289:
 164:lwIP/src/core/tcp_out.c **** 
ARM GAS  /tmp/ccH0Y1hM.s 			page 125


 3061              		.loc 1 164 3 is_stmt 0 view .LVU1109
 3062 0034 E36D     		ldr	r3, [r4, #92]
 3063 0036 0122     		movs	r2, #1
 3064 0038 0090     		str	r0, [sp]
 3065              	.LVL290:
 164:lwIP/src/core/tcp_out.c **** 
 3066              		.loc 1 164 3 view .LVU1110
 3067 003a 2046     		mov	r0, r4
 3068 003c FFF7FEFF 		bl	tcp_create_segment.part.0
 3069              	.LVL291:
 164:lwIP/src/core/tcp_out.c **** 
 3070              		.loc 1 164 3 view .LVU1111
 3071              	.LBE342:
 3072              	.LBE341:
1085:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 3073              		.loc 1 1085 6 view .LVU1112
 3074 0040 F0B1     		cbz	r0, .L315
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3075              		.loc 1 1090 3 is_stmt 1 view .LVU1113
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3076              		.loc 1 1090 3 view .LVU1114
 3077 0042 C368     		ldr	r3, [r0, #12]
 3078 0044 9B07     		lsls	r3, r3, #30
 3079 0046 22D1     		bne	.L318
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3080              		.loc 1 1090 3 view .LVU1115
1091:lwIP/src/core/tcp_out.c **** 
 3081              		.loc 1 1091 3 view .LVU1116
1091:lwIP/src/core/tcp_out.c **** 
 3082              		.loc 1 1091 3 view .LVU1117
 3083 0048 0389     		ldrh	r3, [r0, #8]
 3084 004a ABB9     		cbnz	r3, .L319
1091:lwIP/src/core/tcp_out.c **** 
 3085              		.loc 1 1091 3 view .LVU1118
1097:lwIP/src/core/tcp_out.c **** 
 3086              		.loc 1 1097 30 view .LVU1119
1100:lwIP/src/core/tcp_out.c ****     pcb->unsent = seg;
 3087              		.loc 1 1100 3 view .LVU1120
1100:lwIP/src/core/tcp_out.c ****     pcb->unsent = seg;
 3088              		.loc 1 1100 10 is_stmt 0 view .LVU1121
 3089 004c E36E     		ldr	r3, [r4, #108]
1100:lwIP/src/core/tcp_out.c ****     pcb->unsent = seg;
 3090              		.loc 1 1100 6 view .LVU1122
 3091 004e 13B3     		cbz	r3, .L320
 3092              	.L302:
 3093              	.LVL292:
 3094              	.LBB343:
1104:lwIP/src/core/tcp_out.c ****     useg->next = seg;
 3095              		.loc 1 1104 30 is_stmt 1 view .LVU1123
 3096 0050 1A46     		mov	r2, r3
1104:lwIP/src/core/tcp_out.c ****     useg->next = seg;
 3097              		.loc 1 1104 34 is_stmt 0 view .LVU1124
 3098 0052 1B68     		ldr	r3, [r3]
 3099              	.LVL293:
1104:lwIP/src/core/tcp_out.c ****     useg->next = seg;
 3100              		.loc 1 1104 5 view .LVU1125
 3101 0054 002B     		cmp	r3, #0
ARM GAS  /tmp/ccH0Y1hM.s 			page 126


 3102 0056 FBD1     		bne	.L302
1105:lwIP/src/core/tcp_out.c ****   }
 3103              		.loc 1 1105 5 is_stmt 1 view .LVU1126
1105:lwIP/src/core/tcp_out.c ****   }
 3104              		.loc 1 1105 16 is_stmt 0 view .LVU1127
 3105 0058 1060     		str	r0, [r2]
 3106 005a 1DE0     		b	.L303
 3107              	.LVL294:
 3108              	.L317:
1105:lwIP/src/core/tcp_out.c ****   }
 3109              		.loc 1 1105 16 view .LVU1128
 3110              	.LBE343:
 3111              	.LBE340:
 3112              	.LBE339:
 3113              	.LBE338:
 3114              	.LBE337:
 3115              	.LBB347:
1013:lwIP/src/core/tcp_out.c ****       tcp_set_flags(pcb, TF_FIN);
 3116              		.loc 1 1013 7 is_stmt 1 view .LVU1129
1013:lwIP/src/core/tcp_out.c ****       tcp_set_flags(pcb, TF_FIN);
 3117              		.loc 1 1013 7 is_stmt 0 view .LVU1130
 3118              	.LBE347:
 3119              		.loc 2 937 3 is_stmt 1 view .LVU1131
 3120              	.LBB348:
1014:lwIP/src/core/tcp_out.c ****       return ERR_OK;
 3121              		.loc 1 1014 7 is_stmt 0 view .LVU1132
 3122 005c 618B     		ldrh	r1, [r4, #26]
1013:lwIP/src/core/tcp_out.c ****       tcp_set_flags(pcb, TF_FIN);
 3123              		.loc 1 1013 7 view .LVU1133
 3124 005e 42F48072 		orr	r2, r2, #256
1014:lwIP/src/core/tcp_out.c ****       return ERR_OK;
 3125              		.loc 1 1014 7 view .LVU1134
 3126 0062 41F02001 		orr	r1, r1, #32
1013:lwIP/src/core/tcp_out.c ****       tcp_set_flags(pcb, TF_FIN);
 3127              		.loc 1 1013 7 view .LVU1135
 3128 0066 8281     		strh	r2, [r0, #12]	@ unaligned
1014:lwIP/src/core/tcp_out.c ****       return ERR_OK;
 3129              		.loc 1 1014 7 is_stmt 1 view .LVU1136
1014:lwIP/src/core/tcp_out.c ****       return ERR_OK;
 3130              		.loc 1 1014 7 view .LVU1137
 3131 0068 6183     		strh	r1, [r4, #26]	@ movhi
1014:lwIP/src/core/tcp_out.c ****       return ERR_OK;
 3132              		.loc 1 1014 7 view .LVU1138
1015:lwIP/src/core/tcp_out.c ****     }
 3133              		.loc 1 1015 7 view .LVU1139
 3134              	.L295:
1015:lwIP/src/core/tcp_out.c ****     }
 3135              		.loc 1 1015 7 is_stmt 0 view .LVU1140
 3136              	.LBE348:
1020:lwIP/src/core/tcp_out.c **** 
 3137              		.loc 1 1020 1 view .LVU1141
 3138 006a 1846     		mov	r0, r3
 3139 006c 03B0     		add	sp, sp, #12
 3140              	.LCFI19:
 3141              		.cfi_remember_state
 3142              		.cfi_def_cfa_offset 12
 3143              		@ sp needed
ARM GAS  /tmp/ccH0Y1hM.s 			page 127


 3144 006e 30BD     		pop	{r4, r5, pc}
 3145              	.LVL295:
 3146              	.L316:
 3147              	.LCFI20:
 3148              		.cfi_restore_state
1003:lwIP/src/core/tcp_out.c **** 
 3149              		.loc 1 1003 3 is_stmt 1 discriminator 1 view .LVU1142
 3150 0070 1948     		ldr	r0, .L322
 3151              	.LVL296:
1003:lwIP/src/core/tcp_out.c **** 
 3152              		.loc 1 1003 3 is_stmt 0 discriminator 1 view .LVU1143
 3153 0072 FFF7FEFF 		bl	printf
 3154              	.LVL297:
 3155              	.L292:
1003:lwIP/src/core/tcp_out.c **** 
 3156              		.loc 1 1003 3 is_stmt 1 discriminator 1 view .LVU1144
1003:lwIP/src/core/tcp_out.c **** 
 3157              		.loc 1 1003 3 discriminator 1 view .LVU1145
1003:lwIP/src/core/tcp_out.c **** 
 3158              		.loc 1 1003 3 discriminator 1 view .LVU1146
1003:lwIP/src/core/tcp_out.c **** 
 3159              		.loc 1 1003 3 discriminator 1 view .LVU1147
1003:lwIP/src/core/tcp_out.c **** 
 3160              		.loc 1 1003 3 discriminator 1 view .LVU1148
1003:lwIP/src/core/tcp_out.c **** 
 3161              		.loc 1 1003 3 discriminator 1 view .LVU1149
 3162 0076 FEE7     		b	.L292
 3163              	.LVL298:
 3164              	.L319:
 3165              	.LBB349:
 3166              	.LBB346:
 3167              	.LBB345:
 3168              	.LBB344:
1091:lwIP/src/core/tcp_out.c **** 
 3169              		.loc 1 1091 3 view .LVU1150
 3170 0078 1848     		ldr	r0, .L322+4
 3171              	.LVL299:
1091:lwIP/src/core/tcp_out.c **** 
 3172              		.loc 1 1091 3 is_stmt 0 view .LVU1151
 3173 007a FFF7FEFF 		bl	printf
 3174              	.LVL300:
 3175              	.L301:
1091:lwIP/src/core/tcp_out.c **** 
 3176              		.loc 1 1091 3 is_stmt 1 view .LVU1152
1091:lwIP/src/core/tcp_out.c **** 
 3177              		.loc 1 1091 3 view .LVU1153
1091:lwIP/src/core/tcp_out.c **** 
 3178              		.loc 1 1091 3 view .LVU1154
1091:lwIP/src/core/tcp_out.c **** 
 3179              		.loc 1 1091 3 view .LVU1155
1091:lwIP/src/core/tcp_out.c **** 
 3180              		.loc 1 1091 3 view .LVU1156
1091:lwIP/src/core/tcp_out.c **** 
 3181              		.loc 1 1091 3 view .LVU1157
 3182 007e FEE7     		b	.L301
 3183              	.L315:
1086:lwIP/src/core/tcp_out.c ****     TCP_STATS_INC(tcp.memerr);
ARM GAS  /tmp/ccH0Y1hM.s 			page 128


 3184              		.loc 1 1086 5 view .LVU1158
1086:lwIP/src/core/tcp_out.c ****     TCP_STATS_INC(tcp.memerr);
 3185              		.loc 1 1086 5 view .LVU1159
 3186 0080 628B     		ldrh	r2, [r4, #26]
1088:lwIP/src/core/tcp_out.c ****   }
 3187              		.loc 1 1088 12 is_stmt 0 view .LVU1160
 3188 0082 4FF0FF33 		mov	r3, #-1
1086:lwIP/src/core/tcp_out.c ****     TCP_STATS_INC(tcp.memerr);
 3189              		.loc 1 1086 5 view .LVU1161
 3190 0086 42F08002 		orr	r2, r2, #128
 3191 008a 6283     		strh	r2, [r4, #26]	@ movhi
1086:lwIP/src/core/tcp_out.c ****     TCP_STATS_INC(tcp.memerr);
 3192              		.loc 1 1086 5 is_stmt 1 view .LVU1162
1087:lwIP/src/core/tcp_out.c ****     return ERR_MEM;
 3193              		.loc 1 1087 30 view .LVU1163
1088:lwIP/src/core/tcp_out.c ****   }
 3194              		.loc 1 1088 5 view .LVU1164
1088:lwIP/src/core/tcp_out.c ****   }
 3195              		.loc 1 1088 12 is_stmt 0 view .LVU1165
 3196 008c EDE7     		b	.L295
 3197              	.LVL301:
 3198              	.L318:
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3199              		.loc 1 1090 3 is_stmt 1 view .LVU1166
 3200 008e 1448     		ldr	r0, .L322+8
 3201              	.LVL302:
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3202              		.loc 1 1090 3 is_stmt 0 view .LVU1167
 3203 0090 FFF7FEFF 		bl	printf
 3204              	.LVL303:
 3205              	.L299:
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3206              		.loc 1 1090 3 is_stmt 1 view .LVU1168
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3207              		.loc 1 1090 3 view .LVU1169
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3208              		.loc 1 1090 3 view .LVU1170
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3209              		.loc 1 1090 3 view .LVU1171
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3210              		.loc 1 1090 3 view .LVU1172
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3211              		.loc 1 1090 3 view .LVU1173
 3212 0094 FEE7     		b	.L299
 3213              	.LVL304:
 3214              	.L320:
1101:lwIP/src/core/tcp_out.c ****   } else {
 3215              		.loc 1 1101 5 view .LVU1174
1101:lwIP/src/core/tcp_out.c ****   } else {
 3216              		.loc 1 1101 17 is_stmt 0 view .LVU1175
 3217 0096 E066     		str	r0, [r4, #108]
 3218              	.L303:
1109:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 3219              		.loc 1 1109 3 is_stmt 1 view .LVU1176
1114:lwIP/src/core/tcp_out.c ****     /* optlen does not influence snd_buf */
 3220              		.loc 1 1114 17 is_stmt 0 view .LVU1177
 3221 0098 E26D     		ldr	r2, [r4, #92]
ARM GAS  /tmp/ccH0Y1hM.s 			page 129


1109:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 3222              		.loc 1 1109 24 view .LVU1178
 3223 009a 0025     		movs	r5, #0
1118:lwIP/src/core/tcp_out.c ****   }
 3224              		.loc 1 1118 5 view .LVU1179
 3225 009c 638B     		ldrh	r3, [r4, #26]
1114:lwIP/src/core/tcp_out.c ****     /* optlen does not influence snd_buf */
 3226              		.loc 1 1114 17 view .LVU1180
 3227 009e 0132     		adds	r2, r2, #1
1122:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_enqueue_flags: %"S16_F" (after enqueued)\n", pcb->snd_queuelen)
 3228              		.loc 1 1122 24 view .LVU1181
 3229 00a0 4068     		ldr	r0, [r0, #4]
 3230              	.LVL305:
1118:lwIP/src/core/tcp_out.c ****   }
 3231              		.loc 1 1118 5 view .LVU1182
 3232 00a2 43F02003 		orr	r3, r3, #32
1109:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 3233              		.loc 1 1109 24 view .LVU1183
 3234 00a6 A4F86850 		strh	r5, [r4, #104]	@ movhi
1113:lwIP/src/core/tcp_out.c ****     pcb->snd_lbb++;
 3235              		.loc 1 1113 3 is_stmt 1 view .LVU1184
1114:lwIP/src/core/tcp_out.c ****     /* optlen does not influence snd_buf */
 3236              		.loc 1 1114 5 view .LVU1185
1114:lwIP/src/core/tcp_out.c ****     /* optlen does not influence snd_buf */
 3237              		.loc 1 1114 17 is_stmt 0 view .LVU1186
 3238 00aa E265     		str	r2, [r4, #92]
1117:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_FIN);
 3239              		.loc 1 1117 3 is_stmt 1 view .LVU1187
1118:lwIP/src/core/tcp_out.c ****   }
 3240              		.loc 1 1118 5 view .LVU1188
1118:lwIP/src/core/tcp_out.c ****   }
 3241              		.loc 1 1118 5 view .LVU1189
 3242 00ac 6383     		strh	r3, [r4, #26]	@ movhi
1118:lwIP/src/core/tcp_out.c ****   }
 3243              		.loc 1 1118 5 view .LVU1190
1122:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_enqueue_flags: %"S16_F" (after enqueued)\n", pcb->snd_queuelen)
 3244              		.loc 1 1122 3 view .LVU1191
1122:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_enqueue_flags: %"S16_F" (after enqueued)\n", pcb->snd_queuelen)
 3245              		.loc 1 1122 24 is_stmt 0 view .LVU1192
 3246 00ae FFF7FEFF 		bl	pbuf_clen
 3247              	.LVL306:
1122:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_enqueue_flags: %"S16_F" (after enqueued)\n", pcb->snd_queuelen)
 3248              		.loc 1 1122 21 view .LVU1193
 3249 00b2 B4F86620 		ldrh	r2, [r4, #102]
 3250 00b6 8318     		adds	r3, r0, r2
 3251 00b8 9BB2     		uxth	r3, r3
 3252 00ba A4F86630 		strh	r3, [r4, #102]	@ movhi
1123:lwIP/src/core/tcp_out.c ****   if (pcb->snd_queuelen != 0) {
 3253              		.loc 1 1123 101 is_stmt 1 view .LVU1194
1124:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_enqueue_flags: invalid queue length",
 3254              		.loc 1 1124 3 view .LVU1195
1124:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_enqueue_flags: invalid queue length",
 3255              		.loc 1 1124 6 is_stmt 0 view .LVU1196
 3256 00be 002B     		cmp	r3, #0
 3257 00c0 D3D0     		beq	.L295
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3258              		.loc 1 1125 5 is_stmt 1 view .LVU1197
ARM GAS  /tmp/ccH0Y1hM.s 			page 130


1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3259              		.loc 1 1125 5 view .LVU1198
 3260 00c2 236F     		ldr	r3, [r4, #112]
 3261 00c4 0BB1     		cbz	r3, .L321
1129:lwIP/src/core/tcp_out.c **** }
 3262              		.loc 1 1129 10 is_stmt 0 view .LVU1199
 3263 00c6 2B46     		mov	r3, r5
 3264 00c8 CFE7     		b	.L295
 3265              	.L321:
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3266              		.loc 1 1125 5 view .LVU1200
 3267 00ca E26E     		ldr	r2, [r4, #108]
 3268 00cc 002A     		cmp	r2, #0
 3269 00ce CCD1     		bne	.L295
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3270              		.loc 1 1125 5 is_stmt 1 view .LVU1201
 3271 00d0 0448     		ldr	r0, .L322+12
 3272 00d2 FFF7FEFF 		bl	printf
 3273              	.LVL307:
 3274              	.L304:
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3275              		.loc 1 1125 5 view .LVU1202
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3276              		.loc 1 1125 5 view .LVU1203
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3277              		.loc 1 1125 5 view .LVU1204
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3278              		.loc 1 1125 5 view .LVU1205
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3279              		.loc 1 1125 5 view .LVU1206
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3280              		.loc 1 1125 5 view .LVU1207
 3281 00d6 FEE7     		b	.L304
 3282              	.L323:
 3283              		.align	2
 3284              	.L322:
 3285 00d8 00000000 		.word	.LC25
 3286 00dc 34000000 		.word	.LC27
 3287 00e0 1C000000 		.word	.LC26
 3288 00e4 60000000 		.word	.LC28
 3289              	.LBE344:
 3290              	.LBE345:
 3291              	.LBE346:
 3292              	.LBE349:
 3293              		.cfi_endproc
 3294              	.LFE111:
 3296              		.section	.rodata.tcp_enqueue_flags.str1.4,"aMS",%progbits,1
 3297              		.align	2
 3298              	.LC29:
 3299 0000 7463705F 		.ascii	"tcp_enqueue_flags: need either TCP_SYN or TCP_FIN i"
 3299      656E7175 
 3299      6575655F 
 3299      666C6167 
 3299      733A206E 
 3300 0033 6E20666C 		.ascii	"n flags (programmer violates API)\000"
 3300      61677320 
 3300      2870726F 
ARM GAS  /tmp/ccH0Y1hM.s 			page 131


 3300      6772616D 
 3300      6D657220 
 3301 0055 000000   		.align	2
 3302              	.LC30:
 3303 0058 7463705F 		.ascii	"tcp_enqueue_flags: invalid pcb\000"
 3303      656E7175 
 3303      6575655F 
 3303      666C6167 
 3303      733A2069 
 3304 0077 00       		.align	2
 3305              	.LC31:
 3306 0078 7463705F 		.ascii	"tcp_enqueue_flags: check that first pbuf can hold o"
 3306      656E7175 
 3306      6575655F 
 3306      666C6167 
 3306      733A2063 
 3307 00ab 70746C65 		.ascii	"ptlen\000"
 3307      6E00
 3308              		.section	.text.tcp_enqueue_flags,"ax",%progbits
 3309              		.align	1
 3310              		.p2align 2,,3
 3311              		.global	tcp_enqueue_flags
 3312              		.syntax unified
 3313              		.thumb
 3314              		.thumb_func
 3315              		.fpu fpv4-sp-d16
 3317              	tcp_enqueue_flags:
 3318              	.LVL308:
 3319              	.LFB112:
1033:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
 3320              		.loc 1 1033 1 view -0
 3321              		.cfi_startproc
 3322              		@ args = 0, pretend = 0, frame = 0
 3323              		@ frame_needed = 0, uses_anonymous_args = 0
1034:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg;
 3324              		.loc 1 1034 3 view .LVU1209
1035:lwIP/src/core/tcp_out.c ****   u8_t optflags = 0;
 3325              		.loc 1 1035 3 view .LVU1210
1036:lwIP/src/core/tcp_out.c ****   u8_t optlen = 0;
 3326              		.loc 1 1036 3 view .LVU1211
1037:lwIP/src/core/tcp_out.c **** 
 3327              		.loc 1 1037 3 view .LVU1212
1039:lwIP/src/core/tcp_out.c **** 
 3328              		.loc 1 1039 101 view .LVU1213
1041:lwIP/src/core/tcp_out.c ****               (flags & (TCP_SYN | TCP_FIN)) != 0);
 3329              		.loc 1 1041 3 view .LVU1214
1041:lwIP/src/core/tcp_out.c ****               (flags & (TCP_SYN | TCP_FIN)) != 0);
 3330              		.loc 1 1041 3 view .LVU1215
1033:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
 3331              		.loc 1 1033 1 is_stmt 0 view .LVU1216
 3332 0000 70B5     		push	{r4, r5, r6, lr}
 3333              	.LCFI21:
 3334              		.cfi_def_cfa_offset 16
 3335              		.cfi_offset 4, -16
 3336              		.cfi_offset 5, -12
 3337              		.cfi_offset 6, -8
 3338              		.cfi_offset 14, -4
ARM GAS  /tmp/ccH0Y1hM.s 			page 132


1041:lwIP/src/core/tcp_out.c ****               (flags & (TCP_SYN | TCP_FIN)) != 0);
 3339              		.loc 1 1041 3 view .LVU1217
 3340 0002 8C07     		lsls	r4, r1, #30
1033:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
 3341              		.loc 1 1033 1 view .LVU1218
 3342 0004 82B0     		sub	sp, sp, #8
 3343              	.LCFI22:
 3344              		.cfi_def_cfa_offset 24
1041:lwIP/src/core/tcp_out.c ****               (flags & (TCP_SYN | TCP_FIN)) != 0);
 3345              		.loc 1 1041 3 view .LVU1219
 3346 0006 4CD0     		beq	.L359
1041:lwIP/src/core/tcp_out.c ****               (flags & (TCP_SYN | TCP_FIN)) != 0);
 3347              		.loc 1 1041 3 is_stmt 1 discriminator 2 view .LVU1220
1043:lwIP/src/core/tcp_out.c **** 
 3348              		.loc 1 1043 3 discriminator 2 view .LVU1221
1043:lwIP/src/core/tcp_out.c **** 
 3349              		.loc 1 1043 3 discriminator 2 view .LVU1222
 3350 0008 0446     		mov	r4, r0
 3351 000a 0028     		cmp	r0, #0
 3352 000c 4DD0     		beq	.L360
 3353              	.LVL309:
 3354              	.LBB355:
 3355              	.LBI355:
1032:lwIP/src/core/tcp_out.c **** {
 3356              		.loc 1 1032 1 view .LVU1223
 3357              	.LBB356:
1043:lwIP/src/core/tcp_out.c **** 
 3358              		.loc 1 1043 3 view .LVU1224
1049:lwIP/src/core/tcp_out.c ****     optflags = TF_SEG_OPTS_MSS;
 3359              		.loc 1 1049 3 view .LVU1225
1049:lwIP/src/core/tcp_out.c ****     optflags = TF_SEG_OPTS_MSS;
 3360              		.loc 1 1049 6 is_stmt 0 view .LVU1226
 3361 000e 11F00206 		ands	r6, r1, #2
 3362 0012 0D46     		mov	r5, r1
1076:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 3363              		.loc 1 1076 12 view .LVU1227
 3364 0014 4FF42072 		mov	r2, #640
1049:lwIP/src/core/tcp_out.c ****     optflags = TF_SEG_OPTS_MSS;
 3365              		.loc 1 1049 6 view .LVU1228
 3366 0018 0CD0     		beq	.L329
1050:lwIP/src/core/tcp_out.c **** #if LWIP_WND_SCALE
 3367              		.loc 1 1050 5 is_stmt 1 view .LVU1229
 3368              	.LVL310:
1073:lwIP/src/core/tcp_out.c **** 
 3369              		.loc 1 1073 3 view .LVU1230
1076:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 3370              		.loc 1 1076 3 view .LVU1231
1076:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 3371              		.loc 1 1076 12 is_stmt 0 view .LVU1232
 3372 001a 0421     		movs	r1, #4
 3373              	.LVL311:
1076:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 3374              		.loc 1 1076 12 view .LVU1233
 3375 001c 3620     		movs	r0, #54
 3376              	.LVL312:
1076:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 3377              		.loc 1 1076 12 view .LVU1234
ARM GAS  /tmp/ccH0Y1hM.s 			page 133


 3378 001e FFF7FEFF 		bl	pbuf_alloc
 3379              	.LVL313:
1076:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 3380              		.loc 1 1076 6 view .LVU1235
 3381 0022 0028     		cmp	r0, #0
 3382 0024 49D0     		beq	.L358
1081:lwIP/src/core/tcp_out.c ****               (p->len >= optlen));
 3383              		.loc 1 1081 3 is_stmt 1 view .LVU1236
1081:lwIP/src/core/tcp_out.c ****               (p->len >= optlen));
 3384              		.loc 1 1081 3 view .LVU1237
 3385 0026 4389     		ldrh	r3, [r0, #10]
 3386 0028 032B     		cmp	r3, #3
 3387 002a 5BD8     		bhi	.L344
1081:lwIP/src/core/tcp_out.c ****               (p->len >= optlen));
 3388              		.loc 1 1081 3 view .LVU1238
 3389 002c 2E48     		ldr	r0, .L365
 3390              	.LVL314:
1081:lwIP/src/core/tcp_out.c ****               (p->len >= optlen));
 3391              		.loc 1 1081 3 is_stmt 0 view .LVU1239
 3392 002e FFF7FEFF 		bl	printf
 3393              	.LVL315:
 3394              	.L333:
1081:lwIP/src/core/tcp_out.c ****               (p->len >= optlen));
 3395              		.loc 1 1081 3 is_stmt 1 view .LVU1240
1081:lwIP/src/core/tcp_out.c ****               (p->len >= optlen));
 3396              		.loc 1 1081 3 view .LVU1241
1081:lwIP/src/core/tcp_out.c ****               (p->len >= optlen));
 3397              		.loc 1 1081 3 view .LVU1242
1081:lwIP/src/core/tcp_out.c ****               (p->len >= optlen));
 3398              		.loc 1 1081 3 view .LVU1243
1081:lwIP/src/core/tcp_out.c ****               (p->len >= optlen));
 3399              		.loc 1 1081 3 view .LVU1244
1081:lwIP/src/core/tcp_out.c ****               (p->len >= optlen));
 3400              		.loc 1 1081 3 view .LVU1245
 3401 0032 FEE7     		b	.L333
 3402              	.LVL316:
 3403              	.L329:
1073:lwIP/src/core/tcp_out.c **** 
 3404              		.loc 1 1073 3 view .LVU1246
1076:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 3405              		.loc 1 1076 3 view .LVU1247
1076:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 3406              		.loc 1 1076 12 is_stmt 0 view .LVU1248
 3407 0034 3146     		mov	r1, r6
 3408              	.LVL317:
1076:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 3409              		.loc 1 1076 12 view .LVU1249
 3410 0036 3620     		movs	r0, #54
 3411              	.LVL318:
1076:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 3412              		.loc 1 1076 12 view .LVU1250
 3413 0038 FFF7FEFF 		bl	pbuf_alloc
 3414              	.LVL319:
1076:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 3415              		.loc 1 1076 6 view .LVU1251
 3416 003c 0028     		cmp	r0, #0
 3417 003e 3CD0     		beq	.L358
ARM GAS  /tmp/ccH0Y1hM.s 			page 134


 3418              	.LVL320:
 3419              	.L332:
1081:lwIP/src/core/tcp_out.c ****               (p->len >= optlen));
 3420              		.loc 1 1081 3 is_stmt 1 view .LVU1252
1085:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 3421              		.loc 1 1085 3 view .LVU1253
 3422              	.LBB357:
 3423              	.LBI357:
 158:lwIP/src/core/tcp_out.c **** {
 3424              		.loc 1 158 1 view .LVU1254
 3425              	.LBB358:
 160:lwIP/src/core/tcp_out.c ****   u8_t optlen;
 3426              		.loc 1 160 3 view .LVU1255
 161:lwIP/src/core/tcp_out.c **** 
 3427              		.loc 1 161 3 view .LVU1256
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 3428              		.loc 1 163 3 view .LVU1257
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 3429              		.loc 1 163 3 view .LVU1258
 163:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_create_segment: invalid pbuf", p != NULL);
 3430              		.loc 1 163 3 view .LVU1259
 164:lwIP/src/core/tcp_out.c **** 
 3431              		.loc 1 164 3 view .LVU1260
 164:lwIP/src/core/tcp_out.c **** 
 3432              		.loc 1 164 3 view .LVU1261
 3433 0040 0146     		mov	r1, r0
 3434 0042 0096     		str	r6, [sp]
 3435              	.LVL321:
 164:lwIP/src/core/tcp_out.c **** 
 3436              		.loc 1 164 3 is_stmt 0 view .LVU1262
 3437 0044 2A46     		mov	r2, r5
 3438 0046 E36D     		ldr	r3, [r4, #92]
 3439 0048 2046     		mov	r0, r4
 3440              	.LVL322:
 164:lwIP/src/core/tcp_out.c **** 
 3441              		.loc 1 164 3 view .LVU1263
 3442 004a FFF7FEFF 		bl	tcp_create_segment.part.0
 3443              	.LVL323:
 164:lwIP/src/core/tcp_out.c **** 
 3444              		.loc 1 164 3 view .LVU1264
 3445              	.LBE358:
 3446              	.LBE357:
1085:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_NAGLEMEMERR);
 3447              		.loc 1 1085 6 view .LVU1265
 3448 004e 0028     		cmp	r0, #0
 3449 0050 33D0     		beq	.L358
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3450              		.loc 1 1090 3 is_stmt 1 view .LVU1266
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3451              		.loc 1 1090 3 view .LVU1267
 3452 0052 C368     		ldr	r3, [r0, #12]
 3453 0054 9A07     		lsls	r2, r3, #30
 3454 0056 2CD1     		bne	.L361
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3455              		.loc 1 1090 3 view .LVU1268
1091:lwIP/src/core/tcp_out.c **** 
 3456              		.loc 1 1091 3 view .LVU1269
ARM GAS  /tmp/ccH0Y1hM.s 			page 135


1091:lwIP/src/core/tcp_out.c **** 
 3457              		.loc 1 1091 3 view .LVU1270
 3458 0058 0389     		ldrh	r3, [r0, #8]
 3459 005a 002B     		cmp	r3, #0
 3460 005c 3ED1     		bne	.L362
1091:lwIP/src/core/tcp_out.c **** 
 3461              		.loc 1 1091 3 view .LVU1271
1097:lwIP/src/core/tcp_out.c **** 
 3462              		.loc 1 1097 30 view .LVU1272
1100:lwIP/src/core/tcp_out.c ****     pcb->unsent = seg;
 3463              		.loc 1 1100 3 view .LVU1273
1100:lwIP/src/core/tcp_out.c ****     pcb->unsent = seg;
 3464              		.loc 1 1100 10 is_stmt 0 view .LVU1274
 3465 005e E36E     		ldr	r3, [r4, #108]
1100:lwIP/src/core/tcp_out.c ****     pcb->unsent = seg;
 3466              		.loc 1 1100 6 view .LVU1275
 3467 0060 002B     		cmp	r3, #0
 3468 0062 32D0     		beq	.L363
 3469              	.L339:
 3470              	.LVL324:
 3471              	.LBB359:
1104:lwIP/src/core/tcp_out.c ****     useg->next = seg;
 3472              		.loc 1 1104 30 is_stmt 1 view .LVU1276
 3473 0064 1A46     		mov	r2, r3
1104:lwIP/src/core/tcp_out.c ****     useg->next = seg;
 3474              		.loc 1 1104 34 is_stmt 0 view .LVU1277
 3475 0066 1B68     		ldr	r3, [r3]
 3476              	.LVL325:
1104:lwIP/src/core/tcp_out.c ****     useg->next = seg;
 3477              		.loc 1 1104 5 view .LVU1278
 3478 0068 002B     		cmp	r3, #0
 3479 006a FBD1     		bne	.L339
1105:lwIP/src/core/tcp_out.c ****   }
 3480              		.loc 1 1105 5 is_stmt 1 view .LVU1279
1105:lwIP/src/core/tcp_out.c ****   }
 3481              		.loc 1 1105 16 is_stmt 0 view .LVU1280
 3482 006c 1060     		str	r0, [r2]
 3483              	.LVL326:
 3484              	.L340:
1105:lwIP/src/core/tcp_out.c ****   }
 3485              		.loc 1 1105 16 view .LVU1281
 3486              	.LBE359:
1109:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 3487              		.loc 1 1109 3 is_stmt 1 view .LVU1282
1114:lwIP/src/core/tcp_out.c ****     /* optlen does not influence snd_buf */
 3488              		.loc 1 1114 17 is_stmt 0 view .LVU1283
 3489 006e E36D     		ldr	r3, [r4, #92]
1109:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 3490              		.loc 1 1109 24 view .LVU1284
 3491 0070 0022     		movs	r2, #0
1114:lwIP/src/core/tcp_out.c ****     /* optlen does not influence snd_buf */
 3492              		.loc 1 1114 17 view .LVU1285
 3493 0072 0133     		adds	r3, r3, #1
1109:lwIP/src/core/tcp_out.c **** #endif /* TCP_OVERSIZE */
 3494              		.loc 1 1109 24 view .LVU1286
 3495 0074 A4F86820 		strh	r2, [r4, #104]	@ movhi
1113:lwIP/src/core/tcp_out.c ****     pcb->snd_lbb++;
ARM GAS  /tmp/ccH0Y1hM.s 			page 136


 3496              		.loc 1 1113 3 is_stmt 1 view .LVU1287
1114:lwIP/src/core/tcp_out.c ****     /* optlen does not influence snd_buf */
 3497              		.loc 1 1114 5 view .LVU1288
1114:lwIP/src/core/tcp_out.c ****     /* optlen does not influence snd_buf */
 3498              		.loc 1 1114 17 is_stmt 0 view .LVU1289
 3499 0078 E365     		str	r3, [r4, #92]
1117:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_FIN);
 3500              		.loc 1 1117 3 is_stmt 1 view .LVU1290
1117:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_FIN);
 3501              		.loc 1 1117 6 is_stmt 0 view .LVU1291
 3502 007a EB07     		lsls	r3, r5, #31
 3503 007c 03D5     		bpl	.L341
1118:lwIP/src/core/tcp_out.c ****   }
 3504              		.loc 1 1118 5 is_stmt 1 view .LVU1292
1118:lwIP/src/core/tcp_out.c ****   }
 3505              		.loc 1 1118 5 view .LVU1293
 3506 007e 638B     		ldrh	r3, [r4, #26]
 3507 0080 43F02003 		orr	r3, r3, #32
 3508 0084 6383     		strh	r3, [r4, #26]	@ movhi
 3509              	.L341:
1118:lwIP/src/core/tcp_out.c ****   }
 3510              		.loc 1 1118 5 view .LVU1294
1122:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_enqueue_flags: %"S16_F" (after enqueued)\n", pcb->snd_queuelen)
 3511              		.loc 1 1122 3 view .LVU1295
1122:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_enqueue_flags: %"S16_F" (after enqueued)\n", pcb->snd_queuelen)
 3512              		.loc 1 1122 24 is_stmt 0 view .LVU1296
 3513 0086 4068     		ldr	r0, [r0, #4]
 3514              	.LVL327:
1122:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_enqueue_flags: %"S16_F" (after enqueued)\n", pcb->snd_queuelen)
 3515              		.loc 1 1122 24 view .LVU1297
 3516 0088 FFF7FEFF 		bl	pbuf_clen
 3517              	.LVL328:
1122:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_enqueue_flags: %"S16_F" (after enqueued)\n", pcb->snd_queuelen)
 3518              		.loc 1 1122 21 view .LVU1298
 3519 008c B4F86630 		ldrh	r3, [r4, #102]
 3520 0090 1844     		add	r0, r0, r3
 3521 0092 80B2     		uxth	r0, r0
 3522 0094 A4F86600 		strh	r0, [r4, #102]	@ movhi
1123:lwIP/src/core/tcp_out.c ****   if (pcb->snd_queuelen != 0) {
 3523              		.loc 1 1123 101 is_stmt 1 view .LVU1299
1124:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_enqueue_flags: invalid queue length",
 3524              		.loc 1 1124 3 view .LVU1300
1124:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_enqueue_flags: invalid queue length",
 3525              		.loc 1 1124 6 is_stmt 0 view .LVU1301
 3526 0098 A8B1     		cbz	r0, .L356
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3527              		.loc 1 1125 5 is_stmt 1 view .LVU1302
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3528              		.loc 1 1125 5 view .LVU1303
 3529 009a 206F     		ldr	r0, [r4, #112]
 3530 009c B8B1     		cbz	r0, .L364
1129:lwIP/src/core/tcp_out.c **** }
 3531              		.loc 1 1129 10 is_stmt 0 view .LVU1304
 3532 009e 0020     		movs	r0, #0
 3533 00a0 11E0     		b	.L356
 3534              	.LVL329:
 3535              	.L359:
ARM GAS  /tmp/ccH0Y1hM.s 			page 137


1129:lwIP/src/core/tcp_out.c **** }
 3536              		.loc 1 1129 10 view .LVU1305
 3537              	.LBE356:
 3538              	.LBE355:
1041:lwIP/src/core/tcp_out.c ****               (flags & (TCP_SYN | TCP_FIN)) != 0);
 3539              		.loc 1 1041 3 is_stmt 1 discriminator 1 view .LVU1306
 3540 00a2 1248     		ldr	r0, .L365+4
 3541              	.LVL330:
1041:lwIP/src/core/tcp_out.c ****               (flags & (TCP_SYN | TCP_FIN)) != 0);
 3542              		.loc 1 1041 3 is_stmt 0 discriminator 1 view .LVU1307
 3543 00a4 FFF7FEFF 		bl	printf
 3544              	.LVL331:
 3545              	.L326:
1041:lwIP/src/core/tcp_out.c ****               (flags & (TCP_SYN | TCP_FIN)) != 0);
 3546              		.loc 1 1041 3 is_stmt 1 discriminator 1 view .LVU1308
1041:lwIP/src/core/tcp_out.c ****               (flags & (TCP_SYN | TCP_FIN)) != 0);
 3547              		.loc 1 1041 3 discriminator 1 view .LVU1309
1041:lwIP/src/core/tcp_out.c ****               (flags & (TCP_SYN | TCP_FIN)) != 0);
 3548              		.loc 1 1041 3 discriminator 1 view .LVU1310
1041:lwIP/src/core/tcp_out.c ****               (flags & (TCP_SYN | TCP_FIN)) != 0);
 3549              		.loc 1 1041 3 discriminator 1 view .LVU1311
1041:lwIP/src/core/tcp_out.c ****               (flags & (TCP_SYN | TCP_FIN)) != 0);
 3550              		.loc 1 1041 3 discriminator 1 view .LVU1312
1041:lwIP/src/core/tcp_out.c ****               (flags & (TCP_SYN | TCP_FIN)) != 0);
 3551              		.loc 1 1041 3 discriminator 1 view .LVU1313
 3552 00a8 FEE7     		b	.L326
 3553              	.LVL332:
 3554              	.L360:
1043:lwIP/src/core/tcp_out.c **** 
 3555              		.loc 1 1043 3 discriminator 1 view .LVU1314
 3556 00aa 1148     		ldr	r0, .L365+8
 3557              	.LVL333:
1043:lwIP/src/core/tcp_out.c **** 
 3558              		.loc 1 1043 3 is_stmt 0 discriminator 1 view .LVU1315
 3559 00ac FFF7FEFF 		bl	printf
 3560              	.LVL334:
 3561              	.L328:
1043:lwIP/src/core/tcp_out.c **** 
 3562              		.loc 1 1043 3 is_stmt 1 discriminator 2 view .LVU1316
1043:lwIP/src/core/tcp_out.c **** 
 3563              		.loc 1 1043 3 discriminator 2 view .LVU1317
1043:lwIP/src/core/tcp_out.c **** 
 3564              		.loc 1 1043 3 discriminator 2 view .LVU1318
1043:lwIP/src/core/tcp_out.c **** 
 3565              		.loc 1 1043 3 discriminator 2 view .LVU1319
1043:lwIP/src/core/tcp_out.c **** 
 3566              		.loc 1 1043 3 discriminator 2 view .LVU1320
1043:lwIP/src/core/tcp_out.c **** 
 3567              		.loc 1 1043 3 discriminator 2 view .LVU1321
 3568 00b0 FEE7     		b	.L328
 3569              	.LVL335:
 3570              	.L361:
 3571              	.LBB362:
 3572              	.LBB360:
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3573              		.loc 1 1090 3 view .LVU1322
 3574 00b2 1048     		ldr	r0, .L365+12
ARM GAS  /tmp/ccH0Y1hM.s 			page 138


 3575              	.LVL336:
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3576              		.loc 1 1090 3 is_stmt 0 view .LVU1323
 3577 00b4 FFF7FEFF 		bl	printf
 3578              	.LVL337:
 3579              	.L336:
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3580              		.loc 1 1090 3 is_stmt 1 view .LVU1324
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3581              		.loc 1 1090 3 view .LVU1325
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3582              		.loc 1 1090 3 view .LVU1326
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3583              		.loc 1 1090 3 view .LVU1327
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3584              		.loc 1 1090 3 view .LVU1328
1090:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_enqueue_flags: invalid segment length", seg->len == 0);
 3585              		.loc 1 1090 3 view .LVU1329
 3586 00b8 FEE7     		b	.L336
 3587              	.L358:
1086:lwIP/src/core/tcp_out.c ****     TCP_STATS_INC(tcp.memerr);
 3588              		.loc 1 1086 5 view .LVU1330
1086:lwIP/src/core/tcp_out.c ****     TCP_STATS_INC(tcp.memerr);
 3589              		.loc 1 1086 5 view .LVU1331
 3590 00ba 638B     		ldrh	r3, [r4, #26]
1088:lwIP/src/core/tcp_out.c ****   }
 3591              		.loc 1 1088 12 is_stmt 0 view .LVU1332
 3592 00bc 4FF0FF30 		mov	r0, #-1
1086:lwIP/src/core/tcp_out.c ****     TCP_STATS_INC(tcp.memerr);
 3593              		.loc 1 1086 5 view .LVU1333
 3594 00c0 43F08003 		orr	r3, r3, #128
 3595 00c4 6383     		strh	r3, [r4, #26]	@ movhi
1086:lwIP/src/core/tcp_out.c ****     TCP_STATS_INC(tcp.memerr);
 3596              		.loc 1 1086 5 is_stmt 1 view .LVU1334
1087:lwIP/src/core/tcp_out.c ****     return ERR_MEM;
 3597              		.loc 1 1087 30 view .LVU1335
1088:lwIP/src/core/tcp_out.c ****   }
 3598              		.loc 1 1088 5 view .LVU1336
 3599              	.L356:
1088:lwIP/src/core/tcp_out.c ****   }
 3600              		.loc 1 1088 5 is_stmt 0 view .LVU1337
 3601              	.LBE360:
 3602              	.LBE362:
1130:lwIP/src/core/tcp_out.c **** 
 3603              		.loc 1 1130 1 view .LVU1338
 3604 00c6 02B0     		add	sp, sp, #8
 3605              	.LCFI23:
 3606              		.cfi_remember_state
 3607              		.cfi_def_cfa_offset 16
 3608              		@ sp needed
 3609 00c8 70BD     		pop	{r4, r5, r6, pc}
 3610              	.LVL338:
 3611              	.L363:
 3612              	.LCFI24:
 3613              		.cfi_restore_state
 3614              	.LBB363:
 3615              	.LBB361:
ARM GAS  /tmp/ccH0Y1hM.s 			page 139


1101:lwIP/src/core/tcp_out.c ****   } else {
 3616              		.loc 1 1101 5 is_stmt 1 view .LVU1339
1101:lwIP/src/core/tcp_out.c ****   } else {
 3617              		.loc 1 1101 17 is_stmt 0 view .LVU1340
 3618 00ca E066     		str	r0, [r4, #108]
 3619 00cc CFE7     		b	.L340
 3620              	.LVL339:
 3621              	.L364:
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3622              		.loc 1 1125 5 view .LVU1341
 3623 00ce E36E     		ldr	r3, [r4, #108]
 3624 00d0 002B     		cmp	r3, #0
 3625 00d2 F8D1     		bne	.L356
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3626              		.loc 1 1125 5 is_stmt 1 view .LVU1342
 3627 00d4 0848     		ldr	r0, .L365+16
 3628 00d6 FFF7FEFF 		bl	printf
 3629              	.LVL340:
 3630              	.L342:
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3631              		.loc 1 1125 5 view .LVU1343
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3632              		.loc 1 1125 5 view .LVU1344
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3633              		.loc 1 1125 5 view .LVU1345
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3634              		.loc 1 1125 5 view .LVU1346
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3635              		.loc 1 1125 5 view .LVU1347
1125:lwIP/src/core/tcp_out.c ****                 pcb->unacked != NULL || pcb->unsent != NULL);
 3636              		.loc 1 1125 5 view .LVU1348
 3637 00da FEE7     		b	.L342
 3638              	.LVL341:
 3639              	.L362:
1091:lwIP/src/core/tcp_out.c **** 
 3640              		.loc 1 1091 3 view .LVU1349
 3641 00dc 0748     		ldr	r0, .L365+20
 3642              	.LVL342:
1091:lwIP/src/core/tcp_out.c **** 
 3643              		.loc 1 1091 3 is_stmt 0 view .LVU1350
 3644 00de FFF7FEFF 		bl	printf
 3645              	.LVL343:
 3646              	.L338:
1091:lwIP/src/core/tcp_out.c **** 
 3647              		.loc 1 1091 3 is_stmt 1 view .LVU1351
1091:lwIP/src/core/tcp_out.c **** 
 3648              		.loc 1 1091 3 view .LVU1352
1091:lwIP/src/core/tcp_out.c **** 
 3649              		.loc 1 1091 3 view .LVU1353
1091:lwIP/src/core/tcp_out.c **** 
 3650              		.loc 1 1091 3 view .LVU1354
1091:lwIP/src/core/tcp_out.c **** 
 3651              		.loc 1 1091 3 view .LVU1355
1091:lwIP/src/core/tcp_out.c **** 
 3652              		.loc 1 1091 3 view .LVU1356
 3653 00e2 FEE7     		b	.L338
 3654              	.LVL344:
ARM GAS  /tmp/ccH0Y1hM.s 			page 140


 3655              	.L344:
1050:lwIP/src/core/tcp_out.c **** #if LWIP_WND_SCALE
 3656              		.loc 1 1050 14 is_stmt 0 view .LVU1357
 3657 00e4 0126     		movs	r6, #1
 3658 00e6 ABE7     		b	.L332
 3659              	.L366:
 3660              		.align	2
 3661              	.L365:
 3662 00e8 78000000 		.word	.LC31
 3663 00ec 00000000 		.word	.LC29
 3664 00f0 58000000 		.word	.LC30
 3665 00f4 1C000000 		.word	.LC26
 3666 00f8 60000000 		.word	.LC28
 3667 00fc 34000000 		.word	.LC27
 3668              	.LBE361:
 3669              	.LBE363:
 3670              		.cfi_endproc
 3671              	.LFE112:
 3673              		.section	.rodata.tcp_rexmit_rto_prepare.str1.4,"aMS",%progbits,1
 3674              		.align	2
 3675              	.LC32:
 3676 0000 7463705F 		.ascii	"tcp_rexmit_rto_prepare: invalid pcb\000"
 3676      7265786D 
 3676      69745F72 
 3676      746F5F70 
 3676      72657061 
 3677              		.section	.text.tcp_rexmit_rto_prepare,"ax",%progbits
 3678              		.align	1
 3679              		.p2align 2,,3
 3680              		.global	tcp_rexmit_rto_prepare
 3681              		.syntax unified
 3682              		.thumb
 3683              		.thumb_func
 3684              		.fpu fpv4-sp-d16
 3686              	tcp_rexmit_rto_prepare:
 3687              	.LVL345:
 3688              	.LFB116:
1632:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg;
 3689              		.loc 1 1632 1 is_stmt 1 view -0
 3690              		.cfi_startproc
 3691              		@ args = 0, pretend = 0, frame = 0
 3692              		@ frame_needed = 0, uses_anonymous_args = 0
1633:lwIP/src/core/tcp_out.c **** 
 3693              		.loc 1 1633 3 view .LVU1359
1635:lwIP/src/core/tcp_out.c **** 
 3694              		.loc 1 1635 3 view .LVU1360
1635:lwIP/src/core/tcp_out.c **** 
 3695              		.loc 1 1635 3 view .LVU1361
1632:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg;
 3696              		.loc 1 1632 1 is_stmt 0 view .LVU1362
 3697 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3698              	.LCFI25:
 3699              		.cfi_def_cfa_offset 24
 3700              		.cfi_offset 3, -24
 3701              		.cfi_offset 4, -20
 3702              		.cfi_offset 5, -16
 3703              		.cfi_offset 6, -12
ARM GAS  /tmp/ccH0Y1hM.s 			page 141


 3704              		.cfi_offset 7, -8
 3705              		.cfi_offset 14, -4
1635:lwIP/src/core/tcp_out.c **** 
 3706              		.loc 1 1635 3 view .LVU1363
 3707 0002 68B1     		cbz	r0, .L377
1635:lwIP/src/core/tcp_out.c **** 
 3708              		.loc 1 1635 3 is_stmt 1 discriminator 2 view .LVU1364
1637:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 3709              		.loc 1 1637 3 discriminator 2 view .LVU1365
1637:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 3710              		.loc 1 1637 10 is_stmt 0 discriminator 2 view .LVU1366
 3711 0004 026F     		ldr	r2, [r0, #112]
 3712 0006 0346     		mov	r3, r0
1637:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 3713              		.loc 1 1637 6 discriminator 2 view .LVU1367
 3714 0008 3AB1     		cbz	r2, .L375
 3715 000a 1146     		mov	r1, r2
 3716              	.LVL346:
 3717              	.L371:
1646:lwIP/src/core/tcp_out.c ****       LWIP_DEBUGF(TCP_RTO_DEBUG, ("tcp_rexmit_rto: segment busy\n"));
 3718              		.loc 1 1646 5 is_stmt 1 discriminator 1 view .LVU1368
 3719              	.LBB372:
 3720              	.LBI372:
1432:lwIP/src/core/tcp_out.c **** {
 3721              		.loc 1 1432 1 discriminator 1 view .LVU1369
 3722              	.LBB373:
1434:lwIP/src/core/tcp_out.c **** 
 3723              		.loc 1 1434 3 discriminator 1 view .LVU1370
1434:lwIP/src/core/tcp_out.c **** 
 3724              		.loc 1 1434 3 discriminator 1 view .LVU1371
1434:lwIP/src/core/tcp_out.c **** 
 3725              		.loc 1 1434 3 discriminator 1 view .LVU1372
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 3726              		.loc 1 1439 3 discriminator 1 view .LVU1373
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 3727              		.loc 1 1439 3 is_stmt 0 discriminator 1 view .LVU1374
 3728              	.LBE373:
 3729              	.LBE372:
1645:lwIP/src/core/tcp_out.c ****     if (tcp_output_segment_busy(seg)) {
 3730              		.loc 1 1645 28 is_stmt 1 discriminator 1 view .LVU1375
1645:lwIP/src/core/tcp_out.c ****     if (tcp_output_segment_busy(seg)) {
 3731              		.loc 1 1645 31 is_stmt 0 discriminator 1 view .LVU1376
 3732 000c D1E90040 		ldrd	r4, r0, [r1]
 3733              	.LVL347:
1645:lwIP/src/core/tcp_out.c ****     if (tcp_output_segment_busy(seg)) {
 3734              		.loc 1 1645 31 discriminator 1 view .LVU1377
 3735 0010 807B     		ldrb	r0, [r0, #14]	@ zero_extendqisi2
1645:lwIP/src/core/tcp_out.c ****     if (tcp_output_segment_busy(seg)) {
 3736              		.loc 1 1645 3 discriminator 1 view .LVU1378
 3737 0012 4CB1     		cbz	r4, .L378
 3738              	.LBB375:
 3739              	.LBB374:
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 3740              		.loc 1 1439 6 view .LVU1379
 3741 0014 0128     		cmp	r0, #1
 3742 0016 2146     		mov	r1, r4
 3743 0018 F8D0     		beq	.L371
ARM GAS  /tmp/ccH0Y1hM.s 			page 142


 3744              	.LVL348:
 3745              	.L375:
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 3746              		.loc 1 1439 6 view .LVU1380
 3747              	.LBE374:
 3748              	.LBE375:
1638:lwIP/src/core/tcp_out.c ****   }
 3749              		.loc 1 1638 12 view .LVU1381
 3750 001a 6FF00500 		mvn	r0, #5
1676:lwIP/src/core/tcp_out.c **** 
 3751              		.loc 1 1676 1 view .LVU1382
 3752 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3753              	.LVL349:
 3754              	.L377:
1635:lwIP/src/core/tcp_out.c **** 
 3755              		.loc 1 1635 3 is_stmt 1 discriminator 1 view .LVU1383
 3756 0020 0E48     		ldr	r0, .L379
 3757              	.LVL350:
1635:lwIP/src/core/tcp_out.c **** 
 3758              		.loc 1 1635 3 is_stmt 0 discriminator 1 view .LVU1384
 3759 0022 FFF7FEFF 		bl	printf
 3760              	.LVL351:
 3761              	.L369:
1635:lwIP/src/core/tcp_out.c **** 
 3762              		.loc 1 1635 3 is_stmt 1 discriminator 1 view .LVU1385
1635:lwIP/src/core/tcp_out.c **** 
 3763              		.loc 1 1635 3 discriminator 1 view .LVU1386
1635:lwIP/src/core/tcp_out.c **** 
 3764              		.loc 1 1635 3 discriminator 1 view .LVU1387
1635:lwIP/src/core/tcp_out.c **** 
 3765              		.loc 1 1635 3 discriminator 1 view .LVU1388
1635:lwIP/src/core/tcp_out.c **** 
 3766              		.loc 1 1635 3 discriminator 1 view .LVU1389
1635:lwIP/src/core/tcp_out.c **** 
 3767              		.loc 1 1635 3 discriminator 1 view .LVU1390
 3768 0026 FEE7     		b	.L369
 3769              	.LVL352:
 3770              	.L378:
1651:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_RTO_DEBUG, ("tcp_rexmit_rto: segment busy\n"));
 3771              		.loc 1 1651 3 view .LVU1391
 3772              	.LBB376:
 3773              	.LBI376:
1432:lwIP/src/core/tcp_out.c **** {
 3774              		.loc 1 1432 1 view .LVU1392
 3775              	.LBB377:
1434:lwIP/src/core/tcp_out.c **** 
 3776              		.loc 1 1434 3 view .LVU1393
1434:lwIP/src/core/tcp_out.c **** 
 3777              		.loc 1 1434 3 view .LVU1394
1434:lwIP/src/core/tcp_out.c **** 
 3778              		.loc 1 1434 3 view .LVU1395
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 3779              		.loc 1 1439 3 view .LVU1396
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 3780              		.loc 1 1439 6 is_stmt 0 view .LVU1397
 3781 0028 0128     		cmp	r0, #1
 3782 002a F6D1     		bne	.L375
ARM GAS  /tmp/ccH0Y1hM.s 			page 143


 3783              	.LVL353:
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 3784              		.loc 1 1439 6 view .LVU1398
 3785              	.LBE377:
 3786              	.LBE376:
1656:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 3787              		.loc 1 1656 3 is_stmt 1 view .LVU1399
1669:lwIP/src/core/tcp_out.c ****   /* Record the next byte following retransmit */
 3788              		.loc 1 1669 3 is_stmt 0 view .LVU1400
 3789 002c 5D8B     		ldrh	r5, [r3, #26]
1675:lwIP/src/core/tcp_out.c **** }
 3790              		.loc 1 1675 10 view .LVU1401
 3791 002e 2046     		mov	r0, r4
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 3792              		.loc 1 1671 18 view .LVU1402
 3793 0030 CF68     		ldr	r7, [r1, #12]
1656:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 3794              		.loc 1 1656 13 view .LVU1403
 3795 0032 DE6E     		ldr	r6, [r3, #108]
1669:lwIP/src/core/tcp_out.c ****   /* Record the next byte following retransmit */
 3796              		.loc 1 1669 3 view .LVU1404
 3797 0034 45F40065 		orr	r5, r5, #2048
1656:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 3798              		.loc 1 1656 13 view .LVU1405
 3799 0038 0E60     		str	r6, [r1]
1664:lwIP/src/core/tcp_out.c ****   /* unacked queue is now empty */
 3800              		.loc 1 1664 3 is_stmt 1 view .LVU1406
1669:lwIP/src/core/tcp_out.c ****   /* Record the next byte following retransmit */
 3801              		.loc 1 1669 3 is_stmt 0 view .LVU1407
 3802 003a 5D83     		strh	r5, [r3, #26]	@ movhi
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 3803              		.loc 1 1671 51 view .LVU1408
 3804 003c 0989     		ldrh	r1, [r1, #8]
1666:lwIP/src/core/tcp_out.c **** 
 3805              		.loc 1 1666 16 view .LVU1409
 3806 003e C3E91B24 		strd	r2, r4, [r3, #108]
1669:lwIP/src/core/tcp_out.c ****   /* Record the next byte following retransmit */
 3807              		.loc 1 1669 3 is_stmt 1 view .LVU1410
1669:lwIP/src/core/tcp_out.c ****   /* Record the next byte following retransmit */
 3808              		.loc 1 1669 3 view .LVU1411
1669:lwIP/src/core/tcp_out.c ****   /* Record the next byte following retransmit */
 3809              		.loc 1 1669 3 view .LVU1412
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 3810              		.loc 1 1671 3 view .LVU1413
 3811              	.LVL354:
 3812              	.LBB378:
 3813              	.LBI378:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 3814              		.loc 2 900 31 view .LVU1414
 3815              	.LBB379:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 3816              		.loc 2 903 3 view .LVU1415
 3817              	.LBE379:
 3818              	.LBE378:
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 3819              		.loc 1 1671 51 is_stmt 0 view .LVU1416
 3820 0042 BA89     		ldrh	r2, [r7, #12]	@ unaligned
ARM GAS  /tmp/ccH0Y1hM.s 			page 144


1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 3821              		.loc 1 1671 18 view .LVU1417
 3822 0044 7D68     		ldr	r5, [r7, #4]	@ unaligned
 3823              	.LBB381:
 3824              	.LBB382:
 3825              		.loc 2 937 19 view .LVU1418
 3826 0046 52BA     		rev16	r2, r2
 3827              	.LBE382:
 3828              	.LBE381:
1673:lwIP/src/core/tcp_out.c **** 
 3829              		.loc 1 1673 15 view .LVU1419
 3830 0048 5C63     		str	r4, [r3, #52]
 3831              	.LBB384:
 3832              	.LBB380:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 3833              		.loc 2 903 10 view .LVU1420
 3834 004a 2DBA     		rev	r5, r5
 3835              	.LVL355:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 3836              		.loc 2 903 10 view .LVU1421
 3837              	.LBE380:
 3838              	.LBE384:
 3839              	.LBB385:
 3840              	.LBI381:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 3841              		.loc 2 934 30 is_stmt 1 view .LVU1422
 3842              	.LBB383:
 3843              		.loc 2 937 3 view .LVU1423
 3844              	.LBE383:
 3845              	.LBE385:
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 3846              		.loc 1 1671 51 is_stmt 0 view .LVU1424
 3847 004c 12F00302 		ands	r2, r2, #3
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 3848              		.loc 1 1671 49 view .LVU1425
 3849 0050 2944     		add	r1, r1, r5
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 3850              		.loc 1 1671 51 view .LVU1426
 3851 0052 18BF     		it	ne
 3852 0054 0122     		movne	r2, #1
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 3853              		.loc 1 1671 49 view .LVU1427
 3854 0056 0A44     		add	r2, r2, r1
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 3855              		.loc 1 1671 16 view .LVU1428
 3856 0058 DA64     		str	r2, [r3, #76]
1673:lwIP/src/core/tcp_out.c **** 
 3857              		.loc 1 1673 3 is_stmt 1 view .LVU1429
1675:lwIP/src/core/tcp_out.c **** }
 3858              		.loc 1 1675 3 view .LVU1430
1676:lwIP/src/core/tcp_out.c **** 
 3859              		.loc 1 1676 1 is_stmt 0 view .LVU1431
 3860 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3861              	.LVL356:
 3862              	.L380:
1676:lwIP/src/core/tcp_out.c **** 
 3863              		.loc 1 1676 1 view .LVU1432
ARM GAS  /tmp/ccH0Y1hM.s 			page 145


 3864              		.align	2
 3865              	.L379:
 3866 005c 00000000 		.word	.LC32
 3867              		.cfi_endproc
 3868              	.LFE116:
 3870              		.section	.rodata.tcp_rexmit.str1.4,"aMS",%progbits,1
 3871              		.align	2
 3872              	.LC33:
 3873 0000 7463705F 		.ascii	"tcp_rexmit: invalid pcb\000"
 3873      7265786D 
 3873      69743A20 
 3873      696E7661 
 3873      6C696420 
 3874              		.section	.text.tcp_rexmit,"ax",%progbits
 3875              		.align	1
 3876              		.p2align 2,,3
 3877              		.global	tcp_rexmit
 3878              		.syntax unified
 3879              		.thumb
 3880              		.thumb_func
 3881              		.fpu fpv4-sp-d16
 3883              	tcp_rexmit:
 3884              	.LVL357:
 3885              	.LFB119:
1725:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg;
 3886              		.loc 1 1725 1 is_stmt 1 view -0
 3887              		.cfi_startproc
 3888              		@ args = 0, pretend = 0, frame = 0
 3889              		@ frame_needed = 0, uses_anonymous_args = 0
1726:lwIP/src/core/tcp_out.c ****   struct tcp_seg **cur_seg;
 3890              		.loc 1 1726 3 view .LVU1434
1727:lwIP/src/core/tcp_out.c **** 
 3891              		.loc 1 1727 3 view .LVU1435
1729:lwIP/src/core/tcp_out.c **** 
 3892              		.loc 1 1729 3 view .LVU1436
1729:lwIP/src/core/tcp_out.c **** 
 3893              		.loc 1 1729 3 view .LVU1437
1725:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg;
 3894              		.loc 1 1725 1 is_stmt 0 view .LVU1438
 3895 0000 38B5     		push	{r3, r4, r5, lr}
 3896              	.LCFI26:
 3897              		.cfi_def_cfa_offset 16
 3898              		.cfi_offset 3, -16
 3899              		.cfi_offset 4, -12
 3900              		.cfi_offset 5, -8
 3901              		.cfi_offset 14, -4
1729:lwIP/src/core/tcp_out.c **** 
 3902              		.loc 1 1729 3 view .LVU1439
 3903 0002 68B3     		cbz	r0, .L402
1729:lwIP/src/core/tcp_out.c **** 
 3904              		.loc 1 1729 3 is_stmt 1 discriminator 2 view .LVU1440
1731:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 3905              		.loc 1 1731 3 discriminator 2 view .LVU1441
1731:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 3906              		.loc 1 1731 10 is_stmt 0 discriminator 2 view .LVU1442
 3907 0004 016F     		ldr	r1, [r0, #112]
1731:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
ARM GAS  /tmp/ccH0Y1hM.s 			page 146


 3908              		.loc 1 1731 6 discriminator 2 view .LVU1443
 3909 0006 29B3     		cbz	r1, .L391
1735:lwIP/src/core/tcp_out.c **** 
 3910              		.loc 1 1735 3 is_stmt 1 view .LVU1444
 3911              	.LVL358:
1739:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_RTO_DEBUG, ("tcp_rexmit busy\n"));
 3912              		.loc 1 1739 3 view .LVU1445
 3913              	.LBB400:
 3914              	.LBI400:
1432:lwIP/src/core/tcp_out.c **** {
 3915              		.loc 1 1432 1 view .LVU1446
 3916              	.LBB401:
1434:lwIP/src/core/tcp_out.c **** 
 3917              		.loc 1 1434 3 view .LVU1447
1434:lwIP/src/core/tcp_out.c **** 
 3918              		.loc 1 1434 3 view .LVU1448
1434:lwIP/src/core/tcp_out.c **** 
 3919              		.loc 1 1434 3 view .LVU1449
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 3920              		.loc 1 1439 3 view .LVU1450
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 3921              		.loc 1 1439 13 is_stmt 0 view .LVU1451
 3922 0008 4B68     		ldr	r3, [r1, #4]
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 3923              		.loc 1 1439 6 view .LVU1452
 3924 000a 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 3925 000c 012B     		cmp	r3, #1
 3926 000e 21D1     		bne	.L391
 3927              	.LVL359:
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 3928              		.loc 1 1439 6 view .LVU1453
 3929              	.LBE401:
 3930              	.LBE400:
1746:lwIP/src/core/tcp_out.c **** 
 3931              		.loc 1 1746 3 is_stmt 1 view .LVU1454
1746:lwIP/src/core/tcp_out.c **** 
 3932              		.loc 1 1746 16 is_stmt 0 view .LVU1455
 3933 0010 0A68     		ldr	r2, [r1]
1748:lwIP/src/core/tcp_out.c ****   while (*cur_seg &&
 3934              		.loc 1 1748 11 view .LVU1456
 3935 0012 00F16C05 		add	r5, r0, #108
1749:lwIP/src/core/tcp_out.c ****          TCP_SEQ_LT(lwip_ntohl((*cur_seg)->tcphdr->seqno), lwip_ntohl(seg->tcphdr->seqno))) {
 3936              		.loc 1 1749 10 view .LVU1457
 3937 0016 C36E     		ldr	r3, [r0, #108]
1746:lwIP/src/core/tcp_out.c **** 
 3938              		.loc 1 1746 16 view .LVU1458
 3939 0018 0267     		str	r2, [r0, #112]
1748:lwIP/src/core/tcp_out.c ****   while (*cur_seg &&
 3940              		.loc 1 1748 3 is_stmt 1 view .LVU1459
 3941              	.LVL360:
1749:lwIP/src/core/tcp_out.c ****          TCP_SEQ_LT(lwip_ntohl((*cur_seg)->tcphdr->seqno), lwip_ntohl(seg->tcphdr->seqno))) {
 3942              		.loc 1 1749 3 view .LVU1460
1749:lwIP/src/core/tcp_out.c ****          TCP_SEQ_LT(lwip_ntohl((*cur_seg)->tcphdr->seqno), lwip_ntohl(seg->tcphdr->seqno))) {
 3943              		.loc 1 1749 9 view .LVU1461
 3944 001a 63B1     		cbz	r3, .L385
1750:lwIP/src/core/tcp_out.c ****     cur_seg = &((*cur_seg)->next );
 3945              		.loc 1 1750 10 is_stmt 0 view .LVU1462
ARM GAS  /tmp/ccH0Y1hM.s 			page 147


 3946 001c CA68     		ldr	r2, [r1, #12]
 3947 001e 5468     		ldr	r4, [r2, #4]	@ unaligned
 3948              	.LBB402:
 3949              	.LBB403:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 3950              		.loc 2 903 10 view .LVU1463
 3951 0020 24BA     		rev	r4, r4
 3952 0022 02E0     		b	.L386
 3953              	.LVL361:
 3954              	.L387:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 3955              		.loc 2 903 10 view .LVU1464
 3956              	.LBE403:
 3957              	.LBE402:
1751:lwIP/src/core/tcp_out.c ****   }
 3958              		.loc 1 1751 13 view .LVU1465
 3959 0024 1D46     		mov	r5, r3
 3960              	.LVL362:
1749:lwIP/src/core/tcp_out.c ****          TCP_SEQ_LT(lwip_ntohl((*cur_seg)->tcphdr->seqno), lwip_ntohl(seg->tcphdr->seqno))) {
 3961              		.loc 1 1749 9 is_stmt 1 view .LVU1466
1749:lwIP/src/core/tcp_out.c ****          TCP_SEQ_LT(lwip_ntohl((*cur_seg)->tcphdr->seqno), lwip_ntohl(seg->tcphdr->seqno))) {
 3962              		.loc 1 1749 10 is_stmt 0 view .LVU1467
 3963 0026 1B68     		ldr	r3, [r3]
1749:lwIP/src/core/tcp_out.c ****          TCP_SEQ_LT(lwip_ntohl((*cur_seg)->tcphdr->seqno), lwip_ntohl(seg->tcphdr->seqno))) {
 3964              		.loc 1 1749 9 view .LVU1468
 3965 0028 2BB1     		cbz	r3, .L385
 3966              	.L386:
1751:lwIP/src/core/tcp_out.c ****   }
 3967              		.loc 1 1751 5 is_stmt 1 discriminator 1 view .LVU1469
 3968              	.LVL363:
 3969              	.LBB405:
 3970              	.LBI405:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 3971              		.loc 2 900 31 discriminator 1 view .LVU1470
 3972              	.LBB406:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 3973              		.loc 2 903 3 discriminator 1 view .LVU1471
 3974              	.LBE406:
 3975              	.LBE405:
1750:lwIP/src/core/tcp_out.c ****     cur_seg = &((*cur_seg)->next );
 3976              		.loc 1 1750 10 is_stmt 0 discriminator 1 view .LVU1472
 3977 002a DA68     		ldr	r2, [r3, #12]
 3978 002c 5268     		ldr	r2, [r2, #4]	@ unaligned
 3979              	.LBB408:
 3980              	.LBB407:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 3981              		.loc 2 903 10 discriminator 1 view .LVU1473
 3982 002e 12BA     		rev	r2, r2
 3983              	.LVL364:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 3984              		.loc 2 903 10 discriminator 1 view .LVU1474
 3985              	.LBE407:
 3986              	.LBE408:
 3987              	.LBB409:
 3988              	.LBI402:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 3989              		.loc 2 900 31 is_stmt 1 discriminator 1 view .LVU1475
ARM GAS  /tmp/ccH0Y1hM.s 			page 148


 3990              	.LBB404:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 3991              		.loc 2 903 3 discriminator 1 view .LVU1476
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 3992              		.loc 2 903 3 is_stmt 0 discriminator 1 view .LVU1477
 3993              	.LBE404:
 3994              	.LBE409:
1750:lwIP/src/core/tcp_out.c ****     cur_seg = &((*cur_seg)->next );
 3995              		.loc 1 1750 10 discriminator 1 view .LVU1478
 3996 0030 121B     		subs	r2, r2, r4
1749:lwIP/src/core/tcp_out.c ****          TCP_SEQ_LT(lwip_ntohl((*cur_seg)->tcphdr->seqno), lwip_ntohl(seg->tcphdr->seqno))) {
 3997              		.loc 1 1749 19 discriminator 1 view .LVU1479
 3998 0032 002A     		cmp	r2, #0
 3999 0034 F6DB     		blt	.L387
 4000              	.L385:
1753:lwIP/src/core/tcp_out.c ****   *cur_seg = seg;
 4001              		.loc 1 1753 3 is_stmt 1 view .LVU1480
1753:lwIP/src/core/tcp_out.c ****   *cur_seg = seg;
 4002              		.loc 1 1753 13 is_stmt 0 view .LVU1481
 4003 0036 0B60     		str	r3, [r1]
1754:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE
 4004              		.loc 1 1754 3 is_stmt 1 view .LVU1482
1754:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE
 4005              		.loc 1 1754 12 is_stmt 0 view .LVU1483
 4006 0038 2960     		str	r1, [r5]
1756:lwIP/src/core/tcp_out.c ****     /* the retransmitted segment is last in unsent, so reset unsent_oversize */
 4007              		.loc 1 1756 3 is_stmt 1 view .LVU1484
1756:lwIP/src/core/tcp_out.c ****     /* the retransmitted segment is last in unsent, so reset unsent_oversize */
 4008              		.loc 1 1756 6 is_stmt 0 view .LVU1485
 4009 003a 0B68     		ldr	r3, [r1]
 4010 003c 6BB1     		cbz	r3, .L403
 4011              	.L388:
 4012              	.LVL365:
 4013              	.LBB410:
 4014              	.LBI410:
1724:lwIP/src/core/tcp_out.c **** {
 4015              		.loc 1 1724 1 is_stmt 1 view .LVU1486
 4016              	.LBB411:
1762:lwIP/src/core/tcp_out.c ****     ++pcb->nrtx;
 4017              		.loc 1 1762 3 view .LVU1487
1762:lwIP/src/core/tcp_out.c ****     ++pcb->nrtx;
 4018              		.loc 1 1762 10 is_stmt 0 view .LVU1488
 4019 003e 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
1762:lwIP/src/core/tcp_out.c ****     ++pcb->nrtx;
 4020              		.loc 1 1762 6 view .LVU1489
 4021 0042 FF2B     		cmp	r3, #255
 4022 0044 02D0     		beq	.L389
1763:lwIP/src/core/tcp_out.c ****   }
 4023              		.loc 1 1763 5 is_stmt 1 view .LVU1490
 4024 0046 0133     		adds	r3, r3, #1
 4025 0048 80F84230 		strb	r3, [r0, #66]
 4026              	.L389:
1767:lwIP/src/core/tcp_out.c **** 
 4027              		.loc 1 1767 3 view .LVU1491
1767:lwIP/src/core/tcp_out.c **** 
 4028              		.loc 1 1767 15 is_stmt 0 view .LVU1492
 4029 004c 0023     		movs	r3, #0
ARM GAS  /tmp/ccH0Y1hM.s 			page 149


 4030 004e 4363     		str	r3, [r0, #52]
1770:lwIP/src/core/tcp_out.c ****   /* No need to call tcp_output: we are always called from tcp_input()
 4031              		.loc 1 1770 38 is_stmt 1 view .LVU1493
1773:lwIP/src/core/tcp_out.c **** }
 4032              		.loc 1 1773 3 view .LVU1494
 4033              	.LVL366:
1767:lwIP/src/core/tcp_out.c **** 
 4034              		.loc 1 1767 15 is_stmt 0 view .LVU1495
 4035 0050 1846     		mov	r0, r3
 4036              	.LVL367:
1767:lwIP/src/core/tcp_out.c **** 
 4037              		.loc 1 1767 15 view .LVU1496
 4038              	.LBE411:
 4039              	.LBE410:
1774:lwIP/src/core/tcp_out.c **** 
 4040              		.loc 1 1774 1 view .LVU1497
 4041 0052 38BD     		pop	{r3, r4, r5, pc}
 4042              	.LVL368:
 4043              	.L391:
1732:lwIP/src/core/tcp_out.c ****   }
 4044              		.loc 1 1732 12 view .LVU1498
 4045 0054 6FF00500 		mvn	r0, #5
 4046              	.LVL369:
1774:lwIP/src/core/tcp_out.c **** 
 4047              		.loc 1 1774 1 view .LVU1499
 4048 0058 38BD     		pop	{r3, r4, r5, pc}
 4049              	.LVL370:
 4050              	.L403:
1758:lwIP/src/core/tcp_out.c ****   }
 4051              		.loc 1 1758 5 is_stmt 1 view .LVU1500
1758:lwIP/src/core/tcp_out.c ****   }
 4052              		.loc 1 1758 26 is_stmt 0 view .LVU1501
 4053 005a A0F86830 		strh	r3, [r0, #104]	@ movhi
 4054 005e EEE7     		b	.L388
 4055              	.LVL371:
 4056              	.L402:
1729:lwIP/src/core/tcp_out.c **** 
 4057              		.loc 1 1729 3 is_stmt 1 discriminator 1 view .LVU1502
 4058 0060 0148     		ldr	r0, .L404
 4059              	.LVL372:
1729:lwIP/src/core/tcp_out.c **** 
 4060              		.loc 1 1729 3 is_stmt 0 discriminator 1 view .LVU1503
 4061 0062 FFF7FEFF 		bl	printf
 4062              	.LVL373:
 4063              	.L383:
1729:lwIP/src/core/tcp_out.c **** 
 4064              		.loc 1 1729 3 is_stmt 1 discriminator 1 view .LVU1504
1729:lwIP/src/core/tcp_out.c **** 
 4065              		.loc 1 1729 3 discriminator 1 view .LVU1505
1729:lwIP/src/core/tcp_out.c **** 
 4066              		.loc 1 1729 3 discriminator 1 view .LVU1506
1729:lwIP/src/core/tcp_out.c **** 
 4067              		.loc 1 1729 3 discriminator 1 view .LVU1507
1729:lwIP/src/core/tcp_out.c **** 
 4068              		.loc 1 1729 3 discriminator 1 view .LVU1508
1729:lwIP/src/core/tcp_out.c **** 
 4069              		.loc 1 1729 3 discriminator 1 view .LVU1509
ARM GAS  /tmp/ccH0Y1hM.s 			page 150


 4070 0066 FEE7     		b	.L383
 4071              	.L405:
 4072              		.align	2
 4073              	.L404:
 4074 0068 00000000 		.word	.LC33
 4075              		.cfi_endproc
 4076              	.LFE119:
 4078              		.section	.rodata.tcp_rexmit_fast.str1.4,"aMS",%progbits,1
 4079              		.align	2
 4080              	.LC34:
 4081 0000 7463705F 		.ascii	"tcp_rexmit_fast: invalid pcb\000"
 4081      7265786D 
 4081      69745F66 
 4081      6173743A 
 4081      20696E76 
 4082              		.section	.text.tcp_rexmit_fast,"ax",%progbits
 4083              		.align	1
 4084              		.p2align 2,,3
 4085              		.global	tcp_rexmit_fast
 4086              		.syntax unified
 4087              		.thumb
 4088              		.thumb_func
 4089              		.fpu fpv4-sp-d16
 4091              	tcp_rexmit_fast:
 4092              	.LVL374:
 4093              	.LFB120:
1784:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rexmit_fast: invalid pcb", pcb != NULL);
 4094              		.loc 1 1784 1 view -0
 4095              		.cfi_startproc
 4096              		@ args = 0, pretend = 0, frame = 0
 4097              		@ frame_needed = 0, uses_anonymous_args = 0
1785:lwIP/src/core/tcp_out.c **** 
 4098              		.loc 1 1785 3 view .LVU1511
1785:lwIP/src/core/tcp_out.c **** 
 4099              		.loc 1 1785 3 view .LVU1512
1784:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rexmit_fast: invalid pcb", pcb != NULL);
 4100              		.loc 1 1784 1 is_stmt 0 view .LVU1513
 4101 0000 10B5     		push	{r4, lr}
 4102              	.LCFI27:
 4103              		.cfi_def_cfa_offset 8
 4104              		.cfi_offset 4, -8
 4105              		.cfi_offset 14, -4
1785:lwIP/src/core/tcp_out.c **** 
 4106              		.loc 1 1785 3 view .LVU1514
 4107 0002 40B3     		cbz	r0, .L414
1785:lwIP/src/core/tcp_out.c **** 
 4108              		.loc 1 1785 3 is_stmt 1 discriminator 2 view .LVU1515
1787:lwIP/src/core/tcp_out.c ****     /* This is fast retransmit. Retransmit the first unacked segment. */
 4109              		.loc 1 1787 3 discriminator 2 view .LVU1516
1787:lwIP/src/core/tcp_out.c ****     /* This is fast retransmit. Retransmit the first unacked segment. */
 4110              		.loc 1 1787 6 is_stmt 0 discriminator 2 view .LVU1517
 4111 0004 036F     		ldr	r3, [r0, #112]
 4112 0006 0446     		mov	r4, r0
 4113 0008 13B1     		cbz	r3, .L406
1787:lwIP/src/core/tcp_out.c ****     /* This is fast retransmit. Retransmit the first unacked segment. */
 4114              		.loc 1 1787 28 discriminator 1 view .LVU1518
 4115 000a 438B     		ldrh	r3, [r0, #26]
ARM GAS  /tmp/ccH0Y1hM.s 			page 151


 4116 000c 5B07     		lsls	r3, r3, #29
 4117 000e 00D5     		bpl	.L415
 4118              	.LVL375:
 4119              	.L406:
1815:lwIP/src/core/tcp_out.c **** 
 4120              		.loc 1 1815 1 view .LVU1519
 4121 0010 10BD     		pop	{r4, pc}
 4122              	.LVL376:
 4123              	.L415:
1793:lwIP/src/core/tcp_out.c ****     if (tcp_rexmit(pcb) == ERR_OK) {
 4124              		.loc 1 1793 59 is_stmt 1 view .LVU1520
1794:lwIP/src/core/tcp_out.c ****       /* Set ssthresh to half of the minimum of the current
 4125              		.loc 1 1794 5 view .LVU1521
1794:lwIP/src/core/tcp_out.c ****       /* Set ssthresh to half of the minimum of the current
 4126              		.loc 1 1794 9 is_stmt 0 view .LVU1522
 4127 0012 FFF7FEFF 		bl	tcp_rexmit
 4128              	.LVL377:
1794:lwIP/src/core/tcp_out.c ****       /* Set ssthresh to half of the minimum of the current
 4129              		.loc 1 1794 8 view .LVU1523
 4130 0016 0028     		cmp	r0, #0
 4131 0018 FAD1     		bne	.L406
1797:lwIP/src/core/tcp_out.c **** 
 4132              		.loc 1 1797 7 is_stmt 1 view .LVU1524
1797:lwIP/src/core/tcp_out.c **** 
 4133              		.loc 1 1797 23 is_stmt 0 view .LVU1525
 4134 001a B4F86010 		ldrh	r1, [r4, #96]
 4135 001e B4F84830 		ldrh	r3, [r4, #72]
1800:lwIP/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_FR_DEBUG,
 4136              		.loc 1 1800 36 view .LVU1526
 4137 0022 628E     		ldrh	r2, [r4, #50]
1797:lwIP/src/core/tcp_out.c **** 
 4138              		.loc 1 1797 23 view .LVU1527
 4139 0024 9942     		cmp	r1, r3
1800:lwIP/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_FR_DEBUG,
 4140              		.loc 1 1800 31 view .LVU1528
 4141 0026 4FEA4200 		lsl	r0, r2, #1
1797:lwIP/src/core/tcp_out.c **** 
 4142              		.loc 1 1797 23 view .LVU1529
 4143 002a 28BF     		it	cs
 4144 002c 1946     		movcs	r1, r3
1797:lwIP/src/core/tcp_out.c **** 
 4145              		.loc 1 1797 21 view .LVU1530
 4146 002e 4B08     		lsrs	r3, r1, #1
1800:lwIP/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_FR_DEBUG,
 4147              		.loc 1 1800 10 view .LVU1531
 4148 0030 B0EB510F 		cmp	r0, r1, lsr #1
1797:lwIP/src/core/tcp_out.c **** 
 4149              		.loc 1 1797 21 view .LVU1532
 4150 0034 A4F84A30 		strh	r3, [r4, #74]	@ movhi
1800:lwIP/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_FR_DEBUG,
 4151              		.loc 1 1800 7 is_stmt 1 view .LVU1533
1800:lwIP/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_FR_DEBUG,
 4152              		.loc 1 1800 10 is_stmt 0 view .LVU1534
 4153 0038 02D9     		bls	.L412
1804:lwIP/src/core/tcp_out.c ****         pcb->ssthresh = 2 * pcb->mss;
 4154              		.loc 1 1804 60 is_stmt 1 view .LVU1535
1805:lwIP/src/core/tcp_out.c ****       }
ARM GAS  /tmp/ccH0Y1hM.s 			page 152


 4155              		.loc 1 1805 9 view .LVU1536
1805:lwIP/src/core/tcp_out.c ****       }
 4156              		.loc 1 1805 23 is_stmt 0 view .LVU1537
 4157 003a 83B2     		uxth	r3, r0
 4158 003c A4F84A30 		strh	r3, [r4, #74]	@ movhi
 4159              	.L412:
1808:lwIP/src/core/tcp_out.c ****       tcp_set_flags(pcb, TF_INFR);
 4160              		.loc 1 1808 7 is_stmt 1 view .LVU1538
1808:lwIP/src/core/tcp_out.c ****       tcp_set_flags(pcb, TF_INFR);
 4161              		.loc 1 1808 33 is_stmt 0 view .LVU1539
 4162 0040 0244     		add	r2, r2, r0
1809:lwIP/src/core/tcp_out.c **** 
 4163              		.loc 1 1809 7 view .LVU1540
 4164 0042 618B     		ldrh	r1, [r4, #26]
1812:lwIP/src/core/tcp_out.c ****     }
 4165              		.loc 1 1812 18 view .LVU1541
 4166 0044 0020     		movs	r0, #0
1808:lwIP/src/core/tcp_out.c ****       tcp_set_flags(pcb, TF_INFR);
 4167              		.loc 1 1808 33 view .LVU1542
 4168 0046 1344     		add	r3, r3, r2
1809:lwIP/src/core/tcp_out.c **** 
 4169              		.loc 1 1809 7 view .LVU1543
 4170 0048 41F00402 		orr	r2, r1, #4
1812:lwIP/src/core/tcp_out.c ****     }
 4171              		.loc 1 1812 18 view .LVU1544
 4172 004c 2086     		strh	r0, [r4, #48]	@ movhi
1808:lwIP/src/core/tcp_out.c ****       tcp_set_flags(pcb, TF_INFR);
 4173              		.loc 1 1808 17 view .LVU1545
 4174 004e A4F84830 		strh	r3, [r4, #72]	@ movhi
1809:lwIP/src/core/tcp_out.c **** 
 4175              		.loc 1 1809 7 is_stmt 1 view .LVU1546
1809:lwIP/src/core/tcp_out.c **** 
 4176              		.loc 1 1809 7 view .LVU1547
 4177 0052 6283     		strh	r2, [r4, #26]	@ movhi
1809:lwIP/src/core/tcp_out.c **** 
 4178              		.loc 1 1809 7 view .LVU1548
1812:lwIP/src/core/tcp_out.c ****     }
 4179              		.loc 1 1812 7 view .LVU1549
1815:lwIP/src/core/tcp_out.c **** 
 4180              		.loc 1 1815 1 is_stmt 0 view .LVU1550
 4181 0054 10BD     		pop	{r4, pc}
 4182              	.LVL378:
 4183              	.L414:
1785:lwIP/src/core/tcp_out.c **** 
 4184              		.loc 1 1785 3 is_stmt 1 discriminator 1 view .LVU1551
 4185 0056 0248     		ldr	r0, .L416
 4186              	.LVL379:
1785:lwIP/src/core/tcp_out.c **** 
 4187              		.loc 1 1785 3 is_stmt 0 discriminator 1 view .LVU1552
 4188 0058 FFF7FEFF 		bl	printf
 4189              	.LVL380:
 4190              	.L408:
1785:lwIP/src/core/tcp_out.c **** 
 4191              		.loc 1 1785 3 is_stmt 1 discriminator 1 view .LVU1553
1785:lwIP/src/core/tcp_out.c **** 
 4192              		.loc 1 1785 3 discriminator 1 view .LVU1554
1785:lwIP/src/core/tcp_out.c **** 
ARM GAS  /tmp/ccH0Y1hM.s 			page 153


 4193              		.loc 1 1785 3 discriminator 1 view .LVU1555
1785:lwIP/src/core/tcp_out.c **** 
 4194              		.loc 1 1785 3 discriminator 1 view .LVU1556
1785:lwIP/src/core/tcp_out.c **** 
 4195              		.loc 1 1785 3 discriminator 1 view .LVU1557
1785:lwIP/src/core/tcp_out.c **** 
 4196              		.loc 1 1785 3 discriminator 1 view .LVU1558
 4197 005c FEE7     		b	.L408
 4198              	.L417:
 4199 005e 00BF     		.align	2
 4200              	.L416:
 4201 0060 00000000 		.word	.LC34
 4202              		.cfi_endproc
 4203              	.LFE120:
 4205              		.section	.rodata.tcp_rst.str1.4,"aMS",%progbits,1
 4206              		.align	2
 4207              	.LC35:
 4208 0000 7463705F 		.ascii	"tcp_rst: invalid local_ip\000"
 4208      7273743A 
 4208      20696E76 
 4208      616C6964 
 4208      206C6F63 
 4209 001a 0000     		.align	2
 4210              	.LC36:
 4211 001c 7463705F 		.ascii	"tcp_rst: invalid remote_ip\000"
 4211      7273743A 
 4211      20696E76 
 4211      616C6964 
 4211      2072656D 
 4212 0037 00       		.align	2
 4213              	.LC37:
 4214 0038 63686563 		.ascii	"check that first pbuf can hold struct tcp_hdr\000"
 4214      6B207468 
 4214      61742066 
 4214      69727374 
 4214      20706275 
 4215              		.section	.text.tcp_rst,"ax",%progbits
 4216              		.align	1
 4217              		.p2align 2,,3
 4218              		.global	tcp_rst
 4219              		.syntax unified
 4220              		.thumb
 4221              		.thumb_func
 4222              		.fpu fpv4-sp-d16
 4224              	tcp_rst:
 4225              	.LVL381:
 4226              	.LFB125:
1957:lwIP/src/core/tcp_out.c **** 
1958:lwIP/src/core/tcp_out.c **** /**
1959:lwIP/src/core/tcp_out.c ****  * Send a TCP RESET packet (empty segment with RST flag set) either to
1960:lwIP/src/core/tcp_out.c ****  * abort a connection or to show that there is no matching local connection
1961:lwIP/src/core/tcp_out.c ****  * for a received segment.
1962:lwIP/src/core/tcp_out.c ****  *
1963:lwIP/src/core/tcp_out.c ****  * Called by tcp_abort() (to abort a local connection), tcp_input() (if no
1964:lwIP/src/core/tcp_out.c ****  * matching local pcb was found), tcp_listen_input() (if incoming segment
1965:lwIP/src/core/tcp_out.c ****  * has ACK flag set) and tcp_process() (received segment in the wrong state)
1966:lwIP/src/core/tcp_out.c ****  *
ARM GAS  /tmp/ccH0Y1hM.s 			page 154


1967:lwIP/src/core/tcp_out.c ****  * Since a RST segment is in most cases not sent for an active connection,
1968:lwIP/src/core/tcp_out.c ****  * tcp_rst() has a number of arguments that are taken from a tcp_pcb for
1969:lwIP/src/core/tcp_out.c ****  * most other segment output functions.
1970:lwIP/src/core/tcp_out.c ****  *
1971:lwIP/src/core/tcp_out.c ****  * @param pcb TCP pcb (may be NULL if no pcb is available)
1972:lwIP/src/core/tcp_out.c ****  * @param seqno the sequence number to use for the outgoing segment
1973:lwIP/src/core/tcp_out.c ****  * @param ackno the acknowledge number to use for the outgoing segment
1974:lwIP/src/core/tcp_out.c ****  * @param local_ip the local IP address to send the segment from
1975:lwIP/src/core/tcp_out.c ****  * @param remote_ip the remote IP address to send the segment to
1976:lwIP/src/core/tcp_out.c ****  * @param local_port the local TCP port to send the segment from
1977:lwIP/src/core/tcp_out.c ****  * @param remote_port the remote TCP port to send the segment to
1978:lwIP/src/core/tcp_out.c ****  */
1979:lwIP/src/core/tcp_out.c **** void
1980:lwIP/src/core/tcp_out.c **** tcp_rst(const struct tcp_pcb *pcb, u32_t seqno, u32_t ackno,
1981:lwIP/src/core/tcp_out.c ****         const ip_addr_t *local_ip, const ip_addr_t *remote_ip,
1982:lwIP/src/core/tcp_out.c ****         u16_t local_port, u16_t remote_port)
1983:lwIP/src/core/tcp_out.c **** {
 4227              		.loc 1 1983 1 view -0
 4228              		.cfi_startproc
 4229              		@ args = 12, pretend = 0, frame = 0
 4230              		@ frame_needed = 0, uses_anonymous_args = 0
1984:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
 4231              		.loc 1 1984 3 view .LVU1560
1985:lwIP/src/core/tcp_out.c ****   u16_t wnd;
 4232              		.loc 1 1985 3 view .LVU1561
1986:lwIP/src/core/tcp_out.c ****   u8_t optlen;
 4233              		.loc 1 1986 3 view .LVU1562
1987:lwIP/src/core/tcp_out.c **** 
1988:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rst: invalid local_ip", local_ip != NULL);
 4234              		.loc 1 1988 3 view .LVU1563
 4235              		.loc 1 1988 3 view .LVU1564
1983:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
 4236              		.loc 1 1983 1 is_stmt 0 view .LVU1565
 4237 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4238              	.LCFI28:
 4239              		.cfi_def_cfa_offset 36
 4240              		.cfi_offset 4, -36
 4241              		.cfi_offset 5, -32
 4242              		.cfi_offset 6, -28
 4243              		.cfi_offset 7, -24
 4244              		.cfi_offset 8, -20
 4245              		.cfi_offset 9, -16
 4246              		.cfi_offset 10, -12
 4247              		.cfi_offset 11, -8
 4248              		.cfi_offset 14, -4
 4249 0004 81B0     		sub	sp, sp, #4
 4250              	.LCFI29:
 4251              		.cfi_def_cfa_offset 40
1983:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
 4252              		.loc 1 1983 1 view .LVU1566
 4253 0006 DDF828B0 		ldr	fp, [sp, #40]
 4254 000a BDF82C90 		ldrh	r9, [sp, #44]
 4255 000e BDF83040 		ldrh	r4, [sp, #48]
 4256              		.loc 1 1988 3 view .LVU1567
 4257 0012 B3B3     		cbz	r3, .L427
 4258              		.loc 1 1988 3 is_stmt 1 discriminator 2 view .LVU1568
1989:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rst: invalid remote_ip", remote_ip != NULL);
ARM GAS  /tmp/ccH0Y1hM.s 			page 155


 4259              		.loc 1 1989 3 discriminator 2 view .LVU1569
 4260              		.loc 1 1989 3 discriminator 2 view .LVU1570
 4261 0014 BBF1000F 		cmp	fp, #0
 4262 0018 2BD0     		beq	.L428
 4263              		.loc 1 1989 3 discriminator 2 view .LVU1571
1990:lwIP/src/core/tcp_out.c **** 
1991:lwIP/src/core/tcp_out.c ****   optlen = LWIP_TCP_OPT_LENGTH_SEGMENT(0, pcb);
 4264              		.loc 1 1991 3 discriminator 2 view .LVU1572
 4265              	.LVL382:
1992:lwIP/src/core/tcp_out.c **** 
1993:lwIP/src/core/tcp_out.c **** #if LWIP_WND_SCALE
1994:lwIP/src/core/tcp_out.c ****   wnd = PP_HTONS(((TCP_WND >> TCP_RCV_SCALE) & 0xFFFF));
1995:lwIP/src/core/tcp_out.c **** #else
1996:lwIP/src/core/tcp_out.c ****   wnd = PP_HTONS(TCP_WND);
 4266              		.loc 1 1996 3 discriminator 2 view .LVU1573
1997:lwIP/src/core/tcp_out.c **** #endif
1998:lwIP/src/core/tcp_out.c **** 
1999:lwIP/src/core/tcp_out.c ****   p = tcp_output_alloc_header_common(ackno, optlen, 0, lwip_htonl(seqno), local_port,
 4267              		.loc 1 1999 3 discriminator 2 view .LVU1574
 4268 001a 8046     		mov	r8, r0
 4269 001c 0E46     		mov	r6, r1
 4270              	.LVL383:
 4271              	.LBB428:
 4272              	.LBI428:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 4273              		.loc 2 900 31 discriminator 2 view .LVU1575
 4274              	.LBB429:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 4275              		.loc 2 903 3 discriminator 2 view .LVU1576
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 4276              		.loc 2 903 3 is_stmt 0 discriminator 2 view .LVU1577
 4277 001e 1546     		mov	r5, r2
 4278              	.LVL384:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 4279              		.loc 2 903 3 discriminator 2 view .LVU1578
 4280              	.LBE429:
 4281              	.LBE428:
 4282              	.LBB431:
 4283              	.LBI431:
1818:lwIP/src/core/tcp_out.c ****                         u32_t seqno_be /* already in network byte order */,
 4284              		.loc 1 1818 1 is_stmt 1 discriminator 2 view .LVU1579
 4285              	.LBB432:
1822:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
 4286              		.loc 1 1822 3 discriminator 2 view .LVU1580
1823:lwIP/src/core/tcp_out.c **** 
 4287              		.loc 1 1823 3 discriminator 2 view .LVU1581
1825:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
 4288              		.loc 1 1825 3 discriminator 2 view .LVU1582
1825:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
 4289              		.loc 1 1825 7 is_stmt 0 discriminator 2 view .LVU1583
 4290 0020 1421     		movs	r1, #20
 4291              	.LVL385:
1825:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
 4292              		.loc 1 1825 7 discriminator 2 view .LVU1584
 4293 0022 4FF42072 		mov	r2, #640
 4294              	.LVL386:
1825:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
ARM GAS  /tmp/ccH0Y1hM.s 			page 156


 4295              		.loc 1 1825 7 discriminator 2 view .LVU1585
 4296 0026 2220     		movs	r0, #34
 4297              	.LVL387:
1825:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
 4298              		.loc 1 1825 7 discriminator 2 view .LVU1586
 4299 0028 1F46     		mov	r7, r3
 4300 002a FFF7FEFF 		bl	pbuf_alloc
 4301              	.LVL388:
1826:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("check that first pbuf can hold struct tcp_hdr",
 4302              		.loc 1 1826 3 is_stmt 1 discriminator 2 view .LVU1587
1826:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("check that first pbuf can hold struct tcp_hdr",
 4303              		.loc 1 1826 6 is_stmt 0 discriminator 2 view .LVU1588
 4304 002e 0146     		mov	r1, r0
 4305 0030 58B3     		cbz	r0, .L418
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4306              		.loc 1 1827 5 is_stmt 1 view .LVU1589
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4307              		.loc 1 1827 5 view .LVU1590
 4308 0032 4389     		ldrh	r3, [r0, #10]
 4309 0034 132B     		cmp	r3, #19
 4310 0036 20D9     		bls	.L429
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4311              		.loc 1 1827 5 view .LVU1591
1829:lwIP/src/core/tcp_out.c ****     tcphdr->src = lwip_htons(src_port);
 4312              		.loc 1 1829 5 view .LVU1592
 4313              	.LBB433:
 4314              	.LBB434:
 4315              		.loc 2 937 19 is_stmt 0 view .LVU1593
 4316 0038 99FA99FE 		rev16	lr, r9
 4317              	.LBE434:
 4318              	.LBE433:
 4319              	.LBB436:
 4320              	.LBB437:
 4321 003c 94FA94FC 		rev16	ip, r4
 4322              	.LBE437:
 4323              	.LBE436:
 4324              	.LBE432:
 4325              	.LBE431:
 4326              	.LBB450:
 4327              	.LBB430:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 4328              		.loc 2 903 10 view .LVU1594
 4329 0040 36BA     		rev	r6, r6
 4330              	.LVL389:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 4331              		.loc 2 903 10 view .LVU1595
 4332              	.LBE430:
 4333              	.LBE450:
 4334              	.LBB451:
 4335              	.LBB445:
1829:lwIP/src/core/tcp_out.c ****     tcphdr->src = lwip_htons(src_port);
 4336              		.loc 1 1829 12 view .LVU1596
 4337 0042 4468     		ldr	r4, [r0, #4]
 4338              	.LVL390:
1830:lwIP/src/core/tcp_out.c ****     tcphdr->dest = lwip_htons(dst_port);
 4339              		.loc 1 1830 5 is_stmt 1 view .LVU1597
 4340              	.LBB439:
ARM GAS  /tmp/ccH0Y1hM.s 			page 157


 4341              	.LBI433:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 4342              		.loc 2 934 30 view .LVU1598
 4343              	.LBB435:
 4344              		.loc 2 937 3 view .LVU1599
 4345              		.loc 2 937 3 is_stmt 0 view .LVU1600
 4346              	.LBE435:
 4347              	.LBE439:
 4348              	.LBB440:
 4349              	.LBB441:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 4350              		.loc 2 903 10 view .LVU1601
 4351 0044 2DBA     		rev	r5, r5
 4352              	.LVL391:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 4353              		.loc 2 903 10 view .LVU1602
 4354              	.LBE441:
 4355              	.LBE440:
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 4356              		.loc 1 1834 5 view .LVU1603
 4357 0046 4FF00009 		mov	r9, #0
 4358              	.LVL392:
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 4359              		.loc 1 1834 5 view .LVU1604
 4360 004a DFF850A0 		ldr	r10, .L430+12
 4361              	.LBE445:
 4362              	.LBE451:
2000:lwIP/src/core/tcp_out.c ****     remote_port, TCP_RST | TCP_ACK, wnd);
2001:lwIP/src/core/tcp_out.c ****   if (p == NULL) {
2002:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_DEBUG, ("tcp_rst: could not allocate memory for pbuf\n"));
2003:lwIP/src/core/tcp_out.c ****     return;
2004:lwIP/src/core/tcp_out.c ****   }
2005:lwIP/src/core/tcp_out.c ****   tcp_output_fill_options(pcb, p, 0, optlen);
2006:lwIP/src/core/tcp_out.c **** 
2007:lwIP/src/core/tcp_out.c ****   MIB2_STATS_INC(mib2.tcpoutrsts);
2008:lwIP/src/core/tcp_out.c **** 
2009:lwIP/src/core/tcp_out.c ****   tcp_output_control_segment(pcb, p, local_ip, remote_ip);
 4363              		.loc 1 2009 3 view .LVU1605
 4364 004e 5B46     		mov	r3, fp
 4365 0050 3A46     		mov	r2, r7
 4366 0052 4046     		mov	r0, r8
 4367              	.LVL393:
 4368              	.LBB452:
 4369              	.LBB446:
1830:lwIP/src/core/tcp_out.c ****     tcphdr->dest = lwip_htons(dst_port);
 4370              		.loc 1 1830 17 view .LVU1606
 4371 0054 A4F800E0 		strh	lr, [r4]	@ unaligned
1831:lwIP/src/core/tcp_out.c ****     tcphdr->seqno = seqno_be;
 4372              		.loc 1 1831 5 is_stmt 1 view .LVU1607
 4373              	.LVL394:
 4374              	.LBB443:
 4375              	.LBI436:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 4376              		.loc 2 934 30 view .LVU1608
 4377              	.LBB438:
 4378              		.loc 2 937 3 view .LVU1609
 4379              		.loc 2 937 3 is_stmt 0 view .LVU1610
ARM GAS  /tmp/ccH0Y1hM.s 			page 158


 4380              	.LBE438:
 4381              	.LBE443:
1831:lwIP/src/core/tcp_out.c ****     tcphdr->seqno = seqno_be;
 4382              		.loc 1 1831 18 view .LVU1611
 4383 0058 A4F802C0 		strh	ip, [r4, #2]	@ unaligned
1832:lwIP/src/core/tcp_out.c ****     tcphdr->ackno = lwip_htonl(ackno);
 4384              		.loc 1 1832 5 is_stmt 1 view .LVU1612
1832:lwIP/src/core/tcp_out.c ****     tcphdr->ackno = lwip_htonl(ackno);
 4385              		.loc 1 1832 19 is_stmt 0 view .LVU1613
 4386 005c 6660     		str	r6, [r4, #4]	@ unaligned
1833:lwIP/src/core/tcp_out.c ****     TCPH_HDRLEN_FLAGS_SET(tcphdr, (5 + optlen / 4), flags);
 4387              		.loc 1 1833 5 is_stmt 1 view .LVU1614
 4388              	.LVL395:
 4389              	.LBB444:
 4390              	.LBI440:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 4391              		.loc 2 900 31 view .LVU1615
 4392              	.LBB442:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 4393              		.loc 2 903 3 view .LVU1616
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 4394              		.loc 2 903 3 is_stmt 0 view .LVU1617
 4395              	.LBE442:
 4396              	.LBE444:
1833:lwIP/src/core/tcp_out.c ****     TCPH_HDRLEN_FLAGS_SET(tcphdr, (5 + optlen / 4), flags);
 4397              		.loc 1 1833 19 view .LVU1618
 4398 005e A560     		str	r5, [r4, #8]	@ unaligned
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 4399              		.loc 1 1834 5 is_stmt 1 view .LVU1619
 4400              	.LVL396:
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 4401              		.loc 1 1834 5 is_stmt 0 view .LVU1620
 4402              	.LBE446:
 4403              	.LBE452:
 4404              		.loc 2 937 3 is_stmt 1 view .LVU1621
 4405              	.LBB453:
 4406              	.LBB447:
1835:lwIP/src/core/tcp_out.c ****     tcphdr->chksum = 0;
 4407              		.loc 1 1835 5 view .LVU1622
1835:lwIP/src/core/tcp_out.c ****     tcphdr->chksum = 0;
 4408              		.loc 1 1835 5 is_stmt 0 view .LVU1623
 4409              	.LBE447:
 4410              	.LBE453:
 4411              		.loc 2 937 3 is_stmt 1 view .LVU1624
 4412              	.LBB454:
 4413              	.LBB448:
1836:lwIP/src/core/tcp_out.c ****     tcphdr->urgp = 0;
 4414              		.loc 1 1836 5 view .LVU1625
1837:lwIP/src/core/tcp_out.c ****   }
 4415              		.loc 1 1837 5 view .LVU1626
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 4416              		.loc 1 1834 5 is_stmt 0 view .LVU1627
 4417 0060 C4F80CA0 		str	r10, [r4, #12]	@ unaligned
 4418 0064 C4F81090 		str	r9, [r4, #16]	@ unaligned
1839:lwIP/src/core/tcp_out.c **** }
 4419              		.loc 1 1839 3 is_stmt 1 view .LVU1628
 4420              	.LVL397:
ARM GAS  /tmp/ccH0Y1hM.s 			page 159


1839:lwIP/src/core/tcp_out.c **** }
 4421              		.loc 1 1839 3 is_stmt 0 view .LVU1629
 4422              	.LBE448:
 4423              	.LBE454:
2001:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_DEBUG, ("tcp_rst: could not allocate memory for pbuf\n"));
 4424              		.loc 1 2001 3 is_stmt 1 view .LVU1630
2005:lwIP/src/core/tcp_out.c **** 
 4425              		.loc 1 2005 3 view .LVU1631
1874:lwIP/src/core/tcp_out.c ****   u32_t *opts;
 4426              		.loc 1 1874 3 view .LVU1632
1875:lwIP/src/core/tcp_out.c ****   u16_t sacks_len = 0;
 4427              		.loc 1 1875 3 view .LVU1633
1876:lwIP/src/core/tcp_out.c **** 
 4428              		.loc 1 1876 3 view .LVU1634
1878:lwIP/src/core/tcp_out.c **** 
 4429              		.loc 1 1878 3 view .LVU1635
1878:lwIP/src/core/tcp_out.c **** 
 4430              		.loc 1 1878 3 view .LVU1636
1878:lwIP/src/core/tcp_out.c **** 
 4431              		.loc 1 1878 3 view .LVU1637
1880:lwIP/src/core/tcp_out.c ****   opts = (u32_t *)(void *)(tcphdr + 1);
 4432              		.loc 1 1880 3 view .LVU1638
1881:lwIP/src/core/tcp_out.c **** 
 4433              		.loc 1 1881 3 view .LVU1639
1900:lwIP/src/core/tcp_out.c **** #endif
 4434              		.loc 1 1900 3 view .LVU1640
1907:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(sacks_len);
 4435              		.loc 1 1907 3 view .LVU1641
1908:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("options not filled", (u8_t *)opts == ((u8_t *)(tcphdr + 1)) + sacks_len * 4 + LWIP_T
 4436              		.loc 1 1908 3 view .LVU1642
1909:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(optflags); /* for LWIP_NOASSERT */
 4437              		.loc 1 1909 3 view .LVU1643
1909:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(optflags); /* for LWIP_NOASSERT */
 4438              		.loc 1 1909 3 view .LVU1644
1909:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(optflags); /* for LWIP_NOASSERT */
 4439              		.loc 1 1909 3 view .LVU1645
1910:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(opts); /* for LWIP_NOASSERT */
 4440              		.loc 1 1910 3 view .LVU1646
1911:lwIP/src/core/tcp_out.c **** }
 4441              		.loc 1 1911 3 view .LVU1647
2007:lwIP/src/core/tcp_out.c **** 
 4442              		.loc 1 2007 34 view .LVU1648
 4443              		.loc 1 2009 3 view .LVU1649
2010:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_RST_DEBUG, ("tcp_rst: seqno %"U32_F" ackno %"U32_F".\n", seqno, ackno));
2011:lwIP/src/core/tcp_out.c **** }
 4444              		.loc 1 2011 1 is_stmt 0 view .LVU1650
 4445 0068 01B0     		add	sp, sp, #4
 4446              	.LCFI30:
 4447              		.cfi_remember_state
 4448              		.cfi_def_cfa_offset 36
 4449              		@ sp needed
 4450 006a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4451              	.LCFI31:
 4452              		.cfi_restore 14
 4453              		.cfi_restore 11
 4454              		.cfi_restore 10
 4455              		.cfi_restore 9
ARM GAS  /tmp/ccH0Y1hM.s 			page 160


 4456              		.cfi_restore 8
 4457              		.cfi_restore 7
 4458              		.cfi_restore 6
 4459              		.cfi_restore 5
 4460              		.cfi_restore 4
 4461              		.cfi_def_cfa_offset 0
 4462              	.LVL398:
2009:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_RST_DEBUG, ("tcp_rst: seqno %"U32_F" ackno %"U32_F".\n", seqno, ackno));
 4463              		.loc 1 2009 3 view .LVU1651
 4464 006e FFF7FEBF 		b	tcp_output_control_segment
 4465              	.LVL399:
 4466              	.L428:
 4467              	.LCFI32:
 4468              		.cfi_restore_state
1989:lwIP/src/core/tcp_out.c **** 
 4469              		.loc 1 1989 3 is_stmt 1 discriminator 1 view .LVU1652
 4470 0072 0748     		ldr	r0, .L430
 4471              	.LVL400:
1989:lwIP/src/core/tcp_out.c **** 
 4472              		.loc 1 1989 3 is_stmt 0 discriminator 1 view .LVU1653
 4473 0074 FFF7FEFF 		bl	printf
 4474              	.LVL401:
 4475              	.L422:
1989:lwIP/src/core/tcp_out.c **** 
 4476              		.loc 1 1989 3 is_stmt 1 discriminator 2 view .LVU1654
1989:lwIP/src/core/tcp_out.c **** 
 4477              		.loc 1 1989 3 discriminator 2 view .LVU1655
1989:lwIP/src/core/tcp_out.c **** 
 4478              		.loc 1 1989 3 discriminator 2 view .LVU1656
1989:lwIP/src/core/tcp_out.c **** 
 4479              		.loc 1 1989 3 discriminator 2 view .LVU1657
1989:lwIP/src/core/tcp_out.c **** 
 4480              		.loc 1 1989 3 discriminator 2 view .LVU1658
1989:lwIP/src/core/tcp_out.c **** 
 4481              		.loc 1 1989 3 discriminator 2 view .LVU1659
 4482 0078 FEE7     		b	.L422
 4483              	.LVL402:
 4484              	.L429:
 4485              	.LBB455:
 4486              	.LBB449:
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4487              		.loc 1 1827 5 view .LVU1660
 4488 007a 0648     		ldr	r0, .L430+4
 4489              	.LVL403:
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4490              		.loc 1 1827 5 is_stmt 0 view .LVU1661
 4491 007c FFF7FEFF 		bl	printf
 4492              	.LVL404:
 4493              	.L425:
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4494              		.loc 1 1827 5 is_stmt 1 view .LVU1662
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4495              		.loc 1 1827 5 view .LVU1663
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4496              		.loc 1 1827 5 view .LVU1664
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4497              		.loc 1 1827 5 view .LVU1665
ARM GAS  /tmp/ccH0Y1hM.s 			page 161


1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4498              		.loc 1 1827 5 view .LVU1666
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4499              		.loc 1 1827 5 view .LVU1667
 4500 0080 FEE7     		b	.L425
 4501              	.LVL405:
 4502              	.L427:
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4503              		.loc 1 1827 5 is_stmt 0 view .LVU1668
 4504              	.LBE449:
 4505              	.LBE455:
1988:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rst: invalid remote_ip", remote_ip != NULL);
 4506              		.loc 1 1988 3 is_stmt 1 discriminator 1 view .LVU1669
 4507 0082 0548     		ldr	r0, .L430+8
 4508              	.LVL406:
1988:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rst: invalid remote_ip", remote_ip != NULL);
 4509              		.loc 1 1988 3 is_stmt 0 discriminator 1 view .LVU1670
 4510 0084 FFF7FEFF 		bl	printf
 4511              	.LVL407:
 4512              	.L420:
1988:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rst: invalid remote_ip", remote_ip != NULL);
 4513              		.loc 1 1988 3 is_stmt 1 discriminator 1 view .LVU1671
1988:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rst: invalid remote_ip", remote_ip != NULL);
 4514              		.loc 1 1988 3 discriminator 1 view .LVU1672
1988:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rst: invalid remote_ip", remote_ip != NULL);
 4515              		.loc 1 1988 3 discriminator 1 view .LVU1673
1988:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rst: invalid remote_ip", remote_ip != NULL);
 4516              		.loc 1 1988 3 discriminator 1 view .LVU1674
1988:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rst: invalid remote_ip", remote_ip != NULL);
 4517              		.loc 1 1988 3 discriminator 1 view .LVU1675
1988:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rst: invalid remote_ip", remote_ip != NULL);
 4518              		.loc 1 1988 3 discriminator 1 view .LVU1676
 4519 0088 FEE7     		b	.L420
 4520              	.LVL408:
 4521              	.L418:
 4522              		.loc 1 2011 1 is_stmt 0 view .LVU1677
 4523 008a 01B0     		add	sp, sp, #4
 4524              	.LCFI33:
 4525              		.cfi_def_cfa_offset 36
 4526              		@ sp needed
 4527 008c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4528              	.LVL409:
 4529              	.L431:
 4530              		.loc 1 2011 1 view .LVU1678
 4531              		.align	2
 4532              	.L430:
 4533 0090 1C000000 		.word	.LC36
 4534 0094 38000000 		.word	.LC37
 4535 0098 00000000 		.word	.LC35
 4536 009c 5014680B 		.word	191370320
 4537              		.cfi_endproc
 4538              	.LFE125:
 4540              		.section	.rodata.tcp_send_empty_ack.str1.4,"aMS",%progbits,1
 4541              		.align	2
 4542              	.LC38:
 4543 0000 7463705F 		.ascii	"tcp_send_empty_ack: invalid pcb\000"
 4543      73656E64 
ARM GAS  /tmp/ccH0Y1hM.s 			page 162


 4543      5F656D70 
 4543      74795F61 
 4543      636B3A20 
 4544              		.section	.text.tcp_send_empty_ack,"ax",%progbits
 4545              		.align	1
 4546              		.p2align 2,,3
 4547              		.global	tcp_send_empty_ack
 4548              		.syntax unified
 4549              		.thumb
 4550              		.thumb_func
 4551              		.fpu fpv4-sp-d16
 4553              	tcp_send_empty_ack:
 4554              	.LVL410:
 4555              	.LFB126:
2012:lwIP/src/core/tcp_out.c **** 
2013:lwIP/src/core/tcp_out.c **** /**
2014:lwIP/src/core/tcp_out.c ****  * Send an ACK without data.
2015:lwIP/src/core/tcp_out.c ****  *
2016:lwIP/src/core/tcp_out.c ****  * @param pcb Protocol control block for the TCP connection to send the ACK
2017:lwIP/src/core/tcp_out.c ****  */
2018:lwIP/src/core/tcp_out.c **** err_t
2019:lwIP/src/core/tcp_out.c **** tcp_send_empty_ack(struct tcp_pcb *pcb)
2020:lwIP/src/core/tcp_out.c **** {
 4556              		.loc 1 2020 1 is_stmt 1 view -0
 4557              		.cfi_startproc
 4558              		@ args = 0, pretend = 0, frame = 0
 4559              		@ frame_needed = 0, uses_anonymous_args = 0
2021:lwIP/src/core/tcp_out.c ****   err_t err;
 4560              		.loc 1 2021 3 view .LVU1680
2022:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
 4561              		.loc 1 2022 3 view .LVU1681
2023:lwIP/src/core/tcp_out.c ****   u8_t optlen, optflags = 0;
 4562              		.loc 1 2023 3 view .LVU1682
2024:lwIP/src/core/tcp_out.c ****   u8_t num_sacks = 0;
 4563              		.loc 1 2024 3 view .LVU1683
2025:lwIP/src/core/tcp_out.c **** 
2026:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_send_empty_ack: invalid pcb", pcb != NULL);
 4564              		.loc 1 2026 3 view .LVU1684
 4565              		.loc 1 2026 3 view .LVU1685
2020:lwIP/src/core/tcp_out.c ****   err_t err;
 4566              		.loc 1 2020 1 is_stmt 0 view .LVU1686
 4567 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4568              	.LCFI34:
 4569              		.cfi_def_cfa_offset 32
 4570              		.cfi_offset 3, -32
 4571              		.cfi_offset 4, -28
 4572              		.cfi_offset 5, -24
 4573              		.cfi_offset 6, -20
 4574              		.cfi_offset 7, -16
 4575              		.cfi_offset 8, -12
 4576              		.cfi_offset 9, -8
 4577              		.cfi_offset 14, -4
 4578              		.loc 1 2026 3 view .LVU1687
 4579 0004 0028     		cmp	r0, #0
 4580 0006 3ED0     		beq	.L443
 4581              		.loc 1 2026 3 is_stmt 1 discriminator 2 view .LVU1688
2027:lwIP/src/core/tcp_out.c **** 
ARM GAS  /tmp/ccH0Y1hM.s 			page 163


2028:lwIP/src/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
2029:lwIP/src/core/tcp_out.c ****   if (pcb->flags & TF_TIMESTAMP) {
2030:lwIP/src/core/tcp_out.c ****     optflags = TF_SEG_OPTS_TS;
2031:lwIP/src/core/tcp_out.c ****   }
2032:lwIP/src/core/tcp_out.c **** #endif
2033:lwIP/src/core/tcp_out.c ****   optlen = LWIP_TCP_OPT_LENGTH_SEGMENT(optflags, pcb);
 4582              		.loc 1 2033 3 discriminator 2 view .LVU1689
 4583              	.LVL411:
2034:lwIP/src/core/tcp_out.c **** 
2035:lwIP/src/core/tcp_out.c **** #if LWIP_TCP_SACK_OUT
2036:lwIP/src/core/tcp_out.c ****   /* For now, SACKs are only sent with empty ACKs */
2037:lwIP/src/core/tcp_out.c ****   if ((num_sacks = tcp_get_num_sacks(pcb, optlen)) > 0) {
2038:lwIP/src/core/tcp_out.c ****     optlen += 4 + num_sacks * 8; /* 4 bytes for header (including 2*NOP), plus 8B for each SACK */
2039:lwIP/src/core/tcp_out.c ****   }
2040:lwIP/src/core/tcp_out.c **** #endif
2041:lwIP/src/core/tcp_out.c **** 
2042:lwIP/src/core/tcp_out.c ****   p = tcp_output_alloc_header(pcb, optlen, 0, lwip_htonl(pcb->snd_nxt));
 4584              		.loc 1 2042 3 discriminator 2 view .LVU1690
 4585 0008 0446     		mov	r4, r0
 4586              	.LBB476:
 4587              	.LBB477:
 4588              	.LBB478:
 4589              	.LBB479:
1825:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
 4590              		.loc 1 1825 7 is_stmt 0 discriminator 2 view .LVU1691
 4591 000a 1421     		movs	r1, #20
 4592 000c 4FF42072 		mov	r2, #640
 4593 0010 2220     		movs	r0, #34
 4594              	.LVL412:
1825:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
 4595              		.loc 1 1825 7 discriminator 2 view .LVU1692
 4596              	.LBE479:
 4597              	.LBE478:
 4598              	.LBE477:
 4599              	.LBE476:
 4600              		.loc 1 2042 47 discriminator 2 view .LVU1693
 4601 0012 D4F85090 		ldr	r9, [r4, #80]
 4602              	.LVL413:
 4603              	.LBB531:
 4604              	.LBI531:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 4605              		.loc 2 900 31 is_stmt 1 discriminator 2 view .LVU1694
 4606              	.LBB532:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 4607              		.loc 2 903 3 discriminator 2 view .LVU1695
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 4608              		.loc 2 903 3 is_stmt 0 discriminator 2 view .LVU1696
 4609              	.LBE532:
 4610              	.LBE531:
 4611              	.LBB534:
 4612              	.LBI476:
1853:lwIP/src/core/tcp_out.c ****                         u32_t seqno_be /* already in network byte order */)
 4613              		.loc 1 1853 1 is_stmt 1 discriminator 2 view .LVU1697
 4614              	.LBB524:
1856:lwIP/src/core/tcp_out.c **** 
 4615              		.loc 1 1856 3 discriminator 2 view .LVU1698
1858:lwIP/src/core/tcp_out.c **** 
ARM GAS  /tmp/ccH0Y1hM.s 			page 164


 4616              		.loc 1 1858 3 discriminator 2 view .LVU1699
1858:lwIP/src/core/tcp_out.c **** 
 4617              		.loc 1 1858 3 discriminator 2 view .LVU1700
1858:lwIP/src/core/tcp_out.c **** 
 4618              		.loc 1 1858 3 discriminator 2 view .LVU1701
1860:lwIP/src/core/tcp_out.c ****     seqno_be, pcb->local_port, pcb->remote_port, TCP_ACK,
 4619              		.loc 1 1860 3 discriminator 2 view .LVU1702
1860:lwIP/src/core/tcp_out.c ****     seqno_be, pcb->local_port, pcb->remote_port, TCP_ACK,
 4620              		.loc 1 1860 7 is_stmt 0 discriminator 2 view .LVU1703
 4621 0016 D4F82480 		ldr	r8, [r4, #36]
 4622 001a E78A     		ldrh	r7, [r4, #22]
 4623 001c 268B     		ldrh	r6, [r4, #24]
 4624 001e 658D     		ldrh	r5, [r4, #42]
 4625              	.LVL414:
 4626              	.LBB506:
 4627              	.LBI478:
1818:lwIP/src/core/tcp_out.c ****                         u32_t seqno_be /* already in network byte order */,
 4628              		.loc 1 1818 1 is_stmt 1 discriminator 2 view .LVU1704
 4629              	.LBB496:
1822:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
 4630              		.loc 1 1822 3 discriminator 2 view .LVU1705
1823:lwIP/src/core/tcp_out.c **** 
 4631              		.loc 1 1823 3 discriminator 2 view .LVU1706
1825:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
 4632              		.loc 1 1825 3 discriminator 2 view .LVU1707
1825:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
 4633              		.loc 1 1825 7 is_stmt 0 discriminator 2 view .LVU1708
 4634 0020 FFF7FEFF 		bl	pbuf_alloc
 4635              	.LVL415:
1826:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("check that first pbuf can hold struct tcp_hdr",
 4636              		.loc 1 1826 3 is_stmt 1 discriminator 2 view .LVU1709
1826:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("check that first pbuf can hold struct tcp_hdr",
 4637              		.loc 1 1826 6 is_stmt 0 discriminator 2 view .LVU1710
 4638 0024 0146     		mov	r1, r0
 4639 0026 90B3     		cbz	r0, .L435
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4640              		.loc 1 1827 5 is_stmt 1 view .LVU1711
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4641              		.loc 1 1827 5 view .LVU1712
 4642 0028 4389     		ldrh	r3, [r0, #10]
 4643 002a 132B     		cmp	r3, #19
 4644 002c 37D9     		bls	.L444
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4645              		.loc 1 1827 5 view .LVU1713
1829:lwIP/src/core/tcp_out.c ****     tcphdr->src = lwip_htons(src_port);
 4646              		.loc 1 1829 5 view .LVU1714
 4647              	.LBE496:
 4648              	.LBE506:
 4649              	.LBB507:
 4650              	.LBB508:
1865:lwIP/src/core/tcp_out.c ****   }
 4651              		.loc 1 1865 49 is_stmt 0 view .LVU1715
 4652 002e B4F82AE0 		ldrh	lr, [r4, #42]
 4653              	.LBE508:
 4654              	.LBE507:
 4655              	.LBB512:
 4656              	.LBB497:
ARM GAS  /tmp/ccH0Y1hM.s 			page 165


 4657              	.LBB480:
 4658              	.LBB481:
 4659              		.loc 2 937 19 view .LVU1716
 4660 0032 97FA97FC 		rev16	ip, r7
 4661              	.LBE481:
 4662              	.LBE480:
 4663              	.LBB483:
 4664              	.LBB484:
 4665 0036 6ABA     		rev16	r2, r5
 4666              	.LBE484:
 4667              	.LBE483:
 4668              	.LBE497:
 4669              	.LBE512:
 4670              	.LBB513:
 4671              	.LBB509:
1865:lwIP/src/core/tcp_out.c ****   }
 4672              		.loc 1 1865 44 view .LVU1717
 4673 0038 676A     		ldr	r7, [r4, #36]
 4674              	.LVL416:
1865:lwIP/src/core/tcp_out.c ****   }
 4675              		.loc 1 1865 44 view .LVU1718
 4676              	.LBE509:
 4677              	.LBE513:
 4678              	.LBB514:
 4679              	.LBB498:
1829:lwIP/src/core/tcp_out.c ****     tcphdr->src = lwip_htons(src_port);
 4680              		.loc 1 1829 12 view .LVU1719
 4681 003a 4D68     		ldr	r5, [r1, #4]
 4682              	.LVL417:
 4683              	.LBB486:
 4684              	.LBB487:
 4685              		.loc 2 937 19 view .LVU1720
 4686 003c 76BA     		rev16	r6, r6
 4687              	.LVL418:
 4688              		.loc 2 937 19 view .LVU1721
 4689              	.LBE487:
 4690              	.LBE486:
 4691              	.LBE498:
 4692              	.LBE514:
 4693              	.LBE524:
 4694              	.LBE534:
 4695              	.LBB535:
 4696              	.LBB533:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 4697              		.loc 2 903 10 view .LVU1722
 4698 003e 99FA89F0 		rev	r0, r9
 4699              	.LVL419:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 4700              		.loc 2 903 10 view .LVU1723
 4701              	.LBE533:
 4702              	.LBE535:
 4703              	.LBB536:
 4704              	.LBB525:
 4705              	.LBB515:
 4706              	.LBB499:
 4707              	.LBB489:
 4708              	.LBB490:
ARM GAS  /tmp/ccH0Y1hM.s 			page 166


 4709 0042 98FA88F3 		rev	r3, r8
 4710              	.LVL420:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 4711              		.loc 2 903 10 view .LVU1724
 4712              	.LBE490:
 4713              	.LBE489:
1830:lwIP/src/core/tcp_out.c ****     tcphdr->dest = lwip_htons(dst_port);
 4714              		.loc 1 1830 5 is_stmt 1 view .LVU1725
 4715              	.LBB492:
 4716              	.LBI480:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 4717              		.loc 2 934 30 view .LVU1726
 4718              	.LBB482:
 4719              		.loc 2 937 3 view .LVU1727
 4720              		.loc 2 937 3 is_stmt 0 view .LVU1728
 4721              	.LBE482:
 4722              	.LBE492:
1830:lwIP/src/core/tcp_out.c ****     tcphdr->dest = lwip_htons(dst_port);
 4723              		.loc 1 1830 17 view .LVU1729
 4724 0046 A5F800C0 		strh	ip, [r5]	@ unaligned
1831:lwIP/src/core/tcp_out.c ****     tcphdr->seqno = seqno_be;
 4725              		.loc 1 1831 5 is_stmt 1 view .LVU1730
 4726              	.LVL421:
 4727              	.LBB493:
 4728              	.LBI486:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 4729              		.loc 2 934 30 view .LVU1731
 4730              	.LBB488:
 4731              		.loc 2 937 3 view .LVU1732
 4732              		.loc 2 937 3 is_stmt 0 view .LVU1733
 4733              	.LBE488:
 4734              	.LBE493:
 4735              	.LBE499:
 4736              	.LBE515:
 4737              	.LBB516:
 4738              	.LBB510:
1865:lwIP/src/core/tcp_out.c ****   }
 4739              		.loc 1 1865 44 view .LVU1734
 4740 004a 7744     		add	r7, r7, lr
 4741              	.LBE510:
 4742              	.LBE516:
 4743              	.LBB517:
 4744              	.LBB500:
1831:lwIP/src/core/tcp_out.c ****     tcphdr->seqno = seqno_be;
 4745              		.loc 1 1831 18 view .LVU1735
 4746 004c 6E80     		strh	r6, [r5, #2]	@ unaligned
1832:lwIP/src/core/tcp_out.c ****     tcphdr->ackno = lwip_htonl(ackno);
 4747              		.loc 1 1832 5 is_stmt 1 view .LVU1736
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 4748              		.loc 1 1834 5 is_stmt 0 view .LVU1737
 4749 004e 4FF0500E 		mov	lr, #80
 4750 0052 0026     		movs	r6, #0
 4751 0054 4FF0100C 		mov	ip, #16
1832:lwIP/src/core/tcp_out.c ****     tcphdr->ackno = lwip_htonl(ackno);
 4752              		.loc 1 1832 19 view .LVU1738
 4753 0058 6860     		str	r0, [r5, #4]	@ unaligned
1833:lwIP/src/core/tcp_out.c ****     TCPH_HDRLEN_FLAGS_SET(tcphdr, (5 + optlen / 4), flags);
ARM GAS  /tmp/ccH0Y1hM.s 			page 167


 4754              		.loc 1 1833 5 is_stmt 1 view .LVU1739
 4755              	.LVL422:
 4756              	.LBB494:
 4757              	.LBI489:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 4758              		.loc 2 900 31 view .LVU1740
 4759              	.LBB491:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 4760              		.loc 2 903 3 view .LVU1741
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 4761              		.loc 2 903 3 is_stmt 0 view .LVU1742
 4762              	.LBE491:
 4763              	.LBE494:
 4764              	.LBE500:
 4765              	.LBE517:
 4766              	.LBE525:
 4767              	.LBE536:
2043:lwIP/src/core/tcp_out.c ****   if (p == NULL) {
2044:lwIP/src/core/tcp_out.c ****     /* let tcp_fasttmr retry sending this ACK */
2045:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_ACK_DELAY | TF_ACK_NOW);
2046:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_output: (ACK) could not allocate pbuf\n"));
2047:lwIP/src/core/tcp_out.c ****     return ERR_BUF;
2048:lwIP/src/core/tcp_out.c ****   }
2049:lwIP/src/core/tcp_out.c ****   tcp_output_fill_options(pcb, p, optflags, num_sacks);
2050:lwIP/src/core/tcp_out.c **** 
2051:lwIP/src/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
2052:lwIP/src/core/tcp_out.c ****   pcb->ts_lastacksent = pcb->rcv_nxt;
2053:lwIP/src/core/tcp_out.c **** #endif
2054:lwIP/src/core/tcp_out.c **** 
2055:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_OUTPUT_DEBUG,
2056:lwIP/src/core/tcp_out.c ****               ("tcp_output: sending ACK for %"U32_F"\n", pcb->rcv_nxt));
2057:lwIP/src/core/tcp_out.c ****   err = tcp_output_control_segment(pcb, p, &pcb->local_ip, &pcb->remote_ip);
 4768              		.loc 1 2057 9 view .LVU1743
 4769 005a 2046     		mov	r0, r4
 4770              	.LBB537:
 4771              	.LBB526:
 4772              	.LBB518:
 4773              	.LBB501:
1833:lwIP/src/core/tcp_out.c ****     TCPH_HDRLEN_FLAGS_SET(tcphdr, (5 + optlen / 4), flags);
 4774              		.loc 1 1833 19 view .LVU1744
 4775 005c AB60     		str	r3, [r5, #8]	@ unaligned
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 4776              		.loc 1 1834 5 is_stmt 1 view .LVU1745
 4777              	.LVL423:
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 4778              		.loc 1 1834 5 is_stmt 0 view .LVU1746
 4779              	.LBE501:
 4780              	.LBE518:
 4781              	.LBE526:
 4782              	.LBE537:
 4783              		.loc 2 937 3 is_stmt 1 view .LVU1747
 4784              		.loc 1 2057 9 is_stmt 0 view .LVU1748
 4785 005e 231D     		adds	r3, r4, #4
 4786              	.LBB538:
 4787              	.LBB527:
 4788              	.LBB519:
 4789              	.LBB502:
ARM GAS  /tmp/ccH0Y1hM.s 			page 168


1835:lwIP/src/core/tcp_out.c ****     tcphdr->chksum = 0;
 4790              		.loc 1 1835 17 view .LVU1749
 4791 0060 EA81     		strh	r2, [r5, #14]	@ unaligned
 4792              	.LBE502:
 4793              	.LBE519:
 4794              	.LBE527:
 4795              	.LBE538:
 4796              		.loc 1 2057 9 view .LVU1750
 4797 0062 2246     		mov	r2, r4
 4798              	.LBB539:
 4799              	.LBB528:
 4800              	.LBB520:
 4801              	.LBB503:
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 4802              		.loc 1 1834 5 view .LVU1751
 4803 0064 85F80CE0 		strb	lr, [r5, #12]
 4804 0068 85F80DC0 		strb	ip, [r5, #13]
1835:lwIP/src/core/tcp_out.c ****     tcphdr->chksum = 0;
 4805              		.loc 1 1835 5 is_stmt 1 view .LVU1752
 4806              	.LVL424:
 4807              	.LBB495:
 4808              	.LBI483:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 4809              		.loc 2 934 30 view .LVU1753
 4810              	.LBB485:
 4811              		.loc 2 937 3 view .LVU1754
 4812              		.loc 2 937 3 is_stmt 0 view .LVU1755
 4813              	.LBE485:
 4814              	.LBE495:
1836:lwIP/src/core/tcp_out.c ****     tcphdr->urgp = 0;
 4815              		.loc 1 1836 5 is_stmt 1 view .LVU1756
1836:lwIP/src/core/tcp_out.c ****     tcphdr->urgp = 0;
 4816              		.loc 1 1836 20 is_stmt 0 view .LVU1757
 4817 006c 2E74     		strb	r6, [r5, #16]
 4818 006e 6E74     		strb	r6, [r5, #17]
1837:lwIP/src/core/tcp_out.c ****   }
 4819              		.loc 1 1837 5 is_stmt 1 view .LVU1758
1837:lwIP/src/core/tcp_out.c ****   }
 4820              		.loc 1 1837 18 is_stmt 0 view .LVU1759
 4821 0070 AE74     		strb	r6, [r5, #18]
 4822 0072 EE74     		strb	r6, [r5, #19]
1839:lwIP/src/core/tcp_out.c **** }
 4823              		.loc 1 1839 3 is_stmt 1 view .LVU1760
 4824              	.LVL425:
1839:lwIP/src/core/tcp_out.c **** }
 4825              		.loc 1 1839 3 is_stmt 0 view .LVU1761
 4826              	.LBE503:
 4827              	.LBE520:
1863:lwIP/src/core/tcp_out.c ****     /* If we're sending a packet, update the announced right window edge */
 4828              		.loc 1 1863 3 is_stmt 1 view .LVU1762
 4829              	.LBB521:
 4830              	.LBI507:
1853:lwIP/src/core/tcp_out.c ****                         u32_t seqno_be /* already in network byte order */)
 4831              		.loc 1 1853 1 view .LVU1763
 4832              	.LBB511:
1865:lwIP/src/core/tcp_out.c ****   }
 4833              		.loc 1 1865 5 view .LVU1764
ARM GAS  /tmp/ccH0Y1hM.s 			page 169


1865:lwIP/src/core/tcp_out.c ****   }
 4834              		.loc 1 1865 29 is_stmt 0 view .LVU1765
 4835 0074 E762     		str	r7, [r4, #44]
 4836              	.LVL426:
1865:lwIP/src/core/tcp_out.c ****   }
 4837              		.loc 1 1865 29 view .LVU1766
 4838              	.LBE511:
 4839              	.LBE521:
1867:lwIP/src/core/tcp_out.c **** }
 4840              		.loc 1 1867 3 is_stmt 1 view .LVU1767
1867:lwIP/src/core/tcp_out.c **** }
 4841              		.loc 1 1867 3 is_stmt 0 view .LVU1768
 4842              	.LBE528:
 4843              	.LBE539:
2043:lwIP/src/core/tcp_out.c ****     /* let tcp_fasttmr retry sending this ACK */
 4844              		.loc 1 2043 3 is_stmt 1 view .LVU1769
2049:lwIP/src/core/tcp_out.c **** 
 4845              		.loc 1 2049 3 view .LVU1770
1874:lwIP/src/core/tcp_out.c ****   u32_t *opts;
 4846              		.loc 1 1874 3 view .LVU1771
1875:lwIP/src/core/tcp_out.c ****   u16_t sacks_len = 0;
 4847              		.loc 1 1875 3 view .LVU1772
1876:lwIP/src/core/tcp_out.c **** 
 4848              		.loc 1 1876 3 view .LVU1773
1878:lwIP/src/core/tcp_out.c **** 
 4849              		.loc 1 1878 3 view .LVU1774
1878:lwIP/src/core/tcp_out.c **** 
 4850              		.loc 1 1878 3 view .LVU1775
1878:lwIP/src/core/tcp_out.c **** 
 4851              		.loc 1 1878 3 view .LVU1776
1880:lwIP/src/core/tcp_out.c ****   opts = (u32_t *)(void *)(tcphdr + 1);
 4852              		.loc 1 1880 3 view .LVU1777
1881:lwIP/src/core/tcp_out.c **** 
 4853              		.loc 1 1881 3 view .LVU1778
1900:lwIP/src/core/tcp_out.c **** #endif
 4854              		.loc 1 1900 3 view .LVU1779
1907:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(sacks_len);
 4855              		.loc 1 1907 3 view .LVU1780
1908:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("options not filled", (u8_t *)opts == ((u8_t *)(tcphdr + 1)) + sacks_len * 4 + LWIP_T
 4856              		.loc 1 1908 3 view .LVU1781
1909:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(optflags); /* for LWIP_NOASSERT */
 4857              		.loc 1 1909 3 view .LVU1782
1909:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(optflags); /* for LWIP_NOASSERT */
 4858              		.loc 1 1909 3 view .LVU1783
1909:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(optflags); /* for LWIP_NOASSERT */
 4859              		.loc 1 1909 3 view .LVU1784
1910:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(opts); /* for LWIP_NOASSERT */
 4860              		.loc 1 1910 3 view .LVU1785
1911:lwIP/src/core/tcp_out.c **** }
 4861              		.loc 1 1911 3 view .LVU1786
2056:lwIP/src/core/tcp_out.c ****   err = tcp_output_control_segment(pcb, p, &pcb->local_ip, &pcb->remote_ip);
 4862              		.loc 1 2056 72 view .LVU1787
 4863              		.loc 1 2057 3 view .LVU1788
 4864              		.loc 1 2057 9 is_stmt 0 view .LVU1789
 4865 0076 FFF7FEFF 		bl	tcp_output_control_segment
 4866              	.LVL427:
2058:lwIP/src/core/tcp_out.c ****   if (err != ERR_OK) {
ARM GAS  /tmp/ccH0Y1hM.s 			page 170


 4867              		.loc 1 2058 3 is_stmt 1 view .LVU1790
2059:lwIP/src/core/tcp_out.c ****     /* let tcp_fasttmr retry sending this ACK */
2060:lwIP/src/core/tcp_out.c ****     tcp_set_flags(pcb, TF_ACK_DELAY | TF_ACK_NOW);
 4868              		.loc 1 2060 5 is_stmt 0 view .LVU1791
 4869 007a 638B     		ldrh	r3, [r4, #26]
2058:lwIP/src/core/tcp_out.c ****   if (err != ERR_OK) {
 4870              		.loc 1 2058 6 view .LVU1792
 4871 007c 50B9     		cbnz	r0, .L442
2061:lwIP/src/core/tcp_out.c ****   } else {
2062:lwIP/src/core/tcp_out.c ****     /* remove ACK flags from the PCB, as we sent an empty ACK now */
2063:lwIP/src/core/tcp_out.c ****     tcp_clear_flags(pcb, TF_ACK_DELAY | TF_ACK_NOW);
 4872              		.loc 1 2063 5 is_stmt 1 view .LVU1793
 4873              		.loc 1 2063 5 view .LVU1794
 4874 007e 23F00303 		bic	r3, r3, #3
 4875 0082 6383     		strh	r3, [r4, #26]	@ movhi
 4876 0084 09E0     		b	.L440
 4877              	.LVL428:
 4878              	.L443:
2026:lwIP/src/core/tcp_out.c **** 
 4879              		.loc 1 2026 3 discriminator 1 view .LVU1795
 4880 0086 0848     		ldr	r0, .L445
 4881              	.LVL429:
2026:lwIP/src/core/tcp_out.c **** 
 4882              		.loc 1 2026 3 is_stmt 0 discriminator 1 view .LVU1796
 4883 0088 FFF7FEFF 		bl	printf
 4884              	.LVL430:
 4885              	.L434:
2026:lwIP/src/core/tcp_out.c **** 
 4886              		.loc 1 2026 3 is_stmt 1 discriminator 1 view .LVU1797
2026:lwIP/src/core/tcp_out.c **** 
 4887              		.loc 1 2026 3 discriminator 1 view .LVU1798
2026:lwIP/src/core/tcp_out.c **** 
 4888              		.loc 1 2026 3 discriminator 1 view .LVU1799
2026:lwIP/src/core/tcp_out.c **** 
 4889              		.loc 1 2026 3 discriminator 1 view .LVU1800
2026:lwIP/src/core/tcp_out.c **** 
 4890              		.loc 1 2026 3 discriminator 1 view .LVU1801
2026:lwIP/src/core/tcp_out.c **** 
 4891              		.loc 1 2026 3 discriminator 1 view .LVU1802
 4892 008c FEE7     		b	.L434
 4893              	.LVL431:
 4894              	.L435:
 4895              	.LBB540:
 4896              	.LBB529:
 4897              	.LBB522:
 4898              	.LBB504:
1839:lwIP/src/core/tcp_out.c **** }
 4899              		.loc 1 1839 3 view .LVU1803
1839:lwIP/src/core/tcp_out.c **** }
 4900              		.loc 1 1839 3 is_stmt 0 view .LVU1804
 4901              	.LBE504:
 4902              	.LBE522:
1863:lwIP/src/core/tcp_out.c ****     /* If we're sending a packet, update the announced right window edge */
 4903              		.loc 1 1863 3 is_stmt 1 view .LVU1805
1867:lwIP/src/core/tcp_out.c **** }
 4904              		.loc 1 1867 3 view .LVU1806
1867:lwIP/src/core/tcp_out.c **** }
ARM GAS  /tmp/ccH0Y1hM.s 			page 171


 4905              		.loc 1 1867 3 is_stmt 0 view .LVU1807
 4906              	.LBE529:
 4907              	.LBE540:
2043:lwIP/src/core/tcp_out.c ****     /* let tcp_fasttmr retry sending this ACK */
 4908              		.loc 1 2043 3 is_stmt 1 view .LVU1808
2045:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_output: (ACK) could not allocate pbuf\n"));
 4909              		.loc 1 2045 5 view .LVU1809
2045:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_output: (ACK) could not allocate pbuf\n"));
 4910              		.loc 1 2045 5 view .LVU1810
 4911 008e 638B     		ldrh	r3, [r4, #26]
2047:lwIP/src/core/tcp_out.c ****   }
 4912              		.loc 1 2047 12 is_stmt 0 view .LVU1811
 4913 0090 6FF00100 		mvn	r0, #1
 4914              	.LVL432:
 4915              	.L442:
2045:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_output: (ACK) could not allocate pbuf\n"));
 4916              		.loc 1 2045 5 view .LVU1812
 4917 0094 43F00303 		orr	r3, r3, #3
 4918 0098 6383     		strh	r3, [r4, #26]	@ movhi
2045:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_output: (ACK) could not allocate pbuf\n"));
 4919              		.loc 1 2045 5 is_stmt 1 view .LVU1813
2046:lwIP/src/core/tcp_out.c ****     return ERR_BUF;
 4920              		.loc 1 2046 83 view .LVU1814
2047:lwIP/src/core/tcp_out.c ****   }
 4921              		.loc 1 2047 5 view .LVU1815
 4922              	.L440:
2064:lwIP/src/core/tcp_out.c ****   }
2065:lwIP/src/core/tcp_out.c **** 
2066:lwIP/src/core/tcp_out.c ****   return err;
2067:lwIP/src/core/tcp_out.c **** }
 4923              		.loc 1 2067 1 is_stmt 0 view .LVU1816
 4924 009a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4925              	.LVL433:
 4926              	.L444:
 4927              	.LBB541:
 4928              	.LBB530:
 4929              	.LBB523:
 4930              	.LBB505:
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4931              		.loc 1 1827 5 is_stmt 1 view .LVU1817
 4932 009e 0348     		ldr	r0, .L445+4
 4933              	.LVL434:
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4934              		.loc 1 1827 5 is_stmt 0 view .LVU1818
 4935 00a0 FFF7FEFF 		bl	printf
 4936              	.LVL435:
 4937              	.L437:
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4938              		.loc 1 1827 5 is_stmt 1 view .LVU1819
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4939              		.loc 1 1827 5 view .LVU1820
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4940              		.loc 1 1827 5 view .LVU1821
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4941              		.loc 1 1827 5 view .LVU1822
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4942              		.loc 1 1827 5 view .LVU1823
ARM GAS  /tmp/ccH0Y1hM.s 			page 172


1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 4943              		.loc 1 1827 5 view .LVU1824
 4944 00a4 FEE7     		b	.L437
 4945              	.L446:
 4946 00a6 00BF     		.align	2
 4947              	.L445:
 4948 00a8 00000000 		.word	.LC38
 4949 00ac 38000000 		.word	.LC37
 4950              	.LBE505:
 4951              	.LBE523:
 4952              	.LBE530:
 4953              	.LBE541:
 4954              		.cfi_endproc
 4955              	.LFE126:
 4957              		.section	.rodata.tcp_output.part.0.str1.4,"aMS",%progbits,1
 4958              		.align	2
 4959              	.LC39:
 4960 0000 52535420 		.ascii	"RST not expected here!\000"
 4960      6E6F7420 
 4960      65787065 
 4960      63746564 
 4960      20686572 
 4961 0017 00       		.align	2
 4962              	.LC40:
 4963 0018 6F707469 		.ascii	"options not filled\000"
 4963      6F6E7320 
 4963      6E6F7420 
 4963      66696C6C 
 4963      656400
 4964              		.section	.text.tcp_output.part.0,"ax",%progbits
 4965              		.align	1
 4966              		.p2align 2,,3
 4967              		.syntax unified
 4968              		.thumb
 4969              		.thumb_func
 4970              		.fpu fpv4-sp-d16
 4972              	tcp_output.part.0:
 4973              	.LVL436:
 4974              	.LFB136:
1237:lwIP/src/core/tcp_out.c **** {
 4975              		.loc 1 1237 1 view -0
 4976              		.cfi_startproc
 4977              		@ args = 0, pretend = 0, frame = 0
 4978              		@ frame_needed = 0, uses_anonymous_args = 0
1262:lwIP/src/core/tcp_out.c **** 
 4979              		.loc 1 1262 3 view .LVU1826
1237:lwIP/src/core/tcp_out.c **** {
 4980              		.loc 1 1237 1 is_stmt 0 view .LVU1827
 4981 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4982              	.LCFI35:
 4983              		.cfi_def_cfa_offset 36
 4984              		.cfi_offset 4, -36
 4985              		.cfi_offset 5, -32
 4986              		.cfi_offset 6, -28
 4987              		.cfi_offset 7, -24
 4988              		.cfi_offset 8, -20
 4989              		.cfi_offset 9, -16
ARM GAS  /tmp/ccH0Y1hM.s 			page 173


 4990              		.cfi_offset 10, -12
 4991              		.cfi_offset 11, -8
 4992              		.cfi_offset 14, -4
1264:lwIP/src/core/tcp_out.c **** 
 4993              		.loc 1 1264 7 view .LVU1828
 4994 0004 C56E     		ldr	r5, [r0, #108]
1237:lwIP/src/core/tcp_out.c **** {
 4995              		.loc 1 1237 1 view .LVU1829
 4996 0006 85B0     		sub	sp, sp, #20
 4997              	.LCFI36:
 4998              		.cfi_def_cfa_offset 56
1237:lwIP/src/core/tcp_out.c **** {
 4999              		.loc 1 1237 1 view .LVU1830
 5000 0008 0446     		mov	r4, r0
 5001              	.LVL437:
1264:lwIP/src/core/tcp_out.c **** 
 5002              		.loc 1 1264 3 is_stmt 1 view .LVU1831
1266:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_output: nothing to send (%p)\n",
 5003              		.loc 1 1266 3 view .LVU1832
1266:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_output: nothing to send (%p)\n",
 5004              		.loc 1 1266 6 is_stmt 0 view .LVU1833
 5005 000a 85B3     		cbz	r5, .L517
 5006              	.LBB581:
 5007              	.LBB582:
 136:lwIP/src/core/tcp_out.c ****     return netif_get_by_index(pcb->netif_idx);
 5008              		.loc 1 136 28 view .LVU1834
 5009 000c 007A     		ldrb	r0, [r0, #8]	@ zero_extendqisi2
 5010              	.LVL438:
 136:lwIP/src/core/tcp_out.c ****     return netif_get_by_index(pcb->netif_idx);
 5011              		.loc 1 136 28 view .LVU1835
 5012              	.LBE582:
 5013              	.LBE581:
1290:lwIP/src/core/tcp_out.c ****   if (netif == NULL) {
 5014              		.loc 1 1290 42 view .LVU1836
 5015 000e 04F1040B 		add	fp, r4, #4
1262:lwIP/src/core/tcp_out.c **** 
 5016              		.loc 1 1262 9 view .LVU1837
 5017 0012 B4F84890 		ldrh	r9, [r4, #72]
 5018 0016 B4F86080 		ldrh	r8, [r4, #96]
1287:lwIP/src/core/tcp_out.c ****   }
 5019              		.loc 1 1287 64 is_stmt 1 view .LVU1838
1290:lwIP/src/core/tcp_out.c ****   if (netif == NULL) {
 5020              		.loc 1 1290 3 view .LVU1839
 5021              	.LVL439:
 5022              	.LBB585:
 5023              	.LBI581:
 132:lwIP/src/core/tcp_out.c **** {
 5024              		.loc 1 132 1 view .LVU1840
 5025              	.LBB583:
 134:lwIP/src/core/tcp_out.c **** 
 5026              		.loc 1 134 3 view .LVU1841
 136:lwIP/src/core/tcp_out.c ****     return netif_get_by_index(pcb->netif_idx);
 5027              		.loc 1 136 3 view .LVU1842
 136:lwIP/src/core/tcp_out.c ****     return netif_get_by_index(pcb->netif_idx);
 5028              		.loc 1 136 21 is_stmt 0 view .LVU1843
 5029 001a 0028     		cmp	r0, #0
 5030 001c 40F08D80 		bne	.L518
ARM GAS  /tmp/ccH0Y1hM.s 			page 174


 139:lwIP/src/core/tcp_out.c ****   }
 5031              		.loc 1 139 5 is_stmt 1 view .LVU1844
 139:lwIP/src/core/tcp_out.c ****   }
 5032              		.loc 1 139 12 is_stmt 0 view .LVU1845
 5033 0020 5846     		mov	r0, fp
 5034 0022 FFF7FEFF 		bl	ip4_route
 5035              	.LVL440:
 139:lwIP/src/core/tcp_out.c ****   }
 5036              		.loc 1 139 12 view .LVU1846
 5037 0026 0646     		mov	r6, r0
 5038              	.L451:
 5039              	.LVL441:
 139:lwIP/src/core/tcp_out.c ****   }
 5040              		.loc 1 139 12 view .LVU1847
 5041              	.LBE583:
 5042              	.LBE585:
1291:lwIP/src/core/tcp_out.c ****     return ERR_RTE;
 5043              		.loc 1 1291 3 is_stmt 1 view .LVU1848
1291:lwIP/src/core/tcp_out.c ****     return ERR_RTE;
 5044              		.loc 1 1291 6 is_stmt 0 view .LVU1849
 5045 0028 002E     		cmp	r6, #0
 5046 002a 00F00F81 		beq	.L486
1296:lwIP/src/core/tcp_out.c ****     const ip_addr_t *local_ip = ip_netif_get_local_ip(netif, &pcb->remote_ip);
 5047              		.loc 1 1296 3 is_stmt 1 view .LVU1850
1296:lwIP/src/core/tcp_out.c ****     const ip_addr_t *local_ip = ip_netif_get_local_ip(netif, &pcb->remote_ip);
 5048              		.loc 1 1296 7 is_stmt 0 view .LVU1851
 5049 002e 2368     		ldr	r3, [r4]
 5050 0030 0BB9     		cbnz	r3, .L453
 5051              	.LBB586:
1297:lwIP/src/core/tcp_out.c ****     if (local_ip == NULL) {
 5052              		.loc 1 1297 5 is_stmt 1 view .LVU1852
 5053              	.LVL442:
1298:lwIP/src/core/tcp_out.c ****       return ERR_RTE;
 5054              		.loc 1 1298 5 view .LVU1853
1301:lwIP/src/core/tcp_out.c ****   }
 5055              		.loc 1 1301 5 view .LVU1854
 5056 0032 3368     		ldr	r3, [r6]
 5057 0034 2360     		str	r3, [r4]
 5058              	.LVL443:
 5059              	.L453:
1301:lwIP/src/core/tcp_out.c ****   }
 5060              		.loc 1 1301 5 is_stmt 0 view .LVU1855
 5061              	.LBE586:
1305:lwIP/src/core/tcp_out.c ****     /* We need to start the persistent timer when the next unsent segment does not fit
 5062              		.loc 1 1305 7 view .LVU1856
 5063 0036 EF68     		ldr	r7, [r5, #12]
1262:lwIP/src/core/tcp_out.c **** 
 5064              		.loc 1 1262 9 view .LVU1857
 5065 0038 C145     		cmp	r9, r8
1305:lwIP/src/core/tcp_out.c ****     /* We need to start the persistent timer when the next unsent segment does not fit
 5066              		.loc 1 1305 58 view .LVU1858
 5067 003a 2B89     		ldrh	r3, [r5, #8]
1305:lwIP/src/core/tcp_out.c ****     /* We need to start the persistent timer when the next unsent segment does not fit
 5068              		.loc 1 1305 7 view .LVU1859
 5069 003c 7A68     		ldr	r2, [r7, #4]	@ unaligned
1262:lwIP/src/core/tcp_out.c **** 
 5070              		.loc 1 1262 9 view .LVU1860
ARM GAS  /tmp/ccH0Y1hM.s 			page 175


 5071 003e 28BF     		it	cs
 5072 0040 C146     		movcs	r9, r8
 5073              	.LVL444:
1305:lwIP/src/core/tcp_out.c ****     /* We need to start the persistent timer when the next unsent segment does not fit
 5074              		.loc 1 1305 3 is_stmt 1 view .LVU1861
 5075              	.LBB587:
 5076              	.LBI587:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 5077              		.loc 2 900 31 view .LVU1862
 5078              	.LBB588:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5079              		.loc 2 903 3 view .LVU1863
 5080              	.LBE588:
 5081              	.LBE587:
1305:lwIP/src/core/tcp_out.c ****     /* We need to start the persistent timer when the next unsent segment does not fit
 5082              		.loc 1 1305 53 is_stmt 0 view .LVU1864
 5083 0042 616C     		ldr	r1, [r4, #68]
 5084              	.LBB590:
 5085              	.LBB589:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5086              		.loc 2 903 10 view .LVU1865
 5087 0044 12BA     		rev	r2, r2
 5088              	.LVL445:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5089              		.loc 2 903 10 view .LVU1866
 5090              	.LBE589:
 5091              	.LBE590:
1305:lwIP/src/core/tcp_out.c ****     /* We need to start the persistent timer when the next unsent segment does not fit
 5092              		.loc 1 1305 53 view .LVU1867
 5093 0046 5B1A     		subs	r3, r3, r1
 5094 0048 1344     		add	r3, r3, r2
1305:lwIP/src/core/tcp_out.c ****     /* We need to start the persistent timer when the next unsent segment does not fit
 5095              		.loc 1 1305 6 view .LVU1868
 5096 004a 9945     		cmp	r9, r3
 5097 004c 17D2     		bcs	.L454
1312:lwIP/src/core/tcp_out.c ****       pcb->persist_cnt = 0;
 5098              		.loc 1 1312 5 is_stmt 1 view .LVU1869
1312:lwIP/src/core/tcp_out.c ****       pcb->persist_cnt = 0;
 5099              		.loc 1 1312 8 is_stmt 0 view .LVU1870
 5100 004e B4F86030 		ldrh	r3, [r4, #96]
 5101 0052 4B45     		cmp	r3, r9
 5102 0054 00F0CC80 		beq	.L519
 5103              	.L455:
1318:lwIP/src/core/tcp_out.c ****       return tcp_send_empty_ack(pcb);
 5104              		.loc 1 1318 5 is_stmt 1 view .LVU1871
1318:lwIP/src/core/tcp_out.c ****       return tcp_send_empty_ack(pcb);
 5105              		.loc 1 1318 12 is_stmt 0 view .LVU1872
 5106 0058 638B     		ldrh	r3, [r4, #26]
1318:lwIP/src/core/tcp_out.c ****       return tcp_send_empty_ack(pcb);
 5107              		.loc 1 1318 8 view .LVU1873
 5108 005a 9D07     		lsls	r5, r3, #30
 5109              	.LVL446:
1318:lwIP/src/core/tcp_out.c ****       return tcp_send_empty_ack(pcb);
 5110              		.loc 1 1318 8 view .LVU1874
 5111 005c 00F1D880 		bmi	.L520
 5112              	.LVL447:
 5113              	.L449:
ARM GAS  /tmp/ccH0Y1hM.s 			page 176


1418:lwIP/src/core/tcp_out.c ****   return ERR_OK;
 5114              		.loc 1 1418 3 is_stmt 1 view .LVU1875
1418:lwIP/src/core/tcp_out.c ****   return ERR_OK;
 5115              		.loc 1 1418 3 view .LVU1876
 5116 0060 23F08003 		bic	r3, r3, #128
1419:lwIP/src/core/tcp_out.c **** }
 5117              		.loc 1 1419 10 is_stmt 0 view .LVU1877
 5118 0064 0020     		movs	r0, #0
1418:lwIP/src/core/tcp_out.c ****   return ERR_OK;
 5119              		.loc 1 1418 3 view .LVU1878
 5120 0066 6383     		strh	r3, [r4, #26]	@ movhi
1418:lwIP/src/core/tcp_out.c ****   return ERR_OK;
 5121              		.loc 1 1418 3 is_stmt 1 view .LVU1879
1419:lwIP/src/core/tcp_out.c **** }
 5122              		.loc 1 1419 3 view .LVU1880
 5123              	.L514:
1420:lwIP/src/core/tcp_out.c **** 
 5124              		.loc 1 1420 1 is_stmt 0 view .LVU1881
 5125 0068 05B0     		add	sp, sp, #20
 5126              	.LCFI37:
 5127              		.cfi_remember_state
 5128              		.cfi_def_cfa_offset 36
 5129              		@ sp needed
 5130 006a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5131              	.LVL448:
 5132              	.L517:
 5133              	.LCFI38:
 5134              		.cfi_restore_state
1268:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_CWND_DEBUG, ("tcp_output: snd_wnd %"TCPWNDSIZE_F
 5135              		.loc 1 1268 57 is_stmt 1 view .LVU1882
1272:lwIP/src/core/tcp_out.c **** 
 5136              		.loc 1 1272 78 view .LVU1883
1276:lwIP/src/core/tcp_out.c ****       return tcp_send_empty_ack(pcb);
 5137              		.loc 1 1276 5 view .LVU1884
1276:lwIP/src/core/tcp_out.c ****       return tcp_send_empty_ack(pcb);
 5138              		.loc 1 1276 12 is_stmt 0 view .LVU1885
 5139 006e 438B     		ldrh	r3, [r0, #26]
1276:lwIP/src/core/tcp_out.c ****       return tcp_send_empty_ack(pcb);
 5140              		.loc 1 1276 8 view .LVU1886
 5141 0070 9E07     		lsls	r6, r3, #30
 5142 0072 F5D5     		bpl	.L449
 5143              	.LVL449:
 5144              	.L516:
1420:lwIP/src/core/tcp_out.c **** 
 5145              		.loc 1 1420 1 view .LVU1887
 5146 0074 05B0     		add	sp, sp, #20
 5147              	.LCFI39:
 5148              		.cfi_remember_state
 5149              		.cfi_def_cfa_offset 36
 5150              		@ sp needed
 5151 0076 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5152              	.LCFI40:
 5153              		.cfi_restore 14
 5154              		.cfi_restore 11
 5155              		.cfi_restore 10
 5156              		.cfi_restore 9
 5157              		.cfi_restore 8
ARM GAS  /tmp/ccH0Y1hM.s 			page 177


 5158              		.cfi_restore 7
 5159              		.cfi_restore 6
 5160              		.cfi_restore 5
 5161              		.cfi_restore 4
 5162              		.cfi_def_cfa_offset 0
1319:lwIP/src/core/tcp_out.c ****     }
 5163              		.loc 1 1319 14 view .LVU1888
 5164 007a FFF7FEBF 		b	tcp_send_empty_ack
 5165              	.LVL450:
 5166              	.L454:
 5167              	.LCFI41:
 5168              		.cfi_restore_state
1324:lwIP/src/core/tcp_out.c **** 
 5169              		.loc 1 1324 3 is_stmt 1 view .LVU1889
1324:lwIP/src/core/tcp_out.c **** 
 5170              		.loc 1 1324 24 is_stmt 0 view .LVU1890
 5171 007e 0022     		movs	r2, #0
1327:lwIP/src/core/tcp_out.c ****   if (useg != NULL) {
 5172              		.loc 1 1327 8 view .LVU1891
 5173 0080 236F     		ldr	r3, [r4, #112]
1324:lwIP/src/core/tcp_out.c **** 
 5174              		.loc 1 1324 24 view .LVU1892
 5175 0082 84F89520 		strb	r2, [r4, #149]
1327:lwIP/src/core/tcp_out.c ****   if (useg != NULL) {
 5176              		.loc 1 1327 3 is_stmt 1 view .LVU1893
 5177              	.LVL451:
1328:lwIP/src/core/tcp_out.c ****     for (; useg->next != NULL; useg = useg->next);
 5178              		.loc 1 1328 3 view .LVU1894
1328:lwIP/src/core/tcp_out.c ****     for (; useg->next != NULL; useg = useg->next);
 5179              		.loc 1 1328 6 is_stmt 0 view .LVU1895
 5180 0086 002B     		cmp	r3, #0
 5181 0088 00F0B080 		beq	.L487
 5182              	.LVL452:
 5183              	.L457:
1329:lwIP/src/core/tcp_out.c ****   }
 5184              		.loc 1 1329 12 is_stmt 1 view .LVU1896
 5185 008c 9846     		mov	r8, r3
1329:lwIP/src/core/tcp_out.c ****   }
 5186              		.loc 1 1329 16 is_stmt 0 view .LVU1897
 5187 008e 1B68     		ldr	r3, [r3]
 5188              	.LVL453:
1329:lwIP/src/core/tcp_out.c ****   }
 5189              		.loc 1 1329 5 view .LVU1898
 5190 0090 002B     		cmp	r3, #0
 5191 0092 FBD1     		bne	.L457
 5192              	.L456:
 5193              	.LVL454:
 5194              	.LBB591:
 5195              	.LBI591:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 5196              		.loc 2 900 31 is_stmt 1 view .LVU1899
 5197              	.LBB592:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5198              		.loc 2 903 3 view .LVU1900
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5199              		.loc 2 903 3 is_stmt 0 view .LVU1901
 5200              	.LBE592:
ARM GAS  /tmp/ccH0Y1hM.s 			page 178


 5201              	.LBE591:
 5202              	.LBB595:
 5203              	.LBB596:
1559:lwIP/src/core/tcp_out.c **** 
 5204              		.loc 1 1559 23 view .LVU1902
 5205 0094 4FF0000A 		mov	r10, #0
 5206              	.LVL455:
 5207              	.L482:
1559:lwIP/src/core/tcp_out.c **** 
 5208              		.loc 1 1559 23 view .LVU1903
 5209              	.LBE596:
 5210              	.LBE595:
1334:lwIP/src/core/tcp_out.c ****                 (TCPH_FLAGS(seg->tcphdr) & TCP_RST) == 0);
 5211              		.loc 1 1334 5 is_stmt 1 view .LVU1904
1334:lwIP/src/core/tcp_out.c ****                 (TCPH_FLAGS(seg->tcphdr) & TCP_RST) == 0);
 5212              		.loc 1 1334 5 view .LVU1905
 5213 0098 BB89     		ldrh	r3, [r7, #12]	@ unaligned
 5214              	.LBB625:
 5215              	.LBB626:
 5216              		.loc 2 937 19 is_stmt 0 view .LVU1906
 5217 009a 5ABA     		rev16	r2, r3
 5218              	.LBE626:
 5219              	.LBE625:
1334:lwIP/src/core/tcp_out.c ****                 (TCPH_FLAGS(seg->tcphdr) & TCP_RST) == 0);
 5220              		.loc 1 1334 5 view .LVU1907
 5221 009c 9BB2     		uxth	r3, r3
 5222              	.LVL456:
 5223              	.LBB628:
 5224              	.LBI625:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 5225              		.loc 2 934 30 is_stmt 1 view .LVU1908
 5226              	.LBB627:
 5227              		.loc 2 937 3 view .LVU1909
 5228              		.loc 2 937 3 is_stmt 0 view .LVU1910
 5229              	.LBE627:
 5230              	.LBE628:
1334:lwIP/src/core/tcp_out.c ****                 (TCPH_FLAGS(seg->tcphdr) & TCP_RST) == 0);
 5231              		.loc 1 1334 5 view .LVU1911
 5232 009e 5007     		lsls	r0, r2, #29
 5233 00a0 00F1E780 		bmi	.L521
1334:lwIP/src/core/tcp_out.c ****                 (TCPH_FLAGS(seg->tcphdr) & TCP_RST) == 0);
 5234              		.loc 1 1334 5 is_stmt 1 view .LVU1912
1343:lwIP/src/core/tcp_out.c ****         ((pcb->flags & (TF_NAGLEMEMERR | TF_FIN)) == 0)) {
 5235              		.loc 1 1343 5 view .LVU1913
1343:lwIP/src/core/tcp_out.c ****         ((pcb->flags & (TF_NAGLEMEMERR | TF_FIN)) == 0)) {
 5236              		.loc 1 1343 10 is_stmt 0 view .LVU1914
 5237 00a4 226F     		ldr	r2, [r4, #112]
 5238 00a6 1AB1     		cbz	r2, .L460
 5239 00a8 608B     		ldrh	r0, [r4, #26]
 5240 00aa 10F0440F 		tst	r0, #68
 5241 00ae 48D0     		beq	.L522
 5242              	.L460:
1356:lwIP/src/core/tcp_out.c ****       TCPH_SET_FLAG(seg->tcphdr, TCP_ACK);
 5243              		.loc 1 1356 5 is_stmt 1 view .LVU1915
1356:lwIP/src/core/tcp_out.c ****       TCPH_SET_FLAG(seg->tcphdr, TCP_ACK);
 5244              		.loc 1 1356 8 is_stmt 0 view .LVU1916
 5245 00b0 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
ARM GAS  /tmp/ccH0Y1hM.s 			page 179


 5246 00b2 022A     		cmp	r2, #2
 5247 00b4 00F0AE80 		beq	.L463
1357:lwIP/src/core/tcp_out.c ****     }
 5248              		.loc 1 1357 7 is_stmt 1 view .LVU1917
 5249              	.LVL457:
 5250              		.loc 2 937 3 view .LVU1918
1357:lwIP/src/core/tcp_out.c ****     }
 5251              		.loc 1 1357 7 is_stmt 0 view .LVU1919
 5252 00b8 43F48052 		orr	r2, r3, #4096
 5253              	.LBB629:
 5254              	.LBB620:
 5255              	.LBB597:
 5256              	.LBB598:
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 5257              		.loc 1 1439 10 view .LVU1920
 5258 00bc 6B68     		ldr	r3, [r5, #4]
 5259              	.LBE598:
 5260              	.LBE597:
 5261              	.LBE620:
 5262              	.LBE629:
1357:lwIP/src/core/tcp_out.c ****     }
 5263              		.loc 1 1357 7 view .LVU1921
 5264 00be BA81     		strh	r2, [r7, #12]	@ unaligned
1360:lwIP/src/core/tcp_out.c ****     if (err != ERR_OK) {
 5265              		.loc 1 1360 5 is_stmt 1 view .LVU1922
 5266              	.LVL458:
 5267              	.LBB630:
 5268              	.LBI595:
1455:lwIP/src/core/tcp_out.c **** {
 5269              		.loc 1 1455 1 view .LVU1923
 5270              	.LBB621:
1457:lwIP/src/core/tcp_out.c ****   u16_t len;
 5271              		.loc 1 1457 3 view .LVU1924
1458:lwIP/src/core/tcp_out.c ****   u32_t *opts;
 5272              		.loc 1 1458 3 view .LVU1925
1459:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 5273              		.loc 1 1459 3 view .LVU1926
1464:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_segment: invalid pcb", pcb != NULL);
 5274              		.loc 1 1464 3 view .LVU1927
1464:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_segment: invalid pcb", pcb != NULL);
 5275              		.loc 1 1464 3 view .LVU1928
1464:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_segment: invalid pcb", pcb != NULL);
 5276              		.loc 1 1464 3 view .LVU1929
1465:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_segment: invalid netif", netif != NULL);
 5277              		.loc 1 1465 3 view .LVU1930
1465:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_segment: invalid netif", netif != NULL);
 5278              		.loc 1 1465 3 view .LVU1931
1465:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_segment: invalid netif", netif != NULL);
 5279              		.loc 1 1465 3 view .LVU1932
1466:lwIP/src/core/tcp_out.c **** 
 5280              		.loc 1 1466 3 view .LVU1933
1466:lwIP/src/core/tcp_out.c **** 
 5281              		.loc 1 1466 3 view .LVU1934
1466:lwIP/src/core/tcp_out.c **** 
 5282              		.loc 1 1466 3 view .LVU1935
1468:lwIP/src/core/tcp_out.c ****     /* This should not happen: rexmit functions should have checked this.
 5283              		.loc 1 1468 3 view .LVU1936
ARM GAS  /tmp/ccH0Y1hM.s 			page 180


 5284              	.LBB601:
 5285              	.LBI597:
1432:lwIP/src/core/tcp_out.c **** {
 5286              		.loc 1 1432 1 view .LVU1937
 5287              	.LBB599:
1434:lwIP/src/core/tcp_out.c **** 
 5288              		.loc 1 1434 3 view .LVU1938
1434:lwIP/src/core/tcp_out.c **** 
 5289              		.loc 1 1434 3 view .LVU1939
1434:lwIP/src/core/tcp_out.c **** 
 5290              		.loc 1 1434 3 view .LVU1940
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 5291              		.loc 1 1439 3 view .LVU1941
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 5292              		.loc 1 1439 6 is_stmt 0 view .LVU1942
 5293 00c0 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 5294 00c2 012A     		cmp	r2, #1
 5295 00c4 5BD1     		bne	.L464
 5296              	.L485:
 5297              	.LVL459:
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 5298              		.loc 1 1439 6 view .LVU1943
 5299              	.LBE599:
 5300              	.LBE601:
1477:lwIP/src/core/tcp_out.c **** 
 5301              		.loc 1 1477 3 is_stmt 1 view .LVU1944
1477:lwIP/src/core/tcp_out.c **** 
 5302              		.loc 1 1477 24 is_stmt 0 view .LVU1945
 5303 00c6 626A     		ldr	r2, [r4, #36]
 5304              	.LVL460:
 5305              	.LBB602:
 5306              	.LBI602:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 5307              		.loc 2 900 31 is_stmt 1 view .LVU1946
 5308              	.LBB603:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5309              		.loc 2 903 3 view .LVU1947
 5310              	.LBE603:
 5311              	.LBE602:
1488:lwIP/src/core/tcp_out.c ****   }
 5312              		.loc 1 1488 24 is_stmt 0 view .LVU1948
 5313 00c8 618D     		ldrh	r1, [r4, #42]
 5314              	.LBB605:
 5315              	.LBB604:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5316              		.loc 2 903 10 view .LVU1949
 5317 00ca 10BA     		rev	r0, r2
 5318              	.LVL461:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5319              		.loc 2 903 10 view .LVU1950
 5320              	.LBE604:
 5321              	.LBE605:
1491:lwIP/src/core/tcp_out.c **** 
 5322              		.loc 1 1491 42 view .LVU1951
 5323 00cc 0A44     		add	r2, r2, r1
 5324              	.LBB606:
 5325              	.LBB607:
ARM GAS  /tmp/ccH0Y1hM.s 			page 181


 5326              		.loc 2 937 19 view .LVU1952
 5327 00ce 49BA     		rev16	r1, r1
 5328              	.LBE607:
 5329              	.LBE606:
1477:lwIP/src/core/tcp_out.c **** 
 5330              		.loc 1 1477 22 view .LVU1953
 5331 00d0 B860     		str	r0, [r7, #8]	@ unaligned
1488:lwIP/src/core/tcp_out.c ****   }
 5332              		.loc 1 1488 5 is_stmt 1 view .LVU1954
 5333              	.LVL462:
 5334              	.LBB609:
 5335              	.LBI606:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 5336              		.loc 2 934 30 view .LVU1955
 5337              	.LBB608:
 5338              		.loc 2 937 3 view .LVU1956
 5339              		.loc 2 937 3 is_stmt 0 view .LVU1957
 5340              	.LBE608:
 5341              	.LBE609:
1488:lwIP/src/core/tcp_out.c ****   }
 5342              		.loc 1 1488 22 view .LVU1958
 5343 00d2 F981     		strh	r1, [r7, #14]	@ unaligned
1491:lwIP/src/core/tcp_out.c **** 
 5344              		.loc 1 1491 3 is_stmt 1 view .LVU1959
1491:lwIP/src/core/tcp_out.c **** 
 5345              		.loc 1 1491 27 is_stmt 0 view .LVU1960
 5346 00d4 E262     		str	r2, [r4, #44]
1496:lwIP/src/core/tcp_out.c ****   if (seg->flags & TF_SEG_OPTS_MSS) {
 5347              		.loc 1 1496 3 is_stmt 1 view .LVU1961
 5348              	.LVL463:
1497:lwIP/src/core/tcp_out.c ****     u16_t mss;
 5349              		.loc 1 1497 3 view .LVU1962
1497:lwIP/src/core/tcp_out.c ****     u16_t mss;
 5350              		.loc 1 1497 10 is_stmt 0 view .LVU1963
 5351 00d6 AA7A     		ldrb	r2, [r5, #10]	@ zero_extendqisi2
1497:lwIP/src/core/tcp_out.c ****     u16_t mss;
 5352              		.loc 1 1497 6 view .LVU1964
 5353 00d8 D107     		lsls	r1, r2, #31
 5354 00da 00F1A880 		bmi	.L465
1496:lwIP/src/core/tcp_out.c ****   if (seg->flags & TF_SEG_OPTS_MSS) {
 5355              		.loc 1 1496 8 view .LVU1965
 5356 00de 07F1140C 		add	ip, r7, #20
 5357              	.LVL464:
 5358              	.L466:
1534:lwIP/src/core/tcp_out.c ****     pcb->rtime = 0;
 5359              		.loc 1 1534 3 is_stmt 1 view .LVU1966
1534:lwIP/src/core/tcp_out.c ****     pcb->rtime = 0;
 5360              		.loc 1 1534 6 is_stmt 0 view .LVU1967
 5361 00e2 B4F93010 		ldrsh	r1, [r4, #48]
 5362 00e6 EF68     		ldr	r7, [r5, #12]
 5363 00e8 0029     		cmp	r1, #0
1535:lwIP/src/core/tcp_out.c ****   }
 5364              		.loc 1 1535 5 is_stmt 1 view .LVU1968
1538:lwIP/src/core/tcp_out.c ****     pcb->rttest = tcp_ticks;
 5365              		.loc 1 1538 3 view .LVU1969
1538:lwIP/src/core/tcp_out.c ****     pcb->rttest = tcp_ticks;
 5366              		.loc 1 1538 6 is_stmt 0 view .LVU1970
ARM GAS  /tmp/ccH0Y1hM.s 			page 182


 5367 00ea 616B     		ldr	r1, [r4, #52]
1535:lwIP/src/core/tcp_out.c ****   }
 5368              		.loc 1 1535 16 view .LVU1971
 5369 00ec B8BF     		it	lt
 5370 00ee A4F830A0 		strhlt	r10, [r4, #48]	@ movhi
1538:lwIP/src/core/tcp_out.c ****     pcb->rttest = tcp_ticks;
 5371              		.loc 1 1538 6 view .LVU1972
 5372 00f2 29B9     		cbnz	r1, .L468
1539:lwIP/src/core/tcp_out.c ****     pcb->rtseq = lwip_ntohl(seg->tcphdr->seqno);
 5373              		.loc 1 1539 5 is_stmt 1 view .LVU1973
1539:lwIP/src/core/tcp_out.c ****     pcb->rtseq = lwip_ntohl(seg->tcphdr->seqno);
 5374              		.loc 1 1539 17 is_stmt 0 view .LVU1974
 5375 00f4 7549     		ldr	r1, .L527
 5376 00f6 0968     		ldr	r1, [r1]
 5377 00f8 6163     		str	r1, [r4, #52]
1540:lwIP/src/core/tcp_out.c **** 
 5378              		.loc 1 1540 5 is_stmt 1 view .LVU1975
 5379              	.LVL465:
 5380              	.LBB610:
 5381              	.LBI610:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 5382              		.loc 2 900 31 view .LVU1976
 5383              	.LBB611:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5384              		.loc 2 903 3 view .LVU1977
 5385              	.LBE611:
 5386              	.LBE610:
1540:lwIP/src/core/tcp_out.c **** 
 5387              		.loc 1 1540 18 is_stmt 0 view .LVU1978
 5388 00fa 7968     		ldr	r1, [r7, #4]	@ unaligned
 5389              	.LBB613:
 5390              	.LBB612:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5391              		.loc 2 903 10 view .LVU1979
 5392 00fc 09BA     		rev	r1, r1
 5393              	.LVL466:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5394              		.loc 2 903 10 view .LVU1980
 5395              	.LBE612:
 5396              	.LBE613:
1540:lwIP/src/core/tcp_out.c **** 
 5397              		.loc 1 1540 16 view .LVU1981
 5398 00fe A163     		str	r1, [r4, #56]
 5399              	.L468:
1542:lwIP/src/core/tcp_out.c ****   }
 5400              		.loc 1 1542 85 is_stmt 1 view .LVU1982
1546:lwIP/src/core/tcp_out.c **** 
 5401              		.loc 1 1546 44 view .LVU1983
1548:lwIP/src/core/tcp_out.c ****   if (len == 0) {
 5402              		.loc 1 1548 3 view .LVU1984
1548:lwIP/src/core/tcp_out.c ****   if (len == 0) {
 5403              		.loc 1 1548 37 is_stmt 0 view .LVU1985
 5404 0100 5968     		ldr	r1, [r3, #4]
1564:lwIP/src/core/tcp_out.c **** 
 5405              		.loc 1 1564 3 view .LVU1986
 5406 0102 9200     		lsls	r2, r2, #2
1555:lwIP/src/core/tcp_out.c **** 
ARM GAS  /tmp/ccH0Y1hM.s 			page 183


 5407              		.loc 1 1555 19 view .LVU1987
 5408 0104 1889     		ldrh	r0, [r3, #8]
1548:lwIP/src/core/tcp_out.c ****   if (len == 0) {
 5409              		.loc 1 1548 37 view .LVU1988
 5410 0106 791A     		subs	r1, r7, r1
1564:lwIP/src/core/tcp_out.c **** 
 5411              		.loc 1 1564 3 view .LVU1989
 5412 0108 02F00402 		and	r2, r2, #4
1554:lwIP/src/core/tcp_out.c ****   seg->p->tot_len -= len;
 5413              		.loc 1 1554 15 view .LVU1990
 5414 010c B3F80AE0 		ldrh	lr, [r3, #10]
1548:lwIP/src/core/tcp_out.c ****   if (len == 0) {
 5415              		.loc 1 1548 7 view .LVU1991
 5416 0110 89B2     		uxth	r1, r1
 5417              	.LVL467:
1549:lwIP/src/core/tcp_out.c ****     /** Exclude retransmitted segments from this count. */
 5418              		.loc 1 1549 3 is_stmt 1 view .LVU1992
1551:lwIP/src/core/tcp_out.c ****   }
 5419              		.loc 1 1551 36 view .LVU1993
1554:lwIP/src/core/tcp_out.c ****   seg->p->tot_len -= len;
 5420              		.loc 1 1554 3 view .LVU1994
1564:lwIP/src/core/tcp_out.c **** 
 5421              		.loc 1 1564 3 is_stmt 0 view .LVU1995
 5422 0112 1432     		adds	r2, r2, #20
1557:lwIP/src/core/tcp_out.c **** 
 5423              		.loc 1 1557 19 view .LVU1996
 5424 0114 5F60     		str	r7, [r3, #4]
1555:lwIP/src/core/tcp_out.c **** 
 5425              		.loc 1 1555 19 view .LVU1997
 5426 0116 401A     		subs	r0, r0, r1
1564:lwIP/src/core/tcp_out.c **** 
 5427              		.loc 1 1564 3 view .LVU1998
 5428 0118 3A44     		add	r2, r2, r7
1554:lwIP/src/core/tcp_out.c ****   seg->p->tot_len -= len;
 5429              		.loc 1 1554 15 view .LVU1999
 5430 011a AEEB0101 		sub	r1, lr, r1
 5431              	.LVL468:
1555:lwIP/src/core/tcp_out.c **** 
 5432              		.loc 1 1555 19 view .LVU2000
 5433 011e 80B2     		uxth	r0, r0
1564:lwIP/src/core/tcp_out.c **** 
 5434              		.loc 1 1564 3 view .LVU2001
 5435 0120 9445     		cmp	ip, r2
1554:lwIP/src/core/tcp_out.c ****   seg->p->tot_len -= len;
 5436              		.loc 1 1554 15 view .LVU2002
 5437 0122 5981     		strh	r1, [r3, #10]	@ movhi
1555:lwIP/src/core/tcp_out.c **** 
 5438              		.loc 1 1555 3 is_stmt 1 view .LVU2003
1555:lwIP/src/core/tcp_out.c **** 
 5439              		.loc 1 1555 19 is_stmt 0 view .LVU2004
 5440 0124 1881     		strh	r0, [r3, #8]	@ movhi
1557:lwIP/src/core/tcp_out.c **** 
 5441              		.loc 1 1557 3 is_stmt 1 view .LVU2005
1559:lwIP/src/core/tcp_out.c **** 
 5442              		.loc 1 1559 3 view .LVU2006
1559:lwIP/src/core/tcp_out.c **** 
 5443              		.loc 1 1559 23 is_stmt 0 view .LVU2007
ARM GAS  /tmp/ccH0Y1hM.s 			page 184


 5444 0126 87F810A0 		strb	r10, [r7, #16]
 5445 012a 87F811A0 		strb	r10, [r7, #17]
1564:lwIP/src/core/tcp_out.c **** 
 5446              		.loc 1 1564 3 is_stmt 1 view .LVU2008
1564:lwIP/src/core/tcp_out.c **** 
 5447              		.loc 1 1564 3 view .LVU2009
 5448 012e 00F0A480 		beq	.L469
1564:lwIP/src/core/tcp_out.c **** 
 5449              		.loc 1 1564 3 view .LVU2010
 5450 0132 6748     		ldr	r0, .L527+4
 5451 0134 FFF7FEFF 		bl	printf
 5452              	.LVL469:
 5453              	.L470:
1564:lwIP/src/core/tcp_out.c **** 
 5454              		.loc 1 1564 3 view .LVU2011
1564:lwIP/src/core/tcp_out.c **** 
 5455              		.loc 1 1564 3 view .LVU2012
1564:lwIP/src/core/tcp_out.c **** 
 5456              		.loc 1 1564 3 view .LVU2013
1564:lwIP/src/core/tcp_out.c **** 
 5457              		.loc 1 1564 3 view .LVU2014
1564:lwIP/src/core/tcp_out.c **** 
 5458              		.loc 1 1564 3 view .LVU2015
1564:lwIP/src/core/tcp_out.c **** 
 5459              		.loc 1 1564 3 view .LVU2016
 5460 0138 FEE7     		b	.L470
 5461              	.LVL470:
 5462              	.L518:
1564:lwIP/src/core/tcp_out.c **** 
 5463              		.loc 1 1564 3 is_stmt 0 view .LVU2017
 5464              	.LBE621:
 5465              	.LBE630:
 5466              	.LBB631:
 5467              	.LBB584:
 137:lwIP/src/core/tcp_out.c ****   } else {
 5468              		.loc 1 137 5 is_stmt 1 view .LVU2018
 137:lwIP/src/core/tcp_out.c ****   } else {
 5469              		.loc 1 137 12 is_stmt 0 view .LVU2019
 5470 013a FFF7FEFF 		bl	netif_get_by_index
 5471              	.LVL471:
 137:lwIP/src/core/tcp_out.c ****   } else {
 5472              		.loc 1 137 12 view .LVU2020
 5473 013e 0646     		mov	r6, r0
 5474 0140 72E7     		b	.L451
 5475              	.LVL472:
 5476              	.L522:
 137:lwIP/src/core/tcp_out.c ****   } else {
 5477              		.loc 1 137 12 view .LVU2021
 5478              	.LBE584:
 5479              	.LBE631:
1343:lwIP/src/core/tcp_out.c ****         ((pcb->flags & (TF_NAGLEMEMERR | TF_FIN)) == 0)) {
 5480              		.loc 1 1343 10 view .LVU2022
 5481 0142 E26E     		ldr	r2, [r4, #108]
 5482 0144 3AB1     		cbz	r2, .L461
 5483 0146 1168     		ldr	r1, [r2]
 5484 0148 0029     		cmp	r1, #0
 5485 014a B1D1     		bne	.L460
ARM GAS  /tmp/ccH0Y1hM.s 			page 185


 5486 014c B2F808C0 		ldrh	ip, [r2, #8]
 5487 0150 618E     		ldrh	r1, [r4, #50]
 5488 0152 8C45     		cmp	ip, r1
 5489 0154 ACD2     		bcs	.L460
 5490              	.L461:
 5491 0156 B4F86410 		ldrh	r1, [r4, #100]
 5492 015a 0029     		cmp	r1, #0
 5493 015c A8D0     		beq	.L460
 5494 015e B4F86610 		ldrh	r1, [r4, #102]
 5495 0162 0729     		cmp	r1, #7
 5496 0164 A4D8     		bhi	.L460
1343:lwIP/src/core/tcp_out.c ****         ((pcb->flags & (TF_NAGLEMEMERR | TF_FIN)) == 0)) {
 5497              		.loc 1 1343 41 view .LVU2023
 5498 0166 10F0A00F 		tst	r0, #160
 5499 016a A1D1     		bne	.L460
1411:lwIP/src/core/tcp_out.c ****     /* last unsent has been removed, reset unsent_oversize */
 5500              		.loc 1 1411 3 is_stmt 1 view .LVU2024
 5501 016c 0346     		mov	r3, r0
1411:lwIP/src/core/tcp_out.c ****     /* last unsent has been removed, reset unsent_oversize */
 5502              		.loc 1 1411 6 is_stmt 0 view .LVU2025
 5503 016e 002A     		cmp	r2, #0
 5504 0170 7FF476AF 		bne	.L449
 5505              	.LVL473:
 5506              	.L462:
1413:lwIP/src/core/tcp_out.c ****   }
 5507              		.loc 1 1413 5 is_stmt 1 view .LVU2026
1413:lwIP/src/core/tcp_out.c ****   }
 5508              		.loc 1 1413 26 is_stmt 0 view .LVU2027
 5509 0174 0022     		movs	r2, #0
 5510 0176 0346     		mov	r3, r0
 5511 0178 A4F86820 		strh	r2, [r4, #104]	@ movhi
 5512 017c 70E7     		b	.L449
 5513              	.LVL474:
 5514              	.L464:
1369:lwIP/src/core/tcp_out.c ****     if (pcb->state != SYN_SENT) {
 5515              		.loc 1 1369 5 is_stmt 1 view .LVU2028
1369:lwIP/src/core/tcp_out.c ****     if (pcb->state != SYN_SENT) {
 5516              		.loc 1 1369 22 is_stmt 0 view .LVU2029
 5517 017e 2968     		ldr	r1, [r5]
1369:lwIP/src/core/tcp_out.c ****     if (pcb->state != SYN_SENT) {
 5518              		.loc 1 1369 17 view .LVU2030
 5519 0180 E166     		str	r1, [r4, #108]
1370:lwIP/src/core/tcp_out.c ****       tcp_clear_flags(pcb, TF_ACK_DELAY | TF_ACK_NOW);
 5520              		.loc 1 1370 5 is_stmt 1 view .LVU2031
 5521              	.L483:
1371:lwIP/src/core/tcp_out.c ****     }
 5522              		.loc 1 1371 7 view .LVU2032
1371:lwIP/src/core/tcp_out.c ****     }
 5523              		.loc 1 1371 7 view .LVU2033
 5524 0182 638B     		ldrh	r3, [r4, #26]
 5525 0184 23F00303 		bic	r3, r3, #3
 5526 0188 6383     		strh	r3, [r4, #26]	@ movhi
 5527              	.L472:
1371:lwIP/src/core/tcp_out.c ****     }
 5528              		.loc 1 1371 7 view .LVU2034
1373:lwIP/src/core/tcp_out.c ****     if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
 5529              		.loc 1 1373 5 view .LVU2035
ARM GAS  /tmp/ccH0Y1hM.s 			page 186


1373:lwIP/src/core/tcp_out.c ****     if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
 5530              		.loc 1 1373 15 is_stmt 0 view .LVU2036
 5531 018a EA68     		ldr	r2, [r5, #12]
 5532              	.LVL475:
 5533              	.LBB632:
 5534              	.LBI632:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 5535              		.loc 2 900 31 is_stmt 1 view .LVU2037
 5536              	.LBB633:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5537              		.loc 2 903 3 view .LVU2038
 5538              	.LBE633:
 5539              	.LBE632:
1373:lwIP/src/core/tcp_out.c ****     if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
 5540              		.loc 1 1373 48 is_stmt 0 view .LVU2039
 5541 018c 2F89     		ldrh	r7, [r5, #8]
 5542 018e 9389     		ldrh	r3, [r2, #12]	@ unaligned
1373:lwIP/src/core/tcp_out.c ****     if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
 5543              		.loc 1 1373 15 view .LVU2040
 5544 0190 5068     		ldr	r0, [r2, #4]	@ unaligned
 5545              	.LBB635:
 5546              	.LBB636:
 5547              		.loc 2 937 19 view .LVU2041
 5548 0192 5BBA     		rev16	r3, r3
 5549              	.LBE636:
 5550              	.LBE635:
1374:lwIP/src/core/tcp_out.c ****       pcb->snd_nxt = snd_nxt;
 5551              		.loc 1 1374 9 view .LVU2042
 5552 0194 226D     		ldr	r2, [r4, #80]
 5553              	.LVL476:
 5554              	.LBB638:
 5555              	.LBB634:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5556              		.loc 2 903 10 view .LVU2043
 5557 0196 00BA     		rev	r0, r0
 5558              	.LVL477:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5559              		.loc 2 903 10 view .LVU2044
 5560              	.LBE634:
 5561              	.LBE638:
 5562              	.LBB639:
 5563              	.LBI635:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 5564              		.loc 2 934 30 is_stmt 1 view .LVU2045
 5565              	.LBB637:
 5566              		.loc 2 937 3 view .LVU2046
 5567              		.loc 2 937 3 is_stmt 0 view .LVU2047
 5568              	.LBE637:
 5569              	.LBE639:
1373:lwIP/src/core/tcp_out.c ****     if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
 5570              		.loc 1 1373 48 view .LVU2048
 5571 0198 13F00303 		ands	r3, r3, #3
 5572 019c 18BF     		it	ne
 5573 019e 0123     		movne	r3, #1
 5574 01a0 3B44     		add	r3, r3, r7
1373:lwIP/src/core/tcp_out.c ****     if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
 5575              		.loc 1 1373 13 view .LVU2049
ARM GAS  /tmp/ccH0Y1hM.s 			page 187


 5576 01a2 C718     		adds	r7, r0, r3
 5577              	.LVL478:
1374:lwIP/src/core/tcp_out.c ****       pcb->snd_nxt = snd_nxt;
 5578              		.loc 1 1374 5 is_stmt 1 view .LVU2050
1374:lwIP/src/core/tcp_out.c ****       pcb->snd_nxt = snd_nxt;
 5579              		.loc 1 1374 9 is_stmt 0 view .LVU2051
 5580 01a4 D21B     		subs	r2, r2, r7
1374:lwIP/src/core/tcp_out.c ****       pcb->snd_nxt = snd_nxt;
 5581              		.loc 1 1374 8 view .LVU2052
 5582 01a6 002A     		cmp	r2, #0
1375:lwIP/src/core/tcp_out.c ****     }
 5583              		.loc 1 1375 7 is_stmt 1 view .LVU2053
1378:lwIP/src/core/tcp_out.c ****       seg->next = NULL;
 5584              		.loc 1 1378 5 view .LVU2054
 5585              	.LVL479:
 5586              		.loc 2 937 3 view .LVU2055
1375:lwIP/src/core/tcp_out.c ****     }
 5587              		.loc 1 1375 20 is_stmt 0 view .LVU2056
 5588 01a8 B8BF     		it	lt
 5589 01aa 2765     		strlt	r7, [r4, #80]
1378:lwIP/src/core/tcp_out.c ****       seg->next = NULL;
 5590              		.loc 1 1378 8 view .LVU2057
 5591 01ac 002B     		cmp	r3, #0
 5592 01ae 39D0     		beq	.L474
1379:lwIP/src/core/tcp_out.c ****       /* unacked list is empty? */
 5593              		.loc 1 1379 7 is_stmt 1 view .LVU2058
1381:lwIP/src/core/tcp_out.c ****         pcb->unacked = seg;
 5594              		.loc 1 1381 10 is_stmt 0 view .LVU2059
 5595 01b0 236F     		ldr	r3, [r4, #112]
1379:lwIP/src/core/tcp_out.c ****       /* unacked list is empty? */
 5596              		.loc 1 1379 17 view .LVU2060
 5597 01b2 C5F800A0 		str	r10, [r5]
1381:lwIP/src/core/tcp_out.c ****         pcb->unacked = seg;
 5598              		.loc 1 1381 7 is_stmt 1 view .LVU2061
1381:lwIP/src/core/tcp_out.c ****         pcb->unacked = seg;
 5599              		.loc 1 1381 10 is_stmt 0 view .LVU2062
 5600 01b6 002B     		cmp	r3, #0
 5601 01b8 7CD0     		beq	.L523
1389:lwIP/src/core/tcp_out.c ****           /* add segment to before tail of unacked list, keeping the list sorted */
 5602              		.loc 1 1389 9 is_stmt 1 view .LVU2063
 5603              	.LVL480:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5604              		.loc 2 903 3 view .LVU2064
 5605              	.LBB640:
 5606              	.LBI640:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 5607              		.loc 2 900 31 view .LVU2065
 5608              	.LBB641:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5609              		.loc 2 903 3 view .LVU2066
 5610              	.LBE641:
 5611              	.LBE640:
1389:lwIP/src/core/tcp_out.c ****           /* add segment to before tail of unacked list, keeping the list sorted */
 5612              		.loc 1 1389 13 is_stmt 0 view .LVU2067
 5613 01ba D8F80C20 		ldr	r2, [r8, #12]
 5614 01be 5268     		ldr	r2, [r2, #4]	@ unaligned
 5615              	.LBB643:
ARM GAS  /tmp/ccH0Y1hM.s 			page 188


 5616              	.LBB642:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5617              		.loc 2 903 10 view .LVU2068
 5618 01c0 12BA     		rev	r2, r2
 5619              	.LVL481:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5620              		.loc 2 903 10 view .LVU2069
 5621              	.LBE642:
 5622              	.LBE643:
1389:lwIP/src/core/tcp_out.c ****           /* add segment to before tail of unacked list, keeping the list sorted */
 5623              		.loc 1 1389 13 view .LVU2070
 5624 01c2 821A     		subs	r2, r0, r2
1389:lwIP/src/core/tcp_out.c ****           /* add segment to before tail of unacked list, keeping the list sorted */
 5625              		.loc 1 1389 12 view .LVU2071
 5626 01c4 002A     		cmp	r2, #0
 5627 01c6 44DB     		blt	.L524
1400:lwIP/src/core/tcp_out.c ****           useg = useg->next;
 5628              		.loc 1 1400 11 is_stmt 1 view .LVU2072
1400:lwIP/src/core/tcp_out.c ****           useg = useg->next;
 5629              		.loc 1 1400 22 is_stmt 0 view .LVU2073
 5630 01c8 C8F80050 		str	r5, [r8]
1401:lwIP/src/core/tcp_out.c ****         }
 5631              		.loc 1 1401 11 is_stmt 1 view .LVU2074
 5632              	.LVL482:
1400:lwIP/src/core/tcp_out.c ****           useg = useg->next;
 5633              		.loc 1 1400 22 is_stmt 0 view .LVU2075
 5634 01cc A846     		mov	r8, r5
 5635 01ce 0D46     		mov	r5, r1
 5636              	.LVL483:
 5637              	.L476:
1408:lwIP/src/core/tcp_out.c ****   }
 5638              		.loc 1 1408 5 is_stmt 1 view .LVU2076
1332:lwIP/src/core/tcp_out.c ****          lwip_ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len <= wnd) {
 5639              		.loc 1 1332 9 view .LVU2077
 5640 01d0 002D     		cmp	r5, #0
 5641 01d2 73D0     		beq	.L525
1333:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("RST not expected here!",
 5642              		.loc 1 1333 10 is_stmt 0 view .LVU2078
 5643 01d4 EF68     		ldr	r7, [r5, #12]
 5644              	.LVL484:
 5645              	.LBB644:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 5646              		.loc 2 900 31 is_stmt 1 view .LVU2079
 5647              	.LBB593:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5648              		.loc 2 903 3 view .LVU2080
 5649              	.LBE593:
 5650              	.LBE644:
1333:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("RST not expected here!",
 5651              		.loc 1 1333 61 is_stmt 0 view .LVU2081
 5652 01d6 2B89     		ldrh	r3, [r5, #8]
1333:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("RST not expected here!",
 5653              		.loc 1 1333 10 view .LVU2082
 5654 01d8 7A68     		ldr	r2, [r7, #4]	@ unaligned
1333:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("RST not expected here!",
 5655              		.loc 1 1333 56 view .LVU2083
 5656 01da 616C     		ldr	r1, [r4, #68]
ARM GAS  /tmp/ccH0Y1hM.s 			page 189


 5657              	.LBB645:
 5658              	.LBB594:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5659              		.loc 2 903 10 view .LVU2084
 5660 01dc 12BA     		rev	r2, r2
 5661              	.LVL485:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5662              		.loc 2 903 10 view .LVU2085
 5663              	.LBE594:
 5664              	.LBE645:
1333:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("RST not expected here!",
 5665              		.loc 1 1333 56 view .LVU2086
 5666 01de 5B1A     		subs	r3, r3, r1
 5667 01e0 1344     		add	r3, r3, r2
1332:lwIP/src/core/tcp_out.c ****          lwip_ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len <= wnd) {
 5668              		.loc 1 1332 22 view .LVU2087
 5669 01e2 9945     		cmp	r9, r3
 5670 01e4 BFF458AF 		bcs	.L482
1411:lwIP/src/core/tcp_out.c ****     /* last unsent has been removed, reset unsent_oversize */
 5671              		.loc 1 1411 3 is_stmt 1 view .LVU2088
 5672 01e8 638B     		ldrh	r3, [r4, #26]
 5673 01ea 39E7     		b	.L449
 5674              	.LVL486:
 5675              	.L487:
1411:lwIP/src/core/tcp_out.c ****     /* last unsent has been removed, reset unsent_oversize */
 5676              		.loc 1 1411 3 is_stmt 0 view .LVU2089
 5677 01ec 9846     		mov	r8, r3
 5678 01ee 51E7     		b	.L456
 5679              	.LVL487:
 5680              	.L519:
1312:lwIP/src/core/tcp_out.c ****       pcb->persist_cnt = 0;
 5681              		.loc 1 1312 29 view .LVU2090
 5682 01f0 236F     		ldr	r3, [r4, #112]
 5683 01f2 002B     		cmp	r3, #0
 5684 01f4 7FF430AF 		bne	.L455
1312:lwIP/src/core/tcp_out.c ****       pcb->persist_cnt = 0;
 5685              		.loc 1 1312 53 view .LVU2091
 5686 01f8 94F89530 		ldrb	r3, [r4, #149]	@ zero_extendqisi2
 5687 01fc 002B     		cmp	r3, #0
 5688 01fe 7FF42BAF 		bne	.L455
1313:lwIP/src/core/tcp_out.c ****       pcb->persist_backoff = 1;
 5689              		.loc 1 1313 7 is_stmt 1 view .LVU2092
1314:lwIP/src/core/tcp_out.c ****       pcb->persist_probe = 0;
 5690              		.loc 1 1314 7 view .LVU2093
1315:lwIP/src/core/tcp_out.c ****     }
 5691              		.loc 1 1315 7 view .LVU2094
1313:lwIP/src/core/tcp_out.c ****       pcb->persist_backoff = 1;
 5692              		.loc 1 1313 24 is_stmt 0 view .LVU2095
 5693 0202 4FF48072 		mov	r2, #256
1315:lwIP/src/core/tcp_out.c ****     }
 5694              		.loc 1 1315 26 view .LVU2096
 5695 0206 84F89630 		strb	r3, [r4, #150]
1313:lwIP/src/core/tcp_out.c ****       pcb->persist_backoff = 1;
 5696              		.loc 1 1313 24 view .LVU2097
 5697 020a A4F89420 		strh	r2, [r4, #148]	@ movhi
 5698 020e 23E7     		b	.L455
 5699              	.LVL488:
ARM GAS  /tmp/ccH0Y1hM.s 			page 190


 5700              	.L520:
1319:lwIP/src/core/tcp_out.c ****     }
 5701              		.loc 1 1319 7 is_stmt 1 view .LVU2098
1319:lwIP/src/core/tcp_out.c ****     }
 5702              		.loc 1 1319 14 is_stmt 0 view .LVU2099
 5703 0210 2046     		mov	r0, r4
 5704 0212 2FE7     		b	.L516
 5705              	.LVL489:
 5706              	.L463:
1360:lwIP/src/core/tcp_out.c ****     if (err != ERR_OK) {
 5707              		.loc 1 1360 5 is_stmt 1 view .LVU2100
 5708              	.LBB646:
1455:lwIP/src/core/tcp_out.c **** {
 5709              		.loc 1 1455 1 view .LVU2101
 5710              	.LBB622:
1457:lwIP/src/core/tcp_out.c ****   u16_t len;
 5711              		.loc 1 1457 3 view .LVU2102
1458:lwIP/src/core/tcp_out.c ****   u32_t *opts;
 5712              		.loc 1 1458 3 view .LVU2103
1459:lwIP/src/core/tcp_out.c **** #if TCP_CHECKSUM_ON_COPY
 5713              		.loc 1 1459 3 view .LVU2104
1464:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_segment: invalid pcb", pcb != NULL);
 5714              		.loc 1 1464 3 view .LVU2105
1464:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_segment: invalid pcb", pcb != NULL);
 5715              		.loc 1 1464 3 view .LVU2106
1464:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_segment: invalid pcb", pcb != NULL);
 5716              		.loc 1 1464 3 view .LVU2107
1465:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_segment: invalid netif", netif != NULL);
 5717              		.loc 1 1465 3 view .LVU2108
1465:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_segment: invalid netif", netif != NULL);
 5718              		.loc 1 1465 3 view .LVU2109
1465:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_output_segment: invalid netif", netif != NULL);
 5719              		.loc 1 1465 3 view .LVU2110
1466:lwIP/src/core/tcp_out.c **** 
 5720              		.loc 1 1466 3 view .LVU2111
1466:lwIP/src/core/tcp_out.c **** 
 5721              		.loc 1 1466 3 view .LVU2112
1466:lwIP/src/core/tcp_out.c **** 
 5722              		.loc 1 1466 3 view .LVU2113
1468:lwIP/src/core/tcp_out.c ****     /* This should not happen: rexmit functions should have checked this.
 5723              		.loc 1 1468 3 view .LVU2114
 5724              	.LBB614:
1432:lwIP/src/core/tcp_out.c **** {
 5725              		.loc 1 1432 1 view .LVU2115
 5726              	.LBB600:
1434:lwIP/src/core/tcp_out.c **** 
 5727              		.loc 1 1434 3 view .LVU2116
1434:lwIP/src/core/tcp_out.c **** 
 5728              		.loc 1 1434 3 view .LVU2117
1434:lwIP/src/core/tcp_out.c **** 
 5729              		.loc 1 1434 3 view .LVU2118
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 5730              		.loc 1 1439 3 view .LVU2119
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 5731              		.loc 1 1439 10 is_stmt 0 view .LVU2120
 5732 0214 6B68     		ldr	r3, [r5, #4]
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
ARM GAS  /tmp/ccH0Y1hM.s 			page 191


 5733              		.loc 1 1439 6 view .LVU2121
 5734 0216 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 5735 0218 012A     		cmp	r2, #1
 5736 021a 3FF454AF 		beq	.L485
 5737              	.LVL490:
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 5738              		.loc 1 1439 6 view .LVU2122
 5739              	.LBE600:
 5740              	.LBE614:
 5741              	.LBE622:
 5742              	.LBE646:
1369:lwIP/src/core/tcp_out.c ****     if (pcb->state != SYN_SENT) {
 5743              		.loc 1 1369 5 is_stmt 1 view .LVU2123
1369:lwIP/src/core/tcp_out.c ****     if (pcb->state != SYN_SENT) {
 5744              		.loc 1 1369 22 is_stmt 0 view .LVU2124
 5745 021e 2968     		ldr	r1, [r5]
1369:lwIP/src/core/tcp_out.c ****     if (pcb->state != SYN_SENT) {
 5746              		.loc 1 1369 17 view .LVU2125
 5747 0220 E166     		str	r1, [r4, #108]
1370:lwIP/src/core/tcp_out.c ****       tcp_clear_flags(pcb, TF_ACK_DELAY | TF_ACK_NOW);
 5748              		.loc 1 1370 5 is_stmt 1 view .LVU2126
 5749 0222 B2E7     		b	.L472
 5750              	.LVL491:
 5751              	.L474:
1406:lwIP/src/core/tcp_out.c ****     }
 5752              		.loc 1 1406 7 view .LVU2127
 5753 0224 2846     		mov	r0, r5
 5754 0226 FFF7FEFF 		bl	tcp_seg_free
 5755              	.LVL492:
 5756 022a E56E     		ldr	r5, [r4, #108]
 5757              	.LVL493:
1406:lwIP/src/core/tcp_out.c ****     }
 5758              		.loc 1 1406 7 is_stmt 0 view .LVU2128
 5759 022c D0E7     		b	.L476
 5760              	.LVL494:
 5761              	.L465:
 5762              	.LBB647:
 5763              	.LBB623:
 5764              	.LBB615:
1498:lwIP/src/core/tcp_out.c **** #if TCP_CALCULATE_EFF_SEND_MSS
 5765              		.loc 1 1498 5 is_stmt 1 view .LVU2129
1500:lwIP/src/core/tcp_out.c **** #else /* TCP_CALCULATE_EFF_SEND_MSS */
 5766              		.loc 1 1500 5 view .LVU2130
1500:lwIP/src/core/tcp_out.c **** #else /* TCP_CALCULATE_EFF_SEND_MSS */
 5767              		.loc 1 1500 11 is_stmt 0 view .LVU2131
 5768 022e 5A46     		mov	r2, fp
 5769 0230 3146     		mov	r1, r6
 5770 0232 40F2B450 		movw	r0, #1460
 5771 0236 FFF7FEFF 		bl	tcp_eff_send_mss_netif
 5772              	.LVL495:
1504:lwIP/src/core/tcp_out.c ****     opts += 1;
 5773              		.loc 1 1504 5 is_stmt 1 view .LVU2132
 5774              	.LBB616:
 5775              	.LBI616:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 5776              		.loc 2 900 31 view .LVU2133
 5777              	.LBB617:
ARM GAS  /tmp/ccH0Y1hM.s 			page 192


 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5778              		.loc 2 903 3 view .LVU2134
 5779              	.LBE617:
 5780              	.LBE616:
1504:lwIP/src/core/tcp_out.c ****     opts += 1;
 5781              		.loc 1 1504 13 is_stmt 0 view .LVU2135
 5782 023a 40F00170 		orr	r0, r0, #33816576
 5783              	.LVL496:
1504:lwIP/src/core/tcp_out.c ****     opts += 1;
 5784              		.loc 1 1504 13 view .LVU2136
 5785 023e 6B68     		ldr	r3, [r5, #4]
1505:lwIP/src/core/tcp_out.c ****   }
 5786              		.loc 1 1505 10 view .LVU2137
 5787 0240 07F1180C 		add	ip, r7, #24
 5788              	.LBB619:
 5789              	.LBB618:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5790              		.loc 2 903 10 view .LVU2138
 5791 0244 00BA     		rev	r0, r0
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5792              		.loc 2 903 10 view .LVU2139
 5793              	.LBE618:
 5794              	.LBE619:
1504:lwIP/src/core/tcp_out.c ****     opts += 1;
 5795              		.loc 1 1504 11 view .LVU2140
 5796 0246 7861     		str	r0, [r7, #20]
1505:lwIP/src/core/tcp_out.c ****   }
 5797              		.loc 1 1505 5 is_stmt 1 view .LVU2141
 5798              	.LVL497:
1505:lwIP/src/core/tcp_out.c ****   }
 5799              		.loc 1 1505 5 is_stmt 0 view .LVU2142
 5800 0248 AA7A     		ldrb	r2, [r5, #10]	@ zero_extendqisi2
 5801 024a 4AE7     		b	.L466
 5802              	.LVL498:
 5803              	.L486:
1505:lwIP/src/core/tcp_out.c ****   }
 5804              		.loc 1 1505 5 view .LVU2143
 5805              	.LBE615:
 5806              	.LBE623:
 5807              	.LBE647:
1292:lwIP/src/core/tcp_out.c ****   }
 5808              		.loc 1 1292 12 view .LVU2144
 5809 024c 6FF00300 		mvn	r0, #3
 5810 0250 0AE7     		b	.L514
 5811              	.LVL499:
 5812              	.L524:
 5813              	.LBB648:
1391:lwIP/src/core/tcp_out.c ****           while (*cur_seg &&
 5814              		.loc 1 1391 11 is_stmt 1 view .LVU2145
1391:lwIP/src/core/tcp_out.c ****           while (*cur_seg &&
 5815              		.loc 1 1391 28 is_stmt 0 view .LVU2146
 5816 0252 04F17001 		add	r1, r4, #112
 5817              	.LVL500:
1392:lwIP/src/core/tcp_out.c ****                  TCP_SEQ_LT(lwip_ntohl((*cur_seg)->tcphdr->seqno), lwip_ntohl(seg->tcphdr->seqno)))
 5818              		.loc 1 1392 11 is_stmt 1 view .LVU2147
1392:lwIP/src/core/tcp_out.c ****                  TCP_SEQ_LT(lwip_ntohl((*cur_seg)->tcphdr->seqno), lwip_ntohl(seg->tcphdr->seqno)))
 5819              		.loc 1 1392 17 view .LVU2148
ARM GAS  /tmp/ccH0Y1hM.s 			page 193


 5820 0256 02E0     		b	.L478
 5821              	.LVL501:
 5822              	.L480:
1394:lwIP/src/core/tcp_out.c ****           }
 5823              		.loc 1 1394 21 is_stmt 0 view .LVU2149
 5824 0258 1946     		mov	r1, r3
 5825              	.LVL502:
1394:lwIP/src/core/tcp_out.c ****           }
 5826              		.loc 1 1394 21 view .LVU2150
 5827 025a 1B68     		ldr	r3, [r3]
1392:lwIP/src/core/tcp_out.c ****                  TCP_SEQ_LT(lwip_ntohl((*cur_seg)->tcphdr->seqno), lwip_ntohl(seg->tcphdr->seqno)))
 5828              		.loc 1 1392 17 is_stmt 1 view .LVU2151
 5829 025c 2BB1     		cbz	r3, .L479
 5830              	.L478:
1394:lwIP/src/core/tcp_out.c ****           }
 5831              		.loc 1 1394 13 view .LVU2152
 5832              	.LVL503:
 5833              	.LBB649:
 5834              	.LBI649:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 5835              		.loc 2 900 31 view .LVU2153
 5836              	.LBB650:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5837              		.loc 2 903 3 view .LVU2154
 5838              	.LBE650:
 5839              	.LBE649:
1393:lwIP/src/core/tcp_out.c ****             cur_seg = &((*cur_seg)->next );
 5840              		.loc 1 1393 18 is_stmt 0 view .LVU2155
 5841 025e DA68     		ldr	r2, [r3, #12]
 5842 0260 5268     		ldr	r2, [r2, #4]	@ unaligned
 5843              	.LBB652:
 5844              	.LBB651:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5845              		.loc 2 903 10 view .LVU2156
 5846 0262 12BA     		rev	r2, r2
 5847              	.LVL504:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5848              		.loc 2 903 10 view .LVU2157
 5849              	.LBE651:
 5850              	.LBE652:
 5851              	.LBE648:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 5852              		.loc 2 903 3 is_stmt 1 view .LVU2158
 5853              	.LBB653:
1393:lwIP/src/core/tcp_out.c ****             cur_seg = &((*cur_seg)->next );
 5854              		.loc 1 1393 18 is_stmt 0 view .LVU2159
 5855 0264 121A     		subs	r2, r2, r0
1392:lwIP/src/core/tcp_out.c ****                  TCP_SEQ_LT(lwip_ntohl((*cur_seg)->tcphdr->seqno), lwip_ntohl(seg->tcphdr->seqno)))
 5856              		.loc 1 1392 27 view .LVU2160
 5857 0266 002A     		cmp	r2, #0
 5858 0268 F6DB     		blt	.L480
 5859              	.L479:
1396:lwIP/src/core/tcp_out.c ****           (*cur_seg) = seg;
 5860              		.loc 1 1396 11 is_stmt 1 view .LVU2161
1396:lwIP/src/core/tcp_out.c ****           (*cur_seg) = seg;
 5861              		.loc 1 1396 21 is_stmt 0 view .LVU2162
 5862 026a 2B60     		str	r3, [r5]
ARM GAS  /tmp/ccH0Y1hM.s 			page 194


1397:lwIP/src/core/tcp_out.c ****         } else {
 5863              		.loc 1 1397 11 is_stmt 1 view .LVU2163
1397:lwIP/src/core/tcp_out.c ****         } else {
 5864              		.loc 1 1397 22 is_stmt 0 view .LVU2164
 5865 026c 0D60     		str	r5, [r1]
 5866 026e E56E     		ldr	r5, [r4, #108]
 5867              	.LVL505:
1397:lwIP/src/core/tcp_out.c ****         } else {
 5868              		.loc 1 1397 22 view .LVU2165
 5869              	.LBE653:
 5870 0270 AEE7     		b	.L476
 5871              	.LVL506:
 5872              	.L521:
1334:lwIP/src/core/tcp_out.c ****                 (TCPH_FLAGS(seg->tcphdr) & TCP_RST) == 0);
 5873              		.loc 1 1334 5 is_stmt 1 view .LVU2166
 5874 0272 1848     		ldr	r0, .L527+8
 5875 0274 FFF7FEFF 		bl	printf
 5876              	.LVL507:
 5877              	.L459:
1334:lwIP/src/core/tcp_out.c ****                 (TCPH_FLAGS(seg->tcphdr) & TCP_RST) == 0);
 5878              		.loc 1 1334 5 view .LVU2167
1334:lwIP/src/core/tcp_out.c ****                 (TCPH_FLAGS(seg->tcphdr) & TCP_RST) == 0);
 5879              		.loc 1 1334 5 view .LVU2168
1334:lwIP/src/core/tcp_out.c ****                 (TCPH_FLAGS(seg->tcphdr) & TCP_RST) == 0);
 5880              		.loc 1 1334 5 view .LVU2169
1334:lwIP/src/core/tcp_out.c ****                 (TCPH_FLAGS(seg->tcphdr) & TCP_RST) == 0);
 5881              		.loc 1 1334 5 view .LVU2170
1334:lwIP/src/core/tcp_out.c ****                 (TCPH_FLAGS(seg->tcphdr) & TCP_RST) == 0);
 5882              		.loc 1 1334 5 view .LVU2171
1334:lwIP/src/core/tcp_out.c ****                 (TCPH_FLAGS(seg->tcphdr) & TCP_RST) == 0);
 5883              		.loc 1 1334 5 view .LVU2172
 5884 0278 FEE7     		b	.L459
 5885              	.LVL508:
 5886              	.L469:
 5887              	.LBB654:
 5888              	.LBB624:
1564:lwIP/src/core/tcp_out.c **** 
 5889              		.loc 1 1564 3 view .LVU2173
1599:lwIP/src/core/tcp_out.c ****                                            seg->p->tot_len, &pcb->local_ip, &pcb->remote_ip);
 5890              		.loc 1 1599 5 view .LVU2174
1599:lwIP/src/core/tcp_out.c ****                                            seg->p->tot_len, &pcb->local_ip, &pcb->remote_ip);
 5891              		.loc 1 1599 27 is_stmt 0 view .LVU2175
 5892 027a 0246     		mov	r2, r0
 5893 027c 0621     		movs	r1, #6
 5894 027e 1846     		mov	r0, r3
 5895 0280 CDF800B0 		str	fp, [sp]
 5896 0284 2346     		mov	r3, r4
 5897 0286 FFF7FEFF 		bl	ip_chksum_pseudo
 5898              	.LVL509:
1599:lwIP/src/core/tcp_out.c ****                                            seg->p->tot_len, &pcb->local_ip, &pcb->remote_ip);
 5899              		.loc 1 1599 27 view .LVU2176
 5900 028a 0346     		mov	r3, r0
1607:lwIP/src/core/tcp_out.c ****                      pcb->tos, IP_PROTO_TCP, netif);
 5901              		.loc 1 1607 9 view .LVU2177
 5902 028c 6868     		ldr	r0, [r5, #4]
 5903 028e 5A46     		mov	r2, fp
1599:lwIP/src/core/tcp_out.c ****                                            seg->p->tot_len, &pcb->local_ip, &pcb->remote_ip);
ARM GAS  /tmp/ccH0Y1hM.s 			page 195


 5904              		.loc 1 1599 25 view .LVU2178
 5905 0290 3B82     		strh	r3, [r7, #16]	@ unaligned
1604:lwIP/src/core/tcp_out.c **** 
 5906              		.loc 1 1604 26 is_stmt 1 view .LVU2179
1606:lwIP/src/core/tcp_out.c ****   err = ip_output_if(seg->p, &pcb->local_ip, &pcb->remote_ip, pcb->ttl,
 5907              		.loc 1 1606 46 view .LVU2180
1607:lwIP/src/core/tcp_out.c ****                      pcb->tos, IP_PROTO_TCP, netif);
 5908              		.loc 1 1607 3 view .LVU2181
1607:lwIP/src/core/tcp_out.c ****                      pcb->tos, IP_PROTO_TCP, netif);
 5909              		.loc 1 1607 9 is_stmt 0 view .LVU2182
 5910 0292 2146     		mov	r1, r4
 5911 0294 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 5912 0296 0296     		str	r6, [sp, #8]
 5913 0298 0093     		str	r3, [sp]
 5914 029a 0623     		movs	r3, #6
 5915 029c 0193     		str	r3, [sp, #4]
 5916 029e E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 5917 02a0 FFF7FEFF 		bl	ip4_output_if
 5918              	.LVL510:
1609:lwIP/src/core/tcp_out.c **** 
 5919              		.loc 1 1609 27 is_stmt 1 view .LVU2183
1620:lwIP/src/core/tcp_out.c **** }
 5920              		.loc 1 1620 3 view .LVU2184
1620:lwIP/src/core/tcp_out.c **** }
 5921              		.loc 1 1620 3 is_stmt 0 view .LVU2185
 5922              	.LBE624:
 5923              	.LBE654:
1361:lwIP/src/core/tcp_out.c ****       /* segment could not be sent, for whatever reason */
 5924              		.loc 1 1361 5 is_stmt 1 view .LVU2186
1361:lwIP/src/core/tcp_out.c ****       /* segment could not be sent, for whatever reason */
 5925              		.loc 1 1361 8 is_stmt 0 view .LVU2187
 5926 02a4 60B9     		cbnz	r0, .L526
 5927 02a6 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5928              	.LVL511:
1369:lwIP/src/core/tcp_out.c ****     if (pcb->state != SYN_SENT) {
 5929              		.loc 1 1369 5 is_stmt 1 view .LVU2188
1369:lwIP/src/core/tcp_out.c ****     if (pcb->state != SYN_SENT) {
 5930              		.loc 1 1369 22 is_stmt 0 view .LVU2189
 5931 02a8 2968     		ldr	r1, [r5]
1370:lwIP/src/core/tcp_out.c ****       tcp_clear_flags(pcb, TF_ACK_DELAY | TF_ACK_NOW);
 5932              		.loc 1 1370 8 view .LVU2190
 5933 02aa 022B     		cmp	r3, #2
1369:lwIP/src/core/tcp_out.c ****     if (pcb->state != SYN_SENT) {
 5934              		.loc 1 1369 17 view .LVU2191
 5935 02ac E166     		str	r1, [r4, #108]
1370:lwIP/src/core/tcp_out.c ****       tcp_clear_flags(pcb, TF_ACK_DELAY | TF_ACK_NOW);
 5936              		.loc 1 1370 5 is_stmt 1 view .LVU2192
1370:lwIP/src/core/tcp_out.c ****       tcp_clear_flags(pcb, TF_ACK_DELAY | TF_ACK_NOW);
 5937              		.loc 1 1370 8 is_stmt 0 view .LVU2193
 5938 02ae 7FF468AF 		bne	.L483
 5939 02b2 6AE7     		b	.L472
 5940              	.LVL512:
 5941              	.L523:
1382:lwIP/src/core/tcp_out.c ****         useg = seg;
 5942              		.loc 1 1382 9 is_stmt 1 view .LVU2194
 5943 02b4 A846     		mov	r8, r5
 5944              	.LVL513:
ARM GAS  /tmp/ccH0Y1hM.s 			page 196


1382:lwIP/src/core/tcp_out.c ****         useg = seg;
 5945              		.loc 1 1382 22 is_stmt 0 view .LVU2195
 5946 02b6 2567     		str	r5, [r4, #112]
1383:lwIP/src/core/tcp_out.c ****         /* unacked list is not empty? */
 5947              		.loc 1 1383 9 is_stmt 1 view .LVU2196
 5948              	.LVL514:
1383:lwIP/src/core/tcp_out.c ****         /* unacked list is not empty? */
 5949              		.loc 1 1383 9 is_stmt 0 view .LVU2197
 5950 02b8 0D46     		mov	r5, r1
 5951              	.LVL515:
1383:lwIP/src/core/tcp_out.c ****         /* unacked list is not empty? */
 5952              		.loc 1 1383 9 view .LVU2198
 5953 02ba 89E7     		b	.L476
 5954              	.LVL516:
 5955              	.L525:
1383:lwIP/src/core/tcp_out.c ****         /* unacked list is not empty? */
 5956              		.loc 1 1383 9 view .LVU2199
 5957 02bc 608B     		ldrh	r0, [r4, #26]
 5958 02be 59E7     		b	.L462
 5959              	.LVL517:
 5960              	.L526:
1363:lwIP/src/core/tcp_out.c ****       return err;
 5961              		.loc 1 1363 7 is_stmt 1 view .LVU2200
1363:lwIP/src/core/tcp_out.c ****       return err;
 5962              		.loc 1 1363 7 view .LVU2201
 5963 02c0 638B     		ldrh	r3, [r4, #26]
 5964 02c2 43F08003 		orr	r3, r3, #128
 5965 02c6 6383     		strh	r3, [r4, #26]	@ movhi
1363:lwIP/src/core/tcp_out.c ****       return err;
 5966              		.loc 1 1363 7 view .LVU2202
1364:lwIP/src/core/tcp_out.c ****     }
 5967              		.loc 1 1364 7 view .LVU2203
1364:lwIP/src/core/tcp_out.c ****     }
 5968              		.loc 1 1364 14 is_stmt 0 view .LVU2204
 5969 02c8 CEE6     		b	.L514
 5970              	.L528:
 5971 02ca 00BF     		.align	2
 5972              	.L527:
 5973 02cc 00000000 		.word	tcp_ticks
 5974 02d0 18000000 		.word	.LC40
 5975 02d4 00000000 		.word	.LC39
 5976              		.cfi_endproc
 5977              	.LFE136:
 5979              		.section	.rodata.tcp_output.str1.4,"aMS",%progbits,1
 5980              		.align	2
 5981              	.LC41:
 5982 0000 7463705F 		.ascii	"tcp_output: invalid pcb\000"
 5982      6F757470 
 5982      75743A20 
 5982      696E7661 
 5982      6C696420 
 5983              		.align	2
 5984              	.LC42:
 5985 0018 646F6E27 		.ascii	"don't call tcp_output for listen-pcbs\000"
 5985      74206361 
 5985      6C6C2074 
 5985      63705F6F 
ARM GAS  /tmp/ccH0Y1hM.s 			page 197


 5985      75747075 
 5986              		.section	.text.tcp_output,"ax",%progbits
 5987              		.align	1
 5988              		.p2align 2,,3
 5989              		.global	tcp_output
 5990              		.syntax unified
 5991              		.thumb
 5992              		.thumb_func
 5993              		.fpu fpv4-sp-d16
 5995              	tcp_output:
 5996              	.LVL518:
 5997              	.LFB113:
1238:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg, *useg;
 5998              		.loc 1 1238 1 is_stmt 1 view -0
 5999              		.cfi_startproc
 6000              		@ args = 0, pretend = 0, frame = 0
 6001              		@ frame_needed = 0, uses_anonymous_args = 0
1239:lwIP/src/core/tcp_out.c ****   u32_t wnd, snd_nxt;
 6002              		.loc 1 1239 3 view .LVU2206
1240:lwIP/src/core/tcp_out.c ****   err_t err;
 6003              		.loc 1 1240 3 view .LVU2207
1241:lwIP/src/core/tcp_out.c ****   struct netif *netif;
 6004              		.loc 1 1241 3 view .LVU2208
1242:lwIP/src/core/tcp_out.c **** #if TCP_CWND_DEBUG
 6005              		.loc 1 1242 3 view .LVU2209
1247:lwIP/src/core/tcp_out.c **** 
 6006              		.loc 1 1247 28 view .LVU2210
1249:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
 6007              		.loc 1 1249 3 view .LVU2211
1249:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
 6008              		.loc 1 1249 3 view .LVU2212
1238:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg, *useg;
 6009              		.loc 1 1238 1 is_stmt 0 view .LVU2213
 6010 0000 08B5     		push	{r3, lr}
 6011              	.LCFI42:
 6012              		.cfi_def_cfa_offset 8
 6013              		.cfi_offset 3, -8
 6014              		.cfi_offset 14, -4
1249:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
 6015              		.loc 1 1249 3 view .LVU2214
 6016 0002 50B1     		cbz	r0, .L536
1249:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
 6017              		.loc 1 1249 3 is_stmt 1 discriminator 2 view .LVU2215
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6018              		.loc 1 1251 3 discriminator 2 view .LVU2216
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6019              		.loc 1 1251 3 discriminator 2 view .LVU2217
 6020 0004 027D     		ldrb	r2, [r0, #20]	@ zero_extendqisi2
 6021 0006 012A     		cmp	r2, #1
 6022 0008 0BD0     		beq	.L537
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6023              		.loc 1 1251 3 discriminator 2 view .LVU2218
1258:lwIP/src/core/tcp_out.c ****     return ERR_OK;
 6024              		.loc 1 1258 3 discriminator 2 view .LVU2219
1258:lwIP/src/core/tcp_out.c ****     return ERR_OK;
 6025              		.loc 1 1258 21 is_stmt 0 discriminator 2 view .LVU2220
 6026 000a 094A     		ldr	r2, .L538
ARM GAS  /tmp/ccH0Y1hM.s 			page 198


1258:lwIP/src/core/tcp_out.c ****     return ERR_OK;
 6027              		.loc 1 1258 6 discriminator 2 view .LVU2221
 6028 000c 1268     		ldr	r2, [r2]
 6029 000e 8242     		cmp	r2, r0
 6030 0010 0BD0     		beq	.L534
1420:lwIP/src/core/tcp_out.c **** 
 6031              		.loc 1 1420 1 view .LVU2222
 6032 0012 BDE80840 		pop	{r3, lr}
 6033              	.LCFI43:
 6034              		.cfi_remember_state
 6035              		.cfi_restore 14
 6036              		.cfi_restore 3
 6037              		.cfi_def_cfa_offset 0
 6038 0016 FFF7FEBF 		b	tcp_output.part.0
 6039              	.LVL519:
 6040              	.L536:
 6041              	.LCFI44:
 6042              		.cfi_restore_state
1249:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
 6043              		.loc 1 1249 3 is_stmt 1 discriminator 1 view .LVU2223
 6044 001a 0648     		ldr	r0, .L538+4
 6045              	.LVL520:
1249:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
 6046              		.loc 1 1249 3 is_stmt 0 discriminator 1 view .LVU2224
 6047 001c FFF7FEFF 		bl	printf
 6048              	.LVL521:
 6049              	.L531:
1249:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
 6050              		.loc 1 1249 3 is_stmt 1 discriminator 1 view .LVU2225
1249:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
 6051              		.loc 1 1249 3 discriminator 1 view .LVU2226
1249:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
 6052              		.loc 1 1249 3 discriminator 1 view .LVU2227
1249:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
 6053              		.loc 1 1249 3 discriminator 1 view .LVU2228
1249:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
 6054              		.loc 1 1249 3 discriminator 1 view .LVU2229
1249:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
 6055              		.loc 1 1249 3 discriminator 1 view .LVU2230
 6056 0020 FEE7     		b	.L531
 6057              	.LVL522:
 6058              	.L537:
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6059              		.loc 1 1251 3 discriminator 1 view .LVU2231
 6060 0022 0548     		ldr	r0, .L538+8
 6061              	.LVL523:
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6062              		.loc 1 1251 3 is_stmt 0 discriminator 1 view .LVU2232
 6063 0024 FFF7FEFF 		bl	printf
 6064              	.LVL524:
 6065              	.L533:
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6066              		.loc 1 1251 3 is_stmt 1 discriminator 2 view .LVU2233
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6067              		.loc 1 1251 3 discriminator 2 view .LVU2234
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6068              		.loc 1 1251 3 discriminator 2 view .LVU2235
ARM GAS  /tmp/ccH0Y1hM.s 			page 199


1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6069              		.loc 1 1251 3 discriminator 2 view .LVU2236
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6070              		.loc 1 1251 3 discriminator 2 view .LVU2237
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6071              		.loc 1 1251 3 discriminator 2 view .LVU2238
 6072 0028 FEE7     		b	.L533
 6073              	.LVL525:
 6074              	.L534:
1420:lwIP/src/core/tcp_out.c **** 
 6075              		.loc 1 1420 1 is_stmt 0 view .LVU2239
 6076 002a 0020     		movs	r0, #0
 6077              	.LVL526:
1420:lwIP/src/core/tcp_out.c **** 
 6078              		.loc 1 1420 1 view .LVU2240
 6079 002c 08BD     		pop	{r3, pc}
 6080              	.L539:
 6081 002e 00BF     		.align	2
 6082              	.L538:
 6083 0030 00000000 		.word	tcp_input_pcb
 6084 0034 00000000 		.word	.LC41
 6085 0038 18000000 		.word	.LC42
 6086              		.cfi_endproc
 6087              	.LFE113:
 6089              		.section	.rodata.tcp_rexmit_rto_commit.str1.4,"aMS",%progbits,1
 6090              		.align	2
 6091              	.LC43:
 6092 0000 7463705F 		.ascii	"tcp_rexmit_rto_commit: invalid pcb\000"
 6092      7265786D 
 6092      69745F72 
 6092      746F5F63 
 6092      6F6D6D69 
 6093              		.section	.text.tcp_rexmit_rto_commit,"ax",%progbits
 6094              		.align	1
 6095              		.p2align 2,,3
 6096              		.global	tcp_rexmit_rto_commit
 6097              		.syntax unified
 6098              		.thumb
 6099              		.thumb_func
 6100              		.fpu fpv4-sp-d16
 6102              	tcp_rexmit_rto_commit:
 6103              	.LVL527:
 6104              	.LFB117:
1687:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rexmit_rto_commit: invalid pcb", pcb != NULL);
 6105              		.loc 1 1687 1 is_stmt 1 view -0
 6106              		.cfi_startproc
 6107              		@ args = 0, pretend = 0, frame = 0
 6108              		@ frame_needed = 0, uses_anonymous_args = 0
1688:lwIP/src/core/tcp_out.c **** 
 6109              		.loc 1 1688 3 view .LVU2242
1688:lwIP/src/core/tcp_out.c **** 
 6110              		.loc 1 1688 3 view .LVU2243
1687:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rexmit_rto_commit: invalid pcb", pcb != NULL);
 6111              		.loc 1 1687 1 is_stmt 0 view .LVU2244
 6112 0000 08B5     		push	{r3, lr}
 6113              	.LCFI45:
 6114              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccH0Y1hM.s 			page 200


 6115              		.cfi_offset 3, -8
 6116              		.cfi_offset 14, -4
1688:lwIP/src/core/tcp_out.c **** 
 6117              		.loc 1 1688 3 view .LVU2245
 6118 0002 90B1     		cbz	r0, .L551
1688:lwIP/src/core/tcp_out.c **** 
 6119              		.loc 1 1688 3 is_stmt 1 discriminator 2 view .LVU2246
1691:lwIP/src/core/tcp_out.c ****     ++pcb->nrtx;
 6120              		.loc 1 1691 3 discriminator 2 view .LVU2247
1691:lwIP/src/core/tcp_out.c ****     ++pcb->nrtx;
 6121              		.loc 1 1691 10 is_stmt 0 discriminator 2 view .LVU2248
 6122 0004 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
1691:lwIP/src/core/tcp_out.c ****     ++pcb->nrtx;
 6123              		.loc 1 1691 6 discriminator 2 view .LVU2249
 6124 0008 FF2B     		cmp	r3, #255
 6125 000a 02D0     		beq	.L543
1692:lwIP/src/core/tcp_out.c ****   }
 6126              		.loc 1 1692 5 is_stmt 1 view .LVU2250
 6127 000c 0133     		adds	r3, r3, #1
 6128 000e 80F84230 		strb	r3, [r0, #66]
 6129              	.L543:
1695:lwIP/src/core/tcp_out.c **** }
 6130              		.loc 1 1695 3 view .LVU2251
 6131              	.LVL528:
 6132              	.LBB657:
 6133              	.LBI657:
1237:lwIP/src/core/tcp_out.c **** {
 6134              		.loc 1 1237 1 view .LVU2252
 6135              	.LBB658:
1239:lwIP/src/core/tcp_out.c ****   u32_t wnd, snd_nxt;
 6136              		.loc 1 1239 3 view .LVU2253
1240:lwIP/src/core/tcp_out.c ****   err_t err;
 6137              		.loc 1 1240 3 view .LVU2254
1241:lwIP/src/core/tcp_out.c ****   struct netif *netif;
 6138              		.loc 1 1241 3 view .LVU2255
1242:lwIP/src/core/tcp_out.c **** #if TCP_CWND_DEBUG
 6139              		.loc 1 1242 3 view .LVU2256
1247:lwIP/src/core/tcp_out.c **** 
 6140              		.loc 1 1247 28 view .LVU2257
1249:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
 6141              		.loc 1 1249 3 view .LVU2258
1249:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
 6142              		.loc 1 1249 3 view .LVU2259
1249:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
 6143              		.loc 1 1249 3 view .LVU2260
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6144              		.loc 1 1251 3 view .LVU2261
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6145              		.loc 1 1251 3 view .LVU2262
 6146 0012 037D     		ldrb	r3, [r0, #20]	@ zero_extendqisi2
 6147 0014 012B     		cmp	r3, #1
 6148 0016 0CD0     		beq	.L552
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6149              		.loc 1 1251 3 view .LVU2263
1258:lwIP/src/core/tcp_out.c ****     return ERR_OK;
 6150              		.loc 1 1258 3 view .LVU2264
1258:lwIP/src/core/tcp_out.c ****     return ERR_OK;
ARM GAS  /tmp/ccH0Y1hM.s 			page 201


 6151              		.loc 1 1258 21 is_stmt 0 view .LVU2265
 6152 0018 084B     		ldr	r3, .L553
1258:lwIP/src/core/tcp_out.c ****     return ERR_OK;
 6153              		.loc 1 1258 6 view .LVU2266
 6154 001a 1B68     		ldr	r3, [r3]
 6155 001c 9842     		cmp	r0, r3
 6156 001e 03D0     		beq	.L540
 6157              	.LBE658:
 6158              	.LBE657:
1696:lwIP/src/core/tcp_out.c **** 
 6159              		.loc 1 1696 1 view .LVU2267
 6160 0020 BDE80840 		pop	{r3, lr}
 6161              	.LCFI46:
 6162              		.cfi_remember_state
 6163              		.cfi_restore 14
 6164              		.cfi_restore 3
 6165              		.cfi_def_cfa_offset 0
 6166              	.LBB661:
 6167              	.LBB659:
 6168 0024 FFF7FEBF 		b	tcp_output.part.0
 6169              	.LVL529:
 6170              	.L540:
 6171              	.LCFI47:
 6172              		.cfi_restore_state
1696:lwIP/src/core/tcp_out.c **** 
 6173              		.loc 1 1696 1 view .LVU2268
 6174              	.LBE659:
 6175              	.LBE661:
 6176 0028 08BD     		pop	{r3, pc}
 6177              	.LVL530:
 6178              	.L551:
1688:lwIP/src/core/tcp_out.c **** 
 6179              		.loc 1 1688 3 is_stmt 1 discriminator 1 view .LVU2269
 6180 002a 0548     		ldr	r0, .L553+4
 6181              	.LVL531:
1688:lwIP/src/core/tcp_out.c **** 
 6182              		.loc 1 1688 3 is_stmt 0 discriminator 1 view .LVU2270
 6183 002c FFF7FEFF 		bl	printf
 6184              	.LVL532:
 6185              	.L542:
1688:lwIP/src/core/tcp_out.c **** 
 6186              		.loc 1 1688 3 is_stmt 1 discriminator 1 view .LVU2271
1688:lwIP/src/core/tcp_out.c **** 
 6187              		.loc 1 1688 3 discriminator 1 view .LVU2272
1688:lwIP/src/core/tcp_out.c **** 
 6188              		.loc 1 1688 3 discriminator 1 view .LVU2273
1688:lwIP/src/core/tcp_out.c **** 
 6189              		.loc 1 1688 3 discriminator 1 view .LVU2274
1688:lwIP/src/core/tcp_out.c **** 
 6190              		.loc 1 1688 3 discriminator 1 view .LVU2275
1688:lwIP/src/core/tcp_out.c **** 
 6191              		.loc 1 1688 3 discriminator 1 view .LVU2276
 6192 0030 FEE7     		b	.L542
 6193              	.LVL533:
 6194              	.L552:
 6195              	.LBB662:
 6196              	.LBB660:
ARM GAS  /tmp/ccH0Y1hM.s 			page 202


1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6197              		.loc 1 1251 3 view .LVU2277
 6198 0032 0448     		ldr	r0, .L553+8
 6199              	.LVL534:
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6200              		.loc 1 1251 3 is_stmt 0 view .LVU2278
 6201 0034 FFF7FEFF 		bl	printf
 6202              	.LVL535:
 6203              	.L545:
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6204              		.loc 1 1251 3 is_stmt 1 view .LVU2279
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6205              		.loc 1 1251 3 view .LVU2280
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6206              		.loc 1 1251 3 view .LVU2281
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6207              		.loc 1 1251 3 view .LVU2282
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6208              		.loc 1 1251 3 view .LVU2283
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6209              		.loc 1 1251 3 view .LVU2284
 6210 0038 FEE7     		b	.L545
 6211              	.L554:
 6212 003a 00BF     		.align	2
 6213              	.L553:
 6214 003c 00000000 		.word	tcp_input_pcb
 6215 0040 00000000 		.word	.LC43
 6216 0044 18000000 		.word	.LC42
 6217              	.LBE660:
 6218              	.LBE662:
 6219              		.cfi_endproc
 6220              	.LFE117:
 6222              		.section	.rodata.tcp_rexmit_rto.str1.4,"aMS",%progbits,1
 6223              		.align	2
 6224              	.LC44:
 6225 0000 7463705F 		.ascii	"tcp_rexmit_rto: invalid pcb\000"
 6225      7265786D 
 6225      69745F72 
 6225      746F3A20 
 6225      696E7661 
 6226              		.section	.text.tcp_rexmit_rto,"ax",%progbits
 6227              		.align	1
 6228              		.p2align 2,,3
 6229              		.global	tcp_rexmit_rto
 6230              		.syntax unified
 6231              		.thumb
 6232              		.thumb_func
 6233              		.fpu fpv4-sp-d16
 6235              	tcp_rexmit_rto:
 6236              	.LVL536:
 6237              	.LFB118:
1708:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rexmit_rto: invalid pcb", pcb != NULL);
 6238              		.loc 1 1708 1 view -0
 6239              		.cfi_startproc
 6240              		@ args = 0, pretend = 0, frame = 0
 6241              		@ frame_needed = 0, uses_anonymous_args = 0
1709:lwIP/src/core/tcp_out.c **** 
ARM GAS  /tmp/ccH0Y1hM.s 			page 203


 6242              		.loc 1 1709 3 view .LVU2286
1709:lwIP/src/core/tcp_out.c **** 
 6243              		.loc 1 1709 3 view .LVU2287
1708:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_rexmit_rto: invalid pcb", pcb != NULL);
 6244              		.loc 1 1708 1 is_stmt 0 view .LVU2288
 6245 0000 70B5     		push	{r4, r5, r6, lr}
 6246              	.LCFI48:
 6247              		.cfi_def_cfa_offset 16
 6248              		.cfi_offset 4, -16
 6249              		.cfi_offset 5, -12
 6250              		.cfi_offset 6, -8
 6251              		.cfi_offset 14, -4
1709:lwIP/src/core/tcp_out.c **** 
 6252              		.loc 1 1709 3 view .LVU2289
 6253 0002 50B1     		cbz	r0, .L570
1709:lwIP/src/core/tcp_out.c **** 
 6254              		.loc 1 1709 3 is_stmt 1 view .LVU2290
1711:lwIP/src/core/tcp_out.c ****     tcp_rexmit_rto_commit(pcb);
 6255              		.loc 1 1711 3 view .LVU2291
 6256              	.LVL537:
 6257              	.LBB677:
 6258              	.LBI677:
1631:lwIP/src/core/tcp_out.c **** {
 6259              		.loc 1 1631 1 view .LVU2292
 6260              	.LBB678:
1633:lwIP/src/core/tcp_out.c **** 
 6261              		.loc 1 1633 3 view .LVU2293
1635:lwIP/src/core/tcp_out.c **** 
 6262              		.loc 1 1635 3 view .LVU2294
1635:lwIP/src/core/tcp_out.c **** 
 6263              		.loc 1 1635 3 view .LVU2295
1635:lwIP/src/core/tcp_out.c **** 
 6264              		.loc 1 1635 3 view .LVU2296
1637:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 6265              		.loc 1 1637 3 view .LVU2297
1637:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 6266              		.loc 1 1637 10 is_stmt 0 view .LVU2298
 6267 0004 036F     		ldr	r3, [r0, #112]
1637:lwIP/src/core/tcp_out.c ****     return ERR_VAL;
 6268              		.loc 1 1637 6 view .LVU2299
 6269 0006 3BB1     		cbz	r3, .L555
 6270 0008 1A46     		mov	r2, r3
 6271              	.L558:
1646:lwIP/src/core/tcp_out.c ****       LWIP_DEBUGF(TCP_RTO_DEBUG, ("tcp_rexmit_rto: segment busy\n"));
 6272              		.loc 1 1646 5 is_stmt 1 view .LVU2300
 6273              	.LVL538:
 6274              	.LBB679:
 6275              	.LBI679:
1432:lwIP/src/core/tcp_out.c **** {
 6276              		.loc 1 1432 1 view .LVU2301
 6277              	.LBB680:
1434:lwIP/src/core/tcp_out.c **** 
 6278              		.loc 1 1434 3 view .LVU2302
1434:lwIP/src/core/tcp_out.c **** 
 6279              		.loc 1 1434 3 view .LVU2303
1434:lwIP/src/core/tcp_out.c **** 
 6280              		.loc 1 1434 3 view .LVU2304
ARM GAS  /tmp/ccH0Y1hM.s 			page 204


1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 6281              		.loc 1 1439 3 view .LVU2305
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 6282              		.loc 1 1439 3 is_stmt 0 view .LVU2306
 6283              	.LBE680:
 6284              	.LBE679:
1645:lwIP/src/core/tcp_out.c ****     if (tcp_output_segment_busy(seg)) {
 6285              		.loc 1 1645 28 is_stmt 1 view .LVU2307
 6286 000a 1146     		mov	r1, r2
1645:lwIP/src/core/tcp_out.c ****     if (tcp_output_segment_busy(seg)) {
 6287              		.loc 1 1645 31 is_stmt 0 view .LVU2308
 6288 000c 1268     		ldr	r2, [r2]
 6289              	.LVL539:
1645:lwIP/src/core/tcp_out.c ****     if (tcp_output_segment_busy(seg)) {
 6290              		.loc 1 1645 31 view .LVU2309
 6291 000e 4C68     		ldr	r4, [r1, #4]
 6292 0010 A47B     		ldrb	r4, [r4, #14]	@ zero_extendqisi2
1645:lwIP/src/core/tcp_out.c ****     if (tcp_output_segment_busy(seg)) {
 6293              		.loc 1 1645 3 view .LVU2310
 6294 0012 32B1     		cbz	r2, .L571
 6295              	.LBB682:
 6296              	.LBB681:
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 6297              		.loc 1 1439 6 view .LVU2311
 6298 0014 012C     		cmp	r4, #1
 6299 0016 F8D0     		beq	.L558
 6300              	.LVL540:
 6301              	.L555:
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 6302              		.loc 1 1439 6 view .LVU2312
 6303              	.LBE681:
 6304              	.LBE682:
 6305              	.LBE678:
 6306              	.LBE677:
1714:lwIP/src/core/tcp_out.c **** 
 6307              		.loc 1 1714 1 view .LVU2313
 6308 0018 70BD     		pop	{r4, r5, r6, pc}
 6309              	.L570:
1709:lwIP/src/core/tcp_out.c **** 
 6310              		.loc 1 1709 3 is_stmt 1 discriminator 1 view .LVU2314
 6311 001a 1948     		ldr	r0, .L573
 6312              	.LVL541:
1709:lwIP/src/core/tcp_out.c **** 
 6313              		.loc 1 1709 3 is_stmt 0 discriminator 1 view .LVU2315
 6314 001c FFF7FEFF 		bl	printf
 6315              	.LVL542:
 6316              	.L557:
1709:lwIP/src/core/tcp_out.c **** 
 6317              		.loc 1 1709 3 is_stmt 1 discriminator 1 view .LVU2316
1709:lwIP/src/core/tcp_out.c **** 
 6318              		.loc 1 1709 3 discriminator 1 view .LVU2317
1709:lwIP/src/core/tcp_out.c **** 
 6319              		.loc 1 1709 3 discriminator 1 view .LVU2318
1709:lwIP/src/core/tcp_out.c **** 
 6320              		.loc 1 1709 3 discriminator 1 view .LVU2319
1709:lwIP/src/core/tcp_out.c **** 
 6321              		.loc 1 1709 3 discriminator 1 view .LVU2320
ARM GAS  /tmp/ccH0Y1hM.s 			page 205


1709:lwIP/src/core/tcp_out.c **** 
 6322              		.loc 1 1709 3 discriminator 1 view .LVU2321
 6323 0020 FEE7     		b	.L557
 6324              	.LVL543:
 6325              	.L571:
 6326              	.LBB696:
 6327              	.LBB693:
1651:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_RTO_DEBUG, ("tcp_rexmit_rto: segment busy\n"));
 6328              		.loc 1 1651 3 view .LVU2322
 6329              	.LBB683:
 6330              	.LBI683:
1432:lwIP/src/core/tcp_out.c **** {
 6331              		.loc 1 1432 1 view .LVU2323
 6332              	.LBB684:
1434:lwIP/src/core/tcp_out.c **** 
 6333              		.loc 1 1434 3 view .LVU2324
1434:lwIP/src/core/tcp_out.c **** 
 6334              		.loc 1 1434 3 view .LVU2325
1434:lwIP/src/core/tcp_out.c **** 
 6335              		.loc 1 1434 3 view .LVU2326
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 6336              		.loc 1 1439 3 view .LVU2327
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 6337              		.loc 1 1439 6 is_stmt 0 view .LVU2328
 6338 0022 012C     		cmp	r4, #1
 6339 0024 F8D1     		bne	.L555
 6340              	.LVL544:
1439:lwIP/src/core/tcp_out.c ****     /* other reference found */
 6341              		.loc 1 1439 6 view .LVU2329
 6342              	.LBE684:
 6343              	.LBE683:
1656:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 6344              		.loc 1 1656 3 is_stmt 1 view .LVU2330
1669:lwIP/src/core/tcp_out.c ****   /* Record the next byte following retransmit */
 6345              		.loc 1 1669 3 is_stmt 0 view .LVU2331
 6346 0026 448B     		ldrh	r4, [r0, #26]
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 6347              		.loc 1 1671 18 view .LVU2332
 6348 0028 CD68     		ldr	r5, [r1, #12]
1656:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 6349              		.loc 1 1656 13 view .LVU2333
 6350 002a C66E     		ldr	r6, [r0, #108]
1669:lwIP/src/core/tcp_out.c ****   /* Record the next byte following retransmit */
 6351              		.loc 1 1669 3 view .LVU2334
 6352 002c 44F40064 		orr	r4, r4, #2048
1656:lwIP/src/core/tcp_out.c **** #if TCP_OVERSIZE_DBGCHECK
 6353              		.loc 1 1656 13 view .LVU2335
 6354 0030 0E60     		str	r6, [r1]
1664:lwIP/src/core/tcp_out.c ****   /* unacked queue is now empty */
 6355              		.loc 1 1664 3 is_stmt 1 view .LVU2336
1669:lwIP/src/core/tcp_out.c ****   /* Record the next byte following retransmit */
 6356              		.loc 1 1669 3 is_stmt 0 view .LVU2337
 6357 0032 4483     		strh	r4, [r0, #26]	@ movhi
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 6358              		.loc 1 1671 51 view .LVU2338
 6359 0034 0989     		ldrh	r1, [r1, #8]
 6360              	.LVL545:
ARM GAS  /tmp/ccH0Y1hM.s 			page 206


1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 6361              		.loc 1 1671 51 view .LVU2339
 6362              	.LBE693:
 6363              	.LBE696:
 6364              	.LBB697:
 6365              	.LBB698:
1691:lwIP/src/core/tcp_out.c ****     ++pcb->nrtx;
 6366              		.loc 1 1691 10 view .LVU2340
 6367 0036 90F84240 		ldrb	r4, [r0, #66]	@ zero_extendqisi2
 6368              	.LBE698:
 6369              	.LBE697:
 6370              	.LBB706:
 6371              	.LBB694:
1666:lwIP/src/core/tcp_out.c **** 
 6372              		.loc 1 1666 16 view .LVU2341
 6373 003a C0E91B32 		strd	r3, r2, [r0, #108]
1669:lwIP/src/core/tcp_out.c ****   /* Record the next byte following retransmit */
 6374              		.loc 1 1669 3 is_stmt 1 view .LVU2342
1669:lwIP/src/core/tcp_out.c ****   /* Record the next byte following retransmit */
 6375              		.loc 1 1669 3 view .LVU2343
1669:lwIP/src/core/tcp_out.c ****   /* Record the next byte following retransmit */
 6376              		.loc 1 1669 3 view .LVU2344
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 6377              		.loc 1 1671 3 view .LVU2345
 6378              	.LVL546:
 6379              	.LBB685:
 6380              	.LBI685:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 6381              		.loc 2 900 31 view .LVU2346
 6382              	.LBB686:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 6383              		.loc 2 903 3 view .LVU2347
 6384              	.LBE686:
 6385              	.LBE685:
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 6386              		.loc 1 1671 51 is_stmt 0 view .LVU2348
 6387 003e AB89     		ldrh	r3, [r5, #12]	@ unaligned
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 6388              		.loc 1 1671 18 view .LVU2349
 6389 0040 6D68     		ldr	r5, [r5, #4]	@ unaligned
 6390              	.LVL547:
 6391              	.LBB688:
 6392              	.LBB689:
 6393              		.loc 2 937 19 view .LVU2350
 6394 0042 5BBA     		rev16	r3, r3
 6395              	.LBE689:
 6396              	.LBE688:
1673:lwIP/src/core/tcp_out.c **** 
 6397              		.loc 1 1673 15 view .LVU2351
 6398 0044 4263     		str	r2, [r0, #52]
 6399              	.LBB691:
 6400              	.LBB687:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 6401              		.loc 2 903 10 view .LVU2352
 6402 0046 2DBA     		rev	r5, r5
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 6403              		.loc 2 903 10 view .LVU2353
ARM GAS  /tmp/ccH0Y1hM.s 			page 207


 6404              	.LBE687:
 6405              	.LBE691:
 6406              	.LBB692:
 6407              	.LBI688:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 6408              		.loc 2 934 30 is_stmt 1 view .LVU2354
 6409              	.LBB690:
 6410              		.loc 2 937 3 view .LVU2355
 6411              	.LBE690:
 6412              	.LBE692:
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 6413              		.loc 1 1671 51 is_stmt 0 view .LVU2356
 6414 0048 13F00303 		ands	r3, r3, #3
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 6415              		.loc 1 1671 49 view .LVU2357
 6416 004c 01EB0502 		add	r2, r1, r5
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 6417              		.loc 1 1671 51 view .LVU2358
 6418 0050 18BF     		it	ne
 6419 0052 0123     		movne	r3, #1
 6420              	.LBE694:
 6421              	.LBE706:
 6422              	.LBB707:
 6423              	.LBB703:
1691:lwIP/src/core/tcp_out.c ****     ++pcb->nrtx;
 6424              		.loc 1 1691 6 view .LVU2359
 6425 0054 FF2C     		cmp	r4, #255
 6426              	.LBE703:
 6427              	.LBE707:
 6428              	.LBB708:
 6429              	.LBB695:
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 6430              		.loc 1 1671 49 view .LVU2360
 6431 0056 1344     		add	r3, r3, r2
1671:lwIP/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 6432              		.loc 1 1671 16 view .LVU2361
 6433 0058 C364     		str	r3, [r0, #76]
1673:lwIP/src/core/tcp_out.c **** 
 6434              		.loc 1 1673 3 is_stmt 1 view .LVU2362
1675:lwIP/src/core/tcp_out.c **** }
 6435              		.loc 1 1675 3 view .LVU2363
 6436              	.LVL548:
1675:lwIP/src/core/tcp_out.c **** }
 6437              		.loc 1 1675 3 is_stmt 0 view .LVU2364
 6438              	.LBE695:
 6439              	.LBE708:
1712:lwIP/src/core/tcp_out.c ****   }
 6440              		.loc 1 1712 5 is_stmt 1 view .LVU2365
 6441              	.LBB709:
 6442              	.LBI697:
1686:lwIP/src/core/tcp_out.c **** {
 6443              		.loc 1 1686 1 view .LVU2366
 6444              	.LBB704:
1688:lwIP/src/core/tcp_out.c **** 
 6445              		.loc 1 1688 3 view .LVU2367
1688:lwIP/src/core/tcp_out.c **** 
 6446              		.loc 1 1688 3 view .LVU2368
ARM GAS  /tmp/ccH0Y1hM.s 			page 208


1688:lwIP/src/core/tcp_out.c **** 
 6447              		.loc 1 1688 3 view .LVU2369
1691:lwIP/src/core/tcp_out.c ****     ++pcb->nrtx;
 6448              		.loc 1 1691 3 view .LVU2370
1691:lwIP/src/core/tcp_out.c ****     ++pcb->nrtx;
 6449              		.loc 1 1691 6 is_stmt 0 view .LVU2371
 6450 005a 02D0     		beq	.L562
1692:lwIP/src/core/tcp_out.c ****   }
 6451              		.loc 1 1692 5 is_stmt 1 view .LVU2372
 6452 005c 0134     		adds	r4, r4, #1
 6453 005e 80F84240 		strb	r4, [r0, #66]
 6454              	.L562:
1695:lwIP/src/core/tcp_out.c **** }
 6455              		.loc 1 1695 3 view .LVU2373
 6456              	.LVL549:
 6457              	.LBB699:
 6458              	.LBI699:
1237:lwIP/src/core/tcp_out.c **** {
 6459              		.loc 1 1237 1 view .LVU2374
 6460              	.LBB700:
1239:lwIP/src/core/tcp_out.c ****   u32_t wnd, snd_nxt;
 6461              		.loc 1 1239 3 view .LVU2375
1240:lwIP/src/core/tcp_out.c ****   err_t err;
 6462              		.loc 1 1240 3 view .LVU2376
1241:lwIP/src/core/tcp_out.c ****   struct netif *netif;
 6463              		.loc 1 1241 3 view .LVU2377
1242:lwIP/src/core/tcp_out.c **** #if TCP_CWND_DEBUG
 6464              		.loc 1 1242 3 view .LVU2378
1247:lwIP/src/core/tcp_out.c **** 
 6465              		.loc 1 1247 28 view .LVU2379
1249:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
 6466              		.loc 1 1249 3 view .LVU2380
1249:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
 6467              		.loc 1 1249 3 view .LVU2381
1249:lwIP/src/core/tcp_out.c ****   /* pcb->state LISTEN not allowed here */
 6468              		.loc 1 1249 3 view .LVU2382
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6469              		.loc 1 1251 3 view .LVU2383
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6470              		.loc 1 1251 3 view .LVU2384
 6471 0062 037D     		ldrb	r3, [r0, #20]	@ zero_extendqisi2
 6472 0064 012B     		cmp	r3, #1
 6473 0066 07D0     		beq	.L572
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6474              		.loc 1 1251 3 view .LVU2385
1258:lwIP/src/core/tcp_out.c ****     return ERR_OK;
 6475              		.loc 1 1258 3 view .LVU2386
1258:lwIP/src/core/tcp_out.c ****     return ERR_OK;
 6476              		.loc 1 1258 21 is_stmt 0 view .LVU2387
 6477 0068 064B     		ldr	r3, .L573+4
1258:lwIP/src/core/tcp_out.c ****     return ERR_OK;
 6478              		.loc 1 1258 6 view .LVU2388
 6479 006a 1B68     		ldr	r3, [r3]
 6480 006c 9842     		cmp	r0, r3
 6481 006e D3D0     		beq	.L555
 6482              	.LBE700:
 6483              	.LBE699:
ARM GAS  /tmp/ccH0Y1hM.s 			page 209


 6484              	.LBE704:
 6485              	.LBE709:
1714:lwIP/src/core/tcp_out.c **** 
 6486              		.loc 1 1714 1 view .LVU2389
 6487 0070 BDE87040 		pop	{r4, r5, r6, lr}
 6488              	.LCFI49:
 6489              		.cfi_remember_state
 6490              		.cfi_restore 14
 6491              		.cfi_restore 6
 6492              		.cfi_restore 5
 6493              		.cfi_restore 4
 6494              		.cfi_def_cfa_offset 0
 6495              	.LBB710:
 6496              	.LBB705:
 6497              	.LBB702:
 6498              	.LBB701:
 6499 0074 FFF7FEBF 		b	tcp_output.part.0
 6500              	.LVL550:
 6501              	.L572:
 6502              	.LCFI50:
 6503              		.cfi_restore_state
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6504              		.loc 1 1251 3 is_stmt 1 view .LVU2390
 6505 0078 0348     		ldr	r0, .L573+8
 6506              	.LVL551:
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6507              		.loc 1 1251 3 is_stmt 0 view .LVU2391
 6508 007a FFF7FEFF 		bl	printf
 6509              	.LVL552:
 6510              	.L564:
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6511              		.loc 1 1251 3 is_stmt 1 view .LVU2392
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6512              		.loc 1 1251 3 view .LVU2393
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6513              		.loc 1 1251 3 view .LVU2394
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6514              		.loc 1 1251 3 view .LVU2395
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6515              		.loc 1 1251 3 view .LVU2396
1251:lwIP/src/core/tcp_out.c ****               pcb->state != LISTEN);
 6516              		.loc 1 1251 3 view .LVU2397
 6517 007e FEE7     		b	.L564
 6518              	.L574:
 6519              		.align	2
 6520              	.L573:
 6521 0080 00000000 		.word	.LC44
 6522 0084 00000000 		.word	tcp_input_pcb
 6523 0088 18000000 		.word	.LC42
 6524              	.LBE701:
 6525              	.LBE702:
 6526              	.LBE705:
 6527              	.LBE710:
 6528              		.cfi_endproc
 6529              	.LFE118:
 6531              		.section	.rodata.tcp_keepalive.str1.4,"aMS",%progbits,1
 6532              		.align	2
ARM GAS  /tmp/ccH0Y1hM.s 			page 210


 6533              	.LC45:
 6534 0000 7463705F 		.ascii	"tcp_keepalive: invalid pcb\000"
 6534      6B656570 
 6534      616C6976 
 6534      653A2069 
 6534      6E76616C 
 6535              		.section	.text.tcp_keepalive,"ax",%progbits
 6536              		.align	1
 6537              		.p2align 2,,3
 6538              		.global	tcp_keepalive
 6539              		.syntax unified
 6540              		.thumb
 6541              		.thumb_func
 6542              		.fpu fpv4-sp-d16
 6544              	tcp_keepalive:
 6545              	.LVL553:
 6546              	.LFB127:
2068:lwIP/src/core/tcp_out.c **** 
2069:lwIP/src/core/tcp_out.c **** /**
2070:lwIP/src/core/tcp_out.c ****  * Send keepalive packets to keep a connection active although
2071:lwIP/src/core/tcp_out.c ****  * no data is sent over it.
2072:lwIP/src/core/tcp_out.c ****  *
2073:lwIP/src/core/tcp_out.c ****  * Called by tcp_slowtmr()
2074:lwIP/src/core/tcp_out.c ****  *
2075:lwIP/src/core/tcp_out.c ****  * @param pcb the tcp_pcb for which to send a keepalive packet
2076:lwIP/src/core/tcp_out.c ****  */
2077:lwIP/src/core/tcp_out.c **** err_t
2078:lwIP/src/core/tcp_out.c **** tcp_keepalive(struct tcp_pcb *pcb)
2079:lwIP/src/core/tcp_out.c **** {
 6547              		.loc 1 2079 1 view -0
 6548              		.cfi_startproc
 6549              		@ args = 0, pretend = 0, frame = 0
 6550              		@ frame_needed = 0, uses_anonymous_args = 0
2080:lwIP/src/core/tcp_out.c ****   err_t err;
 6551              		.loc 1 2080 3 view .LVU2399
2081:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
 6552              		.loc 1 2081 3 view .LVU2400
2082:lwIP/src/core/tcp_out.c ****   u8_t optlen = LWIP_TCP_OPT_LENGTH_SEGMENT(0, pcb);
 6553              		.loc 1 2082 3 view .LVU2401
2083:lwIP/src/core/tcp_out.c **** 
2084:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_keepalive: invalid pcb", pcb != NULL);
 6554              		.loc 1 2084 3 view .LVU2402
 6555              		.loc 1 2084 3 view .LVU2403
2079:lwIP/src/core/tcp_out.c ****   err_t err;
 6556              		.loc 1 2079 1 is_stmt 0 view .LVU2404
 6557 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6558              	.LCFI51:
 6559              		.cfi_def_cfa_offset 32
 6560              		.cfi_offset 4, -32
 6561              		.cfi_offset 5, -28
 6562              		.cfi_offset 6, -24
 6563              		.cfi_offset 7, -20
 6564              		.cfi_offset 8, -16
 6565              		.cfi_offset 9, -12
 6566              		.cfi_offset 10, -8
 6567              		.cfi_offset 14, -4
 6568              		.loc 1 2084 3 view .LVU2405
ARM GAS  /tmp/ccH0Y1hM.s 			page 211


 6569 0004 0028     		cmp	r0, #0
 6570 0006 3CD0     		beq	.L582
 6571              		.loc 1 2084 3 is_stmt 1 discriminator 2 view .LVU2406
2085:lwIP/src/core/tcp_out.c **** 
2086:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, ("tcp_keepalive: sending KEEPALIVE probe to "));
 6572              		.loc 1 2086 73 discriminator 2 view .LVU2407
2087:lwIP/src/core/tcp_out.c ****   ip_addr_debug_print_val(TCP_DEBUG, pcb->remote_ip);
 6573              		.loc 1 2087 53 discriminator 2 view .LVU2408
2088:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, ("\n"));
 6574              		.loc 1 2088 33 discriminator 2 view .LVU2409
2089:lwIP/src/core/tcp_out.c **** 
2090:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, ("tcp_keepalive: tcp_ticks %"U32_F"   pcb->tmr %"U32_F" pcb->keep_cnt_sent
2091:lwIP/src/core/tcp_out.c ****                           tcp_ticks, pcb->tmr, (u16_t)pcb->keep_cnt_sent));
 6575              		.loc 1 2091 75 discriminator 2 view .LVU2410
2092:lwIP/src/core/tcp_out.c **** 
2093:lwIP/src/core/tcp_out.c ****   p = tcp_output_alloc_header(pcb, optlen, 0, lwip_htonl(pcb->snd_nxt - 1));
 6576              		.loc 1 2093 3 discriminator 2 view .LVU2411
 6577 0008 0446     		mov	r4, r0
 6578              	.LBB731:
 6579              	.LBB732:
 6580              	.LBB733:
 6581              	.LBB734:
1825:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
 6582              		.loc 1 1825 7 is_stmt 0 discriminator 2 view .LVU2412
 6583 000a 1421     		movs	r1, #20
 6584 000c 4FF42072 		mov	r2, #640
 6585 0010 2220     		movs	r0, #34
 6586              	.LVL554:
1825:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
 6587              		.loc 1 1825 7 discriminator 2 view .LVU2413
 6588              	.LBE734:
 6589              	.LBE733:
 6590              	.LBE732:
 6591              	.LBE731:
 6592              		.loc 1 2093 47 discriminator 2 view .LVU2414
 6593 0012 256D     		ldr	r5, [r4, #80]
 6594              	.LVL555:
 6595              	.LBB783:
 6596              	.LBI783:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 6597              		.loc 2 900 31 is_stmt 1 discriminator 2 view .LVU2415
 6598              	.LBB784:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 6599              		.loc 2 903 3 discriminator 2 view .LVU2416
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 6600              		.loc 2 903 3 is_stmt 0 discriminator 2 view .LVU2417
 6601              	.LBE784:
 6602              	.LBE783:
 6603              	.LBB786:
 6604              	.LBI731:
1853:lwIP/src/core/tcp_out.c ****                         u32_t seqno_be /* already in network byte order */)
 6605              		.loc 1 1853 1 is_stmt 1 discriminator 2 view .LVU2418
 6606              	.LBB775:
1856:lwIP/src/core/tcp_out.c **** 
 6607              		.loc 1 1856 3 discriminator 2 view .LVU2419
1858:lwIP/src/core/tcp_out.c **** 
 6608              		.loc 1 1858 3 discriminator 2 view .LVU2420
ARM GAS  /tmp/ccH0Y1hM.s 			page 212


1858:lwIP/src/core/tcp_out.c **** 
 6609              		.loc 1 1858 3 discriminator 2 view .LVU2421
1858:lwIP/src/core/tcp_out.c **** 
 6610              		.loc 1 1858 3 discriminator 2 view .LVU2422
1860:lwIP/src/core/tcp_out.c ****     seqno_be, pcb->local_port, pcb->remote_port, TCP_ACK,
 6611              		.loc 1 1860 3 discriminator 2 view .LVU2423
1860:lwIP/src/core/tcp_out.c ****     seqno_be, pcb->local_port, pcb->remote_port, TCP_ACK,
 6612              		.loc 1 1860 7 is_stmt 0 discriminator 2 view .LVU2424
 6613 0014 676A     		ldr	r7, [r4, #36]
 6614 0016 B4F81690 		ldrh	r9, [r4, #22]
 6615 001a B4F81880 		ldrh	r8, [r4, #24]
 6616 001e 668D     		ldrh	r6, [r4, #42]
 6617              	.LVL556:
 6618              	.LBB759:
 6619              	.LBI733:
1818:lwIP/src/core/tcp_out.c ****                         u32_t seqno_be /* already in network byte order */,
 6620              		.loc 1 1818 1 is_stmt 1 discriminator 2 view .LVU2425
 6621              	.LBB751:
1822:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
 6622              		.loc 1 1822 3 discriminator 2 view .LVU2426
1823:lwIP/src/core/tcp_out.c **** 
 6623              		.loc 1 1823 3 discriminator 2 view .LVU2427
1825:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
 6624              		.loc 1 1825 3 discriminator 2 view .LVU2428
1825:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
 6625              		.loc 1 1825 7 is_stmt 0 discriminator 2 view .LVU2429
 6626 0020 FFF7FEFF 		bl	pbuf_alloc
 6627              	.LVL557:
1826:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("check that first pbuf can hold struct tcp_hdr",
 6628              		.loc 1 1826 3 is_stmt 1 discriminator 2 view .LVU2430
1826:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("check that first pbuf can hold struct tcp_hdr",
 6629              		.loc 1 1826 6 is_stmt 0 discriminator 2 view .LVU2431
 6630 0024 0146     		mov	r1, r0
 6631 0026 A0B3     		cbz	r0, .L578
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 6632              		.loc 1 1827 5 is_stmt 1 view .LVU2432
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 6633              		.loc 1 1827 5 view .LVU2433
 6634 0028 4389     		ldrh	r3, [r0, #10]
 6635 002a 132B     		cmp	r3, #19
 6636 002c 2DD9     		bls	.L583
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 6637              		.loc 1 1827 5 view .LVU2434
1829:lwIP/src/core/tcp_out.c ****     tcphdr->src = lwip_htons(src_port);
 6638              		.loc 1 1829 5 view .LVU2435
 6639              	.LBE751:
 6640              	.LBE759:
 6641              	.LBB760:
 6642              	.LBB761:
1865:lwIP/src/core/tcp_out.c ****   }
 6643              		.loc 1 1865 49 is_stmt 0 view .LVU2436
 6644 002e 608D     		ldrh	r0, [r4, #42]
 6645              	.LVL558:
1865:lwIP/src/core/tcp_out.c ****   }
 6646              		.loc 1 1865 49 view .LVU2437
 6647              	.LBE761:
 6648              	.LBE760:
ARM GAS  /tmp/ccH0Y1hM.s 			page 213


 6649              	.LBE775:
 6650              	.LBE786:
 6651              		.loc 1 2093 47 view .LVU2438
 6652 0030 6B1E     		subs	r3, r5, #1
 6653              	.LBB787:
 6654              	.LBB776:
 6655              	.LBB765:
 6656              	.LBB762:
1865:lwIP/src/core/tcp_out.c ****   }
 6657              		.loc 1 1865 44 view .LVU2439
 6658 0032 626A     		ldr	r2, [r4, #36]
 6659              	.LBE762:
 6660              	.LBE765:
 6661              	.LBB766:
 6662              	.LBB752:
 6663              	.LBB735:
 6664              	.LBB736:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 6665              		.loc 2 903 10 view .LVU2440
 6666 0034 97FA87FE 		rev	lr, r7
 6667              	.LBE736:
 6668              	.LBE735:
1829:lwIP/src/core/tcp_out.c ****     tcphdr->src = lwip_htons(src_port);
 6669              		.loc 1 1829 12 view .LVU2441
 6670 0038 4D68     		ldr	r5, [r1, #4]
 6671              	.LBB738:
 6672              	.LBB739:
 6673              		.loc 2 937 19 view .LVU2442
 6674 003a 99FA99F9 		rev16	r9, r9
 6675              	.LVL559:
 6676              		.loc 2 937 19 view .LVU2443
 6677              	.LBE739:
 6678              	.LBE738:
 6679              	.LBE752:
 6680              	.LBE766:
 6681              	.LBB767:
 6682              	.LBB763:
1865:lwIP/src/core/tcp_out.c ****   }
 6683              		.loc 1 1865 44 view .LVU2444
 6684 003e 1718     		adds	r7, r2, r0
 6685              	.LVL560:
1865:lwIP/src/core/tcp_out.c ****   }
 6686              		.loc 1 1865 44 view .LVU2445
 6687              	.LBE763:
 6688              	.LBE767:
 6689              	.LBE776:
 6690              	.LBE787:
 6691              	.LBB788:
 6692              	.LBB785:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 6693              		.loc 2 903 10 view .LVU2446
 6694 0040 1BBA     		rev	r3, r3
 6695              	.LBE785:
 6696              	.LBE788:
 6697              	.LBB789:
 6698              	.LBB777:
 6699              	.LBB768:
ARM GAS  /tmp/ccH0Y1hM.s 			page 214


 6700              	.LBB753:
 6701              	.LBB741:
 6702              	.LBB742:
 6703              		.loc 2 937 19 view .LVU2447
 6704 0042 98FA98F8 		rev16	r8, r8
 6705              	.LVL561:
 6706              		.loc 2 937 19 view .LVU2448
 6707              	.LBE742:
 6708              	.LBE741:
1830:lwIP/src/core/tcp_out.c ****     tcphdr->dest = lwip_htons(dst_port);
 6709              		.loc 1 1830 5 is_stmt 1 view .LVU2449
 6710              	.LBB744:
 6711              	.LBI738:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 6712              		.loc 2 934 30 view .LVU2450
 6713              	.LBB740:
 6714              		.loc 2 937 3 view .LVU2451
 6715              		.loc 2 937 3 is_stmt 0 view .LVU2452
 6716              	.LBE740:
 6717              	.LBE744:
 6718              	.LBB745:
 6719              	.LBB746:
 6720              		.loc 2 937 19 view .LVU2453
 6721 0046 96FA96FC 		rev16	ip, r6
 6722              	.LBE746:
 6723              	.LBE745:
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 6724              		.loc 1 1834 5 view .LVU2454
 6725 004a 5020     		movs	r0, #80
 6726 004c 0026     		movs	r6, #0
 6727              	.LVL562:
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 6728              		.loc 1 1834 5 view .LVU2455
 6729 004e 4FF0100A 		mov	r10, #16
1832:lwIP/src/core/tcp_out.c ****     tcphdr->ackno = lwip_htonl(ackno);
 6730              		.loc 1 1832 19 view .LVU2456
 6731 0052 6B60     		str	r3, [r5, #4]	@ unaligned
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 6732              		.loc 1 1834 5 view .LVU2457
 6733 0054 2873     		strb	r0, [r5, #12]
 6734              	.LBE753:
 6735              	.LBE768:
 6736              	.LBE777:
 6737              	.LBE789:
2094:lwIP/src/core/tcp_out.c ****   if (p == NULL) {
2095:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_DEBUG,
2096:lwIP/src/core/tcp_out.c ****                 ("tcp_keepalive: could not allocate memory for pbuf\n"));
2097:lwIP/src/core/tcp_out.c ****     return ERR_MEM;
2098:lwIP/src/core/tcp_out.c ****   }
2099:lwIP/src/core/tcp_out.c ****   tcp_output_fill_options(pcb, p, 0, optlen);
2100:lwIP/src/core/tcp_out.c ****   err = tcp_output_control_segment(pcb, p, &pcb->local_ip, &pcb->remote_ip);
 6738              		.loc 1 2100 9 view .LVU2458
 6739 0056 231D     		adds	r3, r4, #4
 6740              	.LBB790:
 6741              	.LBB778:
 6742              	.LBB769:
 6743              	.LBB754:
ARM GAS  /tmp/ccH0Y1hM.s 			page 215


1830:lwIP/src/core/tcp_out.c ****     tcphdr->dest = lwip_htons(dst_port);
 6744              		.loc 1 1830 17 view .LVU2459
 6745 0058 A5F80090 		strh	r9, [r5]	@ unaligned
1831:lwIP/src/core/tcp_out.c ****     tcphdr->seqno = seqno_be;
 6746              		.loc 1 1831 5 is_stmt 1 view .LVU2460
 6747              	.LVL563:
 6748              	.LBB748:
 6749              	.LBI741:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 6750              		.loc 2 934 30 view .LVU2461
 6751              	.LBB743:
 6752              		.loc 2 937 3 view .LVU2462
 6753              		.loc 2 937 3 is_stmt 0 view .LVU2463
 6754              	.LBE743:
 6755              	.LBE748:
 6756              	.LBE754:
 6757              	.LBE769:
 6758              	.LBE778:
 6759              	.LBE790:
 6760              		.loc 1 2100 9 view .LVU2464
 6761 005c 2246     		mov	r2, r4
 6762              	.LBB791:
 6763              	.LBB779:
 6764              	.LBB770:
 6765              	.LBB755:
1831:lwIP/src/core/tcp_out.c ****     tcphdr->seqno = seqno_be;
 6766              		.loc 1 1831 18 view .LVU2465
 6767 005e A5F80280 		strh	r8, [r5, #2]	@ unaligned
1832:lwIP/src/core/tcp_out.c ****     tcphdr->ackno = lwip_htonl(ackno);
 6768              		.loc 1 1832 5 is_stmt 1 view .LVU2466
1833:lwIP/src/core/tcp_out.c ****     TCPH_HDRLEN_FLAGS_SET(tcphdr, (5 + optlen / 4), flags);
 6769              		.loc 1 1833 5 view .LVU2467
 6770              	.LVL564:
 6771              	.LBB749:
 6772              	.LBI735:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 6773              		.loc 2 900 31 view .LVU2468
 6774              	.LBB737:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 6775              		.loc 2 903 3 view .LVU2469
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 6776              		.loc 2 903 3 is_stmt 0 view .LVU2470
 6777              	.LBE737:
 6778              	.LBE749:
 6779              	.LBE755:
 6780              	.LBE770:
 6781              	.LBE779:
 6782              	.LBE791:
 6783              		.loc 1 2100 9 view .LVU2471
 6784 0062 2046     		mov	r0, r4
 6785              	.LBB792:
 6786              	.LBB780:
 6787              	.LBB771:
 6788              	.LBB756:
1833:lwIP/src/core/tcp_out.c ****     TCPH_HDRLEN_FLAGS_SET(tcphdr, (5 + optlen / 4), flags);
 6789              		.loc 1 1833 19 view .LVU2472
 6790 0064 C5F808E0 		str	lr, [r5, #8]	@ unaligned
ARM GAS  /tmp/ccH0Y1hM.s 			page 216


1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 6791              		.loc 1 1834 5 is_stmt 1 view .LVU2473
 6792              	.LVL565:
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 6793              		.loc 1 1834 5 is_stmt 0 view .LVU2474
 6794              	.LBE756:
 6795              	.LBE771:
 6796              	.LBE780:
 6797              	.LBE792:
 6798              		.loc 2 937 3 is_stmt 1 view .LVU2475
 6799              	.LBB793:
 6800              	.LBB781:
 6801              	.LBB772:
 6802              	.LBB757:
1835:lwIP/src/core/tcp_out.c ****     tcphdr->chksum = 0;
 6803              		.loc 1 1835 17 is_stmt 0 view .LVU2476
 6804 0068 A5F80EC0 		strh	ip, [r5, #14]	@ unaligned
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 6805              		.loc 1 1834 5 view .LVU2477
 6806 006c 85F80DA0 		strb	r10, [r5, #13]
1835:lwIP/src/core/tcp_out.c ****     tcphdr->chksum = 0;
 6807              		.loc 1 1835 5 is_stmt 1 view .LVU2478
 6808              	.LVL566:
 6809              	.LBB750:
 6810              	.LBI745:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 6811              		.loc 2 934 30 view .LVU2479
 6812              	.LBB747:
 6813              		.loc 2 937 3 view .LVU2480
 6814              		.loc 2 937 3 is_stmt 0 view .LVU2481
 6815              	.LBE747:
 6816              	.LBE750:
1836:lwIP/src/core/tcp_out.c ****     tcphdr->urgp = 0;
 6817              		.loc 1 1836 5 is_stmt 1 view .LVU2482
1836:lwIP/src/core/tcp_out.c ****     tcphdr->urgp = 0;
 6818              		.loc 1 1836 20 is_stmt 0 view .LVU2483
 6819 0070 2E74     		strb	r6, [r5, #16]
 6820 0072 6E74     		strb	r6, [r5, #17]
1837:lwIP/src/core/tcp_out.c ****   }
 6821              		.loc 1 1837 5 is_stmt 1 view .LVU2484
1837:lwIP/src/core/tcp_out.c ****   }
 6822              		.loc 1 1837 18 is_stmt 0 view .LVU2485
 6823 0074 AE74     		strb	r6, [r5, #18]
 6824 0076 EE74     		strb	r6, [r5, #19]
1839:lwIP/src/core/tcp_out.c **** }
 6825              		.loc 1 1839 3 is_stmt 1 view .LVU2486
 6826              	.LVL567:
1839:lwIP/src/core/tcp_out.c **** }
 6827              		.loc 1 1839 3 is_stmt 0 view .LVU2487
 6828              	.LBE757:
 6829              	.LBE772:
1863:lwIP/src/core/tcp_out.c ****     /* If we're sending a packet, update the announced right window edge */
 6830              		.loc 1 1863 3 is_stmt 1 view .LVU2488
 6831              	.LBB773:
 6832              	.LBI760:
1853:lwIP/src/core/tcp_out.c ****                         u32_t seqno_be /* already in network byte order */)
 6833              		.loc 1 1853 1 view .LVU2489
ARM GAS  /tmp/ccH0Y1hM.s 			page 217


 6834              	.LBB764:
1865:lwIP/src/core/tcp_out.c ****   }
 6835              		.loc 1 1865 5 view .LVU2490
1865:lwIP/src/core/tcp_out.c ****   }
 6836              		.loc 1 1865 29 is_stmt 0 view .LVU2491
 6837 0078 E762     		str	r7, [r4, #44]
 6838              	.LVL568:
1865:lwIP/src/core/tcp_out.c ****   }
 6839              		.loc 1 1865 29 view .LVU2492
 6840              	.LBE764:
 6841              	.LBE773:
1867:lwIP/src/core/tcp_out.c **** }
 6842              		.loc 1 1867 3 is_stmt 1 view .LVU2493
1867:lwIP/src/core/tcp_out.c **** }
 6843              		.loc 1 1867 3 is_stmt 0 view .LVU2494
 6844              	.LBE781:
 6845              	.LBE793:
2094:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_DEBUG,
 6846              		.loc 1 2094 3 is_stmt 1 view .LVU2495
2099:lwIP/src/core/tcp_out.c ****   err = tcp_output_control_segment(pcb, p, &pcb->local_ip, &pcb->remote_ip);
 6847              		.loc 1 2099 3 view .LVU2496
1874:lwIP/src/core/tcp_out.c ****   u32_t *opts;
 6848              		.loc 1 1874 3 view .LVU2497
1875:lwIP/src/core/tcp_out.c ****   u16_t sacks_len = 0;
 6849              		.loc 1 1875 3 view .LVU2498
1876:lwIP/src/core/tcp_out.c **** 
 6850              		.loc 1 1876 3 view .LVU2499
1878:lwIP/src/core/tcp_out.c **** 
 6851              		.loc 1 1878 3 view .LVU2500
1878:lwIP/src/core/tcp_out.c **** 
 6852              		.loc 1 1878 3 view .LVU2501
1878:lwIP/src/core/tcp_out.c **** 
 6853              		.loc 1 1878 3 view .LVU2502
1880:lwIP/src/core/tcp_out.c ****   opts = (u32_t *)(void *)(tcphdr + 1);
 6854              		.loc 1 1880 3 view .LVU2503
1881:lwIP/src/core/tcp_out.c **** 
 6855              		.loc 1 1881 3 view .LVU2504
1900:lwIP/src/core/tcp_out.c **** #endif
 6856              		.loc 1 1900 3 view .LVU2505
1907:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(sacks_len);
 6857              		.loc 1 1907 3 view .LVU2506
1908:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("options not filled", (u8_t *)opts == ((u8_t *)(tcphdr + 1)) + sacks_len * 4 + LWIP_T
 6858              		.loc 1 1908 3 view .LVU2507
1909:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(optflags); /* for LWIP_NOASSERT */
 6859              		.loc 1 1909 3 view .LVU2508
1909:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(optflags); /* for LWIP_NOASSERT */
 6860              		.loc 1 1909 3 view .LVU2509
1909:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(optflags); /* for LWIP_NOASSERT */
 6861              		.loc 1 1909 3 view .LVU2510
1910:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(opts); /* for LWIP_NOASSERT */
 6862              		.loc 1 1910 3 view .LVU2511
1911:lwIP/src/core/tcp_out.c **** }
 6863              		.loc 1 1911 3 view .LVU2512
 6864              		.loc 1 2100 3 view .LVU2513
2101:lwIP/src/core/tcp_out.c **** 
2102:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, ("tcp_keepalive: seqno %"U32_F" ackno %"U32_F" err %d.\n",
2103:lwIP/src/core/tcp_out.c ****                           pcb->snd_nxt - 1, pcb->rcv_nxt, (int)err));
ARM GAS  /tmp/ccH0Y1hM.s 			page 218


2104:lwIP/src/core/tcp_out.c ****   return err;
2105:lwIP/src/core/tcp_out.c **** }
 6865              		.loc 1 2105 1 is_stmt 0 view .LVU2514
 6866 007a BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 6867              	.LCFI52:
 6868              		.cfi_remember_state
 6869              		.cfi_restore 14
 6870              		.cfi_restore 10
 6871              		.cfi_restore 9
 6872              		.cfi_restore 8
 6873              		.cfi_restore 7
 6874              		.cfi_restore 6
 6875              		.cfi_restore 5
 6876              		.cfi_restore 4
 6877              		.cfi_def_cfa_offset 0
 6878              	.LVL569:
2100:lwIP/src/core/tcp_out.c **** 
 6879              		.loc 1 2100 9 view .LVU2515
 6880 007e FFF7FEBF 		b	tcp_output_control_segment
 6881              	.LVL570:
 6882              	.L582:
 6883              	.LCFI53:
 6884              		.cfi_restore_state
2084:lwIP/src/core/tcp_out.c **** 
 6885              		.loc 1 2084 3 is_stmt 1 discriminator 1 view .LVU2516
 6886 0082 0648     		ldr	r0, .L584
 6887              	.LVL571:
2084:lwIP/src/core/tcp_out.c **** 
 6888              		.loc 1 2084 3 is_stmt 0 discriminator 1 view .LVU2517
 6889 0084 FFF7FEFF 		bl	printf
 6890              	.LVL572:
 6891              	.L577:
2084:lwIP/src/core/tcp_out.c **** 
 6892              		.loc 1 2084 3 is_stmt 1 discriminator 1 view .LVU2518
2084:lwIP/src/core/tcp_out.c **** 
 6893              		.loc 1 2084 3 discriminator 1 view .LVU2519
2084:lwIP/src/core/tcp_out.c **** 
 6894              		.loc 1 2084 3 discriminator 1 view .LVU2520
2084:lwIP/src/core/tcp_out.c **** 
 6895              		.loc 1 2084 3 discriminator 1 view .LVU2521
2084:lwIP/src/core/tcp_out.c **** 
 6896              		.loc 1 2084 3 discriminator 1 view .LVU2522
2084:lwIP/src/core/tcp_out.c **** 
 6897              		.loc 1 2084 3 discriminator 1 view .LVU2523
 6898 0088 FEE7     		b	.L577
 6899              	.LVL573:
 6900              	.L583:
 6901              	.LBB794:
 6902              	.LBB782:
 6903              	.LBB774:
 6904              	.LBB758:
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 6905              		.loc 1 1827 5 view .LVU2524
 6906 008a 0548     		ldr	r0, .L584+4
 6907              	.LVL574:
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 6908              		.loc 1 1827 5 is_stmt 0 view .LVU2525
ARM GAS  /tmp/ccH0Y1hM.s 			page 219


 6909 008c FFF7FEFF 		bl	printf
 6910              	.LVL575:
 6911              	.L580:
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 6912              		.loc 1 1827 5 is_stmt 1 view .LVU2526
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 6913              		.loc 1 1827 5 view .LVU2527
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 6914              		.loc 1 1827 5 view .LVU2528
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 6915              		.loc 1 1827 5 view .LVU2529
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 6916              		.loc 1 1827 5 view .LVU2530
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 6917              		.loc 1 1827 5 view .LVU2531
 6918 0090 FEE7     		b	.L580
 6919              	.LVL576:
 6920              	.L578:
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 6921              		.loc 1 1827 5 is_stmt 0 view .LVU2532
 6922              	.LBE758:
 6923              	.LBE774:
 6924              	.LBE782:
 6925              	.LBE794:
 6926              		.loc 1 2105 1 view .LVU2533
 6927 0092 4FF0FF30 		mov	r0, #-1
 6928 0096 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6929              	.LVL577:
 6930              	.L585:
 6931              		.loc 1 2105 1 view .LVU2534
 6932 009a 00BF     		.align	2
 6933              	.L584:
 6934 009c 00000000 		.word	.LC45
 6935 00a0 38000000 		.word	.LC37
 6936              		.cfi_endproc
 6937              	.LFE127:
 6939              		.section	.rodata.tcp_zero_window_probe.str1.4,"aMS",%progbits,1
 6940              		.align	2
 6941              	.LC46:
 6942 0000 7463705F 		.ascii	"tcp_zero_window_probe: invalid pcb\000"
 6942      7A65726F 
 6942      5F77696E 
 6942      646F775F 
 6942      70726F62 
 6943              		.section	.text.tcp_zero_window_probe,"ax",%progbits
 6944              		.align	1
 6945              		.p2align 2,,3
 6946              		.global	tcp_zero_window_probe
 6947              		.syntax unified
 6948              		.thumb
 6949              		.thumb_func
 6950              		.fpu fpv4-sp-d16
 6952              	tcp_zero_window_probe:
 6953              	.LVL578:
 6954              	.LFB128:
2106:lwIP/src/core/tcp_out.c **** 
2107:lwIP/src/core/tcp_out.c **** /**
ARM GAS  /tmp/ccH0Y1hM.s 			page 220


2108:lwIP/src/core/tcp_out.c ****  * Send persist timer zero-window probes to keep a connection active
2109:lwIP/src/core/tcp_out.c ****  * when a window update is lost.
2110:lwIP/src/core/tcp_out.c ****  *
2111:lwIP/src/core/tcp_out.c ****  * Called by tcp_slowtmr()
2112:lwIP/src/core/tcp_out.c ****  *
2113:lwIP/src/core/tcp_out.c ****  * @param pcb the tcp_pcb for which to send a zero-window probe packet
2114:lwIP/src/core/tcp_out.c ****  */
2115:lwIP/src/core/tcp_out.c **** err_t
2116:lwIP/src/core/tcp_out.c **** tcp_zero_window_probe(struct tcp_pcb *pcb)
2117:lwIP/src/core/tcp_out.c **** {
 6955              		.loc 1 2117 1 is_stmt 1 view -0
 6956              		.cfi_startproc
 6957              		@ args = 0, pretend = 0, frame = 8
 6958              		@ frame_needed = 0, uses_anonymous_args = 0
2118:lwIP/src/core/tcp_out.c ****   err_t err;
 6959              		.loc 1 2118 3 view .LVU2536
2119:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
 6960              		.loc 1 2119 3 view .LVU2537
2120:lwIP/src/core/tcp_out.c ****   struct tcp_hdr *tcphdr;
 6961              		.loc 1 2120 3 view .LVU2538
2121:lwIP/src/core/tcp_out.c ****   struct tcp_seg *seg;
 6962              		.loc 1 2121 3 view .LVU2539
2122:lwIP/src/core/tcp_out.c ****   u16_t len;
 6963              		.loc 1 2122 3 view .LVU2540
2123:lwIP/src/core/tcp_out.c ****   u8_t is_fin;
 6964              		.loc 1 2123 3 view .LVU2541
2124:lwIP/src/core/tcp_out.c ****   u32_t snd_nxt;
 6965              		.loc 1 2124 3 view .LVU2542
2125:lwIP/src/core/tcp_out.c ****   u8_t optlen = LWIP_TCP_OPT_LENGTH_SEGMENT(0, pcb);
 6966              		.loc 1 2125 3 view .LVU2543
2126:lwIP/src/core/tcp_out.c **** 
2127:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("tcp_zero_window_probe: invalid pcb", pcb != NULL);
 6967              		.loc 1 2127 3 view .LVU2544
 6968              		.loc 1 2127 3 view .LVU2545
2117:lwIP/src/core/tcp_out.c ****   err_t err;
 6969              		.loc 1 2117 1 is_stmt 0 view .LVU2546
 6970 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6971              	.LCFI54:
 6972              		.cfi_def_cfa_offset 36
 6973              		.cfi_offset 4, -36
 6974              		.cfi_offset 5, -32
 6975              		.cfi_offset 6, -28
 6976              		.cfi_offset 7, -24
 6977              		.cfi_offset 8, -20
 6978              		.cfi_offset 9, -16
 6979              		.cfi_offset 10, -12
 6980              		.cfi_offset 11, -8
 6981              		.cfi_offset 14, -4
 6982 0004 83B0     		sub	sp, sp, #12
 6983              	.LCFI55:
 6984              		.cfi_def_cfa_offset 48
 6985              		.loc 1 2127 3 view .LVU2547
 6986 0006 0028     		cmp	r0, #0
 6987 0008 72D0     		beq	.L605
 6988              		.loc 1 2127 3 is_stmt 1 discriminator 2 view .LVU2548
2128:lwIP/src/core/tcp_out.c **** 
2129:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, ("tcp_zero_window_probe: sending ZERO WINDOW probe to "));
ARM GAS  /tmp/ccH0Y1hM.s 			page 221


 6989              		.loc 1 2129 83 discriminator 2 view .LVU2549
2130:lwIP/src/core/tcp_out.c ****   ip_addr_debug_print_val(TCP_DEBUG, pcb->remote_ip);
 6990              		.loc 1 2130 53 discriminator 2 view .LVU2550
2131:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, ("\n"));
 6991              		.loc 1 2131 33 discriminator 2 view .LVU2551
2132:lwIP/src/core/tcp_out.c **** 
2133:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG,
2134:lwIP/src/core/tcp_out.c ****               ("tcp_zero_window_probe: tcp_ticks %"U32_F
2135:lwIP/src/core/tcp_out.c ****                "   pcb->tmr %"U32_F" pcb->keep_cnt_sent %"U16_F"\n",
2136:lwIP/src/core/tcp_out.c ****                tcp_ticks, pcb->tmr, (u16_t)pcb->keep_cnt_sent));
 6992              		.loc 1 2136 64 discriminator 2 view .LVU2552
2137:lwIP/src/core/tcp_out.c **** 
2138:lwIP/src/core/tcp_out.c ****   /* Only consider unsent, persist timer should be off when there is data in-flight */
2139:lwIP/src/core/tcp_out.c ****   seg = pcb->unsent;
 6993              		.loc 1 2139 3 discriminator 2 view .LVU2553
 6994              		.loc 1 2139 7 is_stmt 0 discriminator 2 view .LVU2554
 6995 000a C56E     		ldr	r5, [r0, #108]
 6996              	.LVL579:
2140:lwIP/src/core/tcp_out.c ****   if (seg == NULL) {
 6997              		.loc 1 2140 3 is_stmt 1 discriminator 2 view .LVU2555
 6998 000c 0446     		mov	r4, r0
 6999              		.loc 1 2140 6 is_stmt 0 discriminator 2 view .LVU2556
 7000 000e 002D     		cmp	r5, #0
 7001 0010 72D0     		beq	.L597
2141:lwIP/src/core/tcp_out.c ****     /* Not expected, persist timer should be off when the send buffer is empty */
2142:lwIP/src/core/tcp_out.c ****     return ERR_OK;
2143:lwIP/src/core/tcp_out.c ****   }
2144:lwIP/src/core/tcp_out.c **** 
2145:lwIP/src/core/tcp_out.c ****   /* increment probe count. NOTE: we record probe even if it fails
2146:lwIP/src/core/tcp_out.c ****      to actually transmit due to an error. This ensures memory exhaustion/
2147:lwIP/src/core/tcp_out.c ****      routing problem doesn't leave a zero-window pcb as an indefinite zombie.
2148:lwIP/src/core/tcp_out.c ****      RTO mechanism has similar behavior, see pcb->nrtx */
2149:lwIP/src/core/tcp_out.c ****   if (pcb->persist_probe < 0xFF) {
 7002              		.loc 1 2149 3 is_stmt 1 view .LVU2557
 7003              		.loc 1 2149 10 is_stmt 0 view .LVU2558
 7004 0012 90F89630 		ldrb	r3, [r0, #150]	@ zero_extendqisi2
 7005              		.loc 1 2149 6 view .LVU2559
 7006 0016 FF2B     		cmp	r3, #255
 7007 0018 02D0     		beq	.L590
2150:lwIP/src/core/tcp_out.c ****     ++pcb->persist_probe;
 7008              		.loc 1 2150 5 is_stmt 1 view .LVU2560
 7009 001a 0133     		adds	r3, r3, #1
 7010 001c 80F89630 		strb	r3, [r0, #150]
 7011              	.L590:
2151:lwIP/src/core/tcp_out.c ****   }
2152:lwIP/src/core/tcp_out.c **** 
2153:lwIP/src/core/tcp_out.c ****   is_fin = ((TCPH_FLAGS(seg->tcphdr) & TCP_FIN) != 0) && (seg->len == 0);
 7012              		.loc 1 2153 3 view .LVU2561
 7013              		.loc 1 2153 14 is_stmt 0 view .LVU2562
 7014 0020 EF68     		ldr	r7, [r5, #12]
 7015              	.LVL580:
 7016              	.LBB818:
 7017              	.LBI818:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 7018              		.loc 2 934 30 is_stmt 1 view .LVU2563
 7019              	.LBB819:
 7020              		.loc 2 937 3 view .LVU2564
ARM GAS  /tmp/ccH0Y1hM.s 			page 222


 7021              		.loc 2 937 3 is_stmt 0 view .LVU2565
 7022              	.LBE819:
 7023              	.LBE818:
 7024              		.loc 1 2153 14 view .LVU2566
 7025 0022 BB89     		ldrh	r3, [r7, #12]	@ unaligned
 7026              	.LBB821:
 7027              	.LBB820:
 7028              		.loc 2 937 19 view .LVU2567
 7029 0024 5BBA     		rev16	r3, r3
 7030              	.LBE820:
 7031              	.LBE821:
 7032              		.loc 1 2153 55 view .LVU2568
 7033 0026 13F00103 		ands	r3, r3, #1
 7034 002a 50D1     		bne	.L606
 7035 002c 1E46     		mov	r6, r3
 7036 002e 1521     		movs	r1, #21
 7037              	.L591:
 7038              	.LVL581:
2154:lwIP/src/core/tcp_out.c ****   /* we want to send one seqno: either FIN or data (no options) */
2155:lwIP/src/core/tcp_out.c ****   len = is_fin ? 0 : 1;
 7039              		.loc 1 2155 3 is_stmt 1 discriminator 6 view .LVU2569
2156:lwIP/src/core/tcp_out.c **** 
2157:lwIP/src/core/tcp_out.c ****   p = tcp_output_alloc_header(pcb, optlen, len, seg->tcphdr->seqno);
 7040              		.loc 1 2157 3 discriminator 6 view .LVU2570
 7041              	.LBB822:
 7042              	.LBB823:
1860:lwIP/src/core/tcp_out.c ****     seqno_be, pcb->local_port, pcb->remote_port, TCP_ACK,
 7043              		.loc 1 1860 7 is_stmt 0 discriminator 6 view .LVU2571
 7044 0030 E38A     		ldrh	r3, [r4, #22]
 7045              	.LBB824:
 7046              	.LBB825:
1825:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
 7047              		.loc 1 1825 7 discriminator 6 view .LVU2572
 7048 0032 4FF42072 		mov	r2, #640
 7049 0036 2220     		movs	r0, #34
 7050              	.LVL582:
1825:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
 7051              		.loc 1 1825 7 discriminator 6 view .LVU2573
 7052              	.LBE825:
 7053              	.LBE824:
 7054              	.LBE823:
 7055              	.LBE822:
 7056              		.loc 1 2157 7 discriminator 6 view .LVU2574
 7057 0038 D7F80480 		ldr	r8, [r7, #4]	@ unaligned
 7058              	.LVL583:
 7059              	.LBB867:
 7060              	.LBI822:
1853:lwIP/src/core/tcp_out.c ****                         u32_t seqno_be /* already in network byte order */)
 7061              		.loc 1 1853 1 is_stmt 1 discriminator 6 view .LVU2575
 7062              	.LBB864:
1856:lwIP/src/core/tcp_out.c **** 
 7063              		.loc 1 1856 3 discriminator 6 view .LVU2576
1858:lwIP/src/core/tcp_out.c **** 
 7064              		.loc 1 1858 3 discriminator 6 view .LVU2577
1858:lwIP/src/core/tcp_out.c **** 
 7065              		.loc 1 1858 3 discriminator 6 view .LVU2578
1858:lwIP/src/core/tcp_out.c **** 
ARM GAS  /tmp/ccH0Y1hM.s 			page 223


 7066              		.loc 1 1858 3 discriminator 6 view .LVU2579
1860:lwIP/src/core/tcp_out.c ****     seqno_be, pcb->local_port, pcb->remote_port, TCP_ACK,
 7067              		.loc 1 1860 3 discriminator 6 view .LVU2580
1860:lwIP/src/core/tcp_out.c ****     seqno_be, pcb->local_port, pcb->remote_port, TCP_ACK,
 7068              		.loc 1 1860 7 is_stmt 0 discriminator 6 view .LVU2581
 7069 003c D4F824A0 		ldr	r10, [r4, #36]
 7070 0040 B4F818B0 		ldrh	fp, [r4, #24]
 7071 0044 B4F82A90 		ldrh	r9, [r4, #42]
 7072              	.LVL584:
 7073              	.LBB849:
 7074              	.LBI824:
1818:lwIP/src/core/tcp_out.c ****                         u32_t seqno_be /* already in network byte order */,
 7075              		.loc 1 1818 1 is_stmt 1 discriminator 6 view .LVU2582
 7076              	.LBB842:
1822:lwIP/src/core/tcp_out.c ****   struct pbuf *p;
 7077              		.loc 1 1822 3 discriminator 6 view .LVU2583
1823:lwIP/src/core/tcp_out.c **** 
 7078              		.loc 1 1823 3 discriminator 6 view .LVU2584
1825:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
 7079              		.loc 1 1825 3 discriminator 6 view .LVU2585
 7080              	.LBE842:
 7081              	.LBE849:
1860:lwIP/src/core/tcp_out.c ****     seqno_be, pcb->local_port, pcb->remote_port, TCP_ACK,
 7082              		.loc 1 1860 7 is_stmt 0 discriminator 6 view .LVU2586
 7083 0048 0193     		str	r3, [sp, #4]
 7084              	.LVL585:
 7085              	.LBB850:
 7086              	.LBB843:
1825:lwIP/src/core/tcp_out.c ****   if (p != NULL) {
 7087              		.loc 1 1825 7 discriminator 6 view .LVU2587
 7088 004a FFF7FEFF 		bl	pbuf_alloc
 7089              	.LVL586:
1826:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("check that first pbuf can hold struct tcp_hdr",
 7090              		.loc 1 1826 3 is_stmt 1 discriminator 6 view .LVU2588
1826:lwIP/src/core/tcp_out.c ****     LWIP_ASSERT("check that first pbuf can hold struct tcp_hdr",
 7091              		.loc 1 1826 6 is_stmt 0 discriminator 6 view .LVU2589
 7092 004e 0746     		mov	r7, r0
 7093 0050 0028     		cmp	r0, #0
 7094 0052 44D0     		beq	.L600
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 7095              		.loc 1 1827 5 is_stmt 1 view .LVU2590
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 7096              		.loc 1 1827 5 view .LVU2591
 7097 0054 4289     		ldrh	r2, [r0, #10]
 7098 0056 019B     		ldr	r3, [sp, #4]
 7099 0058 132A     		cmp	r2, #19
 7100 005a 45D9     		bls	.L607
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 7101              		.loc 1 1827 5 view .LVU2592
1829:lwIP/src/core/tcp_out.c ****     tcphdr->src = lwip_htons(src_port);
 7102              		.loc 1 1829 5 view .LVU2593
 7103              	.LBE843:
 7104              	.LBE850:
 7105              	.LBB851:
 7106              	.LBB852:
1865:lwIP/src/core/tcp_out.c ****   }
 7107              		.loc 1 1865 49 is_stmt 0 view .LVU2594
ARM GAS  /tmp/ccH0Y1hM.s 			page 224


 7108 005c 628D     		ldrh	r2, [r4, #42]
 7109              	.LBE852:
 7110              	.LBE851:
 7111              	.LBB856:
 7112              	.LBB844:
 7113              	.LBB826:
 7114              	.LBB827:
 7115              		.loc 2 937 19 view .LVU2595
 7116 005e 58BA     		rev16	r0, r3
 7117              	.LVL587:
 7118              		.loc 2 937 19 view .LVU2596
 7119              	.LBE827:
 7120              	.LBE826:
 7121              	.LBE844:
 7122              	.LBE856:
 7123              	.LBB857:
 7124              	.LBB853:
1865:lwIP/src/core/tcp_out.c ****   }
 7125              		.loc 1 1865 44 view .LVU2597
 7126 0060 636A     		ldr	r3, [r4, #36]
 7127              	.LBE853:
 7128              	.LBE857:
 7129              	.LBB858:
 7130              	.LBB845:
 7131              	.LBB829:
 7132              	.LBB830:
 7133              		.loc 2 937 19 view .LVU2598
 7134 0062 9BFA9BFB 		rev16	fp, fp
 7135              	.LVL588:
 7136              		.loc 2 937 19 view .LVU2599
 7137              	.LBE830:
 7138              	.LBE829:
1829:lwIP/src/core/tcp_out.c ****     tcphdr->src = lwip_htons(src_port);
 7139              		.loc 1 1829 12 view .LVU2600
 7140 0066 7968     		ldr	r1, [r7, #4]
 7141              	.LBB832:
 7142              	.LBB833:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 7143              		.loc 2 903 10 view .LVU2601
 7144 0068 9AFA8AFA 		rev	r10, r10
 7145              	.LVL589:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 7146              		.loc 2 903 10 view .LVU2602
 7147              	.LBE833:
 7148              	.LBE832:
1830:lwIP/src/core/tcp_out.c ****     tcphdr->dest = lwip_htons(dst_port);
 7149              		.loc 1 1830 5 is_stmt 1 view .LVU2603
 7150              	.LBB835:
 7151              	.LBI826:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 7152              		.loc 2 934 30 view .LVU2604
 7153              	.LBB828:
 7154              		.loc 2 937 3 view .LVU2605
 7155              		.loc 2 937 3 is_stmt 0 view .LVU2606
 7156              	.LBE828:
 7157              	.LBE835:
 7158              	.LBE845:
ARM GAS  /tmp/ccH0Y1hM.s 			page 225


 7159              	.LBE858:
 7160              	.LBB859:
 7161              	.LBB854:
1865:lwIP/src/core/tcp_out.c ****   }
 7162              		.loc 1 1865 44 view .LVU2607
 7163 006c 1A44     		add	r2, r2, r3
 7164              	.LBE854:
 7165              	.LBE859:
 7166              	.LBB860:
 7167              	.LBB846:
 7168              	.LBB836:
 7169              	.LBB837:
 7170              		.loc 2 937 19 view .LVU2608
 7171 006e 99FA99F9 		rev16	r9, r9
 7172              	.LVL590:
 7173              		.loc 2 937 19 view .LVU2609
 7174              	.LBE837:
 7175              	.LBE836:
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 7176              		.loc 1 1834 5 view .LVU2610
 7177 0072 0023     		movs	r3, #0
 7178 0074 4FF0100E 		mov	lr, #16
 7179 0078 4FF0500C 		mov	ip, #80
1830:lwIP/src/core/tcp_out.c ****     tcphdr->dest = lwip_htons(dst_port);
 7180              		.loc 1 1830 17 view .LVU2611
 7181 007c 0880     		strh	r0, [r1]	@ unaligned
1831:lwIP/src/core/tcp_out.c ****     tcphdr->seqno = seqno_be;
 7182              		.loc 1 1831 5 is_stmt 1 view .LVU2612
 7183              	.LVL591:
 7184              	.LBB839:
 7185              	.LBI829:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 7186              		.loc 2 934 30 view .LVU2613
 7187              	.LBB831:
 7188              		.loc 2 937 3 view .LVU2614
 7189              		.loc 2 937 3 is_stmt 0 view .LVU2615
 7190              	.LBE831:
 7191              	.LBE839:
1831:lwIP/src/core/tcp_out.c ****     tcphdr->seqno = seqno_be;
 7192              		.loc 1 1831 18 view .LVU2616
 7193 007e A1F802B0 		strh	fp, [r1, #2]	@ unaligned
1832:lwIP/src/core/tcp_out.c ****     tcphdr->ackno = lwip_htonl(ackno);
 7194              		.loc 1 1832 5 is_stmt 1 view .LVU2617
1832:lwIP/src/core/tcp_out.c ****     tcphdr->ackno = lwip_htonl(ackno);
 7195              		.loc 1 1832 19 is_stmt 0 view .LVU2618
 7196 0082 C1F80480 		str	r8, [r1, #4]	@ unaligned
1833:lwIP/src/core/tcp_out.c ****     TCPH_HDRLEN_FLAGS_SET(tcphdr, (5 + optlen / 4), flags);
 7197              		.loc 1 1833 5 is_stmt 1 view .LVU2619
 7198              	.LVL592:
 7199              	.LBB840:
 7200              	.LBI832:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 7201              		.loc 2 900 31 view .LVU2620
 7202              	.LBB834:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 7203              		.loc 2 903 3 view .LVU2621
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccH0Y1hM.s 			page 226


 7204              		.loc 2 903 3 is_stmt 0 view .LVU2622
 7205              	.LBE834:
 7206              	.LBE840:
1833:lwIP/src/core/tcp_out.c ****     TCPH_HDRLEN_FLAGS_SET(tcphdr, (5 + optlen / 4), flags);
 7207              		.loc 1 1833 19 view .LVU2623
 7208 0086 C1F808A0 		str	r10, [r1, #8]	@ unaligned
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 7209              		.loc 1 1834 5 is_stmt 1 view .LVU2624
 7210              	.LVL593:
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 7211              		.loc 1 1834 5 is_stmt 0 view .LVU2625
 7212              	.LBE846:
 7213              	.LBE860:
 7214              	.LBE864:
 7215              	.LBE867:
 7216              		.loc 2 937 3 is_stmt 1 view .LVU2626
 7217              	.LBB868:
 7218              	.LBB865:
 7219              	.LBB861:
 7220              	.LBB847:
1835:lwIP/src/core/tcp_out.c ****     tcphdr->chksum = 0;
 7221              		.loc 1 1835 17 is_stmt 0 view .LVU2627
 7222 008a A1F80E90 		strh	r9, [r1, #14]	@ unaligned
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 7223              		.loc 1 1834 5 view .LVU2628
 7224 008e 81F80DE0 		strb	lr, [r1, #13]
1835:lwIP/src/core/tcp_out.c ****     tcphdr->chksum = 0;
 7225              		.loc 1 1835 5 is_stmt 1 view .LVU2629
 7226              	.LVL594:
 7227              	.LBB841:
 7228              	.LBI836:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 7229              		.loc 2 934 30 view .LVU2630
 7230              	.LBB838:
 7231              		.loc 2 937 3 view .LVU2631
 7232              		.loc 2 937 3 is_stmt 0 view .LVU2632
 7233              	.LBE838:
 7234              	.LBE841:
1836:lwIP/src/core/tcp_out.c ****     tcphdr->urgp = 0;
 7235              		.loc 1 1836 5 is_stmt 1 view .LVU2633
1834:lwIP/src/core/tcp_out.c ****     tcphdr->wnd = lwip_htons(wnd);
 7236              		.loc 1 1834 5 is_stmt 0 view .LVU2634
 7237 0092 81F80CC0 		strb	ip, [r1, #12]
1836:lwIP/src/core/tcp_out.c ****     tcphdr->urgp = 0;
 7238              		.loc 1 1836 20 view .LVU2635
 7239 0096 0B74     		strb	r3, [r1, #16]
 7240 0098 4B74     		strb	r3, [r1, #17]
1837:lwIP/src/core/tcp_out.c ****   }
 7241              		.loc 1 1837 5 is_stmt 1 view .LVU2636
1837:lwIP/src/core/tcp_out.c ****   }
 7242              		.loc 1 1837 18 is_stmt 0 view .LVU2637
 7243 009a 8B74     		strb	r3, [r1, #18]
 7244 009c CB74     		strb	r3, [r1, #19]
1839:lwIP/src/core/tcp_out.c **** }
 7245              		.loc 1 1839 3 is_stmt 1 view .LVU2638
 7246              	.LVL595:
1839:lwIP/src/core/tcp_out.c **** }
ARM GAS  /tmp/ccH0Y1hM.s 			page 227


 7247              		.loc 1 1839 3 is_stmt 0 view .LVU2639
 7248              	.LBE847:
 7249              	.LBE861:
1863:lwIP/src/core/tcp_out.c ****     /* If we're sending a packet, update the announced right window edge */
 7250              		.loc 1 1863 3 is_stmt 1 view .LVU2640
 7251              	.LBB862:
 7252              	.LBI851:
1853:lwIP/src/core/tcp_out.c ****                         u32_t seqno_be /* already in network byte order */)
 7253              		.loc 1 1853 1 view .LVU2641
 7254              	.LBB855:
1865:lwIP/src/core/tcp_out.c ****   }
 7255              		.loc 1 1865 5 view .LVU2642
1865:lwIP/src/core/tcp_out.c ****   }
 7256              		.loc 1 1865 29 is_stmt 0 view .LVU2643
 7257 009e E262     		str	r2, [r4, #44]
 7258              	.LVL596:
1865:lwIP/src/core/tcp_out.c ****   }
 7259              		.loc 1 1865 29 view .LVU2644
 7260              	.LBE855:
 7261              	.LBE862:
1867:lwIP/src/core/tcp_out.c **** }
 7262              		.loc 1 1867 3 is_stmt 1 view .LVU2645
1867:lwIP/src/core/tcp_out.c **** }
 7263              		.loc 1 1867 3 is_stmt 0 view .LVU2646
 7264              	.LBE865:
 7265              	.LBE868:
2158:lwIP/src/core/tcp_out.c ****   if (p == NULL) {
 7266              		.loc 1 2158 3 is_stmt 1 view .LVU2647
2159:lwIP/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_DEBUG, ("tcp_zero_window_probe: no memory for pbuf\n"));
2160:lwIP/src/core/tcp_out.c ****     return ERR_MEM;
2161:lwIP/src/core/tcp_out.c ****   }
2162:lwIP/src/core/tcp_out.c ****   tcphdr = (struct tcp_hdr *)p->payload;
 7267              		.loc 1 2162 3 view .LVU2648
2163:lwIP/src/core/tcp_out.c **** 
2164:lwIP/src/core/tcp_out.c ****   if (is_fin) {
 7268              		.loc 1 2164 3 view .LVU2649
 7269              		.loc 1 2164 6 is_stmt 0 view .LVU2650
 7270 00a0 66B3     		cbz	r6, .L594
2165:lwIP/src/core/tcp_out.c ****     /* FIN segment, no data */
2166:lwIP/src/core/tcp_out.c ****     TCPH_FLAGS_SET(tcphdr, TCP_ACK | TCP_FIN);
 7271              		.loc 1 2166 5 is_stmt 1 view .LVU2651
 7272              	.LVL597:
 7273              		.loc 2 937 3 view .LVU2652
 7274              		.loc 1 2166 5 is_stmt 0 view .LVU2653
 7275 00a2 1123     		movs	r3, #17
 7276 00a4 81F80CC0 		strb	ip, [r1, #12]
 7277 00a8 4B73     		strb	r3, [r1, #13]
 7278              	.LVL598:
 7279              	.L595:
2167:lwIP/src/core/tcp_out.c ****   } else {
2168:lwIP/src/core/tcp_out.c ****     /* Data segment, copy in one byte from the head of the unacked queue */
2169:lwIP/src/core/tcp_out.c ****     char *d = ((char *)p->payload + TCP_HLEN);
2170:lwIP/src/core/tcp_out.c ****     /* Depending on whether the segment has already been sent (unacked) or not
2171:lwIP/src/core/tcp_out.c ****        (unsent), seg->p->payload points to the IP header or TCP header.
2172:lwIP/src/core/tcp_out.c ****        Ensure we copy the first TCP data byte: */
2173:lwIP/src/core/tcp_out.c ****     pbuf_copy_partial(seg->p, d, 1, seg->p->tot_len - seg->len);
2174:lwIP/src/core/tcp_out.c ****   }
ARM GAS  /tmp/ccH0Y1hM.s 			page 228


2175:lwIP/src/core/tcp_out.c **** 
2176:lwIP/src/core/tcp_out.c ****   /* The byte may be acknowledged without the window being opened. */
2177:lwIP/src/core/tcp_out.c ****   snd_nxt = lwip_ntohl(seg->tcphdr->seqno) + 1;
 7280              		.loc 1 2177 3 is_stmt 1 view .LVU2654
 7281              	.LBB869:
 7282              	.LBI869:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 7283              		.loc 2 900 31 view .LVU2655
 7284              	.LBB870:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 7285              		.loc 2 903 3 view .LVU2656
 7286              	.LBE870:
 7287              	.LBE869:
 7288              		.loc 1 2177 13 is_stmt 0 view .LVU2657
 7289 00aa EB68     		ldr	r3, [r5, #12]
2178:lwIP/src/core/tcp_out.c ****   if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
2179:lwIP/src/core/tcp_out.c ****     pcb->snd_nxt = snd_nxt;
2180:lwIP/src/core/tcp_out.c ****   }
2181:lwIP/src/core/tcp_out.c ****   tcp_output_fill_options(pcb, p, 0, optlen);
2182:lwIP/src/core/tcp_out.c **** 
2183:lwIP/src/core/tcp_out.c ****   err = tcp_output_control_segment(pcb, p, &pcb->local_ip, &pcb->remote_ip);
 7290              		.loc 1 2183 9 view .LVU2658
 7291 00ac 3946     		mov	r1, r7
2178:lwIP/src/core/tcp_out.c ****   if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
 7292              		.loc 1 2178 7 view .LVU2659
 7293 00ae 226D     		ldr	r2, [r4, #80]
 7294              		.loc 1 2183 9 view .LVU2660
 7295 00b0 2046     		mov	r0, r4
2177:lwIP/src/core/tcp_out.c ****   if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
 7296              		.loc 1 2177 13 view .LVU2661
 7297 00b2 5B68     		ldr	r3, [r3, #4]	@ unaligned
 7298              	.LBB872:
 7299              	.LBB871:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 7300              		.loc 2 903 10 view .LVU2662
 7301 00b4 1BBA     		rev	r3, r3
 7302              	.LVL599:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 7303              		.loc 2 903 10 view .LVU2663
 7304              	.LBE871:
 7305              	.LBE872:
2177:lwIP/src/core/tcp_out.c ****   if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
 7306              		.loc 1 2177 11 view .LVU2664
 7307 00b6 0133     		adds	r3, r3, #1
 7308              	.LVL600:
2178:lwIP/src/core/tcp_out.c ****   if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
 7309              		.loc 1 2178 3 is_stmt 1 view .LVU2665
2178:lwIP/src/core/tcp_out.c ****   if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
 7310              		.loc 1 2178 7 is_stmt 0 view .LVU2666
 7311 00b8 D21A     		subs	r2, r2, r3
2178:lwIP/src/core/tcp_out.c ****   if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
 7312              		.loc 1 2178 6 view .LVU2667
 7313 00ba 002A     		cmp	r2, #0
2179:lwIP/src/core/tcp_out.c ****   }
 7314              		.loc 1 2179 5 is_stmt 1 view .LVU2668
2181:lwIP/src/core/tcp_out.c **** 
 7315              		.loc 1 2181 3 view .LVU2669
ARM GAS  /tmp/ccH0Y1hM.s 			page 229


 7316              	.LVL601:
1874:lwIP/src/core/tcp_out.c ****   u32_t *opts;
 7317              		.loc 1 1874 3 view .LVU2670
1875:lwIP/src/core/tcp_out.c ****   u16_t sacks_len = 0;
 7318              		.loc 1 1875 3 view .LVU2671
1876:lwIP/src/core/tcp_out.c **** 
 7319              		.loc 1 1876 3 view .LVU2672
1878:lwIP/src/core/tcp_out.c **** 
 7320              		.loc 1 1878 3 view .LVU2673
1878:lwIP/src/core/tcp_out.c **** 
 7321              		.loc 1 1878 3 view .LVU2674
1878:lwIP/src/core/tcp_out.c **** 
 7322              		.loc 1 1878 3 view .LVU2675
1880:lwIP/src/core/tcp_out.c ****   opts = (u32_t *)(void *)(tcphdr + 1);
 7323              		.loc 1 1880 3 view .LVU2676
1881:lwIP/src/core/tcp_out.c **** 
 7324              		.loc 1 1881 3 view .LVU2677
1900:lwIP/src/core/tcp_out.c **** #endif
 7325              		.loc 1 1900 3 view .LVU2678
1907:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(sacks_len);
 7326              		.loc 1 1907 3 view .LVU2679
1908:lwIP/src/core/tcp_out.c ****   LWIP_ASSERT("options not filled", (u8_t *)opts == ((u8_t *)(tcphdr + 1)) + sacks_len * 4 + LWIP_T
 7327              		.loc 1 1908 3 view .LVU2680
1909:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(optflags); /* for LWIP_NOASSERT */
 7328              		.loc 1 1909 3 view .LVU2681
1909:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(optflags); /* for LWIP_NOASSERT */
 7329              		.loc 1 1909 3 view .LVU2682
1909:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(optflags); /* for LWIP_NOASSERT */
 7330              		.loc 1 1909 3 view .LVU2683
1910:lwIP/src/core/tcp_out.c ****   LWIP_UNUSED_ARG(opts); /* for LWIP_NOASSERT */
 7331              		.loc 1 1910 3 view .LVU2684
1911:lwIP/src/core/tcp_out.c **** }
 7332              		.loc 1 1911 3 view .LVU2685
 7333              		.loc 1 2183 3 view .LVU2686
 7334              		.loc 1 2183 9 is_stmt 0 view .LVU2687
 7335 00bc 2246     		mov	r2, r4
2179:lwIP/src/core/tcp_out.c ****   }
 7336              		.loc 1 2179 18 view .LVU2688
 7337 00be B8BF     		it	lt
 7338 00c0 2365     		strlt	r3, [r4, #80]
 7339              		.loc 1 2183 9 view .LVU2689
 7340 00c2 231D     		adds	r3, r4, #4
 7341              	.LVL602:
2184:lwIP/src/core/tcp_out.c **** 
2185:lwIP/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, ("tcp_zero_window_probe: seqno %"U32_F
2186:lwIP/src/core/tcp_out.c ****                           " ackno %"U32_F" err %d.\n",
2187:lwIP/src/core/tcp_out.c ****                           pcb->snd_nxt - 1, pcb->rcv_nxt, (int)err));
2188:lwIP/src/core/tcp_out.c ****   return err;
2189:lwIP/src/core/tcp_out.c **** }
 7342              		.loc 1 2189 1 view .LVU2690
 7343 00c4 03B0     		add	sp, sp, #12
 7344              	.LCFI56:
 7345              		.cfi_remember_state
 7346              		.cfi_def_cfa_offset 36
 7347              		@ sp needed
 7348 00c6 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7349              	.LCFI57:
ARM GAS  /tmp/ccH0Y1hM.s 			page 230


 7350              		.cfi_restore 14
 7351              		.cfi_restore 11
 7352              		.cfi_restore 10
 7353              		.cfi_restore 9
 7354              		.cfi_restore 8
 7355              		.cfi_restore 7
 7356              		.cfi_restore 6
 7357              		.cfi_restore 5
 7358              		.cfi_restore 4
 7359              		.cfi_def_cfa_offset 0
 7360              	.LVL603:
2183:lwIP/src/core/tcp_out.c **** 
 7361              		.loc 1 2183 9 view .LVU2691
 7362 00ca FFF7FEBF 		b	tcp_output_control_segment
 7363              	.LVL604:
 7364              	.L606:
 7365              	.LCFI58:
 7366              		.cfi_restore_state
2153:lwIP/src/core/tcp_out.c ****   /* we want to send one seqno: either FIN or data (no options) */
 7367              		.loc 1 2153 55 discriminator 1 view .LVU2692
 7368 00ce 2B89     		ldrh	r3, [r5, #8]
 7369 00d0 002B     		cmp	r3, #0
 7370 00d2 15BF     		itete	ne
 7371 00d4 1521     		movne	r1, #21
 7372 00d6 1421     		moveq	r1, #20
 7373 00d8 0026     		movne	r6, #0
 7374 00da 0126     		moveq	r6, #1
 7375 00dc A8E7     		b	.L591
 7376              	.LVL605:
 7377              	.L600:
2160:lwIP/src/core/tcp_out.c ****   }
 7378              		.loc 1 2160 12 view .LVU2693
 7379 00de 4FF0FF30 		mov	r0, #-1
 7380              	.LVL606:
 7381              	.L589:
 7382              		.loc 1 2189 1 view .LVU2694
 7383 00e2 03B0     		add	sp, sp, #12
 7384              	.LCFI59:
 7385              		.cfi_remember_state
 7386              		.cfi_def_cfa_offset 36
 7387              		@ sp needed
 7388 00e4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7389              	.LVL607:
 7390              	.L607:
 7391              	.LCFI60:
 7392              		.cfi_restore_state
 7393              	.LBB873:
 7394              	.LBB866:
 7395              	.LBB863:
 7396              	.LBB848:
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 7397              		.loc 1 1827 5 is_stmt 1 view .LVU2695
 7398 00e8 0948     		ldr	r0, .L608
 7399              	.LVL608:
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 7400              		.loc 1 1827 5 is_stmt 0 view .LVU2696
 7401 00ea FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccH0Y1hM.s 			page 231


 7402              	.LVL609:
 7403              	.L593:
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 7404              		.loc 1 1827 5 is_stmt 1 view .LVU2697
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 7405              		.loc 1 1827 5 view .LVU2698
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 7406              		.loc 1 1827 5 view .LVU2699
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 7407              		.loc 1 1827 5 view .LVU2700
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 7408              		.loc 1 1827 5 view .LVU2701
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 7409              		.loc 1 1827 5 view .LVU2702
 7410 00ee FEE7     		b	.L593
 7411              	.LVL610:
 7412              	.L605:
1827:lwIP/src/core/tcp_out.c ****                 (p->len >= TCP_HLEN + optlen));
 7413              		.loc 1 1827 5 is_stmt 0 view .LVU2703
 7414              	.LBE848:
 7415              	.LBE863:
 7416              	.LBE866:
 7417              	.LBE873:
2127:lwIP/src/core/tcp_out.c **** 
 7418              		.loc 1 2127 3 is_stmt 1 discriminator 1 view .LVU2704
 7419 00f0 0848     		ldr	r0, .L608+4
 7420              	.LVL611:
2127:lwIP/src/core/tcp_out.c **** 
 7421              		.loc 1 2127 3 is_stmt 0 discriminator 1 view .LVU2705
 7422 00f2 FFF7FEFF 		bl	printf
 7423              	.LVL612:
 7424              	.L588:
2127:lwIP/src/core/tcp_out.c **** 
 7425              		.loc 1 2127 3 is_stmt 1 discriminator 1 view .LVU2706
2127:lwIP/src/core/tcp_out.c **** 
 7426              		.loc 1 2127 3 discriminator 1 view .LVU2707
2127:lwIP/src/core/tcp_out.c **** 
 7427              		.loc 1 2127 3 discriminator 1 view .LVU2708
2127:lwIP/src/core/tcp_out.c **** 
 7428              		.loc 1 2127 3 discriminator 1 view .LVU2709
2127:lwIP/src/core/tcp_out.c **** 
 7429              		.loc 1 2127 3 discriminator 1 view .LVU2710
2127:lwIP/src/core/tcp_out.c **** 
 7430              		.loc 1 2127 3 discriminator 1 view .LVU2711
 7431 00f6 FEE7     		b	.L588
 7432              	.LVL613:
 7433              	.L597:
2142:lwIP/src/core/tcp_out.c ****   }
 7434              		.loc 1 2142 12 is_stmt 0 view .LVU2712
 7435 00f8 2846     		mov	r0, r5
 7436              	.LVL614:
2142:lwIP/src/core/tcp_out.c ****   }
 7437              		.loc 1 2142 12 view .LVU2713
 7438 00fa F2E7     		b	.L589
 7439              	.LVL615:
 7440              	.L594:
 7441              	.LBB874:
ARM GAS  /tmp/ccH0Y1hM.s 			page 232


2169:lwIP/src/core/tcp_out.c ****     /* Depending on whether the segment has already been sent (unacked) or not
 7442              		.loc 1 2169 5 is_stmt 1 view .LVU2714
2173:lwIP/src/core/tcp_out.c ****   }
 7443              		.loc 1 2173 5 view .LVU2715
2173:lwIP/src/core/tcp_out.c ****   }
 7444              		.loc 1 2173 26 is_stmt 0 view .LVU2716
 7445 00fc 6868     		ldr	r0, [r5, #4]
2173:lwIP/src/core/tcp_out.c ****   }
 7446              		.loc 1 2173 5 view .LVU2717
 7447 00fe 1431     		adds	r1, r1, #20
 7448              	.LVL616:
2173:lwIP/src/core/tcp_out.c ****   }
 7449              		.loc 1 2173 5 view .LVU2718
 7450 0100 2E89     		ldrh	r6, [r5, #8]
 7451              	.LVL617:
2173:lwIP/src/core/tcp_out.c ****   }
 7452              		.loc 1 2173 5 view .LVU2719
 7453 0102 0122     		movs	r2, #1
 7454 0104 0389     		ldrh	r3, [r0, #8]
 7455 0106 9B1B     		subs	r3, r3, r6
 7456 0108 9BB2     		uxth	r3, r3
 7457 010a FFF7FEFF 		bl	pbuf_copy_partial
 7458              	.LVL618:
2173:lwIP/src/core/tcp_out.c ****   }
 7459              		.loc 1 2173 5 view .LVU2720
 7460 010e CCE7     		b	.L595
 7461              	.L609:
 7462              		.align	2
 7463              	.L608:
 7464 0110 38000000 		.word	.LC37
 7465 0114 00000000 		.word	.LC46
 7466              	.LBE874:
 7467              		.cfi_endproc
 7468              	.LFE128:
 7470              		.text
 7471              	.Letext0:
 7472              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 7473              		.file 4 "/usr/arm-none-eabi/include/sys/lock.h"
 7474              		.file 5 "/usr/arm-none-eabi/include/sys/_types.h"
 7475              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 7476              		.file 7 "/usr/arm-none-eabi/include/sys/reent.h"
 7477              		.file 8 "/usr/arm-none-eabi/include/stdlib.h"
 7478              		.file 9 "/usr/arm-none-eabi/include/sys/_stdint.h"
 7479              		.file 10 "lwIP/src/include/lwip/arch.h"
 7480              		.file 11 "/usr/arm-none-eabi/include/ctype.h"
 7481              		.file 12 "lwIP/src/include/lwip/tcpbase.h"
 7482              		.file 13 "lwIP/src/include/lwip/err.h"
 7483              		.file 14 "lwIP/src/include/lwip/pbuf.h"
 7484              		.file 15 "lwIP/src/include/lwip/ip4_addr.h"
 7485              		.file 16 "lwIP/src/include/lwip/ip_addr.h"
 7486              		.file 17 "lwIP/src/include/lwip/memp.h"
 7487              		.file 18 "lwIP/src/include/lwip/priv/memp_priv.h"
 7488              		.file 19 "lwIP/src/include/lwip/netif.h"
 7489              		.file 20 "lwIP/src/include/lwip/prot/ip4.h"
 7490              		.file 21 "lwIP/src/include/lwip/ip.h"
 7491              		.file 22 "lwIP/src/include/lwip/tcp.h"
 7492              		.file 23 "lwIP/src/include/lwip/priv/tcp_priv.h"
ARM GAS  /tmp/ccH0Y1hM.s 			page 233


 7493              		.file 24 "lwIP/src/include/lwip/prot/tcp.h"
 7494              		.file 25 "/usr/arm-none-eabi/include/stdio.h"
 7495              		.file 26 "lwIP/src/include/lwip/inet_chksum.h"
 7496              		.file 27 "lwIP/src/include/lwip/ip4.h"
 7497              		.file 28 "<built-in>"
ARM GAS  /tmp/ccH0Y1hM.s 			page 234


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcp_out.c
     /tmp/ccH0Y1hM.s:18     .rodata.tcp_pbuf_prealloc.str1.4:0000000000000000 $d
     /tmp/ccH0Y1hM.s:25     .text.tcp_pbuf_prealloc:0000000000000000 $t
     /tmp/ccH0Y1hM.s:33     .text.tcp_pbuf_prealloc:0000000000000000 tcp_pbuf_prealloc
     /tmp/ccH0Y1hM.s:194    .text.tcp_pbuf_prealloc:0000000000000070 $d
     /tmp/ccH0Y1hM.s:200    .rodata.tcp_create_segment.part.0.str1.4:0000000000000000 $d
     /tmp/ccH0Y1hM.s:204    .text.tcp_create_segment.part.0:0000000000000000 $t
     /tmp/ccH0Y1hM.s:211    .text.tcp_create_segment.part.0:0000000000000000 tcp_create_segment.part.0
     /tmp/ccH0Y1hM.s:439    .text.tcp_create_segment.part.0:0000000000000094 $d
     /tmp/ccH0Y1hM.s:444    .rodata.tcp_output_control_segment.str1.4:0000000000000000 $d
     /tmp/ccH0Y1hM.s:448    .text.tcp_output_control_segment:0000000000000000 $t
     /tmp/ccH0Y1hM.s:455    .text.tcp_output_control_segment:0000000000000000 tcp_output_control_segment
     /tmp/ccH0Y1hM.s:693    .text.tcp_output_control_segment:00000000000000b0 $d
     /tmp/ccH0Y1hM.s:699    .rodata.tcp_create_segment.str1.4:0000000000000000 $d
     /tmp/ccH0Y1hM.s:706    .text.tcp_create_segment:0000000000000000 $t
     /tmp/ccH0Y1hM.s:713    .text.tcp_create_segment:0000000000000000 tcp_create_segment
     /tmp/ccH0Y1hM.s:1009   .text.tcp_create_segment:00000000000000ac $d
     /tmp/ccH0Y1hM.s:1018   .rodata.tcp_write.str1.4:0000000000000000 $d
     /tmp/ccH0Y1hM.s:1068   .text.tcp_write:0000000000000000 $t
     /tmp/ccH0Y1hM.s:1076   .text.tcp_write:0000000000000000 tcp_write
     /tmp/ccH0Y1hM.s:1957   .text.tcp_write:0000000000000358 $d
     /tmp/ccH0Y1hM.s:1970   .text.tcp_write:0000000000000378 $t
     /tmp/ccH0Y1hM.s:2459   .text.tcp_write:0000000000000518 $d
     /tmp/ccH0Y1hM.s:2473   .rodata.tcp_split_unsent_seg.str1.4:0000000000000000 $d
     /tmp/ccH0Y1hM.s:2486   .text.tcp_split_unsent_seg:0000000000000000 $t
     /tmp/ccH0Y1hM.s:2494   .text.tcp_split_unsent_seg:0000000000000000 tcp_split_unsent_seg
     /tmp/ccH0Y1hM.s:2911   .text.tcp_split_unsent_seg:0000000000000164 $d
     /tmp/ccH0Y1hM.s:2919   .rodata.tcp_send_fin.str1.4:0000000000000000 $d
     /tmp/ccH0Y1hM.s:2932   .text.tcp_send_fin:0000000000000000 $t
     /tmp/ccH0Y1hM.s:2940   .text.tcp_send_fin:0000000000000000 tcp_send_fin
     /tmp/ccH0Y1hM.s:3285   .text.tcp_send_fin:00000000000000d8 $d
     /tmp/ccH0Y1hM.s:3297   .rodata.tcp_enqueue_flags.str1.4:0000000000000000 $d
     /tmp/ccH0Y1hM.s:3309   .text.tcp_enqueue_flags:0000000000000000 $t
     /tmp/ccH0Y1hM.s:3317   .text.tcp_enqueue_flags:0000000000000000 tcp_enqueue_flags
     /tmp/ccH0Y1hM.s:3662   .text.tcp_enqueue_flags:00000000000000e8 $d
     /tmp/ccH0Y1hM.s:3674   .rodata.tcp_rexmit_rto_prepare.str1.4:0000000000000000 $d
     /tmp/ccH0Y1hM.s:3678   .text.tcp_rexmit_rto_prepare:0000000000000000 $t
     /tmp/ccH0Y1hM.s:3686   .text.tcp_rexmit_rto_prepare:0000000000000000 tcp_rexmit_rto_prepare
     /tmp/ccH0Y1hM.s:3866   .text.tcp_rexmit_rto_prepare:000000000000005c $d
     /tmp/ccH0Y1hM.s:3871   .rodata.tcp_rexmit.str1.4:0000000000000000 $d
     /tmp/ccH0Y1hM.s:3875   .text.tcp_rexmit:0000000000000000 $t
     /tmp/ccH0Y1hM.s:3883   .text.tcp_rexmit:0000000000000000 tcp_rexmit
     /tmp/ccH0Y1hM.s:4074   .text.tcp_rexmit:0000000000000068 $d
     /tmp/ccH0Y1hM.s:4079   .rodata.tcp_rexmit_fast.str1.4:0000000000000000 $d
     /tmp/ccH0Y1hM.s:4083   .text.tcp_rexmit_fast:0000000000000000 $t
     /tmp/ccH0Y1hM.s:4091   .text.tcp_rexmit_fast:0000000000000000 tcp_rexmit_fast
     /tmp/ccH0Y1hM.s:4201   .text.tcp_rexmit_fast:0000000000000060 $d
     /tmp/ccH0Y1hM.s:4206   .rodata.tcp_rst.str1.4:0000000000000000 $d
     /tmp/ccH0Y1hM.s:4216   .text.tcp_rst:0000000000000000 $t
     /tmp/ccH0Y1hM.s:4224   .text.tcp_rst:0000000000000000 tcp_rst
     /tmp/ccH0Y1hM.s:4533   .text.tcp_rst:0000000000000090 $d
     /tmp/ccH0Y1hM.s:4541   .rodata.tcp_send_empty_ack.str1.4:0000000000000000 $d
     /tmp/ccH0Y1hM.s:4545   .text.tcp_send_empty_ack:0000000000000000 $t
     /tmp/ccH0Y1hM.s:4553   .text.tcp_send_empty_ack:0000000000000000 tcp_send_empty_ack
     /tmp/ccH0Y1hM.s:4948   .text.tcp_send_empty_ack:00000000000000a8 $d
     /tmp/ccH0Y1hM.s:4958   .rodata.tcp_output.part.0.str1.4:0000000000000000 $d
ARM GAS  /tmp/ccH0Y1hM.s 			page 235


     /tmp/ccH0Y1hM.s:4965   .text.tcp_output.part.0:0000000000000000 $t
     /tmp/ccH0Y1hM.s:4972   .text.tcp_output.part.0:0000000000000000 tcp_output.part.0
     /tmp/ccH0Y1hM.s:5973   .text.tcp_output.part.0:00000000000002cc $d
     /tmp/ccH0Y1hM.s:5980   .rodata.tcp_output.str1.4:0000000000000000 $d
     /tmp/ccH0Y1hM.s:5987   .text.tcp_output:0000000000000000 $t
     /tmp/ccH0Y1hM.s:5995   .text.tcp_output:0000000000000000 tcp_output
     /tmp/ccH0Y1hM.s:6083   .text.tcp_output:0000000000000030 $d
     /tmp/ccH0Y1hM.s:6090   .rodata.tcp_rexmit_rto_commit.str1.4:0000000000000000 $d
     /tmp/ccH0Y1hM.s:6094   .text.tcp_rexmit_rto_commit:0000000000000000 $t
     /tmp/ccH0Y1hM.s:6102   .text.tcp_rexmit_rto_commit:0000000000000000 tcp_rexmit_rto_commit
     /tmp/ccH0Y1hM.s:6214   .text.tcp_rexmit_rto_commit:000000000000003c $d
     /tmp/ccH0Y1hM.s:6223   .rodata.tcp_rexmit_rto.str1.4:0000000000000000 $d
     /tmp/ccH0Y1hM.s:6227   .text.tcp_rexmit_rto:0000000000000000 $t
     /tmp/ccH0Y1hM.s:6235   .text.tcp_rexmit_rto:0000000000000000 tcp_rexmit_rto
     /tmp/ccH0Y1hM.s:6521   .text.tcp_rexmit_rto:0000000000000080 $d
     /tmp/ccH0Y1hM.s:6532   .rodata.tcp_keepalive.str1.4:0000000000000000 $d
     /tmp/ccH0Y1hM.s:6536   .text.tcp_keepalive:0000000000000000 $t
     /tmp/ccH0Y1hM.s:6544   .text.tcp_keepalive:0000000000000000 tcp_keepalive
     /tmp/ccH0Y1hM.s:6934   .text.tcp_keepalive:000000000000009c $d
     /tmp/ccH0Y1hM.s:6940   .rodata.tcp_zero_window_probe.str1.4:0000000000000000 $d
     /tmp/ccH0Y1hM.s:6944   .text.tcp_zero_window_probe:0000000000000000 $t
     /tmp/ccH0Y1hM.s:6952   .text.tcp_zero_window_probe:0000000000000000 tcp_zero_window_probe
     /tmp/ccH0Y1hM.s:7464   .text.tcp_zero_window_probe:0000000000000110 $d

UNDEFINED SYMBOLS
pbuf_alloc
printf
memp_malloc
pbuf_add_header
tcp_seg_free
pbuf_free
ip4_route
ip_chksum_pseudo
ip4_output_if
netif_get_by_index
pbuf_cat
pbuf_clen
memcpy
tcp_segs_free
pbuf_copy_partial
pbuf_realloc
tcp_eff_send_mss_netif
tcp_ticks
tcp_input_pcb
