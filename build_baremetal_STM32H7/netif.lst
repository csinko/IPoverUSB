ARM GAS  /tmp/ccP9Y5Wu.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"netif.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.netif_null_output_ip4,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	netif_null_output_ip4:
  27              	.LVL0:
  28              	.LFB124:
  29              		.file 1 "lwIP/src/core/netif.c"
   1:lwIP/src/core/netif.c **** /**
   2:lwIP/src/core/netif.c ****  * @file
   3:lwIP/src/core/netif.c ****  * lwIP network interface abstraction
   4:lwIP/src/core/netif.c ****  *
   5:lwIP/src/core/netif.c ****  * @defgroup netif Network interface (NETIF)
   6:lwIP/src/core/netif.c ****  * @ingroup callbackstyle_api
   7:lwIP/src/core/netif.c ****  *
   8:lwIP/src/core/netif.c ****  * @defgroup netif_ip4 IPv4 address handling
   9:lwIP/src/core/netif.c ****  * @ingroup netif
  10:lwIP/src/core/netif.c ****  *
  11:lwIP/src/core/netif.c ****  * @defgroup netif_ip6 IPv6 address handling
  12:lwIP/src/core/netif.c ****  * @ingroup netif
  13:lwIP/src/core/netif.c ****  *
  14:lwIP/src/core/netif.c ****  * @defgroup netif_cd Client data handling
  15:lwIP/src/core/netif.c ****  * Store data (void*) on a netif for application usage.
  16:lwIP/src/core/netif.c ****  * @see @ref LWIP_NUM_NETIF_CLIENT_DATA
  17:lwIP/src/core/netif.c ****  * @ingroup netif
  18:lwIP/src/core/netif.c ****  */
  19:lwIP/src/core/netif.c **** 
  20:lwIP/src/core/netif.c **** /*
  21:lwIP/src/core/netif.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
  22:lwIP/src/core/netif.c ****  * All rights reserved.
  23:lwIP/src/core/netif.c ****  *
  24:lwIP/src/core/netif.c ****  * Redistribution and use in source and binary forms, with or without modification,
  25:lwIP/src/core/netif.c ****  * are permitted provided that the following conditions are met:
  26:lwIP/src/core/netif.c ****  *
  27:lwIP/src/core/netif.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  28:lwIP/src/core/netif.c ****  *    this list of conditions and the following disclaimer.
  29:lwIP/src/core/netif.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
ARM GAS  /tmp/ccP9Y5Wu.s 			page 2


  30:lwIP/src/core/netif.c ****  *    this list of conditions and the following disclaimer in the documentation
  31:lwIP/src/core/netif.c ****  *    and/or other materials provided with the distribution.
  32:lwIP/src/core/netif.c ****  * 3. The name of the author may not be used to endorse or promote products
  33:lwIP/src/core/netif.c ****  *    derived from this software without specific prior written permission.
  34:lwIP/src/core/netif.c ****  *
  35:lwIP/src/core/netif.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
  36:lwIP/src/core/netif.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  37:lwIP/src/core/netif.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
  38:lwIP/src/core/netif.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  39:lwIP/src/core/netif.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
  40:lwIP/src/core/netif.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  41:lwIP/src/core/netif.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  42:lwIP/src/core/netif.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
  43:lwIP/src/core/netif.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  44:lwIP/src/core/netif.c ****  * OF SUCH DAMAGE.
  45:lwIP/src/core/netif.c ****  *
  46:lwIP/src/core/netif.c ****  * This file is part of the lwIP TCP/IP stack.
  47:lwIP/src/core/netif.c ****  *
  48:lwIP/src/core/netif.c ****  * Author: Adam Dunkels <adam@sics.se>
  49:lwIP/src/core/netif.c ****  */
  50:lwIP/src/core/netif.c **** 
  51:lwIP/src/core/netif.c **** #include "lwip/opt.h"
  52:lwIP/src/core/netif.c **** 
  53:lwIP/src/core/netif.c **** #include <string.h> /* memset */
  54:lwIP/src/core/netif.c **** #include <stdlib.h> /* atoi */
  55:lwIP/src/core/netif.c **** 
  56:lwIP/src/core/netif.c **** #include "lwip/def.h"
  57:lwIP/src/core/netif.c **** #include "lwip/ip_addr.h"
  58:lwIP/src/core/netif.c **** #include "lwip/ip6_addr.h"
  59:lwIP/src/core/netif.c **** #include "lwip/netif.h"
  60:lwIP/src/core/netif.c **** #include "lwip/priv/tcp_priv.h"
  61:lwIP/src/core/netif.c **** #include "lwip/udp.h"
  62:lwIP/src/core/netif.c **** #include "lwip/priv/raw_priv.h"
  63:lwIP/src/core/netif.c **** #include "lwip/snmp.h"
  64:lwIP/src/core/netif.c **** #include "lwip/igmp.h"
  65:lwIP/src/core/netif.c **** #include "lwip/etharp.h"
  66:lwIP/src/core/netif.c **** #include "lwip/stats.h"
  67:lwIP/src/core/netif.c **** #include "lwip/sys.h"
  68:lwIP/src/core/netif.c **** #include "lwip/ip.h"
  69:lwIP/src/core/netif.c **** #if ENABLE_LOOPBACK
  70:lwIP/src/core/netif.c **** #if LWIP_NETIF_LOOPBACK_MULTITHREADING
  71:lwIP/src/core/netif.c **** #include "lwip/tcpip.h"
  72:lwIP/src/core/netif.c **** #endif /* LWIP_NETIF_LOOPBACK_MULTITHREADING */
  73:lwIP/src/core/netif.c **** #endif /* ENABLE_LOOPBACK */
  74:lwIP/src/core/netif.c **** 
  75:lwIP/src/core/netif.c **** #include "netif/ethernet.h"
  76:lwIP/src/core/netif.c **** 
  77:lwIP/src/core/netif.c **** #if LWIP_AUTOIP
  78:lwIP/src/core/netif.c **** #include "lwip/autoip.h"
  79:lwIP/src/core/netif.c **** #endif /* LWIP_AUTOIP */
  80:lwIP/src/core/netif.c **** #if LWIP_DHCP
  81:lwIP/src/core/netif.c **** #include "lwip/dhcp.h"
  82:lwIP/src/core/netif.c **** #endif /* LWIP_DHCP */
  83:lwIP/src/core/netif.c **** #if LWIP_IPV6_DHCP6
  84:lwIP/src/core/netif.c **** #include "lwip/dhcp6.h"
  85:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6_DHCP6 */
  86:lwIP/src/core/netif.c **** #if LWIP_IPV6_MLD
ARM GAS  /tmp/ccP9Y5Wu.s 			page 3


  87:lwIP/src/core/netif.c **** #include "lwip/mld6.h"
  88:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6_MLD */
  89:lwIP/src/core/netif.c **** #if LWIP_IPV6
  90:lwIP/src/core/netif.c **** #include "lwip/nd6.h"
  91:lwIP/src/core/netif.c **** #endif
  92:lwIP/src/core/netif.c **** 
  93:lwIP/src/core/netif.c **** #if LWIP_NETIF_STATUS_CALLBACK
  94:lwIP/src/core/netif.c **** #define NETIF_STATUS_CALLBACK(n) do{ if (n->status_callback) { (n->status_callback)(n); }}while(0)
  95:lwIP/src/core/netif.c **** #else
  96:lwIP/src/core/netif.c **** #define NETIF_STATUS_CALLBACK(n)
  97:lwIP/src/core/netif.c **** #endif /* LWIP_NETIF_STATUS_CALLBACK */
  98:lwIP/src/core/netif.c **** 
  99:lwIP/src/core/netif.c **** #if LWIP_NETIF_LINK_CALLBACK
 100:lwIP/src/core/netif.c **** #define NETIF_LINK_CALLBACK(n) do{ if (n->link_callback) { (n->link_callback)(n); }}while(0)
 101:lwIP/src/core/netif.c **** #else
 102:lwIP/src/core/netif.c **** #define NETIF_LINK_CALLBACK(n)
 103:lwIP/src/core/netif.c **** #endif /* LWIP_NETIF_LINK_CALLBACK */
 104:lwIP/src/core/netif.c **** 
 105:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 106:lwIP/src/core/netif.c **** static netif_ext_callback_t *ext_callback;
 107:lwIP/src/core/netif.c **** #endif
 108:lwIP/src/core/netif.c **** 
 109:lwIP/src/core/netif.c **** #if !LWIP_SINGLE_NETIF
 110:lwIP/src/core/netif.c **** struct netif *netif_list;
 111:lwIP/src/core/netif.c **** #endif /* !LWIP_SINGLE_NETIF */
 112:lwIP/src/core/netif.c **** struct netif *netif_default;
 113:lwIP/src/core/netif.c **** 
 114:lwIP/src/core/netif.c **** #define netif_index_to_num(index)   ((index) - 1)
 115:lwIP/src/core/netif.c **** static u8_t netif_num;
 116:lwIP/src/core/netif.c **** 
 117:lwIP/src/core/netif.c **** #if LWIP_NUM_NETIF_CLIENT_DATA > 0
 118:lwIP/src/core/netif.c **** static u8_t netif_client_id;
 119:lwIP/src/core/netif.c **** #endif
 120:lwIP/src/core/netif.c **** 
 121:lwIP/src/core/netif.c **** #define NETIF_REPORT_TYPE_IPV4  0x01
 122:lwIP/src/core/netif.c **** #define NETIF_REPORT_TYPE_IPV6  0x02
 123:lwIP/src/core/netif.c **** static void netif_issue_reports(struct netif *netif, u8_t report_type);
 124:lwIP/src/core/netif.c **** 
 125:lwIP/src/core/netif.c **** #if LWIP_IPV6
 126:lwIP/src/core/netif.c **** static err_t netif_null_output_ip6(struct netif *netif, struct pbuf *p, const ip6_addr_t *ipaddr);
 127:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
 128:lwIP/src/core/netif.c **** #if LWIP_IPV4
 129:lwIP/src/core/netif.c **** static err_t netif_null_output_ip4(struct netif *netif, struct pbuf *p, const ip4_addr_t *ipaddr);
 130:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 131:lwIP/src/core/netif.c **** 
 132:lwIP/src/core/netif.c **** #if LWIP_HAVE_LOOPIF
 133:lwIP/src/core/netif.c **** #if LWIP_IPV4
 134:lwIP/src/core/netif.c **** static err_t netif_loop_output_ipv4(struct netif *netif, struct pbuf *p, const ip4_addr_t *addr);
 135:lwIP/src/core/netif.c **** #endif
 136:lwIP/src/core/netif.c **** #if LWIP_IPV6
 137:lwIP/src/core/netif.c **** static err_t netif_loop_output_ipv6(struct netif *netif, struct pbuf *p, const ip6_addr_t *addr);
 138:lwIP/src/core/netif.c **** #endif
 139:lwIP/src/core/netif.c **** 
 140:lwIP/src/core/netif.c **** 
 141:lwIP/src/core/netif.c **** static struct netif loop_netif;
 142:lwIP/src/core/netif.c **** 
 143:lwIP/src/core/netif.c **** /**
ARM GAS  /tmp/ccP9Y5Wu.s 			page 4


 144:lwIP/src/core/netif.c ****  * Initialize a lwip network interface structure for a loopback interface
 145:lwIP/src/core/netif.c ****  *
 146:lwIP/src/core/netif.c ****  * @param netif the lwip network interface structure for this loopif
 147:lwIP/src/core/netif.c ****  * @return ERR_OK if the loopif is initialized
 148:lwIP/src/core/netif.c ****  *         ERR_MEM if private data couldn't be allocated
 149:lwIP/src/core/netif.c ****  */
 150:lwIP/src/core/netif.c **** static err_t
 151:lwIP/src/core/netif.c **** netif_loopif_init(struct netif *netif)
 152:lwIP/src/core/netif.c **** {
 153:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_loopif_init: invalid netif", netif != NULL);
 154:lwIP/src/core/netif.c **** 
 155:lwIP/src/core/netif.c ****   /* initialize the snmp variables and counters inside the struct netif
 156:lwIP/src/core/netif.c ****    * ifSpeed: no assumption can be made!
 157:lwIP/src/core/netif.c ****    */
 158:lwIP/src/core/netif.c ****   MIB2_INIT_NETIF(netif, snmp_ifType_softwareLoopback, 0);
 159:lwIP/src/core/netif.c **** 
 160:lwIP/src/core/netif.c ****   netif->name[0] = 'l';
 161:lwIP/src/core/netif.c ****   netif->name[1] = 'o';
 162:lwIP/src/core/netif.c **** #if LWIP_IPV4
 163:lwIP/src/core/netif.c ****   netif->output = netif_loop_output_ipv4;
 164:lwIP/src/core/netif.c **** #endif
 165:lwIP/src/core/netif.c **** #if LWIP_IPV6
 166:lwIP/src/core/netif.c ****   netif->output_ip6 = netif_loop_output_ipv6;
 167:lwIP/src/core/netif.c **** #endif
 168:lwIP/src/core/netif.c **** #if LWIP_LOOPIF_MULTICAST
 169:lwIP/src/core/netif.c ****   netif_set_flags(netif, NETIF_FLAG_IGMP);
 170:lwIP/src/core/netif.c **** #endif
 171:lwIP/src/core/netif.c ****   NETIF_SET_CHECKSUM_CTRL(netif, NETIF_CHECKSUM_DISABLE_ALL);
 172:lwIP/src/core/netif.c ****   return ERR_OK;
 173:lwIP/src/core/netif.c **** }
 174:lwIP/src/core/netif.c **** #endif /* LWIP_HAVE_LOOPIF */
 175:lwIP/src/core/netif.c **** 
 176:lwIP/src/core/netif.c **** void
 177:lwIP/src/core/netif.c **** netif_init(void)
 178:lwIP/src/core/netif.c **** {
 179:lwIP/src/core/netif.c **** #if LWIP_HAVE_LOOPIF
 180:lwIP/src/core/netif.c **** #if LWIP_IPV4
 181:lwIP/src/core/netif.c **** #define LOOPIF_ADDRINIT &loop_ipaddr, &loop_netmask, &loop_gw,
 182:lwIP/src/core/netif.c ****   ip4_addr_t loop_ipaddr, loop_netmask, loop_gw;
 183:lwIP/src/core/netif.c ****   IP4_ADDR(&loop_gw, 127, 0, 0, 1);
 184:lwIP/src/core/netif.c ****   IP4_ADDR(&loop_ipaddr, 127, 0, 0, 1);
 185:lwIP/src/core/netif.c ****   IP4_ADDR(&loop_netmask, 255, 0, 0, 0);
 186:lwIP/src/core/netif.c **** #else /* LWIP_IPV4 */
 187:lwIP/src/core/netif.c **** #define LOOPIF_ADDRINIT
 188:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 189:lwIP/src/core/netif.c **** 
 190:lwIP/src/core/netif.c **** #if NO_SYS
 191:lwIP/src/core/netif.c ****   netif_add(&loop_netif, LOOPIF_ADDRINIT NULL, netif_loopif_init, ip_input);
 192:lwIP/src/core/netif.c **** #else  /* NO_SYS */
 193:lwIP/src/core/netif.c ****   netif_add(&loop_netif, LOOPIF_ADDRINIT NULL, netif_loopif_init, tcpip_input);
 194:lwIP/src/core/netif.c **** #endif /* NO_SYS */
 195:lwIP/src/core/netif.c **** 
 196:lwIP/src/core/netif.c **** #if LWIP_IPV6
 197:lwIP/src/core/netif.c ****   IP_ADDR6_HOST(loop_netif.ip6_addr, 0, 0, 0, 0x00000001UL);
 198:lwIP/src/core/netif.c ****   loop_netif.ip6_addr_state[0] = IP6_ADDR_VALID;
 199:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
 200:lwIP/src/core/netif.c **** 
ARM GAS  /tmp/ccP9Y5Wu.s 			page 5


 201:lwIP/src/core/netif.c ****   netif_set_link_up(&loop_netif);
 202:lwIP/src/core/netif.c ****   netif_set_up(&loop_netif);
 203:lwIP/src/core/netif.c **** 
 204:lwIP/src/core/netif.c **** #endif /* LWIP_HAVE_LOOPIF */
 205:lwIP/src/core/netif.c **** }
 206:lwIP/src/core/netif.c **** 
 207:lwIP/src/core/netif.c **** /**
 208:lwIP/src/core/netif.c ****  * @ingroup lwip_nosys
 209:lwIP/src/core/netif.c ****  * Forwards a received packet for input processing with
 210:lwIP/src/core/netif.c ****  * ethernet_input() or ip_input() depending on netif flags.
 211:lwIP/src/core/netif.c ****  * Don't call directly, pass to netif_add() and call
 212:lwIP/src/core/netif.c ****  * netif->input().
 213:lwIP/src/core/netif.c ****  * Only works if the netif driver correctly sets
 214:lwIP/src/core/netif.c ****  * NETIF_FLAG_ETHARP and/or NETIF_FLAG_ETHERNET flag!
 215:lwIP/src/core/netif.c ****  */
 216:lwIP/src/core/netif.c **** err_t
 217:lwIP/src/core/netif.c **** netif_input(struct pbuf *p, struct netif *inp)
 218:lwIP/src/core/netif.c **** {
 219:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 220:lwIP/src/core/netif.c **** 
 221:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_input: invalid pbuf", p != NULL);
 222:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_input: invalid netif", inp != NULL);
 223:lwIP/src/core/netif.c **** 
 224:lwIP/src/core/netif.c **** #if LWIP_ETHERNET
 225:lwIP/src/core/netif.c ****   if (inp->flags & (NETIF_FLAG_ETHARP | NETIF_FLAG_ETHERNET)) {
 226:lwIP/src/core/netif.c ****     return ethernet_input(p, inp);
 227:lwIP/src/core/netif.c ****   } else
 228:lwIP/src/core/netif.c **** #endif /* LWIP_ETHERNET */
 229:lwIP/src/core/netif.c ****     return ip_input(p, inp);
 230:lwIP/src/core/netif.c **** }
 231:lwIP/src/core/netif.c **** 
 232:lwIP/src/core/netif.c **** /**
 233:lwIP/src/core/netif.c ****  * @ingroup netif
 234:lwIP/src/core/netif.c ****  * Add a network interface to the list of lwIP netifs.
 235:lwIP/src/core/netif.c ****  *
 236:lwIP/src/core/netif.c ****  * Same as @ref netif_add but without IPv4 addresses
 237:lwIP/src/core/netif.c ****  */
 238:lwIP/src/core/netif.c **** struct netif *
 239:lwIP/src/core/netif.c **** netif_add_noaddr(struct netif *netif, void *state, netif_init_fn init, netif_input_fn input)
 240:lwIP/src/core/netif.c **** {
 241:lwIP/src/core/netif.c ****   return netif_add(netif,
 242:lwIP/src/core/netif.c **** #if LWIP_IPV4
 243:lwIP/src/core/netif.c ****                    NULL, NULL, NULL,
 244:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4*/
 245:lwIP/src/core/netif.c ****                    state, init, input);
 246:lwIP/src/core/netif.c **** }
 247:lwIP/src/core/netif.c **** 
 248:lwIP/src/core/netif.c **** /**
 249:lwIP/src/core/netif.c ****  * @ingroup netif
 250:lwIP/src/core/netif.c ****  * Add a network interface to the list of lwIP netifs.
 251:lwIP/src/core/netif.c ****  *
 252:lwIP/src/core/netif.c ****  * @param netif a pre-allocated netif structure
 253:lwIP/src/core/netif.c ****  * @param ipaddr IP address for the new netif
 254:lwIP/src/core/netif.c ****  * @param netmask network mask for the new netif
 255:lwIP/src/core/netif.c ****  * @param gw default gateway IP address for the new netif
 256:lwIP/src/core/netif.c ****  * @param state opaque data passed to the new netif
 257:lwIP/src/core/netif.c ****  * @param init callback function that initializes the interface
ARM GAS  /tmp/ccP9Y5Wu.s 			page 6


 258:lwIP/src/core/netif.c ****  * @param input callback function that is called to pass
 259:lwIP/src/core/netif.c ****  * ingress packets up in the protocol layer stack.\n
 260:lwIP/src/core/netif.c ****  * It is recommended to use a function that passes the input directly
 261:lwIP/src/core/netif.c ****  * to the stack (netif_input(), NO_SYS=1 mode) or via sending a
 262:lwIP/src/core/netif.c ****  * message to TCPIP thread (tcpip_input(), NO_SYS=0 mode).\n
 263:lwIP/src/core/netif.c ****  * These functions use netif flags NETIF_FLAG_ETHARP and NETIF_FLAG_ETHERNET
 264:lwIP/src/core/netif.c ****  * to decide whether to forward to ethernet_input() or ip_input().
 265:lwIP/src/core/netif.c ****  * In other words, the functions only work when the netif
 266:lwIP/src/core/netif.c ****  * driver is implemented correctly!\n
 267:lwIP/src/core/netif.c ****  * Most members of struct netif should be be initialized by the
 268:lwIP/src/core/netif.c ****  * netif init function = netif driver (init parameter of this function).\n
 269:lwIP/src/core/netif.c ****  * IPv6: Don't forget to call netif_create_ip6_linklocal_address() after
 270:lwIP/src/core/netif.c ****  * setting the MAC address in struct netif.hwaddr
 271:lwIP/src/core/netif.c ****  * (IPv6 requires a link-local address).
 272:lwIP/src/core/netif.c ****  *
 273:lwIP/src/core/netif.c ****  * @return netif, or NULL if failed.
 274:lwIP/src/core/netif.c ****  */
 275:lwIP/src/core/netif.c **** struct netif *
 276:lwIP/src/core/netif.c **** netif_add(struct netif *netif,
 277:lwIP/src/core/netif.c **** #if LWIP_IPV4
 278:lwIP/src/core/netif.c ****           const ip4_addr_t *ipaddr, const ip4_addr_t *netmask, const ip4_addr_t *gw,
 279:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 280:lwIP/src/core/netif.c ****           void *state, netif_init_fn init, netif_input_fn input)
 281:lwIP/src/core/netif.c **** {
 282:lwIP/src/core/netif.c **** #if LWIP_IPV6
 283:lwIP/src/core/netif.c ****   s8_t i;
 284:lwIP/src/core/netif.c **** #endif
 285:lwIP/src/core/netif.c **** 
 286:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 287:lwIP/src/core/netif.c **** 
 288:lwIP/src/core/netif.c **** #if LWIP_SINGLE_NETIF
 289:lwIP/src/core/netif.c ****   if (netif_default != NULL) {
 290:lwIP/src/core/netif.c ****     LWIP_ASSERT("single netif already set", 0);
 291:lwIP/src/core/netif.c ****     return NULL;
 292:lwIP/src/core/netif.c ****   }
 293:lwIP/src/core/netif.c **** #endif
 294:lwIP/src/core/netif.c **** 
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: invalid netif", netif != NULL, return NULL);
 296:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 297:lwIP/src/core/netif.c **** 
 298:lwIP/src/core/netif.c **** #if LWIP_IPV4
 299:lwIP/src/core/netif.c ****   if (ipaddr == NULL) {
 300:lwIP/src/core/netif.c ****     ipaddr = ip_2_ip4(IP4_ADDR_ANY);
 301:lwIP/src/core/netif.c ****   }
 302:lwIP/src/core/netif.c ****   if (netmask == NULL) {
 303:lwIP/src/core/netif.c ****     netmask = ip_2_ip4(IP4_ADDR_ANY);
 304:lwIP/src/core/netif.c ****   }
 305:lwIP/src/core/netif.c ****   if (gw == NULL) {
 306:lwIP/src/core/netif.c ****     gw = ip_2_ip4(IP4_ADDR_ANY);
 307:lwIP/src/core/netif.c ****   }
 308:lwIP/src/core/netif.c **** 
 309:lwIP/src/core/netif.c ****   /* reset new interface configuration state */
 310:lwIP/src/core/netif.c ****   ip_addr_set_zero_ip4(&netif->ip_addr);
 311:lwIP/src/core/netif.c ****   ip_addr_set_zero_ip4(&netif->netmask);
 312:lwIP/src/core/netif.c ****   ip_addr_set_zero_ip4(&netif->gw);
 313:lwIP/src/core/netif.c ****   netif->output = netif_null_output_ip4;
 314:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
ARM GAS  /tmp/ccP9Y5Wu.s 			page 7


 315:lwIP/src/core/netif.c **** #if LWIP_IPV6
 316:lwIP/src/core/netif.c ****   for (i = 0; i < LWIP_IPV6_NUM_ADDRESSES; i++) {
 317:lwIP/src/core/netif.c ****     ip_addr_set_zero_ip6(&netif->ip6_addr[i]);
 318:lwIP/src/core/netif.c ****     netif->ip6_addr_state[i] = IP6_ADDR_INVALID;
 319:lwIP/src/core/netif.c **** #if LWIP_IPV6_ADDRESS_LIFETIMES
 320:lwIP/src/core/netif.c ****     netif->ip6_addr_valid_life[i] = IP6_ADDR_LIFE_STATIC;
 321:lwIP/src/core/netif.c ****     netif->ip6_addr_pref_life[i] = IP6_ADDR_LIFE_STATIC;
 322:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6_ADDRESS_LIFETIMES */
 323:lwIP/src/core/netif.c ****   }
 324:lwIP/src/core/netif.c ****   netif->output_ip6 = netif_null_output_ip6;
 325:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
 326:lwIP/src/core/netif.c ****   NETIF_SET_CHECKSUM_CTRL(netif, NETIF_CHECKSUM_ENABLE_ALL);
 327:lwIP/src/core/netif.c ****   netif->mtu = 0;
 328:lwIP/src/core/netif.c ****   netif->flags = 0;
 329:lwIP/src/core/netif.c **** #ifdef netif_get_client_data
 330:lwIP/src/core/netif.c ****   memset(netif->client_data, 0, sizeof(netif->client_data));
 331:lwIP/src/core/netif.c **** #endif /* LWIP_NUM_NETIF_CLIENT_DATA */
 332:lwIP/src/core/netif.c **** #if LWIP_IPV6
 333:lwIP/src/core/netif.c **** #if LWIP_IPV6_AUTOCONFIG
 334:lwIP/src/core/netif.c ****   /* IPv6 address autoconfiguration not enabled by default */
 335:lwIP/src/core/netif.c ****   netif->ip6_autoconfig_enabled = 0;
 336:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6_AUTOCONFIG */
 337:lwIP/src/core/netif.c ****   nd6_restart_netif(netif);
 338:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
 339:lwIP/src/core/netif.c **** #if LWIP_NETIF_STATUS_CALLBACK
 340:lwIP/src/core/netif.c ****   netif->status_callback = NULL;
 341:lwIP/src/core/netif.c **** #endif /* LWIP_NETIF_STATUS_CALLBACK */
 342:lwIP/src/core/netif.c **** #if LWIP_NETIF_LINK_CALLBACK
 343:lwIP/src/core/netif.c ****   netif->link_callback = NULL;
 344:lwIP/src/core/netif.c **** #endif /* LWIP_NETIF_LINK_CALLBACK */
 345:lwIP/src/core/netif.c **** #if LWIP_IGMP
 346:lwIP/src/core/netif.c ****   netif->igmp_mac_filter = NULL;
 347:lwIP/src/core/netif.c **** #endif /* LWIP_IGMP */
 348:lwIP/src/core/netif.c **** #if LWIP_IPV6 && LWIP_IPV6_MLD
 349:lwIP/src/core/netif.c ****   netif->mld_mac_filter = NULL;
 350:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6 && LWIP_IPV6_MLD */
 351:lwIP/src/core/netif.c **** #if ENABLE_LOOPBACK
 352:lwIP/src/core/netif.c ****   netif->loop_first = NULL;
 353:lwIP/src/core/netif.c ****   netif->loop_last = NULL;
 354:lwIP/src/core/netif.c **** #endif /* ENABLE_LOOPBACK */
 355:lwIP/src/core/netif.c **** 
 356:lwIP/src/core/netif.c ****   /* remember netif specific state information data */
 357:lwIP/src/core/netif.c ****   netif->state = state;
 358:lwIP/src/core/netif.c ****   netif->num = netif_num;
 359:lwIP/src/core/netif.c ****   netif->input = input;
 360:lwIP/src/core/netif.c **** 
 361:lwIP/src/core/netif.c ****   NETIF_RESET_HINTS(netif);
 362:lwIP/src/core/netif.c **** #if ENABLE_LOOPBACK && LWIP_LOOPBACK_MAX_PBUFS
 363:lwIP/src/core/netif.c ****   netif->loop_cnt_current = 0;
 364:lwIP/src/core/netif.c **** #endif /* ENABLE_LOOPBACK && LWIP_LOOPBACK_MAX_PBUFS */
 365:lwIP/src/core/netif.c **** 
 366:lwIP/src/core/netif.c **** #if LWIP_IPV4
 367:lwIP/src/core/netif.c ****   netif_set_addr(netif, ipaddr, netmask, gw);
 368:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 369:lwIP/src/core/netif.c **** 
 370:lwIP/src/core/netif.c ****   /* call user specified initialization function for netif */
 371:lwIP/src/core/netif.c ****   if (init(netif) != ERR_OK) {
ARM GAS  /tmp/ccP9Y5Wu.s 			page 8


 372:lwIP/src/core/netif.c ****     return NULL;
 373:lwIP/src/core/netif.c ****   }
 374:lwIP/src/core/netif.c **** #if LWIP_IPV6 && LWIP_ND6_ALLOW_RA_UPDATES
 375:lwIP/src/core/netif.c ****   /* Initialize the MTU for IPv6 to the one set by the netif driver.
 376:lwIP/src/core/netif.c ****      This can be updated later by RA. */
 377:lwIP/src/core/netif.c ****   netif->mtu6 = netif->mtu;
 378:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6 && LWIP_ND6_ALLOW_RA_UPDATES */
 379:lwIP/src/core/netif.c **** 
 380:lwIP/src/core/netif.c **** #if !LWIP_SINGLE_NETIF
 381:lwIP/src/core/netif.c ****   /* Assign a unique netif number in the range [0..254], so that (num+1) can
 382:lwIP/src/core/netif.c ****      serve as an interface index that fits in a u8_t.
 383:lwIP/src/core/netif.c ****      We assume that the new netif has not yet been added to the list here.
 384:lwIP/src/core/netif.c ****      This algorithm is O(n^2), but that should be OK for lwIP.
 385:lwIP/src/core/netif.c ****      */
 386:lwIP/src/core/netif.c ****   {
 387:lwIP/src/core/netif.c ****     struct netif *netif2;
 388:lwIP/src/core/netif.c ****     int num_netifs;
 389:lwIP/src/core/netif.c ****     do {
 390:lwIP/src/core/netif.c ****       if (netif->num == 255) {
 391:lwIP/src/core/netif.c ****         netif->num = 0;
 392:lwIP/src/core/netif.c ****       }
 393:lwIP/src/core/netif.c ****       num_netifs = 0;
 394:lwIP/src/core/netif.c ****       for (netif2 = netif_list; netif2 != NULL; netif2 = netif2->next) {
 395:lwIP/src/core/netif.c ****         LWIP_ASSERT("netif already added", netif2 != netif);
 396:lwIP/src/core/netif.c ****         num_netifs++;
 397:lwIP/src/core/netif.c ****         LWIP_ASSERT("too many netifs, max. supported number is 255", num_netifs <= 255);
 398:lwIP/src/core/netif.c ****         if (netif2->num == netif->num) {
 399:lwIP/src/core/netif.c ****           netif->num++;
 400:lwIP/src/core/netif.c ****           break;
 401:lwIP/src/core/netif.c ****         }
 402:lwIP/src/core/netif.c ****       }
 403:lwIP/src/core/netif.c ****     } while (netif2 != NULL);
 404:lwIP/src/core/netif.c ****   }
 405:lwIP/src/core/netif.c ****   if (netif->num == 254) {
 406:lwIP/src/core/netif.c ****     netif_num = 0;
 407:lwIP/src/core/netif.c ****   } else {
 408:lwIP/src/core/netif.c ****     netif_num = (u8_t)(netif->num + 1);
 409:lwIP/src/core/netif.c ****   }
 410:lwIP/src/core/netif.c **** 
 411:lwIP/src/core/netif.c ****   /* add this netif to the list */
 412:lwIP/src/core/netif.c ****   netif->next = netif_list;
 413:lwIP/src/core/netif.c ****   netif_list = netif;
 414:lwIP/src/core/netif.c **** #endif /* "LWIP_SINGLE_NETIF */
 415:lwIP/src/core/netif.c ****   mib2_netif_added(netif);
 416:lwIP/src/core/netif.c **** 
 417:lwIP/src/core/netif.c **** #if LWIP_IGMP
 418:lwIP/src/core/netif.c ****   /* start IGMP processing */
 419:lwIP/src/core/netif.c ****   if (netif->flags & NETIF_FLAG_IGMP) {
 420:lwIP/src/core/netif.c ****     igmp_start(netif);
 421:lwIP/src/core/netif.c ****   }
 422:lwIP/src/core/netif.c **** #endif /* LWIP_IGMP */
 423:lwIP/src/core/netif.c **** 
 424:lwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("netif: added interface %c%c IP",
 425:lwIP/src/core/netif.c ****                             netif->name[0], netif->name[1]));
 426:lwIP/src/core/netif.c **** #if LWIP_IPV4
 427:lwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, (" addr "));
 428:lwIP/src/core/netif.c ****   ip4_addr_debug_print(NETIF_DEBUG, ipaddr);
ARM GAS  /tmp/ccP9Y5Wu.s 			page 9


 429:lwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, (" netmask "));
 430:lwIP/src/core/netif.c ****   ip4_addr_debug_print(NETIF_DEBUG, netmask);
 431:lwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, (" gw "));
 432:lwIP/src/core/netif.c ****   ip4_addr_debug_print(NETIF_DEBUG, gw);
 433:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 434:lwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("\n"));
 435:lwIP/src/core/netif.c **** 
 436:lwIP/src/core/netif.c ****   netif_invoke_ext_callback(netif, LWIP_NSC_NETIF_ADDED, NULL);
 437:lwIP/src/core/netif.c **** 
 438:lwIP/src/core/netif.c ****   return netif;
 439:lwIP/src/core/netif.c **** }
 440:lwIP/src/core/netif.c **** 
 441:lwIP/src/core/netif.c **** static void
 442:lwIP/src/core/netif.c **** netif_do_ip_addr_changed(const ip_addr_t *old_addr, const ip_addr_t *new_addr)
 443:lwIP/src/core/netif.c **** {
 444:lwIP/src/core/netif.c **** #if LWIP_TCP
 445:lwIP/src/core/netif.c ****   tcp_netif_ip_addr_changed(old_addr, new_addr);
 446:lwIP/src/core/netif.c **** #endif /* LWIP_TCP */
 447:lwIP/src/core/netif.c **** #if LWIP_UDP
 448:lwIP/src/core/netif.c ****   udp_netif_ip_addr_changed(old_addr, new_addr);
 449:lwIP/src/core/netif.c **** #endif /* LWIP_UDP */
 450:lwIP/src/core/netif.c **** #if LWIP_RAW
 451:lwIP/src/core/netif.c ****   raw_netif_ip_addr_changed(old_addr, new_addr);
 452:lwIP/src/core/netif.c **** #endif /* LWIP_RAW */
 453:lwIP/src/core/netif.c **** }
 454:lwIP/src/core/netif.c **** 
 455:lwIP/src/core/netif.c **** #if LWIP_IPV4
 456:lwIP/src/core/netif.c **** static int
 457:lwIP/src/core/netif.c **** netif_do_set_ipaddr(struct netif *netif, const ip4_addr_t *ipaddr, ip_addr_t *old_addr)
 458:lwIP/src/core/netif.c **** {
 459:lwIP/src/core/netif.c ****   LWIP_ASSERT("invalid pointer", ipaddr != NULL);
 460:lwIP/src/core/netif.c ****   LWIP_ASSERT("invalid pointer", old_addr != NULL);
 461:lwIP/src/core/netif.c **** 
 462:lwIP/src/core/netif.c ****   /* address is actually being changed? */
 463:lwIP/src/core/netif.c ****   if (ip4_addr_cmp(ipaddr, netif_ip4_addr(netif)) == 0) {
 464:lwIP/src/core/netif.c ****     ip_addr_t new_addr;
 465:lwIP/src/core/netif.c ****     *ip_2_ip4(&new_addr) = *ipaddr;
 466:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(new_addr, IPADDR_TYPE_V4);
 467:lwIP/src/core/netif.c **** 
 468:lwIP/src/core/netif.c ****     ip_addr_copy(*old_addr, *netif_ip_addr4(netif));
 469:lwIP/src/core/netif.c **** 
 470:lwIP/src/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_STATE, ("netif_set_ipaddr: netif address being changed\n"));
 471:lwIP/src/core/netif.c ****     netif_do_ip_addr_changed(old_addr, &new_addr);
 472:lwIP/src/core/netif.c **** 
 473:lwIP/src/core/netif.c ****     mib2_remove_ip4(netif);
 474:lwIP/src/core/netif.c ****     mib2_remove_route_ip4(0, netif);
 475:lwIP/src/core/netif.c ****     /* set new IP address to netif */
 476:lwIP/src/core/netif.c ****     ip4_addr_set(ip_2_ip4(&netif->ip_addr), ipaddr);
 477:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->ip_addr, IPADDR_TYPE_V4);
 478:lwIP/src/core/netif.c ****     mib2_add_ip4(netif);
 479:lwIP/src/core/netif.c ****     mib2_add_route_ip4(0, netif);
 480:lwIP/src/core/netif.c **** 
 481:lwIP/src/core/netif.c ****     netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV4);
 482:lwIP/src/core/netif.c **** 
 483:lwIP/src/core/netif.c ****     NETIF_STATUS_CALLBACK(netif);
 484:lwIP/src/core/netif.c ****     return 1; /* address changed */
 485:lwIP/src/core/netif.c ****   }
ARM GAS  /tmp/ccP9Y5Wu.s 			page 10


 486:lwIP/src/core/netif.c ****   return 0; /* address unchanged */
 487:lwIP/src/core/netif.c **** }
 488:lwIP/src/core/netif.c **** 
 489:lwIP/src/core/netif.c **** /**
 490:lwIP/src/core/netif.c ****  * @ingroup netif_ip4
 491:lwIP/src/core/netif.c ****  * Change the IP address of a network interface
 492:lwIP/src/core/netif.c ****  *
 493:lwIP/src/core/netif.c ****  * @param netif the network interface to change
 494:lwIP/src/core/netif.c ****  * @param ipaddr the new IP address
 495:lwIP/src/core/netif.c ****  *
 496:lwIP/src/core/netif.c ****  * @note call netif_set_addr() if you also want to change netmask and
 497:lwIP/src/core/netif.c ****  * default gateway
 498:lwIP/src/core/netif.c ****  */
 499:lwIP/src/core/netif.c **** void
 500:lwIP/src/core/netif.c **** netif_set_ipaddr(struct netif *netif, const ip4_addr_t *ipaddr)
 501:lwIP/src/core/netif.c **** {
 502:lwIP/src/core/netif.c ****   ip_addr_t old_addr;
 503:lwIP/src/core/netif.c **** 
 504:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_set_ipaddr: invalid netif", netif != NULL, return);
 505:lwIP/src/core/netif.c **** 
 506:lwIP/src/core/netif.c ****   /* Don't propagate NULL pointer (IPv4 ANY) to subsequent functions */
 507:lwIP/src/core/netif.c ****   if (ipaddr == NULL) {
 508:lwIP/src/core/netif.c ****     ipaddr = IP4_ADDR_ANY4;
 509:lwIP/src/core/netif.c ****   }
 510:lwIP/src/core/netif.c **** 
 511:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 512:lwIP/src/core/netif.c **** 
 513:lwIP/src/core/netif.c ****   if (netif_do_set_ipaddr(netif, ipaddr, &old_addr)) {
 514:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 515:lwIP/src/core/netif.c ****     netif_ext_callback_args_t args;
 516:lwIP/src/core/netif.c ****     args.ipv4_changed.old_address = &old_addr;
 517:lwIP/src/core/netif.c ****     netif_invoke_ext_callback(netif, LWIP_NSC_IPV4_ADDRESS_CHANGED, &args);
 518:lwIP/src/core/netif.c **** #endif
 519:lwIP/src/core/netif.c ****   }
 520:lwIP/src/core/netif.c **** }
 521:lwIP/src/core/netif.c **** 
 522:lwIP/src/core/netif.c **** static int
 523:lwIP/src/core/netif.c **** netif_do_set_netmask(struct netif *netif, const ip4_addr_t *netmask, ip_addr_t *old_nm)
 524:lwIP/src/core/netif.c **** {
 525:lwIP/src/core/netif.c ****   /* address is actually being changed? */
 526:lwIP/src/core/netif.c ****   if (ip4_addr_cmp(netmask, netif_ip4_netmask(netif)) == 0) {
 527:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 528:lwIP/src/core/netif.c ****     LWIP_ASSERT("invalid pointer", old_nm != NULL);
 529:lwIP/src/core/netif.c ****     ip_addr_copy(*old_nm, *netif_ip_netmask4(netif));
 530:lwIP/src/core/netif.c **** #else
 531:lwIP/src/core/netif.c ****     LWIP_UNUSED_ARG(old_nm);
 532:lwIP/src/core/netif.c **** #endif
 533:lwIP/src/core/netif.c ****     mib2_remove_route_ip4(0, netif);
 534:lwIP/src/core/netif.c ****     /* set new netmask to netif */
 535:lwIP/src/core/netif.c ****     ip4_addr_set(ip_2_ip4(&netif->netmask), netmask);
 536:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->netmask, IPADDR_TYPE_V4);
 537:lwIP/src/core/netif.c ****     mib2_add_route_ip4(0, netif);
 538:lwIP/src/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: netmask of interface %c%c s
 539:lwIP/src/core/netif.c ****                 netif->name[0], netif->name[1],
 540:lwIP/src/core/netif.c ****                 ip4_addr1_16(netif_ip4_netmask(netif)),
 541:lwIP/src/core/netif.c ****                 ip4_addr2_16(netif_ip4_netmask(netif)),
 542:lwIP/src/core/netif.c ****                 ip4_addr3_16(netif_ip4_netmask(netif)),
ARM GAS  /tmp/ccP9Y5Wu.s 			page 11


 543:lwIP/src/core/netif.c ****                 ip4_addr4_16(netif_ip4_netmask(netif))));
 544:lwIP/src/core/netif.c ****     return 1; /* netmask changed */
 545:lwIP/src/core/netif.c ****   }
 546:lwIP/src/core/netif.c ****   return 0; /* netmask unchanged */
 547:lwIP/src/core/netif.c **** }
 548:lwIP/src/core/netif.c **** 
 549:lwIP/src/core/netif.c **** /**
 550:lwIP/src/core/netif.c ****  * @ingroup netif_ip4
 551:lwIP/src/core/netif.c ****  * Change the netmask of a network interface
 552:lwIP/src/core/netif.c ****  *
 553:lwIP/src/core/netif.c ****  * @param netif the network interface to change
 554:lwIP/src/core/netif.c ****  * @param netmask the new netmask
 555:lwIP/src/core/netif.c ****  *
 556:lwIP/src/core/netif.c ****  * @note call netif_set_addr() if you also want to change ip address and
 557:lwIP/src/core/netif.c ****  * default gateway
 558:lwIP/src/core/netif.c ****  */
 559:lwIP/src/core/netif.c **** void
 560:lwIP/src/core/netif.c **** netif_set_netmask(struct netif *netif, const ip4_addr_t *netmask)
 561:lwIP/src/core/netif.c **** {
 562:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 563:lwIP/src/core/netif.c ****   ip_addr_t old_nm_val;
 564:lwIP/src/core/netif.c ****   ip_addr_t *old_nm = &old_nm_val;
 565:lwIP/src/core/netif.c **** #else
 566:lwIP/src/core/netif.c ****   ip_addr_t *old_nm = NULL;
 567:lwIP/src/core/netif.c **** #endif
 568:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 569:lwIP/src/core/netif.c **** 
 570:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_set_netmask: invalid netif", netif != NULL, return);
 571:lwIP/src/core/netif.c **** 
 572:lwIP/src/core/netif.c ****   /* Don't propagate NULL pointer (IPv4 ANY) to subsequent functions */
 573:lwIP/src/core/netif.c ****   if (netmask == NULL) {
 574:lwIP/src/core/netif.c ****     netmask = IP4_ADDR_ANY4;
 575:lwIP/src/core/netif.c ****   }
 576:lwIP/src/core/netif.c **** 
 577:lwIP/src/core/netif.c ****   if (netif_do_set_netmask(netif, netmask, old_nm)) {
 578:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 579:lwIP/src/core/netif.c ****     netif_ext_callback_args_t args;
 580:lwIP/src/core/netif.c ****     args.ipv4_changed.old_netmask = old_nm;
 581:lwIP/src/core/netif.c ****     netif_invoke_ext_callback(netif, LWIP_NSC_IPV4_NETMASK_CHANGED, &args);
 582:lwIP/src/core/netif.c **** #endif
 583:lwIP/src/core/netif.c ****   }
 584:lwIP/src/core/netif.c **** }
 585:lwIP/src/core/netif.c **** 
 586:lwIP/src/core/netif.c **** static int
 587:lwIP/src/core/netif.c **** netif_do_set_gw(struct netif *netif, const ip4_addr_t *gw, ip_addr_t *old_gw)
 588:lwIP/src/core/netif.c **** {
 589:lwIP/src/core/netif.c ****   /* address is actually being changed? */
 590:lwIP/src/core/netif.c ****   if (ip4_addr_cmp(gw, netif_ip4_gw(netif)) == 0) {
 591:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 592:lwIP/src/core/netif.c ****     LWIP_ASSERT("invalid pointer", old_gw != NULL);
 593:lwIP/src/core/netif.c ****     ip_addr_copy(*old_gw, *netif_ip_gw4(netif));
 594:lwIP/src/core/netif.c **** #else
 595:lwIP/src/core/netif.c ****     LWIP_UNUSED_ARG(old_gw);
 596:lwIP/src/core/netif.c **** #endif
 597:lwIP/src/core/netif.c **** 
 598:lwIP/src/core/netif.c ****     ip4_addr_set(ip_2_ip4(&netif->gw), gw);
 599:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->gw, IPADDR_TYPE_V4);
ARM GAS  /tmp/ccP9Y5Wu.s 			page 12


 600:lwIP/src/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: GW address of interface %c%
 601:lwIP/src/core/netif.c ****                 netif->name[0], netif->name[1],
 602:lwIP/src/core/netif.c ****                 ip4_addr1_16(netif_ip4_gw(netif)),
 603:lwIP/src/core/netif.c ****                 ip4_addr2_16(netif_ip4_gw(netif)),
 604:lwIP/src/core/netif.c ****                 ip4_addr3_16(netif_ip4_gw(netif)),
 605:lwIP/src/core/netif.c ****                 ip4_addr4_16(netif_ip4_gw(netif))));
 606:lwIP/src/core/netif.c ****     return 1; /* gateway changed */
 607:lwIP/src/core/netif.c ****   }
 608:lwIP/src/core/netif.c ****   return 0; /* gateway unchanged */
 609:lwIP/src/core/netif.c **** }
 610:lwIP/src/core/netif.c **** 
 611:lwIP/src/core/netif.c **** /**
 612:lwIP/src/core/netif.c ****  * @ingroup netif_ip4
 613:lwIP/src/core/netif.c ****  * Change the default gateway for a network interface
 614:lwIP/src/core/netif.c ****  *
 615:lwIP/src/core/netif.c ****  * @param netif the network interface to change
 616:lwIP/src/core/netif.c ****  * @param gw the new default gateway
 617:lwIP/src/core/netif.c ****  *
 618:lwIP/src/core/netif.c ****  * @note call netif_set_addr() if you also want to change ip address and netmask
 619:lwIP/src/core/netif.c ****  */
 620:lwIP/src/core/netif.c **** void
 621:lwIP/src/core/netif.c **** netif_set_gw(struct netif *netif, const ip4_addr_t *gw)
 622:lwIP/src/core/netif.c **** {
 623:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 624:lwIP/src/core/netif.c ****   ip_addr_t old_gw_val;
 625:lwIP/src/core/netif.c ****   ip_addr_t *old_gw = &old_gw_val;
 626:lwIP/src/core/netif.c **** #else
 627:lwIP/src/core/netif.c ****   ip_addr_t *old_gw = NULL;
 628:lwIP/src/core/netif.c **** #endif
 629:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 630:lwIP/src/core/netif.c **** 
 631:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_set_gw: invalid netif", netif != NULL, return);
 632:lwIP/src/core/netif.c **** 
 633:lwIP/src/core/netif.c ****   /* Don't propagate NULL pointer (IPv4 ANY) to subsequent functions */
 634:lwIP/src/core/netif.c ****   if (gw == NULL) {
 635:lwIP/src/core/netif.c ****     gw = IP4_ADDR_ANY4;
 636:lwIP/src/core/netif.c ****   }
 637:lwIP/src/core/netif.c **** 
 638:lwIP/src/core/netif.c ****   if (netif_do_set_gw(netif, gw, old_gw)) {
 639:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 640:lwIP/src/core/netif.c ****     netif_ext_callback_args_t args;
 641:lwIP/src/core/netif.c ****     args.ipv4_changed.old_gw = old_gw;
 642:lwIP/src/core/netif.c ****     netif_invoke_ext_callback(netif, LWIP_NSC_IPV4_GATEWAY_CHANGED, &args);
 643:lwIP/src/core/netif.c **** #endif
 644:lwIP/src/core/netif.c ****   }
 645:lwIP/src/core/netif.c **** }
 646:lwIP/src/core/netif.c **** 
 647:lwIP/src/core/netif.c **** /**
 648:lwIP/src/core/netif.c ****  * @ingroup netif_ip4
 649:lwIP/src/core/netif.c ****  * Change IP address configuration for a network interface (including netmask
 650:lwIP/src/core/netif.c ****  * and default gateway).
 651:lwIP/src/core/netif.c ****  *
 652:lwIP/src/core/netif.c ****  * @param netif the network interface to change
 653:lwIP/src/core/netif.c ****  * @param ipaddr the new IP address
 654:lwIP/src/core/netif.c ****  * @param netmask the new netmask
 655:lwIP/src/core/netif.c ****  * @param gw the new default gateway
 656:lwIP/src/core/netif.c ****  */
ARM GAS  /tmp/ccP9Y5Wu.s 			page 13


 657:lwIP/src/core/netif.c **** void
 658:lwIP/src/core/netif.c **** netif_set_addr(struct netif *netif, const ip4_addr_t *ipaddr, const ip4_addr_t *netmask,
 659:lwIP/src/core/netif.c ****                const ip4_addr_t *gw)
 660:lwIP/src/core/netif.c **** {
 661:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 662:lwIP/src/core/netif.c ****   netif_nsc_reason_t change_reason = LWIP_NSC_NONE;
 663:lwIP/src/core/netif.c ****   netif_ext_callback_args_t cb_args;
 664:lwIP/src/core/netif.c ****   ip_addr_t old_nm_val;
 665:lwIP/src/core/netif.c ****   ip_addr_t old_gw_val;
 666:lwIP/src/core/netif.c ****   ip_addr_t *old_nm = &old_nm_val;
 667:lwIP/src/core/netif.c ****   ip_addr_t *old_gw = &old_gw_val;
 668:lwIP/src/core/netif.c **** #else
 669:lwIP/src/core/netif.c ****   ip_addr_t *old_nm = NULL;
 670:lwIP/src/core/netif.c ****   ip_addr_t *old_gw = NULL;
 671:lwIP/src/core/netif.c **** #endif
 672:lwIP/src/core/netif.c ****   ip_addr_t old_addr;
 673:lwIP/src/core/netif.c ****   int remove;
 674:lwIP/src/core/netif.c **** 
 675:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 676:lwIP/src/core/netif.c **** 
 677:lwIP/src/core/netif.c ****   /* Don't propagate NULL pointer (IPv4 ANY) to subsequent functions */
 678:lwIP/src/core/netif.c ****   if (ipaddr == NULL) {
 679:lwIP/src/core/netif.c ****     ipaddr = IP4_ADDR_ANY4;
 680:lwIP/src/core/netif.c ****   }
 681:lwIP/src/core/netif.c ****   if (netmask == NULL) {
 682:lwIP/src/core/netif.c ****     netmask = IP4_ADDR_ANY4;
 683:lwIP/src/core/netif.c ****   }
 684:lwIP/src/core/netif.c ****   if (gw == NULL) {
 685:lwIP/src/core/netif.c ****     gw = IP4_ADDR_ANY4;
 686:lwIP/src/core/netif.c ****   }
 687:lwIP/src/core/netif.c **** 
 688:lwIP/src/core/netif.c ****   remove = ip4_addr_isany(ipaddr);
 689:lwIP/src/core/netif.c ****   if (remove) {
 690:lwIP/src/core/netif.c ****     /* when removing an address, we have to remove it *before* changing netmask/gw
 691:lwIP/src/core/netif.c ****        to ensure that tcp RST segment can be sent correctly */
 692:lwIP/src/core/netif.c ****     if (netif_do_set_ipaddr(netif, ipaddr, &old_addr)) {
 693:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 694:lwIP/src/core/netif.c ****       change_reason |= LWIP_NSC_IPV4_ADDRESS_CHANGED;
 695:lwIP/src/core/netif.c ****       cb_args.ipv4_changed.old_address = &old_addr;
 696:lwIP/src/core/netif.c **** #endif
 697:lwIP/src/core/netif.c ****     }
 698:lwIP/src/core/netif.c ****   }
 699:lwIP/src/core/netif.c ****   if (netif_do_set_netmask(netif, netmask, old_nm)) {
 700:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 701:lwIP/src/core/netif.c ****     change_reason |= LWIP_NSC_IPV4_NETMASK_CHANGED;
 702:lwIP/src/core/netif.c ****     cb_args.ipv4_changed.old_netmask = old_nm;
 703:lwIP/src/core/netif.c **** #endif
 704:lwIP/src/core/netif.c ****   }
 705:lwIP/src/core/netif.c ****   if (netif_do_set_gw(netif, gw, old_gw)) {
 706:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 707:lwIP/src/core/netif.c ****     change_reason |= LWIP_NSC_IPV4_GATEWAY_CHANGED;
 708:lwIP/src/core/netif.c ****     cb_args.ipv4_changed.old_gw = old_gw;
 709:lwIP/src/core/netif.c **** #endif
 710:lwIP/src/core/netif.c ****   }
 711:lwIP/src/core/netif.c ****   if (!remove) {
 712:lwIP/src/core/netif.c ****     /* set ipaddr last to ensure netmask/gw have been set when status callback is called */
 713:lwIP/src/core/netif.c ****     if (netif_do_set_ipaddr(netif, ipaddr, &old_addr)) {
ARM GAS  /tmp/ccP9Y5Wu.s 			page 14


 714:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 715:lwIP/src/core/netif.c ****       change_reason |= LWIP_NSC_IPV4_ADDRESS_CHANGED;
 716:lwIP/src/core/netif.c ****       cb_args.ipv4_changed.old_address = &old_addr;
 717:lwIP/src/core/netif.c **** #endif
 718:lwIP/src/core/netif.c ****     }
 719:lwIP/src/core/netif.c ****   }
 720:lwIP/src/core/netif.c **** 
 721:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 722:lwIP/src/core/netif.c ****   if (change_reason != LWIP_NSC_NONE) {
 723:lwIP/src/core/netif.c ****     change_reason |= LWIP_NSC_IPV4_SETTINGS_CHANGED;
 724:lwIP/src/core/netif.c ****     netif_invoke_ext_callback(netif, change_reason, &cb_args);
 725:lwIP/src/core/netif.c ****   }
 726:lwIP/src/core/netif.c **** #endif
 727:lwIP/src/core/netif.c **** }
 728:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4*/
 729:lwIP/src/core/netif.c **** 
 730:lwIP/src/core/netif.c **** /**
 731:lwIP/src/core/netif.c ****  * @ingroup netif
 732:lwIP/src/core/netif.c ****  * Remove a network interface from the list of lwIP netifs.
 733:lwIP/src/core/netif.c ****  *
 734:lwIP/src/core/netif.c ****  * @param netif the network interface to remove
 735:lwIP/src/core/netif.c ****  */
 736:lwIP/src/core/netif.c **** void
 737:lwIP/src/core/netif.c **** netif_remove(struct netif *netif)
 738:lwIP/src/core/netif.c **** {
 739:lwIP/src/core/netif.c **** #if LWIP_IPV6
 740:lwIP/src/core/netif.c ****   int i;
 741:lwIP/src/core/netif.c **** #endif
 742:lwIP/src/core/netif.c **** 
 743:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 744:lwIP/src/core/netif.c **** 
 745:lwIP/src/core/netif.c ****   if (netif == NULL) {
 746:lwIP/src/core/netif.c ****     return;
 747:lwIP/src/core/netif.c ****   }
 748:lwIP/src/core/netif.c **** 
 749:lwIP/src/core/netif.c ****   netif_invoke_ext_callback(netif, LWIP_NSC_NETIF_REMOVED, NULL);
 750:lwIP/src/core/netif.c **** 
 751:lwIP/src/core/netif.c **** #if LWIP_IPV4
 752:lwIP/src/core/netif.c ****   if (!ip4_addr_isany_val(*netif_ip4_addr(netif))) {
 753:lwIP/src/core/netif.c ****     netif_do_ip_addr_changed(netif_ip_addr4(netif), NULL);
 754:lwIP/src/core/netif.c ****   }
 755:lwIP/src/core/netif.c **** 
 756:lwIP/src/core/netif.c **** #if LWIP_IGMP
 757:lwIP/src/core/netif.c ****   /* stop IGMP processing */
 758:lwIP/src/core/netif.c ****   if (netif->flags & NETIF_FLAG_IGMP) {
 759:lwIP/src/core/netif.c ****     igmp_stop(netif);
 760:lwIP/src/core/netif.c ****   }
 761:lwIP/src/core/netif.c **** #endif /* LWIP_IGMP */
 762:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4*/
 763:lwIP/src/core/netif.c **** 
 764:lwIP/src/core/netif.c **** #if LWIP_IPV6
 765:lwIP/src/core/netif.c ****   for (i = 0; i < LWIP_IPV6_NUM_ADDRESSES; i++) {
 766:lwIP/src/core/netif.c ****     if (ip6_addr_isvalid(netif_ip6_addr_state(netif, i))) {
 767:lwIP/src/core/netif.c ****       netif_do_ip_addr_changed(netif_ip_addr6(netif, i), NULL);
 768:lwIP/src/core/netif.c ****     }
 769:lwIP/src/core/netif.c ****   }
 770:lwIP/src/core/netif.c **** #if LWIP_IPV6_MLD
ARM GAS  /tmp/ccP9Y5Wu.s 			page 15


 771:lwIP/src/core/netif.c ****   /* stop MLD processing */
 772:lwIP/src/core/netif.c ****   mld6_stop(netif);
 773:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6_MLD */
 774:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
 775:lwIP/src/core/netif.c ****   if (netif_is_up(netif)) {
 776:lwIP/src/core/netif.c ****     /* set netif down before removing (call callback function) */
 777:lwIP/src/core/netif.c ****     netif_set_down(netif);
 778:lwIP/src/core/netif.c ****   }
 779:lwIP/src/core/netif.c **** 
 780:lwIP/src/core/netif.c ****   mib2_remove_ip4(netif);
 781:lwIP/src/core/netif.c **** 
 782:lwIP/src/core/netif.c ****   /* this netif is default? */
 783:lwIP/src/core/netif.c ****   if (netif_default == netif) {
 784:lwIP/src/core/netif.c ****     /* reset default netif */
 785:lwIP/src/core/netif.c ****     netif_set_default(NULL);
 786:lwIP/src/core/netif.c ****   }
 787:lwIP/src/core/netif.c **** #if !LWIP_SINGLE_NETIF
 788:lwIP/src/core/netif.c ****   /*  is it the first netif? */
 789:lwIP/src/core/netif.c ****   if (netif_list == netif) {
 790:lwIP/src/core/netif.c ****     netif_list = netif->next;
 791:lwIP/src/core/netif.c ****   } else {
 792:lwIP/src/core/netif.c ****     /*  look for netif further down the list */
 793:lwIP/src/core/netif.c ****     struct netif *tmp_netif;
 794:lwIP/src/core/netif.c ****     NETIF_FOREACH(tmp_netif) {
 795:lwIP/src/core/netif.c ****       if (tmp_netif->next == netif) {
 796:lwIP/src/core/netif.c ****         tmp_netif->next = netif->next;
 797:lwIP/src/core/netif.c ****         break;
 798:lwIP/src/core/netif.c ****       }
 799:lwIP/src/core/netif.c ****     }
 800:lwIP/src/core/netif.c ****     if (tmp_netif == NULL) {
 801:lwIP/src/core/netif.c ****       return; /* netif is not on the list */
 802:lwIP/src/core/netif.c ****     }
 803:lwIP/src/core/netif.c ****   }
 804:lwIP/src/core/netif.c **** #endif /* !LWIP_SINGLE_NETIF */
 805:lwIP/src/core/netif.c ****   mib2_netif_removed(netif);
 806:lwIP/src/core/netif.c **** #if LWIP_NETIF_REMOVE_CALLBACK
 807:lwIP/src/core/netif.c ****   if (netif->remove_callback) {
 808:lwIP/src/core/netif.c ****     netif->remove_callback(netif);
 809:lwIP/src/core/netif.c ****   }
 810:lwIP/src/core/netif.c **** #endif /* LWIP_NETIF_REMOVE_CALLBACK */
 811:lwIP/src/core/netif.c ****   LWIP_DEBUGF( NETIF_DEBUG, ("netif_remove: removed netif\n") );
 812:lwIP/src/core/netif.c **** }
 813:lwIP/src/core/netif.c **** 
 814:lwIP/src/core/netif.c **** /**
 815:lwIP/src/core/netif.c ****  * @ingroup netif
 816:lwIP/src/core/netif.c ****  * Set a network interface as the default network interface
 817:lwIP/src/core/netif.c ****  * (used to output all packets for which no specific route is found)
 818:lwIP/src/core/netif.c ****  *
 819:lwIP/src/core/netif.c ****  * @param netif the default network interface
 820:lwIP/src/core/netif.c ****  */
 821:lwIP/src/core/netif.c **** void
 822:lwIP/src/core/netif.c **** netif_set_default(struct netif *netif)
 823:lwIP/src/core/netif.c **** {
 824:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 825:lwIP/src/core/netif.c **** 
 826:lwIP/src/core/netif.c ****   if (netif == NULL) {
 827:lwIP/src/core/netif.c ****     /* remove default route */
ARM GAS  /tmp/ccP9Y5Wu.s 			page 16


 828:lwIP/src/core/netif.c ****     mib2_remove_route_ip4(1, netif);
 829:lwIP/src/core/netif.c ****   } else {
 830:lwIP/src/core/netif.c ****     /* install default route */
 831:lwIP/src/core/netif.c ****     mib2_add_route_ip4(1, netif);
 832:lwIP/src/core/netif.c ****   }
 833:lwIP/src/core/netif.c ****   netif_default = netif;
 834:lwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("netif: setting default interface %c%c\n",
 835:lwIP/src/core/netif.c ****                             netif ? netif->name[0] : '\'', netif ? netif->name[1] : '\''));
 836:lwIP/src/core/netif.c **** }
 837:lwIP/src/core/netif.c **** 
 838:lwIP/src/core/netif.c **** /**
 839:lwIP/src/core/netif.c ****  * @ingroup netif
 840:lwIP/src/core/netif.c ****  * Bring an interface up, available for processing
 841:lwIP/src/core/netif.c ****  * traffic.
 842:lwIP/src/core/netif.c ****  */
 843:lwIP/src/core/netif.c **** void
 844:lwIP/src/core/netif.c **** netif_set_up(struct netif *netif)
 845:lwIP/src/core/netif.c **** {
 846:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 847:lwIP/src/core/netif.c **** 
 848:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_set_up: invalid netif", netif != NULL, return);
 849:lwIP/src/core/netif.c **** 
 850:lwIP/src/core/netif.c ****   if (!(netif->flags & NETIF_FLAG_UP)) {
 851:lwIP/src/core/netif.c ****     netif_set_flags(netif, NETIF_FLAG_UP);
 852:lwIP/src/core/netif.c **** 
 853:lwIP/src/core/netif.c ****     MIB2_COPY_SYSUPTIME_TO(&netif->ts);
 854:lwIP/src/core/netif.c **** 
 855:lwIP/src/core/netif.c ****     NETIF_STATUS_CALLBACK(netif);
 856:lwIP/src/core/netif.c **** 
 857:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 858:lwIP/src/core/netif.c ****     {
 859:lwIP/src/core/netif.c ****       netif_ext_callback_args_t args;
 860:lwIP/src/core/netif.c ****       args.status_changed.state = 1;
 861:lwIP/src/core/netif.c ****       netif_invoke_ext_callback(netif, LWIP_NSC_STATUS_CHANGED, &args);
 862:lwIP/src/core/netif.c ****     }
 863:lwIP/src/core/netif.c **** #endif
 864:lwIP/src/core/netif.c **** 
 865:lwIP/src/core/netif.c ****     netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV4 | NETIF_REPORT_TYPE_IPV6);
 866:lwIP/src/core/netif.c **** #if LWIP_IPV6
 867:lwIP/src/core/netif.c ****     nd6_restart_netif(netif);
 868:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
 869:lwIP/src/core/netif.c ****   }
 870:lwIP/src/core/netif.c **** }
 871:lwIP/src/core/netif.c **** 
 872:lwIP/src/core/netif.c **** /** Send ARP/IGMP/MLD/RS events, e.g. on link-up/netif-up or addr-change
 873:lwIP/src/core/netif.c ****  */
 874:lwIP/src/core/netif.c **** static void
 875:lwIP/src/core/netif.c **** netif_issue_reports(struct netif *netif, u8_t report_type)
 876:lwIP/src/core/netif.c **** {
 877:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_issue_reports: invalid netif", netif != NULL);
 878:lwIP/src/core/netif.c **** 
 879:lwIP/src/core/netif.c ****   /* Only send reports when both link and admin states are up */
 880:lwIP/src/core/netif.c ****   if (!(netif->flags & NETIF_FLAG_LINK_UP) ||
 881:lwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 882:lwIP/src/core/netif.c ****     return;
 883:lwIP/src/core/netif.c ****   }
 884:lwIP/src/core/netif.c **** 
ARM GAS  /tmp/ccP9Y5Wu.s 			page 17


 885:lwIP/src/core/netif.c **** #if LWIP_IPV4
 886:lwIP/src/core/netif.c ****   if ((report_type & NETIF_REPORT_TYPE_IPV4) &&
 887:lwIP/src/core/netif.c ****       !ip4_addr_isany_val(*netif_ip4_addr(netif))) {
 888:lwIP/src/core/netif.c **** #if LWIP_ARP
 889:lwIP/src/core/netif.c ****     /* For Ethernet network interfaces, we would like to send a "gratuitous ARP" */
 890:lwIP/src/core/netif.c ****     if (netif->flags & (NETIF_FLAG_ETHARP)) {
 891:lwIP/src/core/netif.c ****       etharp_gratuitous(netif);
 892:lwIP/src/core/netif.c ****     }
 893:lwIP/src/core/netif.c **** #endif /* LWIP_ARP */
 894:lwIP/src/core/netif.c **** 
 895:lwIP/src/core/netif.c **** #if LWIP_IGMP
 896:lwIP/src/core/netif.c ****     /* resend IGMP memberships */
 897:lwIP/src/core/netif.c ****     if (netif->flags & NETIF_FLAG_IGMP) {
 898:lwIP/src/core/netif.c ****       igmp_report_groups(netif);
 899:lwIP/src/core/netif.c ****     }
 900:lwIP/src/core/netif.c **** #endif /* LWIP_IGMP */
 901:lwIP/src/core/netif.c ****   }
 902:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 903:lwIP/src/core/netif.c **** 
 904:lwIP/src/core/netif.c **** #if LWIP_IPV6
 905:lwIP/src/core/netif.c ****   if (report_type & NETIF_REPORT_TYPE_IPV6) {
 906:lwIP/src/core/netif.c **** #if LWIP_IPV6_MLD
 907:lwIP/src/core/netif.c ****     /* send mld memberships */
 908:lwIP/src/core/netif.c ****     mld6_report_groups(netif);
 909:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6_MLD */
 910:lwIP/src/core/netif.c ****   }
 911:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
 912:lwIP/src/core/netif.c **** }
 913:lwIP/src/core/netif.c **** 
 914:lwIP/src/core/netif.c **** /**
 915:lwIP/src/core/netif.c ****  * @ingroup netif
 916:lwIP/src/core/netif.c ****  * Bring an interface down, disabling any traffic processing.
 917:lwIP/src/core/netif.c ****  */
 918:lwIP/src/core/netif.c **** void
 919:lwIP/src/core/netif.c **** netif_set_down(struct netif *netif)
 920:lwIP/src/core/netif.c **** {
 921:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 922:lwIP/src/core/netif.c **** 
 923:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_set_down: invalid netif", netif != NULL, return);
 924:lwIP/src/core/netif.c **** 
 925:lwIP/src/core/netif.c ****   if (netif->flags & NETIF_FLAG_UP) {
 926:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 927:lwIP/src/core/netif.c ****     {
 928:lwIP/src/core/netif.c ****       netif_ext_callback_args_t args;
 929:lwIP/src/core/netif.c ****       args.status_changed.state = 0;
 930:lwIP/src/core/netif.c ****       netif_invoke_ext_callback(netif, LWIP_NSC_STATUS_CHANGED, &args);
 931:lwIP/src/core/netif.c ****     }
 932:lwIP/src/core/netif.c **** #endif
 933:lwIP/src/core/netif.c **** 
 934:lwIP/src/core/netif.c ****     netif_clear_flags(netif, NETIF_FLAG_UP);
 935:lwIP/src/core/netif.c ****     MIB2_COPY_SYSUPTIME_TO(&netif->ts);
 936:lwIP/src/core/netif.c **** 
 937:lwIP/src/core/netif.c **** #if LWIP_IPV4 && LWIP_ARP
 938:lwIP/src/core/netif.c ****     if (netif->flags & NETIF_FLAG_ETHARP) {
 939:lwIP/src/core/netif.c ****       etharp_cleanup_netif(netif);
 940:lwIP/src/core/netif.c ****     }
 941:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 && LWIP_ARP */
ARM GAS  /tmp/ccP9Y5Wu.s 			page 18


 942:lwIP/src/core/netif.c **** 
 943:lwIP/src/core/netif.c **** #if LWIP_IPV6
 944:lwIP/src/core/netif.c ****     nd6_cleanup_netif(netif);
 945:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
 946:lwIP/src/core/netif.c **** 
 947:lwIP/src/core/netif.c ****     NETIF_STATUS_CALLBACK(netif);
 948:lwIP/src/core/netif.c ****   }
 949:lwIP/src/core/netif.c **** }
 950:lwIP/src/core/netif.c **** 
 951:lwIP/src/core/netif.c **** #if LWIP_NETIF_STATUS_CALLBACK
 952:lwIP/src/core/netif.c **** /**
 953:lwIP/src/core/netif.c ****  * @ingroup netif
 954:lwIP/src/core/netif.c ****  * Set callback to be called when interface is brought up/down or address is changed while up
 955:lwIP/src/core/netif.c ****  */
 956:lwIP/src/core/netif.c **** void
 957:lwIP/src/core/netif.c **** netif_set_status_callback(struct netif *netif, netif_status_callback_fn status_callback)
 958:lwIP/src/core/netif.c **** {
 959:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 960:lwIP/src/core/netif.c **** 
 961:lwIP/src/core/netif.c ****   if (netif) {
 962:lwIP/src/core/netif.c ****     netif->status_callback = status_callback;
 963:lwIP/src/core/netif.c ****   }
 964:lwIP/src/core/netif.c **** }
 965:lwIP/src/core/netif.c **** #endif /* LWIP_NETIF_STATUS_CALLBACK */
 966:lwIP/src/core/netif.c **** 
 967:lwIP/src/core/netif.c **** #if LWIP_NETIF_REMOVE_CALLBACK
 968:lwIP/src/core/netif.c **** /**
 969:lwIP/src/core/netif.c ****  * @ingroup netif
 970:lwIP/src/core/netif.c ****  * Set callback to be called when the interface has been removed
 971:lwIP/src/core/netif.c ****  */
 972:lwIP/src/core/netif.c **** void
 973:lwIP/src/core/netif.c **** netif_set_remove_callback(struct netif *netif, netif_status_callback_fn remove_callback)
 974:lwIP/src/core/netif.c **** {
 975:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 976:lwIP/src/core/netif.c **** 
 977:lwIP/src/core/netif.c ****   if (netif) {
 978:lwIP/src/core/netif.c ****     netif->remove_callback = remove_callback;
 979:lwIP/src/core/netif.c ****   }
 980:lwIP/src/core/netif.c **** }
 981:lwIP/src/core/netif.c **** #endif /* LWIP_NETIF_REMOVE_CALLBACK */
 982:lwIP/src/core/netif.c **** 
 983:lwIP/src/core/netif.c **** /**
 984:lwIP/src/core/netif.c ****  * @ingroup netif
 985:lwIP/src/core/netif.c ****  * Called by a driver when its link goes up
 986:lwIP/src/core/netif.c ****  */
 987:lwIP/src/core/netif.c **** void
 988:lwIP/src/core/netif.c **** netif_set_link_up(struct netif *netif)
 989:lwIP/src/core/netif.c **** {
 990:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 991:lwIP/src/core/netif.c **** 
 992:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_set_link_up: invalid netif", netif != NULL, return);
 993:lwIP/src/core/netif.c **** 
 994:lwIP/src/core/netif.c ****   if (!(netif->flags & NETIF_FLAG_LINK_UP)) {
 995:lwIP/src/core/netif.c ****     netif_set_flags(netif, NETIF_FLAG_LINK_UP);
 996:lwIP/src/core/netif.c **** 
 997:lwIP/src/core/netif.c **** #if LWIP_DHCP
 998:lwIP/src/core/netif.c ****     dhcp_network_changed(netif);
ARM GAS  /tmp/ccP9Y5Wu.s 			page 19


 999:lwIP/src/core/netif.c **** #endif /* LWIP_DHCP */
1000:lwIP/src/core/netif.c **** 
1001:lwIP/src/core/netif.c **** #if LWIP_AUTOIP
1002:lwIP/src/core/netif.c ****     autoip_network_changed(netif);
1003:lwIP/src/core/netif.c **** #endif /* LWIP_AUTOIP */
1004:lwIP/src/core/netif.c **** 
1005:lwIP/src/core/netif.c ****     netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV4 | NETIF_REPORT_TYPE_IPV6);
1006:lwIP/src/core/netif.c **** #if LWIP_IPV6
1007:lwIP/src/core/netif.c ****     nd6_restart_netif(netif);
1008:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
1009:lwIP/src/core/netif.c **** 
1010:lwIP/src/core/netif.c ****     NETIF_LINK_CALLBACK(netif);
1011:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
1012:lwIP/src/core/netif.c ****     {
1013:lwIP/src/core/netif.c ****       netif_ext_callback_args_t args;
1014:lwIP/src/core/netif.c ****       args.link_changed.state = 1;
1015:lwIP/src/core/netif.c ****       netif_invoke_ext_callback(netif, LWIP_NSC_LINK_CHANGED, &args);
1016:lwIP/src/core/netif.c ****     }
1017:lwIP/src/core/netif.c **** #endif
1018:lwIP/src/core/netif.c ****   }
1019:lwIP/src/core/netif.c **** }
1020:lwIP/src/core/netif.c **** 
1021:lwIP/src/core/netif.c **** /**
1022:lwIP/src/core/netif.c ****  * @ingroup netif
1023:lwIP/src/core/netif.c ****  * Called by a driver when its link goes down
1024:lwIP/src/core/netif.c ****  */
1025:lwIP/src/core/netif.c **** void
1026:lwIP/src/core/netif.c **** netif_set_link_down(struct netif *netif)
1027:lwIP/src/core/netif.c **** {
1028:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1029:lwIP/src/core/netif.c **** 
1030:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_set_link_down: invalid netif", netif != NULL, return);
1031:lwIP/src/core/netif.c **** 
1032:lwIP/src/core/netif.c ****   if (netif->flags & NETIF_FLAG_LINK_UP) {
1033:lwIP/src/core/netif.c ****     netif_clear_flags(netif, NETIF_FLAG_LINK_UP);
1034:lwIP/src/core/netif.c ****     NETIF_LINK_CALLBACK(netif);
1035:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
1036:lwIP/src/core/netif.c ****     {
1037:lwIP/src/core/netif.c ****       netif_ext_callback_args_t args;
1038:lwIP/src/core/netif.c ****       args.link_changed.state = 0;
1039:lwIP/src/core/netif.c ****       netif_invoke_ext_callback(netif, LWIP_NSC_LINK_CHANGED, &args);
1040:lwIP/src/core/netif.c ****     }
1041:lwIP/src/core/netif.c **** #endif
1042:lwIP/src/core/netif.c ****   }
1043:lwIP/src/core/netif.c **** }
1044:lwIP/src/core/netif.c **** 
1045:lwIP/src/core/netif.c **** #if LWIP_NETIF_LINK_CALLBACK
1046:lwIP/src/core/netif.c **** /**
1047:lwIP/src/core/netif.c ****  * @ingroup netif
1048:lwIP/src/core/netif.c ****  * Set callback to be called when link is brought up/down
1049:lwIP/src/core/netif.c ****  */
1050:lwIP/src/core/netif.c **** void
1051:lwIP/src/core/netif.c **** netif_set_link_callback(struct netif *netif, netif_status_callback_fn link_callback)
1052:lwIP/src/core/netif.c **** {
1053:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1054:lwIP/src/core/netif.c **** 
1055:lwIP/src/core/netif.c ****   if (netif) {
ARM GAS  /tmp/ccP9Y5Wu.s 			page 20


1056:lwIP/src/core/netif.c ****     netif->link_callback = link_callback;
1057:lwIP/src/core/netif.c ****   }
1058:lwIP/src/core/netif.c **** }
1059:lwIP/src/core/netif.c **** #endif /* LWIP_NETIF_LINK_CALLBACK */
1060:lwIP/src/core/netif.c **** 
1061:lwIP/src/core/netif.c **** #if ENABLE_LOOPBACK
1062:lwIP/src/core/netif.c **** /**
1063:lwIP/src/core/netif.c ****  * @ingroup netif
1064:lwIP/src/core/netif.c ****  * Send an IP packet to be received on the same netif (loopif-like).
1065:lwIP/src/core/netif.c ****  * The pbuf is simply copied and handed back to netif->input.
1066:lwIP/src/core/netif.c ****  * In multithreaded mode, this is done directly since netif->input must put
1067:lwIP/src/core/netif.c ****  * the packet on a queue.
1068:lwIP/src/core/netif.c ****  * In callback mode, the packet is put on an internal queue and is fed to
1069:lwIP/src/core/netif.c ****  * netif->input by netif_poll().
1070:lwIP/src/core/netif.c ****  *
1071:lwIP/src/core/netif.c ****  * @param netif the lwip network interface structure
1072:lwIP/src/core/netif.c ****  * @param p the (IP) packet to 'send'
1073:lwIP/src/core/netif.c ****  * @return ERR_OK if the packet has been sent
1074:lwIP/src/core/netif.c ****  *         ERR_MEM if the pbuf used to copy the packet couldn't be allocated
1075:lwIP/src/core/netif.c ****  */
1076:lwIP/src/core/netif.c **** err_t
1077:lwIP/src/core/netif.c **** netif_loop_output(struct netif *netif, struct pbuf *p)
1078:lwIP/src/core/netif.c **** {
1079:lwIP/src/core/netif.c ****   struct pbuf *r;
1080:lwIP/src/core/netif.c ****   err_t err;
1081:lwIP/src/core/netif.c ****   struct pbuf *last;
1082:lwIP/src/core/netif.c **** #if LWIP_LOOPBACK_MAX_PBUFS
1083:lwIP/src/core/netif.c ****   u16_t clen = 0;
1084:lwIP/src/core/netif.c **** #endif /* LWIP_LOOPBACK_MAX_PBUFS */
1085:lwIP/src/core/netif.c ****   /* If we have a loopif, SNMP counters are adjusted for it,
1086:lwIP/src/core/netif.c ****    * if not they are adjusted for 'netif'. */
1087:lwIP/src/core/netif.c **** #if MIB2_STATS
1088:lwIP/src/core/netif.c **** #if LWIP_HAVE_LOOPIF
1089:lwIP/src/core/netif.c ****   struct netif *stats_if = &loop_netif;
1090:lwIP/src/core/netif.c **** #else /* LWIP_HAVE_LOOPIF */
1091:lwIP/src/core/netif.c ****   struct netif *stats_if = netif;
1092:lwIP/src/core/netif.c **** #endif /* LWIP_HAVE_LOOPIF */
1093:lwIP/src/core/netif.c **** #endif /* MIB2_STATS */
1094:lwIP/src/core/netif.c **** #if LWIP_NETIF_LOOPBACK_MULTITHREADING
1095:lwIP/src/core/netif.c ****   u8_t schedule_poll = 0;
1096:lwIP/src/core/netif.c **** #endif /* LWIP_NETIF_LOOPBACK_MULTITHREADING */
1097:lwIP/src/core/netif.c ****   SYS_ARCH_DECL_PROTECT(lev);
1098:lwIP/src/core/netif.c **** 
1099:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_loop_output: invalid netif", netif != NULL);
1100:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_loop_output: invalid pbuf", p != NULL);
1101:lwIP/src/core/netif.c **** 
1102:lwIP/src/core/netif.c ****   /* Allocate a new pbuf */
1103:lwIP/src/core/netif.c ****   r = pbuf_alloc(PBUF_LINK, p->tot_len, PBUF_RAM);
1104:lwIP/src/core/netif.c ****   if (r == NULL) {
1105:lwIP/src/core/netif.c ****     LINK_STATS_INC(link.memerr);
1106:lwIP/src/core/netif.c ****     LINK_STATS_INC(link.drop);
1107:lwIP/src/core/netif.c ****     MIB2_STATS_NETIF_INC(stats_if, ifoutdiscards);
1108:lwIP/src/core/netif.c ****     return ERR_MEM;
1109:lwIP/src/core/netif.c ****   }
1110:lwIP/src/core/netif.c **** #if LWIP_LOOPBACK_MAX_PBUFS
1111:lwIP/src/core/netif.c ****   clen = pbuf_clen(r);
1112:lwIP/src/core/netif.c ****   /* check for overflow or too many pbuf on queue */
ARM GAS  /tmp/ccP9Y5Wu.s 			page 21


1113:lwIP/src/core/netif.c ****   if (((netif->loop_cnt_current + clen) < netif->loop_cnt_current) ||
1114:lwIP/src/core/netif.c ****       ((netif->loop_cnt_current + clen) > LWIP_MIN(LWIP_LOOPBACK_MAX_PBUFS, 0xFFFF))) {
1115:lwIP/src/core/netif.c ****     pbuf_free(r);
1116:lwIP/src/core/netif.c ****     LINK_STATS_INC(link.memerr);
1117:lwIP/src/core/netif.c ****     LINK_STATS_INC(link.drop);
1118:lwIP/src/core/netif.c ****     MIB2_STATS_NETIF_INC(stats_if, ifoutdiscards);
1119:lwIP/src/core/netif.c ****     return ERR_MEM;
1120:lwIP/src/core/netif.c ****   }
1121:lwIP/src/core/netif.c ****   netif->loop_cnt_current = (u16_t)(netif->loop_cnt_current + clen);
1122:lwIP/src/core/netif.c **** #endif /* LWIP_LOOPBACK_MAX_PBUFS */
1123:lwIP/src/core/netif.c **** 
1124:lwIP/src/core/netif.c ****   /* Copy the whole pbuf queue p into the single pbuf r */
1125:lwIP/src/core/netif.c ****   if ((err = pbuf_copy(r, p)) != ERR_OK) {
1126:lwIP/src/core/netif.c ****     pbuf_free(r);
1127:lwIP/src/core/netif.c ****     LINK_STATS_INC(link.memerr);
1128:lwIP/src/core/netif.c ****     LINK_STATS_INC(link.drop);
1129:lwIP/src/core/netif.c ****     MIB2_STATS_NETIF_INC(stats_if, ifoutdiscards);
1130:lwIP/src/core/netif.c ****     return err;
1131:lwIP/src/core/netif.c ****   }
1132:lwIP/src/core/netif.c **** 
1133:lwIP/src/core/netif.c ****   /* Put the packet on a linked list which gets emptied through calling
1134:lwIP/src/core/netif.c ****      netif_poll(). */
1135:lwIP/src/core/netif.c **** 
1136:lwIP/src/core/netif.c ****   /* let last point to the last pbuf in chain r */
1137:lwIP/src/core/netif.c ****   for (last = r; last->next != NULL; last = last->next) {
1138:lwIP/src/core/netif.c ****     /* nothing to do here, just get to the last pbuf */
1139:lwIP/src/core/netif.c ****   }
1140:lwIP/src/core/netif.c **** 
1141:lwIP/src/core/netif.c ****   SYS_ARCH_PROTECT(lev);
1142:lwIP/src/core/netif.c ****   if (netif->loop_first != NULL) {
1143:lwIP/src/core/netif.c ****     LWIP_ASSERT("if first != NULL, last must also be != NULL", netif->loop_last != NULL);
1144:lwIP/src/core/netif.c ****     netif->loop_last->next = r;
1145:lwIP/src/core/netif.c ****     netif->loop_last = last;
1146:lwIP/src/core/netif.c ****   } else {
1147:lwIP/src/core/netif.c ****     netif->loop_first = r;
1148:lwIP/src/core/netif.c ****     netif->loop_last = last;
1149:lwIP/src/core/netif.c **** #if LWIP_NETIF_LOOPBACK_MULTITHREADING
1150:lwIP/src/core/netif.c ****     /* No existing packets queued, schedule poll */
1151:lwIP/src/core/netif.c ****     schedule_poll = 1;
1152:lwIP/src/core/netif.c **** #endif /* LWIP_NETIF_LOOPBACK_MULTITHREADING */
1153:lwIP/src/core/netif.c ****   }
1154:lwIP/src/core/netif.c ****   SYS_ARCH_UNPROTECT(lev);
1155:lwIP/src/core/netif.c **** 
1156:lwIP/src/core/netif.c ****   LINK_STATS_INC(link.xmit);
1157:lwIP/src/core/netif.c ****   MIB2_STATS_NETIF_ADD(stats_if, ifoutoctets, p->tot_len);
1158:lwIP/src/core/netif.c ****   MIB2_STATS_NETIF_INC(stats_if, ifoutucastpkts);
1159:lwIP/src/core/netif.c **** 
1160:lwIP/src/core/netif.c **** #if LWIP_NETIF_LOOPBACK_MULTITHREADING
1161:lwIP/src/core/netif.c ****   /* For multithreading environment, schedule a call to netif_poll */
1162:lwIP/src/core/netif.c ****   if (schedule_poll) {
1163:lwIP/src/core/netif.c ****     tcpip_try_callback((tcpip_callback_fn)netif_poll, netif);
1164:lwIP/src/core/netif.c ****   }
1165:lwIP/src/core/netif.c **** #endif /* LWIP_NETIF_LOOPBACK_MULTITHREADING */
1166:lwIP/src/core/netif.c **** 
1167:lwIP/src/core/netif.c ****   return ERR_OK;
1168:lwIP/src/core/netif.c **** }
1169:lwIP/src/core/netif.c **** 
ARM GAS  /tmp/ccP9Y5Wu.s 			page 22


1170:lwIP/src/core/netif.c **** #if LWIP_HAVE_LOOPIF
1171:lwIP/src/core/netif.c **** #if LWIP_IPV4
1172:lwIP/src/core/netif.c **** static err_t
1173:lwIP/src/core/netif.c **** netif_loop_output_ipv4(struct netif *netif, struct pbuf *p, const ip4_addr_t *addr)
1174:lwIP/src/core/netif.c **** {
1175:lwIP/src/core/netif.c ****   LWIP_UNUSED_ARG(addr);
1176:lwIP/src/core/netif.c ****   return netif_loop_output(netif, p);
1177:lwIP/src/core/netif.c **** }
1178:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
1179:lwIP/src/core/netif.c **** 
1180:lwIP/src/core/netif.c **** #if LWIP_IPV6
1181:lwIP/src/core/netif.c **** static err_t
1182:lwIP/src/core/netif.c **** netif_loop_output_ipv6(struct netif *netif, struct pbuf *p, const ip6_addr_t *addr)
1183:lwIP/src/core/netif.c **** {
1184:lwIP/src/core/netif.c ****   LWIP_UNUSED_ARG(addr);
1185:lwIP/src/core/netif.c ****   return netif_loop_output(netif, p);
1186:lwIP/src/core/netif.c **** }
1187:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
1188:lwIP/src/core/netif.c **** #endif /* LWIP_HAVE_LOOPIF */
1189:lwIP/src/core/netif.c **** 
1190:lwIP/src/core/netif.c **** 
1191:lwIP/src/core/netif.c **** /**
1192:lwIP/src/core/netif.c ****  * Call netif_poll() in the main loop of your application. This is to prevent
1193:lwIP/src/core/netif.c ****  * reentering non-reentrant functions like tcp_input(). Packets passed to
1194:lwIP/src/core/netif.c ****  * netif_loop_output() are put on a list that is passed to netif->input() by
1195:lwIP/src/core/netif.c ****  * netif_poll().
1196:lwIP/src/core/netif.c ****  */
1197:lwIP/src/core/netif.c **** void
1198:lwIP/src/core/netif.c **** netif_poll(struct netif *netif)
1199:lwIP/src/core/netif.c **** {
1200:lwIP/src/core/netif.c ****   /* If we have a loopif, SNMP counters are adjusted for it,
1201:lwIP/src/core/netif.c ****    * if not they are adjusted for 'netif'. */
1202:lwIP/src/core/netif.c **** #if MIB2_STATS
1203:lwIP/src/core/netif.c **** #if LWIP_HAVE_LOOPIF
1204:lwIP/src/core/netif.c ****   struct netif *stats_if = &loop_netif;
1205:lwIP/src/core/netif.c **** #else /* LWIP_HAVE_LOOPIF */
1206:lwIP/src/core/netif.c ****   struct netif *stats_if = netif;
1207:lwIP/src/core/netif.c **** #endif /* LWIP_HAVE_LOOPIF */
1208:lwIP/src/core/netif.c **** #endif /* MIB2_STATS */
1209:lwIP/src/core/netif.c ****   SYS_ARCH_DECL_PROTECT(lev);
1210:lwIP/src/core/netif.c **** 
1211:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_poll: invalid netif", netif != NULL);
1212:lwIP/src/core/netif.c **** 
1213:lwIP/src/core/netif.c ****   /* Get a packet from the list. With SYS_LIGHTWEIGHT_PROT=1, this is protected */
1214:lwIP/src/core/netif.c ****   SYS_ARCH_PROTECT(lev);
1215:lwIP/src/core/netif.c ****   while (netif->loop_first != NULL) {
1216:lwIP/src/core/netif.c ****     struct pbuf *in, *in_end;
1217:lwIP/src/core/netif.c **** #if LWIP_LOOPBACK_MAX_PBUFS
1218:lwIP/src/core/netif.c ****     u8_t clen = 1;
1219:lwIP/src/core/netif.c **** #endif /* LWIP_LOOPBACK_MAX_PBUFS */
1220:lwIP/src/core/netif.c **** 
1221:lwIP/src/core/netif.c ****     in = in_end = netif->loop_first;
1222:lwIP/src/core/netif.c ****     while (in_end->len != in_end->tot_len) {
1223:lwIP/src/core/netif.c ****       LWIP_ASSERT("bogus pbuf: len != tot_len but next == NULL!", in_end->next != NULL);
1224:lwIP/src/core/netif.c ****       in_end = in_end->next;
1225:lwIP/src/core/netif.c **** #if LWIP_LOOPBACK_MAX_PBUFS
1226:lwIP/src/core/netif.c ****       clen++;
ARM GAS  /tmp/ccP9Y5Wu.s 			page 23


1227:lwIP/src/core/netif.c **** #endif /* LWIP_LOOPBACK_MAX_PBUFS */
1228:lwIP/src/core/netif.c ****     }
1229:lwIP/src/core/netif.c **** #if LWIP_LOOPBACK_MAX_PBUFS
1230:lwIP/src/core/netif.c ****     /* adjust the number of pbufs on queue */
1231:lwIP/src/core/netif.c ****     LWIP_ASSERT("netif->loop_cnt_current underflow",
1232:lwIP/src/core/netif.c ****                 ((netif->loop_cnt_current - clen) < netif->loop_cnt_current));
1233:lwIP/src/core/netif.c ****     netif->loop_cnt_current = (u16_t)(netif->loop_cnt_current - clen);
1234:lwIP/src/core/netif.c **** #endif /* LWIP_LOOPBACK_MAX_PBUFS */
1235:lwIP/src/core/netif.c **** 
1236:lwIP/src/core/netif.c ****     /* 'in_end' now points to the last pbuf from 'in' */
1237:lwIP/src/core/netif.c ****     if (in_end == netif->loop_last) {
1238:lwIP/src/core/netif.c ****       /* this was the last pbuf in the list */
1239:lwIP/src/core/netif.c ****       netif->loop_first = netif->loop_last = NULL;
1240:lwIP/src/core/netif.c ****     } else {
1241:lwIP/src/core/netif.c ****       /* pop the pbuf off the list */
1242:lwIP/src/core/netif.c ****       netif->loop_first = in_end->next;
1243:lwIP/src/core/netif.c ****       LWIP_ASSERT("should not be null since first != last!", netif->loop_first != NULL);
1244:lwIP/src/core/netif.c ****     }
1245:lwIP/src/core/netif.c ****     /* De-queue the pbuf from its successors on the 'loop_' list. */
1246:lwIP/src/core/netif.c ****     in_end->next = NULL;
1247:lwIP/src/core/netif.c ****     SYS_ARCH_UNPROTECT(lev);
1248:lwIP/src/core/netif.c **** 
1249:lwIP/src/core/netif.c ****     in->if_idx = netif_get_index(netif);
1250:lwIP/src/core/netif.c **** 
1251:lwIP/src/core/netif.c ****     LINK_STATS_INC(link.recv);
1252:lwIP/src/core/netif.c ****     MIB2_STATS_NETIF_ADD(stats_if, ifinoctets, in->tot_len);
1253:lwIP/src/core/netif.c ****     MIB2_STATS_NETIF_INC(stats_if, ifinucastpkts);
1254:lwIP/src/core/netif.c ****     /* loopback packets are always IP packets! */
1255:lwIP/src/core/netif.c ****     if (ip_input(in, netif) != ERR_OK) {
1256:lwIP/src/core/netif.c ****       pbuf_free(in);
1257:lwIP/src/core/netif.c ****     }
1258:lwIP/src/core/netif.c ****     SYS_ARCH_PROTECT(lev);
1259:lwIP/src/core/netif.c ****   }
1260:lwIP/src/core/netif.c ****   SYS_ARCH_UNPROTECT(lev);
1261:lwIP/src/core/netif.c **** }
1262:lwIP/src/core/netif.c **** 
1263:lwIP/src/core/netif.c **** #if !LWIP_NETIF_LOOPBACK_MULTITHREADING
1264:lwIP/src/core/netif.c **** /**
1265:lwIP/src/core/netif.c ****  * Calls netif_poll() for every netif on the netif_list.
1266:lwIP/src/core/netif.c ****  */
1267:lwIP/src/core/netif.c **** void
1268:lwIP/src/core/netif.c **** netif_poll_all(void)
1269:lwIP/src/core/netif.c **** {
1270:lwIP/src/core/netif.c ****   struct netif *netif;
1271:lwIP/src/core/netif.c ****   /* loop through netifs */
1272:lwIP/src/core/netif.c ****   NETIF_FOREACH(netif) {
1273:lwIP/src/core/netif.c ****     netif_poll(netif);
1274:lwIP/src/core/netif.c ****   }
1275:lwIP/src/core/netif.c **** }
1276:lwIP/src/core/netif.c **** #endif /* !LWIP_NETIF_LOOPBACK_MULTITHREADING */
1277:lwIP/src/core/netif.c **** #endif /* ENABLE_LOOPBACK */
1278:lwIP/src/core/netif.c **** 
1279:lwIP/src/core/netif.c **** #if LWIP_NUM_NETIF_CLIENT_DATA > 0
1280:lwIP/src/core/netif.c **** /**
1281:lwIP/src/core/netif.c ****  * @ingroup netif_cd
1282:lwIP/src/core/netif.c ****  * Allocate an index to store data in client_data member of struct netif.
1283:lwIP/src/core/netif.c ****  * Returned value is an index in mentioned array.
ARM GAS  /tmp/ccP9Y5Wu.s 			page 24


1284:lwIP/src/core/netif.c ****  * @see LWIP_NUM_NETIF_CLIENT_DATA
1285:lwIP/src/core/netif.c ****  */
1286:lwIP/src/core/netif.c **** u8_t
1287:lwIP/src/core/netif.c **** netif_alloc_client_data_id(void)
1288:lwIP/src/core/netif.c **** {
1289:lwIP/src/core/netif.c ****   u8_t result = netif_client_id;
1290:lwIP/src/core/netif.c ****   netif_client_id++;
1291:lwIP/src/core/netif.c **** 
1292:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1293:lwIP/src/core/netif.c **** 
1294:lwIP/src/core/netif.c **** #if LWIP_NUM_NETIF_CLIENT_DATA > 256
1295:lwIP/src/core/netif.c **** #error LWIP_NUM_NETIF_CLIENT_DATA must be <= 256
1296:lwIP/src/core/netif.c **** #endif
1297:lwIP/src/core/netif.c ****   LWIP_ASSERT("Increase LWIP_NUM_NETIF_CLIENT_DATA in lwipopts.h", result < LWIP_NUM_NETIF_CLIENT_D
1298:lwIP/src/core/netif.c ****   return (u8_t)(result + LWIP_NETIF_CLIENT_DATA_INDEX_MAX);
1299:lwIP/src/core/netif.c **** }
1300:lwIP/src/core/netif.c **** #endif
1301:lwIP/src/core/netif.c **** 
1302:lwIP/src/core/netif.c **** #if LWIP_IPV6
1303:lwIP/src/core/netif.c **** /**
1304:lwIP/src/core/netif.c ****  * @ingroup netif_ip6
1305:lwIP/src/core/netif.c ****  * Change an IPv6 address of a network interface
1306:lwIP/src/core/netif.c ****  *
1307:lwIP/src/core/netif.c ****  * @param netif the network interface to change
1308:lwIP/src/core/netif.c ****  * @param addr_idx index of the IPv6 address
1309:lwIP/src/core/netif.c ****  * @param addr6 the new IPv6 address
1310:lwIP/src/core/netif.c ****  *
1311:lwIP/src/core/netif.c ****  * @note call netif_ip6_addr_set_state() to set the address valid/temptative
1312:lwIP/src/core/netif.c ****  */
1313:lwIP/src/core/netif.c **** void
1314:lwIP/src/core/netif.c **** netif_ip6_addr_set(struct netif *netif, s8_t addr_idx, const ip6_addr_t *addr6)
1315:lwIP/src/core/netif.c **** {
1316:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1317:lwIP/src/core/netif.c **** 
1318:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_ip6_addr_set: invalid netif", netif != NULL);
1319:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_ip6_addr_set: invalid addr6", addr6 != NULL);
1320:lwIP/src/core/netif.c **** 
1321:lwIP/src/core/netif.c ****   netif_ip6_addr_set_parts(netif, addr_idx, addr6->addr[0], addr6->addr[1],
1322:lwIP/src/core/netif.c ****                            addr6->addr[2], addr6->addr[3]);
1323:lwIP/src/core/netif.c **** }
1324:lwIP/src/core/netif.c **** 
1325:lwIP/src/core/netif.c **** /*
1326:lwIP/src/core/netif.c ****  * Change an IPv6 address of a network interface (internal version taking 4 * u32_t)
1327:lwIP/src/core/netif.c ****  *
1328:lwIP/src/core/netif.c ****  * @param netif the network interface to change
1329:lwIP/src/core/netif.c ****  * @param addr_idx index of the IPv6 address
1330:lwIP/src/core/netif.c ****  * @param i0 word0 of the new IPv6 address
1331:lwIP/src/core/netif.c ****  * @param i1 word1 of the new IPv6 address
1332:lwIP/src/core/netif.c ****  * @param i2 word2 of the new IPv6 address
1333:lwIP/src/core/netif.c ****  * @param i3 word3 of the new IPv6 address
1334:lwIP/src/core/netif.c ****  */
1335:lwIP/src/core/netif.c **** void
1336:lwIP/src/core/netif.c **** netif_ip6_addr_set_parts(struct netif *netif, s8_t addr_idx, u32_t i0, u32_t i1, u32_t i2, u32_t i3
1337:lwIP/src/core/netif.c **** {
1338:lwIP/src/core/netif.c ****   ip_addr_t old_addr;
1339:lwIP/src/core/netif.c ****   ip_addr_t new_ipaddr;
1340:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
ARM GAS  /tmp/ccP9Y5Wu.s 			page 25


1341:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif != NULL", netif != NULL);
1342:lwIP/src/core/netif.c ****   LWIP_ASSERT("invalid index", addr_idx < LWIP_IPV6_NUM_ADDRESSES);
1343:lwIP/src/core/netif.c **** 
1344:lwIP/src/core/netif.c ****   ip6_addr_copy(*ip_2_ip6(&old_addr), *netif_ip6_addr(netif, addr_idx));
1345:lwIP/src/core/netif.c ****   IP_SET_TYPE_VAL(old_addr, IPADDR_TYPE_V6);
1346:lwIP/src/core/netif.c **** 
1347:lwIP/src/core/netif.c ****   /* address is actually being changed? */
1348:lwIP/src/core/netif.c ****   if ((ip_2_ip6(&old_addr)->addr[0] != i0) || (ip_2_ip6(&old_addr)->addr[1] != i1) ||
1349:lwIP/src/core/netif.c ****       (ip_2_ip6(&old_addr)->addr[2] != i2) || (ip_2_ip6(&old_addr)->addr[3] != i3)) {
1350:lwIP/src/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_STATE, ("netif_ip6_addr_set: netif address being changed\n")
1351:lwIP/src/core/netif.c **** 
1352:lwIP/src/core/netif.c ****     IP_ADDR6(&new_ipaddr, i0, i1, i2, i3);
1353:lwIP/src/core/netif.c ****     ip6_addr_assign_zone(ip_2_ip6(&new_ipaddr), IP6_UNICAST, netif);
1354:lwIP/src/core/netif.c **** 
1355:lwIP/src/core/netif.c ****     if (ip6_addr_isvalid(netif_ip6_addr_state(netif, addr_idx))) {
1356:lwIP/src/core/netif.c ****       netif_do_ip_addr_changed(netif_ip_addr6(netif, addr_idx), &new_ipaddr);
1357:lwIP/src/core/netif.c ****     }
1358:lwIP/src/core/netif.c ****     /* @todo: remove/readd mib2 ip6 entries? */
1359:lwIP/src/core/netif.c **** 
1360:lwIP/src/core/netif.c ****     ip_addr_copy(netif->ip6_addr[addr_idx], new_ipaddr);
1361:lwIP/src/core/netif.c **** 
1362:lwIP/src/core/netif.c ****     if (ip6_addr_isvalid(netif_ip6_addr_state(netif, addr_idx))) {
1363:lwIP/src/core/netif.c ****       netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV6);
1364:lwIP/src/core/netif.c ****       NETIF_STATUS_CALLBACK(netif);
1365:lwIP/src/core/netif.c ****     }
1366:lwIP/src/core/netif.c **** 
1367:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
1368:lwIP/src/core/netif.c ****     {
1369:lwIP/src/core/netif.c ****       netif_ext_callback_args_t args;
1370:lwIP/src/core/netif.c ****       args.ipv6_set.addr_index  = addr_idx;
1371:lwIP/src/core/netif.c ****       args.ipv6_set.old_address = &old_addr;
1372:lwIP/src/core/netif.c ****       netif_invoke_ext_callback(netif, LWIP_NSC_IPV6_SET, &args);
1373:lwIP/src/core/netif.c ****     }
1374:lwIP/src/core/netif.c **** #endif
1375:lwIP/src/core/netif.c ****   }
1376:lwIP/src/core/netif.c **** 
1377:lwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: IPv6 address %d of interface 
1378:lwIP/src/core/netif.c ****               addr_idx, netif->name[0], netif->name[1], ip6addr_ntoa(netif_ip6_addr(netif, addr_idx
1379:lwIP/src/core/netif.c ****               netif_ip6_addr_state(netif, addr_idx)));
1380:lwIP/src/core/netif.c **** }
1381:lwIP/src/core/netif.c **** 
1382:lwIP/src/core/netif.c **** /**
1383:lwIP/src/core/netif.c ****  * @ingroup netif_ip6
1384:lwIP/src/core/netif.c ****  * Change the state of an IPv6 address of a network interface
1385:lwIP/src/core/netif.c ****  * (INVALID, TEMPTATIVE, PREFERRED, DEPRECATED, where TEMPTATIVE
1386:lwIP/src/core/netif.c ****  * includes the number of checks done, see ip6_addr.h)
1387:lwIP/src/core/netif.c ****  *
1388:lwIP/src/core/netif.c ****  * @param netif the network interface to change
1389:lwIP/src/core/netif.c ****  * @param addr_idx index of the IPv6 address
1390:lwIP/src/core/netif.c ****  * @param state the new IPv6 address state
1391:lwIP/src/core/netif.c ****  */
1392:lwIP/src/core/netif.c **** void
1393:lwIP/src/core/netif.c **** netif_ip6_addr_set_state(struct netif *netif, s8_t addr_idx, u8_t state)
1394:lwIP/src/core/netif.c **** {
1395:lwIP/src/core/netif.c ****   u8_t old_state;
1396:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1397:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif != NULL", netif != NULL);
ARM GAS  /tmp/ccP9Y5Wu.s 			page 26


1398:lwIP/src/core/netif.c ****   LWIP_ASSERT("invalid index", addr_idx < LWIP_IPV6_NUM_ADDRESSES);
1399:lwIP/src/core/netif.c **** 
1400:lwIP/src/core/netif.c ****   old_state = netif_ip6_addr_state(netif, addr_idx);
1401:lwIP/src/core/netif.c ****   /* state is actually being changed? */
1402:lwIP/src/core/netif.c ****   if (old_state != state) {
1403:lwIP/src/core/netif.c ****     u8_t old_valid = old_state & IP6_ADDR_VALID;
1404:lwIP/src/core/netif.c ****     u8_t new_valid = state & IP6_ADDR_VALID;
1405:lwIP/src/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_STATE, ("netif_ip6_addr_set_state: netif address state being
1406:lwIP/src/core/netif.c **** 
1407:lwIP/src/core/netif.c **** #if LWIP_IPV6_MLD
1408:lwIP/src/core/netif.c ****     /* Reevaluate solicited-node multicast group membership. */
1409:lwIP/src/core/netif.c ****     if (netif->flags & NETIF_FLAG_MLD6) {
1410:lwIP/src/core/netif.c ****       nd6_adjust_mld_membership(netif, addr_idx, state);
1411:lwIP/src/core/netif.c ****     }
1412:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6_MLD */
1413:lwIP/src/core/netif.c **** 
1414:lwIP/src/core/netif.c ****     if (old_valid && !new_valid) {
1415:lwIP/src/core/netif.c ****       /* address about to be removed by setting invalid */
1416:lwIP/src/core/netif.c ****       netif_do_ip_addr_changed(netif_ip_addr6(netif, addr_idx), NULL);
1417:lwIP/src/core/netif.c ****       /* @todo: remove mib2 ip6 entries? */
1418:lwIP/src/core/netif.c ****     }
1419:lwIP/src/core/netif.c ****     netif->ip6_addr_state[addr_idx] = state;
1420:lwIP/src/core/netif.c **** 
1421:lwIP/src/core/netif.c ****     if (!old_valid && new_valid) {
1422:lwIP/src/core/netif.c ****       /* address added by setting valid */
1423:lwIP/src/core/netif.c ****       /* This is a good moment to check that the address is properly zoned. */
1424:lwIP/src/core/netif.c ****       IP6_ADDR_ZONECHECK_NETIF(netif_ip6_addr(netif, addr_idx), netif);
1425:lwIP/src/core/netif.c ****       /* @todo: add mib2 ip6 entries? */
1426:lwIP/src/core/netif.c ****       netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV6);
1427:lwIP/src/core/netif.c ****     }
1428:lwIP/src/core/netif.c ****     if ((old_state & ~IP6_ADDR_TENTATIVE_COUNT_MASK) !=
1429:lwIP/src/core/netif.c ****         (state     & ~IP6_ADDR_TENTATIVE_COUNT_MASK)) {
1430:lwIP/src/core/netif.c ****       /* address state has changed -> call the callback function */
1431:lwIP/src/core/netif.c ****       NETIF_STATUS_CALLBACK(netif);
1432:lwIP/src/core/netif.c ****     }
1433:lwIP/src/core/netif.c **** 
1434:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
1435:lwIP/src/core/netif.c ****     {
1436:lwIP/src/core/netif.c ****       netif_ext_callback_args_t args;
1437:lwIP/src/core/netif.c ****       args.ipv6_addr_state_changed.addr_index = addr_idx;
1438:lwIP/src/core/netif.c ****       args.ipv6_addr_state_changed.old_state  = old_state;
1439:lwIP/src/core/netif.c ****       args.ipv6_addr_state_changed.address    = netif_ip_addr6(netif, addr_idx);
1440:lwIP/src/core/netif.c ****       netif_invoke_ext_callback(netif, LWIP_NSC_IPV6_ADDR_STATE_CHANGED, &args);
1441:lwIP/src/core/netif.c ****     }
1442:lwIP/src/core/netif.c **** #endif
1443:lwIP/src/core/netif.c ****   }
1444:lwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: IPv6 address %d of interface 
1445:lwIP/src/core/netif.c ****               addr_idx, netif->name[0], netif->name[1], ip6addr_ntoa(netif_ip6_addr(netif, addr_idx
1446:lwIP/src/core/netif.c ****               netif_ip6_addr_state(netif, addr_idx)));
1447:lwIP/src/core/netif.c **** }
1448:lwIP/src/core/netif.c **** 
1449:lwIP/src/core/netif.c **** /**
1450:lwIP/src/core/netif.c ****  * Checks if a specific local address is present on the netif and returns its
1451:lwIP/src/core/netif.c ****  * index. Depending on its state, it may or may not be assigned to the
1452:lwIP/src/core/netif.c ****  * interface (as per RFC terminology).
1453:lwIP/src/core/netif.c ****  *
1454:lwIP/src/core/netif.c ****  * The given address may or may not be zoned (i.e., have a zone index other
ARM GAS  /tmp/ccP9Y5Wu.s 			page 27


1455:lwIP/src/core/netif.c ****  * than IP6_NO_ZONE). If the address is zoned, it must have the correct zone
1456:lwIP/src/core/netif.c ****  * for the given netif, or no match will be found.
1457:lwIP/src/core/netif.c ****  *
1458:lwIP/src/core/netif.c ****  * @param netif the netif to check
1459:lwIP/src/core/netif.c ****  * @param ip6addr the IPv6 address to find
1460:lwIP/src/core/netif.c ****  * @return >= 0: address found, this is its index
1461:lwIP/src/core/netif.c ****  *         -1: address not found on this netif
1462:lwIP/src/core/netif.c ****  */
1463:lwIP/src/core/netif.c **** s8_t
1464:lwIP/src/core/netif.c **** netif_get_ip6_addr_match(struct netif *netif, const ip6_addr_t *ip6addr)
1465:lwIP/src/core/netif.c **** {
1466:lwIP/src/core/netif.c ****   s8_t i;
1467:lwIP/src/core/netif.c **** 
1468:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1469:lwIP/src/core/netif.c **** 
1470:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_get_ip6_addr_match: invalid netif", netif != NULL);
1471:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_get_ip6_addr_match: invalid ip6addr", ip6addr != NULL);
1472:lwIP/src/core/netif.c **** 
1473:lwIP/src/core/netif.c **** #if LWIP_IPV6_SCOPES
1474:lwIP/src/core/netif.c ****   if (ip6_addr_has_zone(ip6addr) && !ip6_addr_test_zone(ip6addr, netif)) {
1475:lwIP/src/core/netif.c ****     return -1; /* wrong zone, no match */
1476:lwIP/src/core/netif.c ****   }
1477:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6_SCOPES */
1478:lwIP/src/core/netif.c **** 
1479:lwIP/src/core/netif.c ****   for (i = 0; i < LWIP_IPV6_NUM_ADDRESSES; i++) {
1480:lwIP/src/core/netif.c ****     if (!ip6_addr_isinvalid(netif_ip6_addr_state(netif, i)) &&
1481:lwIP/src/core/netif.c ****         ip6_addr_cmp_zoneless(netif_ip6_addr(netif, i), ip6addr)) {
1482:lwIP/src/core/netif.c ****       return i;
1483:lwIP/src/core/netif.c ****     }
1484:lwIP/src/core/netif.c ****   }
1485:lwIP/src/core/netif.c ****   return -1;
1486:lwIP/src/core/netif.c **** }
1487:lwIP/src/core/netif.c **** 
1488:lwIP/src/core/netif.c **** /**
1489:lwIP/src/core/netif.c ****  * @ingroup netif_ip6
1490:lwIP/src/core/netif.c ****  * Create a link-local IPv6 address on a netif (stored in slot 0)
1491:lwIP/src/core/netif.c ****  *
1492:lwIP/src/core/netif.c ****  * @param netif the netif to create the address on
1493:lwIP/src/core/netif.c ****  * @param from_mac_48bit if != 0, assume hwadr is a 48-bit MAC address (std conversion)
1494:lwIP/src/core/netif.c ****  *                       if == 0, use hwaddr directly as interface ID
1495:lwIP/src/core/netif.c ****  */
1496:lwIP/src/core/netif.c **** void
1497:lwIP/src/core/netif.c **** netif_create_ip6_linklocal_address(struct netif *netif, u8_t from_mac_48bit)
1498:lwIP/src/core/netif.c **** {
1499:lwIP/src/core/netif.c ****   u8_t i, addr_index;
1500:lwIP/src/core/netif.c **** 
1501:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1502:lwIP/src/core/netif.c **** 
1503:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_create_ip6_linklocal_address: invalid netif", netif != NULL);
1504:lwIP/src/core/netif.c **** 
1505:lwIP/src/core/netif.c ****   /* Link-local prefix. */
1506:lwIP/src/core/netif.c ****   ip_2_ip6(&netif->ip6_addr[0])->addr[0] = PP_HTONL(0xfe800000ul);
1507:lwIP/src/core/netif.c ****   ip_2_ip6(&netif->ip6_addr[0])->addr[1] = 0;
1508:lwIP/src/core/netif.c **** 
1509:lwIP/src/core/netif.c ****   /* Generate interface ID. */
1510:lwIP/src/core/netif.c ****   if (from_mac_48bit) {
1511:lwIP/src/core/netif.c ****     /* Assume hwaddr is a 48-bit IEEE 802 MAC. Convert to EUI-64 address. Complement Group bit. */
ARM GAS  /tmp/ccP9Y5Wu.s 			page 28


1512:lwIP/src/core/netif.c ****     ip_2_ip6(&netif->ip6_addr[0])->addr[2] = lwip_htonl((((u32_t)(netif->hwaddr[0] ^ 0x02)) << 24) 
1513:lwIP/src/core/netif.c ****         ((u32_t)(netif->hwaddr[1]) << 16) |
1514:lwIP/src/core/netif.c ****         ((u32_t)(netif->hwaddr[2]) << 8) |
1515:lwIP/src/core/netif.c ****         (0xff));
1516:lwIP/src/core/netif.c ****     ip_2_ip6(&netif->ip6_addr[0])->addr[3] = lwip_htonl((u32_t)(0xfeul << 24) |
1517:lwIP/src/core/netif.c ****         ((u32_t)(netif->hwaddr[3]) << 16) |
1518:lwIP/src/core/netif.c ****         ((u32_t)(netif->hwaddr[4]) << 8) |
1519:lwIP/src/core/netif.c ****         (netif->hwaddr[5]));
1520:lwIP/src/core/netif.c ****   } else {
1521:lwIP/src/core/netif.c ****     /* Use hwaddr directly as interface ID. */
1522:lwIP/src/core/netif.c ****     ip_2_ip6(&netif->ip6_addr[0])->addr[2] = 0;
1523:lwIP/src/core/netif.c ****     ip_2_ip6(&netif->ip6_addr[0])->addr[3] = 0;
1524:lwIP/src/core/netif.c **** 
1525:lwIP/src/core/netif.c ****     addr_index = 3;
1526:lwIP/src/core/netif.c ****     for (i = 0; (i < 8) && (i < netif->hwaddr_len); i++) {
1527:lwIP/src/core/netif.c ****       if (i == 4) {
1528:lwIP/src/core/netif.c ****         addr_index--;
1529:lwIP/src/core/netif.c ****       }
1530:lwIP/src/core/netif.c ****       ip_2_ip6(&netif->ip6_addr[0])->addr[addr_index] |= lwip_htonl(((u32_t)(netif->hwaddr[netif->h
1531:lwIP/src/core/netif.c ****     }
1532:lwIP/src/core/netif.c ****   }
1533:lwIP/src/core/netif.c **** 
1534:lwIP/src/core/netif.c ****   /* Set a link-local zone. Even though the zone is implied by the owning
1535:lwIP/src/core/netif.c ****    * netif, setting the zone anyway has two important conceptual advantages:
1536:lwIP/src/core/netif.c ****    * 1) it avoids the need for a ton of exceptions in internal code, allowing
1537:lwIP/src/core/netif.c ****    *    e.g. ip6_addr_cmp() to be used on local addresses;
1538:lwIP/src/core/netif.c ****    * 2) the properly zoned address is visible externally, e.g. when any outside
1539:lwIP/src/core/netif.c ****    *    code enumerates available addresses or uses one to bind a socket.
1540:lwIP/src/core/netif.c ****    * Any external code unaware of address scoping is likely to just ignore the
1541:lwIP/src/core/netif.c ****    * zone field, so this should not create any compatibility problems. */
1542:lwIP/src/core/netif.c ****   ip6_addr_assign_zone(ip_2_ip6(&netif->ip6_addr[0]), IP6_UNICAST, netif);
1543:lwIP/src/core/netif.c **** 
1544:lwIP/src/core/netif.c ****   /* Set address state. */
1545:lwIP/src/core/netif.c **** #if LWIP_IPV6_DUP_DETECT_ATTEMPTS
1546:lwIP/src/core/netif.c ****   /* Will perform duplicate address detection (DAD). */
1547:lwIP/src/core/netif.c ****   netif_ip6_addr_set_state(netif, 0, IP6_ADDR_TENTATIVE);
1548:lwIP/src/core/netif.c **** #else
1549:lwIP/src/core/netif.c ****   /* Consider address valid. */
1550:lwIP/src/core/netif.c ****   netif_ip6_addr_set_state(netif, 0, IP6_ADDR_PREFERRED);
1551:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6_AUTOCONFIG */
1552:lwIP/src/core/netif.c **** }
1553:lwIP/src/core/netif.c **** 
1554:lwIP/src/core/netif.c **** /**
1555:lwIP/src/core/netif.c ****  * @ingroup netif_ip6
1556:lwIP/src/core/netif.c ****  * This function allows for the easy addition of a new IPv6 address to an interface.
1557:lwIP/src/core/netif.c ****  * It takes care of finding an empty slot and then sets the address tentative
1558:lwIP/src/core/netif.c ****  * (to make sure that all the subsequent processing happens).
1559:lwIP/src/core/netif.c ****  *
1560:lwIP/src/core/netif.c ****  * @param netif netif to add the address on
1561:lwIP/src/core/netif.c ****  * @param ip6addr address to add
1562:lwIP/src/core/netif.c ****  * @param chosen_idx if != NULL, the chosen IPv6 address index will be stored here
1563:lwIP/src/core/netif.c ****  */
1564:lwIP/src/core/netif.c **** err_t
1565:lwIP/src/core/netif.c **** netif_add_ip6_address(struct netif *netif, const ip6_addr_t *ip6addr, s8_t *chosen_idx)
1566:lwIP/src/core/netif.c **** {
1567:lwIP/src/core/netif.c ****   s8_t i;
1568:lwIP/src/core/netif.c **** 
ARM GAS  /tmp/ccP9Y5Wu.s 			page 29


1569:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1570:lwIP/src/core/netif.c **** 
1571:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_add_ip6_address: invalid netif", netif != NULL);
1572:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_add_ip6_address: invalid ip6addr", ip6addr != NULL);
1573:lwIP/src/core/netif.c **** 
1574:lwIP/src/core/netif.c ****   i = netif_get_ip6_addr_match(netif, ip6addr);
1575:lwIP/src/core/netif.c ****   if (i >= 0) {
1576:lwIP/src/core/netif.c ****     /* Address already added */
1577:lwIP/src/core/netif.c ****     if (chosen_idx != NULL) {
1578:lwIP/src/core/netif.c ****       *chosen_idx = i;
1579:lwIP/src/core/netif.c ****     }
1580:lwIP/src/core/netif.c ****     return ERR_OK;
1581:lwIP/src/core/netif.c ****   }
1582:lwIP/src/core/netif.c **** 
1583:lwIP/src/core/netif.c ****   /* Find a free slot. The first one is reserved for link-local addresses. */
1584:lwIP/src/core/netif.c ****   for (i = ip6_addr_islinklocal(ip6addr) ? 0 : 1; i < LWIP_IPV6_NUM_ADDRESSES; i++) {
1585:lwIP/src/core/netif.c ****     if (ip6_addr_isinvalid(netif_ip6_addr_state(netif, i))) {
1586:lwIP/src/core/netif.c ****       ip_addr_copy_from_ip6(netif->ip6_addr[i], *ip6addr);
1587:lwIP/src/core/netif.c ****       ip6_addr_assign_zone(ip_2_ip6(&netif->ip6_addr[i]), IP6_UNICAST, netif);
1588:lwIP/src/core/netif.c ****       netif_ip6_addr_set_state(netif, i, IP6_ADDR_TENTATIVE);
1589:lwIP/src/core/netif.c ****       if (chosen_idx != NULL) {
1590:lwIP/src/core/netif.c ****         *chosen_idx = i;
1591:lwIP/src/core/netif.c ****       }
1592:lwIP/src/core/netif.c ****       return ERR_OK;
1593:lwIP/src/core/netif.c ****     }
1594:lwIP/src/core/netif.c ****   }
1595:lwIP/src/core/netif.c **** 
1596:lwIP/src/core/netif.c ****   if (chosen_idx != NULL) {
1597:lwIP/src/core/netif.c ****     *chosen_idx = -1;
1598:lwIP/src/core/netif.c ****   }
1599:lwIP/src/core/netif.c ****   return ERR_VAL;
1600:lwIP/src/core/netif.c **** }
1601:lwIP/src/core/netif.c **** 
1602:lwIP/src/core/netif.c **** /** Dummy IPv6 output function for netifs not supporting IPv6
1603:lwIP/src/core/netif.c ****  */
1604:lwIP/src/core/netif.c **** static err_t
1605:lwIP/src/core/netif.c **** netif_null_output_ip6(struct netif *netif, struct pbuf *p, const ip6_addr_t *ipaddr)
1606:lwIP/src/core/netif.c **** {
1607:lwIP/src/core/netif.c ****   LWIP_UNUSED_ARG(netif);
1608:lwIP/src/core/netif.c ****   LWIP_UNUSED_ARG(p);
1609:lwIP/src/core/netif.c ****   LWIP_UNUSED_ARG(ipaddr);
1610:lwIP/src/core/netif.c **** 
1611:lwIP/src/core/netif.c ****   return ERR_IF;
1612:lwIP/src/core/netif.c **** }
1613:lwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
1614:lwIP/src/core/netif.c **** 
1615:lwIP/src/core/netif.c **** #if LWIP_IPV4
1616:lwIP/src/core/netif.c **** /** Dummy IPv4 output function for netifs not supporting IPv4
1617:lwIP/src/core/netif.c ****  */
1618:lwIP/src/core/netif.c **** static err_t
1619:lwIP/src/core/netif.c **** netif_null_output_ip4(struct netif *netif, struct pbuf *p, const ip4_addr_t *ipaddr)
1620:lwIP/src/core/netif.c **** {
  30              		.loc 1 1620 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
ARM GAS  /tmp/ccP9Y5Wu.s 			page 30


1621:lwIP/src/core/netif.c ****   LWIP_UNUSED_ARG(netif);
  35              		.loc 1 1621 3 view .LVU1
1622:lwIP/src/core/netif.c ****   LWIP_UNUSED_ARG(p);
  36              		.loc 1 1622 3 view .LVU2
1623:lwIP/src/core/netif.c ****   LWIP_UNUSED_ARG(ipaddr);
  37              		.loc 1 1623 3 view .LVU3
1624:lwIP/src/core/netif.c **** 
1625:lwIP/src/core/netif.c ****   return ERR_IF;
  38              		.loc 1 1625 3 view .LVU4
1626:lwIP/src/core/netif.c **** }
  39              		.loc 1 1626 1 is_stmt 0 view .LVU5
  40 0000 6FF00B00 		mvn	r0, #11
  41              	.LVL1:
  42              		.loc 1 1626 1 view .LVU6
  43 0004 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE124:
  47 0006 00BF     		.section	.text.netif_init,"ax",%progbits
  48              		.align	1
  49              		.p2align 2,,3
  50              		.global	netif_init
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu fpv4-sp-d16
  56              	netif_init:
  57              	.LFB105:
 178:lwIP/src/core/netif.c **** #if LWIP_HAVE_LOOPIF
  58              		.loc 1 178 1 is_stmt 1 view -0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 205:lwIP/src/core/netif.c **** 
  63              		.loc 1 205 1 view .LVU8
  64 0000 7047     		bx	lr
  65              		.cfi_endproc
  66              	.LFE105:
  68 0002 00BF     		.section	.rodata.netif_input.str1.4,"aMS",%progbits,1
  69              		.align	2
  70              	.LC0:
  71 0000 6E657469 		.ascii	"netif_input: invalid pbuf\000"
  71      665F696E 
  71      7075743A 
  71      20696E76 
  71      616C6964 
  72 001a 0000     		.align	2
  73              	.LC1:
  74 001c 6E657469 		.ascii	"netif_input: invalid netif\000"
  74      665F696E 
  74      7075743A 
  74      20696E76 
  74      616C6964 
  75              		.section	.text.netif_input,"ax",%progbits
  76              		.align	1
  77              		.p2align 2,,3
  78              		.global	netif_input
ARM GAS  /tmp/ccP9Y5Wu.s 			page 31


  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.fpu fpv4-sp-d16
  84              	netif_input:
  85              	.LVL2:
  86              	.LFB106:
 218:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
  87              		.loc 1 218 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
 219:lwIP/src/core/netif.c **** 
  91              		.loc 1 219 28 view .LVU10
 221:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_input: invalid netif", inp != NULL);
  92              		.loc 1 221 3 view .LVU11
 221:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_input: invalid netif", inp != NULL);
  93              		.loc 1 221 3 view .LVU12
 218:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
  94              		.loc 1 218 1 is_stmt 0 view .LVU13
  95 0000 08B5     		push	{r3, lr}
  96              	.LCFI0:
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 3, -8
  99              		.cfi_offset 14, -4
 221:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_input: invalid netif", inp != NULL);
 100              		.loc 1 221 3 view .LVU14
 101 0002 88B1     		cbz	r0, .L11
 221:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_input: invalid netif", inp != NULL);
 102              		.loc 1 221 3 is_stmt 1 discriminator 2 view .LVU15
 222:lwIP/src/core/netif.c **** 
 103              		.loc 1 222 3 discriminator 2 view .LVU16
 222:lwIP/src/core/netif.c **** 
 104              		.loc 1 222 3 discriminator 2 view .LVU17
 105 0004 61B1     		cbz	r1, .L12
 222:lwIP/src/core/netif.c **** 
 106              		.loc 1 222 3 discriminator 2 view .LVU18
 225:lwIP/src/core/netif.c ****     return ethernet_input(p, inp);
 107              		.loc 1 225 3 discriminator 2 view .LVU19
 225:lwIP/src/core/netif.c ****     return ethernet_input(p, inp);
 108              		.loc 1 225 6 is_stmt 0 discriminator 2 view .LVU20
 109 0006 91F82530 		ldrb	r3, [r1, #37]	@ zero_extendqisi2
 110 000a 13F0180F 		tst	r3, #24
 111 000e 03D0     		beq	.L9
 226:lwIP/src/core/netif.c ****   } else
 112              		.loc 1 226 5 is_stmt 1 view .LVU21
 230:lwIP/src/core/netif.c **** 
 113              		.loc 1 230 1 is_stmt 0 view .LVU22
 114 0010 BDE80840 		pop	{r3, lr}
 115              	.LCFI1:
 116              		.cfi_remember_state
 117              		.cfi_restore 14
 118              		.cfi_restore 3
 119              		.cfi_def_cfa_offset 0
 226:lwIP/src/core/netif.c ****   } else
 120              		.loc 1 226 12 view .LVU23
 121 0014 FFF7FEBF 		b	ethernet_input
ARM GAS  /tmp/ccP9Y5Wu.s 			page 32


 122              	.LVL3:
 123              	.L9:
 124              	.LCFI2:
 125              		.cfi_restore_state
 229:lwIP/src/core/netif.c **** }
 126              		.loc 1 229 5 is_stmt 1 view .LVU24
 230:lwIP/src/core/netif.c **** 
 127              		.loc 1 230 1 is_stmt 0 view .LVU25
 128 0018 BDE80840 		pop	{r3, lr}
 129              	.LCFI3:
 130              		.cfi_remember_state
 131              		.cfi_restore 14
 132              		.cfi_restore 3
 133              		.cfi_def_cfa_offset 0
 229:lwIP/src/core/netif.c **** }
 134              		.loc 1 229 12 view .LVU26
 135 001c FFF7FEBF 		b	ip4_input
 136              	.LVL4:
 137              	.L12:
 138              	.LCFI4:
 139              		.cfi_restore_state
 222:lwIP/src/core/netif.c **** 
 140              		.loc 1 222 3 is_stmt 1 discriminator 1 view .LVU27
 141 0020 0348     		ldr	r0, .L13
 142              	.LVL5:
 222:lwIP/src/core/netif.c **** 
 143              		.loc 1 222 3 is_stmt 0 discriminator 1 view .LVU28
 144 0022 FFF7FEFF 		bl	printf
 145              	.LVL6:
 146              	.L8:
 222:lwIP/src/core/netif.c **** 
 147              		.loc 1 222 3 is_stmt 1 discriminator 2 view .LVU29
 222:lwIP/src/core/netif.c **** 
 148              		.loc 1 222 3 discriminator 2 view .LVU30
 222:lwIP/src/core/netif.c **** 
 149              		.loc 1 222 3 discriminator 2 view .LVU31
 222:lwIP/src/core/netif.c **** 
 150              		.loc 1 222 3 discriminator 2 view .LVU32
 222:lwIP/src/core/netif.c **** 
 151              		.loc 1 222 3 discriminator 2 view .LVU33
 222:lwIP/src/core/netif.c **** 
 152              		.loc 1 222 3 discriminator 2 view .LVU34
 153 0026 FEE7     		b	.L8
 154              	.LVL7:
 155              	.L11:
 221:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_input: invalid netif", inp != NULL);
 156              		.loc 1 221 3 discriminator 1 view .LVU35
 157 0028 0248     		ldr	r0, .L13+4
 158              	.LVL8:
 221:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_input: invalid netif", inp != NULL);
 159              		.loc 1 221 3 is_stmt 0 discriminator 1 view .LVU36
 160 002a FFF7FEFF 		bl	printf
 161              	.LVL9:
 162              	.L6:
 221:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_input: invalid netif", inp != NULL);
 163              		.loc 1 221 3 is_stmt 1 discriminator 1 view .LVU37
 221:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_input: invalid netif", inp != NULL);
ARM GAS  /tmp/ccP9Y5Wu.s 			page 33


 164              		.loc 1 221 3 discriminator 1 view .LVU38
 221:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_input: invalid netif", inp != NULL);
 165              		.loc 1 221 3 discriminator 1 view .LVU39
 221:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_input: invalid netif", inp != NULL);
 166              		.loc 1 221 3 discriminator 1 view .LVU40
 221:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_input: invalid netif", inp != NULL);
 167              		.loc 1 221 3 discriminator 1 view .LVU41
 221:lwIP/src/core/netif.c ****   LWIP_ASSERT("netif_input: invalid netif", inp != NULL);
 168              		.loc 1 221 3 discriminator 1 view .LVU42
 169 002e FEE7     		b	.L6
 170              	.L14:
 171              		.align	2
 172              	.L13:
 173 0030 1C000000 		.word	.LC1
 174 0034 00000000 		.word	.LC0
 175              		.cfi_endproc
 176              	.LFE106:
 178              		.section	.rodata.netif_set_ipaddr.str1.4,"aMS",%progbits,1
 179              		.align	2
 180              	.LC2:
 181 0000 6E657469 		.ascii	"netif_set_ipaddr: invalid netif\000"
 181      665F7365 
 181      745F6970 
 181      61646472 
 181      3A20696E 
 182              		.section	.text.netif_set_ipaddr,"ax",%progbits
 183              		.align	1
 184              		.p2align 2,,3
 185              		.global	netif_set_ipaddr
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv4-sp-d16
 191              	netif_set_ipaddr:
 192              	.LVL10:
 193              	.LFB111:
 501:lwIP/src/core/netif.c ****   ip_addr_t old_addr;
 194              		.loc 1 501 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 8
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 502:lwIP/src/core/netif.c **** 
 198              		.loc 1 502 3 view .LVU44
 504:lwIP/src/core/netif.c **** 
 199              		.loc 1 504 3 view .LVU45
 504:lwIP/src/core/netif.c **** 
 200              		.loc 1 504 3 view .LVU46
 501:lwIP/src/core/netif.c ****   ip_addr_t old_addr;
 201              		.loc 1 501 1 is_stmt 0 view .LVU47
 202 0000 30B5     		push	{r4, r5, lr}
 203              	.LCFI5:
 204              		.cfi_def_cfa_offset 12
 205              		.cfi_offset 4, -12
 206              		.cfi_offset 5, -8
 207              		.cfi_offset 14, -4
 208 0002 83B0     		sub	sp, sp, #12
 209              	.LCFI6:
ARM GAS  /tmp/ccP9Y5Wu.s 			page 34


 210              		.cfi_def_cfa_offset 24
 504:lwIP/src/core/netif.c **** 
 211              		.loc 1 504 3 view .LVU48
 212 0004 30B3     		cbz	r0, .L33
 504:lwIP/src/core/netif.c **** 
 213              		.loc 1 504 3 is_stmt 1 discriminator 2 view .LVU49
 507:lwIP/src/core/netif.c ****     ipaddr = IP4_ADDR_ANY4;
 214              		.loc 1 507 3 discriminator 2 view .LVU50
 508:lwIP/src/core/netif.c ****   }
 215              		.loc 1 508 12 is_stmt 0 discriminator 2 view .LVU51
 216 0006 154A     		ldr	r2, .L35
 217 0008 0D46     		mov	r5, r1
 218              	.LBB31:
 219              	.LBB32:
 220              	.LBB33:
 463:lwIP/src/core/netif.c ****     ip_addr_t new_addr;
 221              		.loc 1 463 7 discriminator 2 view .LVU52
 222 000a 0368     		ldr	r3, [r0]
 223 000c 0446     		mov	r4, r0
 224              	.LBE33:
 225              	.LBE32:
 226              	.LBE31:
 508:lwIP/src/core/netif.c ****   }
 227              		.loc 1 508 12 discriminator 2 view .LVU53
 228 000e 0029     		cmp	r1, #0
 229 0010 08BF     		it	eq
 230 0012 1546     		moveq	r5, r2
 231              	.LVL11:
 511:lwIP/src/core/netif.c **** 
 232              		.loc 1 511 28 is_stmt 1 discriminator 2 view .LVU54
 513:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 233              		.loc 1 513 3 discriminator 2 view .LVU55
 234              	.LBB49:
 235              	.LBI31:
 457:lwIP/src/core/netif.c **** {
 236              		.loc 1 457 1 discriminator 2 view .LVU56
 237              	.LBE49:
 459:lwIP/src/core/netif.c ****   LWIP_ASSERT("invalid pointer", old_addr != NULL);
 238              		.loc 1 459 3 discriminator 2 view .LVU57
 459:lwIP/src/core/netif.c ****   LWIP_ASSERT("invalid pointer", old_addr != NULL);
 239              		.loc 1 459 3 discriminator 2 view .LVU58
 459:lwIP/src/core/netif.c ****   LWIP_ASSERT("invalid pointer", old_addr != NULL);
 240              		.loc 1 459 3 discriminator 2 view .LVU59
 460:lwIP/src/core/netif.c **** 
 241              		.loc 1 460 3 discriminator 2 view .LVU60
 460:lwIP/src/core/netif.c **** 
 242              		.loc 1 460 3 discriminator 2 view .LVU61
 243              	.LBB50:
 244              	.LBB47:
 245              	.LBI32:
 457:lwIP/src/core/netif.c **** {
 246              		.loc 1 457 1 discriminator 2 view .LVU62
 247              	.LBB45:
 460:lwIP/src/core/netif.c **** 
 248              		.loc 1 460 3 discriminator 2 view .LVU63
 463:lwIP/src/core/netif.c ****     ip_addr_t new_addr;
 249              		.loc 1 463 3 discriminator 2 view .LVU64
ARM GAS  /tmp/ccP9Y5Wu.s 			page 35


 463:lwIP/src/core/netif.c ****     ip_addr_t new_addr;
 250              		.loc 1 463 6 is_stmt 0 discriminator 2 view .LVU65
 251 0014 2A68     		ldr	r2, [r5]
 252 0016 9A42     		cmp	r2, r3
 253 0018 01D1     		bne	.L34
 254              	.LVL12:
 255              	.L15:
 463:lwIP/src/core/netif.c ****     ip_addr_t new_addr;
 256              		.loc 1 463 6 discriminator 2 view .LVU66
 257              	.LBE45:
 258              	.LBE47:
 259              	.LBE50:
 520:lwIP/src/core/netif.c **** 
 260              		.loc 1 520 1 view .LVU67
 261 001a 03B0     		add	sp, sp, #12
 262              	.LCFI7:
 263              		.cfi_remember_state
 264              		.cfi_def_cfa_offset 12
 265              		@ sp needed
 266 001c 30BD     		pop	{r4, r5, pc}
 267              	.LVL13:
 268              	.L34:
 269              	.LCFI8:
 270              		.cfi_restore_state
 271              	.LBB51:
 272              	.LBB48:
 273              	.LBB46:
 274              	.LBB34:
 464:lwIP/src/core/netif.c ****     *ip_2_ip4(&new_addr) = *ipaddr;
 275              		.loc 1 464 5 is_stmt 1 view .LVU68
 465:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(new_addr, IPADDR_TYPE_V4);
 276              		.loc 1 465 5 view .LVU69
 277              	.LBB35:
 278              	.LBB36:
 445:lwIP/src/core/netif.c **** #endif /* LWIP_TCP */
 279              		.loc 1 445 3 is_stmt 0 view .LVU70
 280 001e 01A9     		add	r1, sp, #4
 281 0020 6846     		mov	r0, sp
 282              	.LVL14:
 445:lwIP/src/core/netif.c **** #endif /* LWIP_TCP */
 283              		.loc 1 445 3 view .LVU71
 284              	.LBE36:
 285              	.LBE35:
 465:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(new_addr, IPADDR_TYPE_V4);
 286              		.loc 1 465 26 view .LVU72
 287 0022 0192     		str	r2, [sp, #4]
 466:lwIP/src/core/netif.c **** 
 288              		.loc 1 466 46 is_stmt 1 view .LVU73
 468:lwIP/src/core/netif.c **** 
 289              		.loc 1 468 5 view .LVU74
 290 0024 0093     		str	r3, [sp]
 470:lwIP/src/core/netif.c ****     netif_do_ip_addr_changed(old_addr, &new_addr);
 291              		.loc 1 470 99 view .LVU75
 471:lwIP/src/core/netif.c **** 
 292              		.loc 1 471 5 view .LVU76
 293              	.LVL15:
 294              	.LBB38:
ARM GAS  /tmp/ccP9Y5Wu.s 			page 36


 295              	.LBI35:
 442:lwIP/src/core/netif.c **** {
 296              		.loc 1 442 1 view .LVU77
 297              	.LBB37:
 445:lwIP/src/core/netif.c **** #endif /* LWIP_TCP */
 298              		.loc 1 445 3 view .LVU78
 299 0026 FFF7FEFF 		bl	tcp_netif_ip_addr_changed
 300              	.LVL16:
 448:lwIP/src/core/netif.c **** #endif /* LWIP_UDP */
 301              		.loc 1 448 3 view .LVU79
 302 002a 01A9     		add	r1, sp, #4
 303              	.LVL17:
 448:lwIP/src/core/netif.c **** #endif /* LWIP_UDP */
 304              		.loc 1 448 3 is_stmt 0 view .LVU80
 305 002c 6846     		mov	r0, sp
 306 002e FFF7FEFF 		bl	udp_netif_ip_addr_changed
 307              	.LVL18:
 448:lwIP/src/core/netif.c **** #endif /* LWIP_UDP */
 308              		.loc 1 448 3 view .LVU81
 309              	.LBE37:
 310              	.LBE38:
 473:lwIP/src/core/netif.c ****     mib2_remove_route_ip4(0, netif);
 311              		.loc 1 473 27 is_stmt 1 view .LVU82
 474:lwIP/src/core/netif.c ****     /* set new IP address to netif */
 312              		.loc 1 474 36 view .LVU83
 476:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->ip_addr, IPADDR_TYPE_V4);
 313              		.loc 1 476 5 view .LVU84
 314              	.LBB39:
 315              	.LBB40:
 880:lwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 316              		.loc 1 880 14 is_stmt 0 view .LVU85
 317 0032 94F82530 		ldrb	r3, [r4, #37]	@ zero_extendqisi2
 318              	.LBE40:
 319              	.LBE39:
 476:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->ip_addr, IPADDR_TYPE_V4);
 320              		.loc 1 476 5 view .LVU86
 321 0036 2A68     		ldr	r2, [r5]
 322              	.LBB43:
 323              	.LBB41:
 880:lwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 324              		.loc 1 880 6 view .LVU87
 325 0038 03F00501 		and	r1, r3, #5
 326              	.LBE41:
 327              	.LBE43:
 476:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->ip_addr, IPADDR_TYPE_V4);
 328              		.loc 1 476 5 view .LVU88
 329 003c 2260     		str	r2, [r4]
 477:lwIP/src/core/netif.c ****     mib2_add_ip4(netif);
 330              		.loc 1 477 52 is_stmt 1 view .LVU89
 478:lwIP/src/core/netif.c ****     mib2_add_route_ip4(0, netif);
 331              		.loc 1 478 24 view .LVU90
 479:lwIP/src/core/netif.c **** 
 332              		.loc 1 479 33 view .LVU91
 481:lwIP/src/core/netif.c **** 
 333              		.loc 1 481 5 view .LVU92
 334              	.LVL19:
 335              	.LBB44:
ARM GAS  /tmp/ccP9Y5Wu.s 			page 37


 336              	.LBI39:
 875:lwIP/src/core/netif.c **** {
 337              		.loc 1 875 1 view .LVU93
 338              	.LBB42:
 877:lwIP/src/core/netif.c **** 
 339              		.loc 1 877 3 view .LVU94
 877:lwIP/src/core/netif.c **** 
 340              		.loc 1 877 3 view .LVU95
 877:lwIP/src/core/netif.c **** 
 341              		.loc 1 877 3 view .LVU96
 880:lwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 342              		.loc 1 880 3 view .LVU97
 886:lwIP/src/core/netif.c ****       !ip4_addr_isany_val(*netif_ip4_addr(netif))) {
 343              		.loc 1 886 3 view .LVU98
 886:lwIP/src/core/netif.c ****       !ip4_addr_isany_val(*netif_ip4_addr(netif))) {
 344              		.loc 1 886 46 is_stmt 0 view .LVU99
 345 003e 0529     		cmp	r1, #5
 346 0040 EBD1     		bne	.L15
 347 0042 002A     		cmp	r2, #0
 348 0044 E9D0     		beq	.L15
 890:lwIP/src/core/netif.c ****       etharp_gratuitous(netif);
 349              		.loc 1 890 5 is_stmt 1 view .LVU100
 890:lwIP/src/core/netif.c ****       etharp_gratuitous(netif);
 350              		.loc 1 890 8 is_stmt 0 view .LVU101
 351 0046 1B07     		lsls	r3, r3, #28
 352 0048 E7D5     		bpl	.L15
 891:lwIP/src/core/netif.c ****     }
 353              		.loc 1 891 7 is_stmt 1 view .LVU102
 354 004a 2146     		mov	r1, r4
 355 004c 2046     		mov	r0, r4
 356 004e FFF7FEFF 		bl	etharp_request
 357              	.LVL20:
 891:lwIP/src/core/netif.c ****     }
 358              		.loc 1 891 7 is_stmt 0 view .LVU103
 359              	.LBE42:
 360              	.LBE44:
 483:lwIP/src/core/netif.c ****     return 1; /* address changed */
 361              		.loc 1 483 33 is_stmt 1 view .LVU104
 484:lwIP/src/core/netif.c ****   }
 362              		.loc 1 484 5 view .LVU105
 484:lwIP/src/core/netif.c ****   }
 363              		.loc 1 484 5 is_stmt 0 view .LVU106
 364              	.LBE34:
 365              	.LBE46:
 366              	.LBE48:
 367              	.LBE51:
 519:lwIP/src/core/netif.c **** }
 368              		.loc 1 519 3 is_stmt 1 view .LVU107
 369 0052 E2E7     		b	.L15
 370              	.LVL21:
 371              	.L33:
 504:lwIP/src/core/netif.c **** 
 372              		.loc 1 504 3 discriminator 1 view .LVU108
 373 0054 0248     		ldr	r0, .L35+4
 374              	.LVL22:
 504:lwIP/src/core/netif.c **** 
 375              		.loc 1 504 3 is_stmt 0 discriminator 1 view .LVU109
ARM GAS  /tmp/ccP9Y5Wu.s 			page 38


 376 0056 FFF7FEFF 		bl	printf
 377              	.LVL23:
 378              	.L17:
 504:lwIP/src/core/netif.c **** 
 379              		.loc 1 504 3 is_stmt 1 discriminator 1 view .LVU110
 504:lwIP/src/core/netif.c **** 
 380              		.loc 1 504 3 discriminator 1 view .LVU111
 504:lwIP/src/core/netif.c **** 
 381              		.loc 1 504 3 discriminator 1 view .LVU112
 504:lwIP/src/core/netif.c **** 
 382              		.loc 1 504 3 discriminator 1 view .LVU113
 504:lwIP/src/core/netif.c **** 
 383              		.loc 1 504 3 discriminator 1 view .LVU114
 504:lwIP/src/core/netif.c **** 
 384              		.loc 1 504 3 discriminator 1 view .LVU115
 385 005a FEE7     		b	.L17
 386              	.L36:
 387              		.align	2
 388              	.L35:
 389 005c 00000000 		.word	ip_addr_any
 390 0060 00000000 		.word	.LC2
 391              		.cfi_endproc
 392              	.LFE111:
 394              		.section	.rodata.netif_set_netmask.str1.4,"aMS",%progbits,1
 395              		.align	2
 396              	.LC3:
 397 0000 6E657469 		.ascii	"netif_set_netmask: invalid netif\000"
 397      665F7365 
 397      745F6E65 
 397      746D6173 
 397      6B3A2069 
 398              		.section	.text.netif_set_netmask,"ax",%progbits
 399              		.align	1
 400              		.p2align 2,,3
 401              		.global	netif_set_netmask
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu fpv4-sp-d16
 407              	netif_set_netmask:
 408              	.LVL24:
 409              	.LFB113:
 561:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 410              		.loc 1 561 1 view -0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 566:lwIP/src/core/netif.c **** #endif
 414              		.loc 1 566 3 view .LVU117
 568:lwIP/src/core/netif.c **** 
 415              		.loc 1 568 28 view .LVU118
 570:lwIP/src/core/netif.c **** 
 416              		.loc 1 570 3 view .LVU119
 570:lwIP/src/core/netif.c **** 
 417              		.loc 1 570 3 view .LVU120
 561:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 418              		.loc 1 561 1 is_stmt 0 view .LVU121
ARM GAS  /tmp/ccP9Y5Wu.s 			page 39


 419 0000 08B5     		push	{r3, lr}
 420              	.LCFI9:
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 3, -8
 423              		.cfi_offset 14, -4
 570:lwIP/src/core/netif.c **** 
 424              		.loc 1 570 3 view .LVU122
 425 0002 48B1     		cbz	r0, .L43
 570:lwIP/src/core/netif.c **** 
 426              		.loc 1 570 3 is_stmt 1 discriminator 2 view .LVU123
 573:lwIP/src/core/netif.c ****     netmask = IP4_ADDR_ANY4;
 427              		.loc 1 573 3 discriminator 2 view .LVU124
 574:lwIP/src/core/netif.c ****   }
 428              		.loc 1 574 13 is_stmt 0 discriminator 2 view .LVU125
 429 0004 064B     		ldr	r3, .L44
 430              	.LBB52:
 431              	.LBB53:
 526:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 432              		.loc 1 526 6 discriminator 2 view .LVU126
 433 0006 4268     		ldr	r2, [r0, #4]
 434              	.LBE53:
 435              	.LBE52:
 574:lwIP/src/core/netif.c ****   }
 436              		.loc 1 574 13 discriminator 2 view .LVU127
 437 0008 0029     		cmp	r1, #0
 438 000a 08BF     		it	eq
 439 000c 1946     		moveq	r1, r3
 440              	.LVL25:
 577:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 441              		.loc 1 577 3 is_stmt 1 discriminator 2 view .LVU128
 577:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 442              		.loc 1 577 7 is_stmt 0 discriminator 2 view .LVU129
 443 000e 0B68     		ldr	r3, [r1]
 444              	.LVL26:
 445              	.LBB55:
 446              	.LBI52:
 523:lwIP/src/core/netif.c **** {
 447              		.loc 1 523 1 is_stmt 1 discriminator 2 view .LVU130
 448              	.LBB54:
 526:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 449              		.loc 1 526 3 discriminator 2 view .LVU131
 526:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 450              		.loc 1 526 6 is_stmt 0 discriminator 2 view .LVU132
 451 0010 9342     		cmp	r3, r2
 531:lwIP/src/core/netif.c **** #endif
 452              		.loc 1 531 5 is_stmt 1 discriminator 2 view .LVU133
 533:lwIP/src/core/netif.c ****     /* set new netmask to netif */
 453              		.loc 1 533 36 discriminator 2 view .LVU134
 535:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->netmask, IPADDR_TYPE_V4);
 454              		.loc 1 535 5 discriminator 2 view .LVU135
 455 0012 18BF     		it	ne
 456 0014 4360     		strne	r3, [r0, #4]
 536:lwIP/src/core/netif.c ****     mib2_add_route_ip4(0, netif);
 457              		.loc 1 536 52 discriminator 2 view .LVU136
 537:lwIP/src/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: netmask of interface %c%c s
 458              		.loc 1 537 33 discriminator 2 view .LVU137
 543:lwIP/src/core/netif.c ****     return 1; /* netmask changed */
ARM GAS  /tmp/ccP9Y5Wu.s 			page 40


 459              		.loc 1 543 57 discriminator 2 view .LVU138
 544:lwIP/src/core/netif.c ****   }
 460              		.loc 1 544 5 discriminator 2 view .LVU139
 461              	.LVL27:
 544:lwIP/src/core/netif.c ****   }
 462              		.loc 1 544 5 is_stmt 0 discriminator 2 view .LVU140
 463              	.LBE54:
 464              	.LBE55:
 583:lwIP/src/core/netif.c **** }
 465              		.loc 1 583 3 is_stmt 1 discriminator 2 view .LVU141
 584:lwIP/src/core/netif.c **** 
 466              		.loc 1 584 1 is_stmt 0 discriminator 2 view .LVU142
 467 0016 08BD     		pop	{r3, pc}
 468              	.LVL28:
 469              	.L43:
 570:lwIP/src/core/netif.c **** 
 470              		.loc 1 570 3 is_stmt 1 discriminator 1 view .LVU143
 471 0018 0248     		ldr	r0, .L44+4
 472              	.LVL29:
 570:lwIP/src/core/netif.c **** 
 473              		.loc 1 570 3 is_stmt 0 discriminator 1 view .LVU144
 474 001a FFF7FEFF 		bl	printf
 475              	.LVL30:
 476              	.L39:
 570:lwIP/src/core/netif.c **** 
 477              		.loc 1 570 3 is_stmt 1 discriminator 1 view .LVU145
 570:lwIP/src/core/netif.c **** 
 478              		.loc 1 570 3 discriminator 1 view .LVU146
 570:lwIP/src/core/netif.c **** 
 479              		.loc 1 570 3 discriminator 1 view .LVU147
 570:lwIP/src/core/netif.c **** 
 480              		.loc 1 570 3 discriminator 1 view .LVU148
 570:lwIP/src/core/netif.c **** 
 481              		.loc 1 570 3 discriminator 1 view .LVU149
 570:lwIP/src/core/netif.c **** 
 482              		.loc 1 570 3 discriminator 1 view .LVU150
 483 001e FEE7     		b	.L39
 484              	.L45:
 485              		.align	2
 486              	.L44:
 487 0020 00000000 		.word	ip_addr_any
 488 0024 00000000 		.word	.LC3
 489              		.cfi_endproc
 490              	.LFE113:
 492              		.section	.rodata.netif_set_gw.str1.4,"aMS",%progbits,1
 493              		.align	2
 494              	.LC4:
 495 0000 6E657469 		.ascii	"netif_set_gw: invalid netif\000"
 495      665F7365 
 495      745F6777 
 495      3A20696E 
 495      76616C69 
 496              		.section	.text.netif_set_gw,"ax",%progbits
 497              		.align	1
 498              		.p2align 2,,3
 499              		.global	netif_set_gw
 500              		.syntax unified
ARM GAS  /tmp/ccP9Y5Wu.s 			page 41


 501              		.thumb
 502              		.thumb_func
 503              		.fpu fpv4-sp-d16
 505              	netif_set_gw:
 506              	.LVL31:
 507              	.LFB115:
 622:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 508              		.loc 1 622 1 view -0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 627:lwIP/src/core/netif.c **** #endif
 512              		.loc 1 627 3 view .LVU152
 629:lwIP/src/core/netif.c **** 
 513              		.loc 1 629 28 view .LVU153
 631:lwIP/src/core/netif.c **** 
 514              		.loc 1 631 3 view .LVU154
 631:lwIP/src/core/netif.c **** 
 515              		.loc 1 631 3 view .LVU155
 622:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 516              		.loc 1 622 1 is_stmt 0 view .LVU156
 517 0000 08B5     		push	{r3, lr}
 518              	.LCFI10:
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 3, -8
 521              		.cfi_offset 14, -4
 631:lwIP/src/core/netif.c **** 
 522              		.loc 1 631 3 view .LVU157
 523 0002 48B1     		cbz	r0, .L52
 631:lwIP/src/core/netif.c **** 
 524              		.loc 1 631 3 is_stmt 1 discriminator 2 view .LVU158
 634:lwIP/src/core/netif.c ****     gw = IP4_ADDR_ANY4;
 525              		.loc 1 634 3 discriminator 2 view .LVU159
 635:lwIP/src/core/netif.c ****   }
 526              		.loc 1 635 8 is_stmt 0 discriminator 2 view .LVU160
 527 0004 064B     		ldr	r3, .L53
 528              	.LBB56:
 529              	.LBB57:
 590:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 530              		.loc 1 590 6 discriminator 2 view .LVU161
 531 0006 8268     		ldr	r2, [r0, #8]
 532              	.LBE57:
 533              	.LBE56:
 635:lwIP/src/core/netif.c ****   }
 534              		.loc 1 635 8 discriminator 2 view .LVU162
 535 0008 0029     		cmp	r1, #0
 536 000a 08BF     		it	eq
 537 000c 1946     		moveq	r1, r3
 538              	.LVL32:
 638:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 539              		.loc 1 638 3 is_stmt 1 discriminator 2 view .LVU163
 638:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 540              		.loc 1 638 7 is_stmt 0 discriminator 2 view .LVU164
 541 000e 0B68     		ldr	r3, [r1]
 542              	.LVL33:
 543              	.LBB59:
 544              	.LBI56:
ARM GAS  /tmp/ccP9Y5Wu.s 			page 42


 587:lwIP/src/core/netif.c **** {
 545              		.loc 1 587 1 is_stmt 1 discriminator 2 view .LVU165
 546              	.LBB58:
 590:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 547              		.loc 1 590 3 discriminator 2 view .LVU166
 590:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 548              		.loc 1 590 6 is_stmt 0 discriminator 2 view .LVU167
 549 0010 9342     		cmp	r3, r2
 595:lwIP/src/core/netif.c **** #endif
 550              		.loc 1 595 5 is_stmt 1 discriminator 2 view .LVU168
 598:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->gw, IPADDR_TYPE_V4);
 551              		.loc 1 598 5 discriminator 2 view .LVU169
 552 0012 18BF     		it	ne
 553 0014 8360     		strne	r3, [r0, #8]
 599:lwIP/src/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: GW address of interface %c%
 554              		.loc 1 599 47 discriminator 2 view .LVU170
 605:lwIP/src/core/netif.c ****     return 1; /* gateway changed */
 555              		.loc 1 605 52 discriminator 2 view .LVU171
 606:lwIP/src/core/netif.c ****   }
 556              		.loc 1 606 5 discriminator 2 view .LVU172
 557              	.LVL34:
 606:lwIP/src/core/netif.c ****   }
 558              		.loc 1 606 5 is_stmt 0 discriminator 2 view .LVU173
 559              	.LBE58:
 560              	.LBE59:
 644:lwIP/src/core/netif.c **** }
 561              		.loc 1 644 3 is_stmt 1 discriminator 2 view .LVU174
 645:lwIP/src/core/netif.c **** 
 562              		.loc 1 645 1 is_stmt 0 discriminator 2 view .LVU175
 563 0016 08BD     		pop	{r3, pc}
 564              	.LVL35:
 565              	.L52:
 631:lwIP/src/core/netif.c **** 
 566              		.loc 1 631 3 is_stmt 1 discriminator 1 view .LVU176
 567 0018 0248     		ldr	r0, .L53+4
 568              	.LVL36:
 631:lwIP/src/core/netif.c **** 
 569              		.loc 1 631 3 is_stmt 0 discriminator 1 view .LVU177
 570 001a FFF7FEFF 		bl	printf
 571              	.LVL37:
 572              	.L48:
 631:lwIP/src/core/netif.c **** 
 573              		.loc 1 631 3 is_stmt 1 discriminator 1 view .LVU178
 631:lwIP/src/core/netif.c **** 
 574              		.loc 1 631 3 discriminator 1 view .LVU179
 631:lwIP/src/core/netif.c **** 
 575              		.loc 1 631 3 discriminator 1 view .LVU180
 631:lwIP/src/core/netif.c **** 
 576              		.loc 1 631 3 discriminator 1 view .LVU181
 631:lwIP/src/core/netif.c **** 
 577              		.loc 1 631 3 discriminator 1 view .LVU182
 631:lwIP/src/core/netif.c **** 
 578              		.loc 1 631 3 discriminator 1 view .LVU183
 579 001e FEE7     		b	.L48
 580              	.L54:
 581              		.align	2
 582              	.L53:
ARM GAS  /tmp/ccP9Y5Wu.s 			page 43


 583 0020 00000000 		.word	ip_addr_any
 584 0024 00000000 		.word	.LC4
 585              		.cfi_endproc
 586              	.LFE115:
 588              		.section	.text.netif_set_addr,"ax",%progbits
 589              		.align	1
 590              		.p2align 2,,3
 591              		.global	netif_set_addr
 592              		.syntax unified
 593              		.thumb
 594              		.thumb_func
 595              		.fpu fpv4-sp-d16
 597              	netif_set_addr:
 598              	.LVL38:
 599              	.LFB116:
 660:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 600              		.loc 1 660 1 view -0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 8
 603              		@ frame_needed = 0, uses_anonymous_args = 0
 669:lwIP/src/core/netif.c ****   ip_addr_t *old_gw = NULL;
 604              		.loc 1 669 3 view .LVU185
 670:lwIP/src/core/netif.c **** #endif
 605              		.loc 1 670 3 view .LVU186
 672:lwIP/src/core/netif.c ****   int remove;
 606              		.loc 1 672 3 view .LVU187
 673:lwIP/src/core/netif.c **** 
 607              		.loc 1 673 3 view .LVU188
 675:lwIP/src/core/netif.c **** 
 608              		.loc 1 675 28 view .LVU189
 678:lwIP/src/core/netif.c ****     ipaddr = IP4_ADDR_ANY4;
 609              		.loc 1 678 3 view .LVU190
 660:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 610              		.loc 1 660 1 is_stmt 0 view .LVU191
 611 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 612              	.LCFI11:
 613              		.cfi_def_cfa_offset 20
 614              		.cfi_offset 4, -20
 615              		.cfi_offset 5, -16
 616              		.cfi_offset 6, -12
 617              		.cfi_offset 7, -8
 618              		.cfi_offset 14, -4
 679:lwIP/src/core/netif.c ****   }
 619              		.loc 1 679 12 view .LVU192
 620 0002 2F4D     		ldr	r5, .L93
 660:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 621              		.loc 1 660 1 view .LVU193
 622 0004 83B0     		sub	sp, sp, #12
 623              	.LCFI12:
 624              		.cfi_def_cfa_offset 32
 660:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 625              		.loc 1 660 1 view .LVU194
 626 0006 0446     		mov	r4, r0
 679:lwIP/src/core/netif.c ****   }
 627              		.loc 1 679 12 view .LVU195
 628 0008 0029     		cmp	r1, #0
 629 000a 14BF     		ite	ne
ARM GAS  /tmp/ccP9Y5Wu.s 			page 44


 630 000c 0F46     		movne	r7, r1
 631 000e 2F46     		moveq	r7, r5
 632              	.LVL39:
 681:lwIP/src/core/netif.c ****     netmask = IP4_ADDR_ANY4;
 633              		.loc 1 681 3 is_stmt 1 view .LVU196
 682:lwIP/src/core/netif.c ****   }
 634              		.loc 1 682 13 is_stmt 0 view .LVU197
 635 0010 002A     		cmp	r2, #0
 636 0012 14BF     		ite	ne
 637 0014 1646     		movne	r6, r2
 638 0016 2E46     		moveq	r6, r5
 684:lwIP/src/core/netif.c ****     gw = IP4_ADDR_ANY4;
 639              		.loc 1 684 3 is_stmt 1 view .LVU198
 685:lwIP/src/core/netif.c ****   }
 640              		.loc 1 685 8 is_stmt 0 view .LVU199
 641 0018 002B     		cmp	r3, #0
 642 001a 18BF     		it	ne
 643 001c 1D46     		movne	r5, r3
 688:lwIP/src/core/netif.c ****   if (remove) {
 644              		.loc 1 688 3 is_stmt 1 view .LVU200
 688:lwIP/src/core/netif.c ****   if (remove) {
 645              		.loc 1 688 12 is_stmt 0 view .LVU201
 646 001e 3A68     		ldr	r2, [r7]
 647              	.LVL40:
 688:lwIP/src/core/netif.c ****   if (remove) {
 648              		.loc 1 688 12 view .LVU202
 649 0020 002A     		cmp	r2, #0
 650 0022 2ED0     		beq	.L89
 651 0024 0021     		movs	r1, #0
 652              	.LVL41:
 653              	.L60:
 697:lwIP/src/core/netif.c ****   }
 654              		.loc 1 697 5 is_stmt 1 view .LVU203
 699:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 655              		.loc 1 699 3 view .LVU204
 699:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 656              		.loc 1 699 7 is_stmt 0 view .LVU205
 657 0026 3368     		ldr	r3, [r6]
 658              	.LVL42:
 659              	.LBB82:
 660              	.LBI82:
 523:lwIP/src/core/netif.c **** {
 661              		.loc 1 523 1 is_stmt 1 view .LVU206
 662              	.LBB83:
 526:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 663              		.loc 1 526 3 view .LVU207
 526:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 664              		.loc 1 526 6 is_stmt 0 view .LVU208
 665 0028 6268     		ldr	r2, [r4, #4]
 666 002a 9342     		cmp	r3, r2
 531:lwIP/src/core/netif.c **** #endif
 667              		.loc 1 531 5 is_stmt 1 view .LVU209
 533:lwIP/src/core/netif.c ****     /* set new netmask to netif */
 668              		.loc 1 533 36 view .LVU210
 535:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->netmask, IPADDR_TYPE_V4);
 669              		.loc 1 535 5 view .LVU211
 670              	.LBE83:
ARM GAS  /tmp/ccP9Y5Wu.s 			page 45


 671              	.LBE82:
 672              	.LBB85:
 673              	.LBB86:
 590:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 674              		.loc 1 590 6 is_stmt 0 view .LVU212
 675 002c A268     		ldr	r2, [r4, #8]
 676              	.LBE86:
 677              	.LBE85:
 678              	.LBB89:
 679              	.LBB84:
 535:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->netmask, IPADDR_TYPE_V4);
 680              		.loc 1 535 5 view .LVU213
 681 002e 18BF     		it	ne
 682 0030 6360     		strne	r3, [r4, #4]
 536:lwIP/src/core/netif.c ****     mib2_add_route_ip4(0, netif);
 683              		.loc 1 536 52 is_stmt 1 view .LVU214
 537:lwIP/src/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: netmask of interface %c%c s
 684              		.loc 1 537 33 view .LVU215
 543:lwIP/src/core/netif.c ****     return 1; /* netmask changed */
 685              		.loc 1 543 57 view .LVU216
 544:lwIP/src/core/netif.c ****   }
 686              		.loc 1 544 5 view .LVU217
 687              	.LVL43:
 544:lwIP/src/core/netif.c ****   }
 688              		.loc 1 544 5 is_stmt 0 view .LVU218
 689              	.LBE84:
 690              	.LBE89:
 704:lwIP/src/core/netif.c ****   if (netif_do_set_gw(netif, gw, old_gw)) {
 691              		.loc 1 704 3 is_stmt 1 view .LVU219
 705:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 692              		.loc 1 705 3 view .LVU220
 705:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 693              		.loc 1 705 7 is_stmt 0 view .LVU221
 694 0032 2B68     		ldr	r3, [r5]
 695              	.LVL44:
 696              	.LBB90:
 697              	.LBI85:
 587:lwIP/src/core/netif.c **** {
 698              		.loc 1 587 1 is_stmt 1 view .LVU222
 699              	.LBB87:
 590:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 700              		.loc 1 590 3 view .LVU223
 590:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 701              		.loc 1 590 6 is_stmt 0 view .LVU224
 702 0034 9342     		cmp	r3, r2
 703 0036 02D1     		bne	.L90
 704              	.LVL45:
 590:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 705              		.loc 1 590 6 view .LVU225
 706              	.LBE87:
 707              	.LBE90:
 710:lwIP/src/core/netif.c ****   if (!remove) {
 708              		.loc 1 710 3 is_stmt 1 view .LVU226
 711:lwIP/src/core/netif.c ****     /* set ipaddr last to ensure netmask/gw have been set when status callback is called */
 709              		.loc 1 711 3 view .LVU227
 711:lwIP/src/core/netif.c ****     /* set ipaddr last to ensure netmask/gw have been set when status callback is called */
 710              		.loc 1 711 6 is_stmt 0 view .LVU228
ARM GAS  /tmp/ccP9Y5Wu.s 			page 46


 711 0038 21B1     		cbz	r1, .L91
 712              	.L55:
 727:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4*/
 713              		.loc 1 727 1 view .LVU229
 714 003a 03B0     		add	sp, sp, #12
 715              	.LCFI13:
 716              		.cfi_remember_state
 717              		.cfi_def_cfa_offset 20
 718              		@ sp needed
 719 003c F0BD     		pop	{r4, r5, r6, r7, pc}
 720              	.LVL46:
 721              	.L90:
 722              	.LCFI14:
 723              		.cfi_restore_state
 724              	.LBB91:
 725              	.LBB88:
 595:lwIP/src/core/netif.c **** #endif
 726              		.loc 1 595 5 is_stmt 1 view .LVU230
 598:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->gw, IPADDR_TYPE_V4);
 727              		.loc 1 598 5 view .LVU231
 728 003e A360     		str	r3, [r4, #8]
 599:lwIP/src/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: GW address of interface %c%
 729              		.loc 1 599 47 view .LVU232
 605:lwIP/src/core/netif.c ****     return 1; /* gateway changed */
 730              		.loc 1 605 52 view .LVU233
 606:lwIP/src/core/netif.c ****   }
 731              		.loc 1 606 5 view .LVU234
 732              	.LVL47:
 606:lwIP/src/core/netif.c ****   }
 733              		.loc 1 606 5 is_stmt 0 view .LVU235
 734              	.LBE88:
 735              	.LBE91:
 710:lwIP/src/core/netif.c ****   if (!remove) {
 736              		.loc 1 710 3 is_stmt 1 view .LVU236
 711:lwIP/src/core/netif.c ****     /* set ipaddr last to ensure netmask/gw have been set when status callback is called */
 737              		.loc 1 711 3 view .LVU237
 711:lwIP/src/core/netif.c ****     /* set ipaddr last to ensure netmask/gw have been set when status callback is called */
 738              		.loc 1 711 6 is_stmt 0 view .LVU238
 739 0040 0029     		cmp	r1, #0
 740 0042 FAD1     		bne	.L55
 741              	.L91:
 742              	.LVL48:
 459:lwIP/src/core/netif.c ****   LWIP_ASSERT("invalid pointer", old_addr != NULL);
 743              		.loc 1 459 3 is_stmt 1 view .LVU239
 460:lwIP/src/core/netif.c **** 
 744              		.loc 1 460 3 view .LVU240
 460:lwIP/src/core/netif.c **** 
 745              		.loc 1 460 3 view .LVU241
 746              	.LBB92:
 747              	.LBB93:
 748              	.LBI93:
 457:lwIP/src/core/netif.c **** {
 749              		.loc 1 457 1 view .LVU242
 750              	.LBB94:
 460:lwIP/src/core/netif.c **** 
 751              		.loc 1 460 3 view .LVU243
 463:lwIP/src/core/netif.c ****     ip_addr_t new_addr;
ARM GAS  /tmp/ccP9Y5Wu.s 			page 47


 752              		.loc 1 463 3 view .LVU244
 463:lwIP/src/core/netif.c ****     ip_addr_t new_addr;
 753              		.loc 1 463 7 is_stmt 0 view .LVU245
 754 0044 2368     		ldr	r3, [r4]
 463:lwIP/src/core/netif.c ****     ip_addr_t new_addr;
 755              		.loc 1 463 6 view .LVU246
 756 0046 3A68     		ldr	r2, [r7]
 757 0048 9A42     		cmp	r2, r3
 758 004a F6D0     		beq	.L55
 759              	.LBB95:
 464:lwIP/src/core/netif.c ****     *ip_2_ip4(&new_addr) = *ipaddr;
 760              		.loc 1 464 5 is_stmt 1 view .LVU247
 465:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(new_addr, IPADDR_TYPE_V4);
 761              		.loc 1 465 5 view .LVU248
 762              	.LBB96:
 763              	.LBB97:
 445:lwIP/src/core/netif.c **** #endif /* LWIP_TCP */
 764              		.loc 1 445 3 is_stmt 0 view .LVU249
 765 004c 01A9     		add	r1, sp, #4
 766 004e 6846     		mov	r0, sp
 767              	.LBE97:
 768              	.LBE96:
 465:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(new_addr, IPADDR_TYPE_V4);
 769              		.loc 1 465 26 view .LVU250
 770 0050 0192     		str	r2, [sp, #4]
 466:lwIP/src/core/netif.c **** 
 771              		.loc 1 466 46 is_stmt 1 view .LVU251
 468:lwIP/src/core/netif.c **** 
 772              		.loc 1 468 5 view .LVU252
 773 0052 0093     		str	r3, [sp]
 470:lwIP/src/core/netif.c ****     netif_do_ip_addr_changed(old_addr, &new_addr);
 774              		.loc 1 470 99 view .LVU253
 471:lwIP/src/core/netif.c **** 
 775              		.loc 1 471 5 view .LVU254
 776              	.LVL49:
 777              	.LBB99:
 778              	.LBI96:
 442:lwIP/src/core/netif.c **** {
 779              		.loc 1 442 1 view .LVU255
 780              	.LBB98:
 445:lwIP/src/core/netif.c **** #endif /* LWIP_TCP */
 781              		.loc 1 445 3 view .LVU256
 782 0054 FFF7FEFF 		bl	tcp_netif_ip_addr_changed
 783              	.LVL50:
 448:lwIP/src/core/netif.c **** #endif /* LWIP_UDP */
 784              		.loc 1 448 3 view .LVU257
 785 0058 01A9     		add	r1, sp, #4
 786              	.LVL51:
 448:lwIP/src/core/netif.c **** #endif /* LWIP_UDP */
 787              		.loc 1 448 3 is_stmt 0 view .LVU258
 788 005a 6846     		mov	r0, sp
 789 005c FFF7FEFF 		bl	udp_netif_ip_addr_changed
 790              	.LVL52:
 448:lwIP/src/core/netif.c **** #endif /* LWIP_UDP */
 791              		.loc 1 448 3 view .LVU259
 792              	.LBE98:
 793              	.LBE99:
ARM GAS  /tmp/ccP9Y5Wu.s 			page 48


 473:lwIP/src/core/netif.c ****     mib2_remove_route_ip4(0, netif);
 794              		.loc 1 473 27 is_stmt 1 view .LVU260
 474:lwIP/src/core/netif.c ****     /* set new IP address to netif */
 795              		.loc 1 474 36 view .LVU261
 476:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->ip_addr, IPADDR_TYPE_V4);
 796              		.loc 1 476 5 view .LVU262
 797              	.LBB100:
 798              	.LBB101:
 880:lwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 799              		.loc 1 880 14 is_stmt 0 view .LVU263
 800 0060 94F82520 		ldrb	r2, [r4, #37]	@ zero_extendqisi2
 801              	.LBE101:
 802              	.LBE100:
 476:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->ip_addr, IPADDR_TYPE_V4);
 803              		.loc 1 476 5 view .LVU264
 804 0064 3B68     		ldr	r3, [r7]
 805              	.LBB104:
 806              	.LBB102:
 880:lwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 807              		.loc 1 880 6 view .LVU265
 808 0066 02F00501 		and	r1, r2, #5
 809              	.LBE102:
 810              	.LBE104:
 476:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->ip_addr, IPADDR_TYPE_V4);
 811              		.loc 1 476 5 view .LVU266
 812 006a 2360     		str	r3, [r4]
 477:lwIP/src/core/netif.c ****     mib2_add_ip4(netif);
 813              		.loc 1 477 52 is_stmt 1 view .LVU267
 478:lwIP/src/core/netif.c ****     mib2_add_route_ip4(0, netif);
 814              		.loc 1 478 24 view .LVU268
 479:lwIP/src/core/netif.c **** 
 815              		.loc 1 479 33 view .LVU269
 481:lwIP/src/core/netif.c **** 
 816              		.loc 1 481 5 view .LVU270
 817              	.LVL53:
 818              	.LBB105:
 819              	.LBI100:
 875:lwIP/src/core/netif.c **** {
 820              		.loc 1 875 1 view .LVU271
 821              	.LBB103:
 877:lwIP/src/core/netif.c **** 
 822              		.loc 1 877 3 view .LVU272
 877:lwIP/src/core/netif.c **** 
 823              		.loc 1 877 3 view .LVU273
 877:lwIP/src/core/netif.c **** 
 824              		.loc 1 877 3 view .LVU274
 880:lwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 825              		.loc 1 880 3 view .LVU275
 886:lwIP/src/core/netif.c ****       !ip4_addr_isany_val(*netif_ip4_addr(netif))) {
 826              		.loc 1 886 3 view .LVU276
 886:lwIP/src/core/netif.c ****       !ip4_addr_isany_val(*netif_ip4_addr(netif))) {
 827              		.loc 1 886 46 is_stmt 0 view .LVU277
 828 006c 0529     		cmp	r1, #5
 829 006e E4D1     		bne	.L55
 830 0070 002B     		cmp	r3, #0
 831 0072 E2D0     		beq	.L55
 890:lwIP/src/core/netif.c ****       etharp_gratuitous(netif);
ARM GAS  /tmp/ccP9Y5Wu.s 			page 49


 832              		.loc 1 890 5 is_stmt 1 view .LVU278
 890:lwIP/src/core/netif.c ****       etharp_gratuitous(netif);
 833              		.loc 1 890 8 is_stmt 0 view .LVU279
 834 0074 1307     		lsls	r3, r2, #28
 835 0076 E0D5     		bpl	.L55
 891:lwIP/src/core/netif.c ****     }
 836              		.loc 1 891 7 is_stmt 1 view .LVU280
 837 0078 2146     		mov	r1, r4
 838 007a 2046     		mov	r0, r4
 839 007c FFF7FEFF 		bl	etharp_request
 840              	.LVL54:
 891:lwIP/src/core/netif.c ****     }
 841              		.loc 1 891 7 is_stmt 0 view .LVU281
 842              	.LBE103:
 843              	.LBE105:
 483:lwIP/src/core/netif.c ****     return 1; /* address changed */
 844              		.loc 1 483 33 is_stmt 1 view .LVU282
 484:lwIP/src/core/netif.c ****   }
 845              		.loc 1 484 5 view .LVU283
 484:lwIP/src/core/netif.c ****   }
 846              		.loc 1 484 5 is_stmt 0 view .LVU284
 847              	.LBE95:
 848              	.LBE94:
 849              	.LBE93:
 850              	.LBE92:
 718:lwIP/src/core/netif.c ****   }
 851              		.loc 1 718 5 is_stmt 1 view .LVU285
 727:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4*/
 852              		.loc 1 727 1 is_stmt 0 view .LVU286
 853 0080 DBE7     		b	.L55
 854              	.LVL55:
 855              	.L89:
 692:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 856              		.loc 1 692 5 is_stmt 1 view .LVU287
 857              	.LBB106:
 858              	.LBI106:
 457:lwIP/src/core/netif.c **** {
 859              		.loc 1 457 1 view .LVU288
 860              	.LBE106:
 459:lwIP/src/core/netif.c ****   LWIP_ASSERT("invalid pointer", old_addr != NULL);
 861              		.loc 1 459 3 view .LVU289
 459:lwIP/src/core/netif.c ****   LWIP_ASSERT("invalid pointer", old_addr != NULL);
 862              		.loc 1 459 3 view .LVU290
 459:lwIP/src/core/netif.c ****   LWIP_ASSERT("invalid pointer", old_addr != NULL);
 863              		.loc 1 459 3 view .LVU291
 460:lwIP/src/core/netif.c **** 
 864              		.loc 1 460 3 view .LVU292
 460:lwIP/src/core/netif.c **** 
 865              		.loc 1 460 3 view .LVU293
 866              	.LBB120:
 867              	.LBB107:
 868              	.LBI107:
 457:lwIP/src/core/netif.c **** {
 869              		.loc 1 457 1 view .LVU294
 870              	.LBB108:
 460:lwIP/src/core/netif.c **** 
 871              		.loc 1 460 3 view .LVU295
ARM GAS  /tmp/ccP9Y5Wu.s 			page 50


 463:lwIP/src/core/netif.c ****     ip_addr_t new_addr;
 872              		.loc 1 463 3 view .LVU296
 463:lwIP/src/core/netif.c ****     ip_addr_t new_addr;
 873              		.loc 1 463 7 is_stmt 0 view .LVU297
 874 0082 0368     		ldr	r3, [r0]
 875              	.LVL56:
 463:lwIP/src/core/netif.c ****     ip_addr_t new_addr;
 876              		.loc 1 463 6 view .LVU298
 877 0084 0BB9     		cbnz	r3, .L92
 878              	.LVL57:
 879              	.L68:
 463:lwIP/src/core/netif.c ****     ip_addr_t new_addr;
 880              		.loc 1 463 6 view .LVU299
 881 0086 0121     		movs	r1, #1
 882 0088 CDE7     		b	.L60
 883              	.LVL58:
 884              	.L92:
 885              	.LBB109:
 464:lwIP/src/core/netif.c ****     *ip_2_ip4(&new_addr) = *ipaddr;
 886              		.loc 1 464 5 is_stmt 1 view .LVU300
 465:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(new_addr, IPADDR_TYPE_V4);
 887              		.loc 1 465 5 view .LVU301
 888              	.LBB110:
 889              	.LBB111:
 445:lwIP/src/core/netif.c **** #endif /* LWIP_TCP */
 890              		.loc 1 445 3 is_stmt 0 view .LVU302
 891 008a 01A9     		add	r1, sp, #4
 892 008c 6846     		mov	r0, sp
 893              	.LVL59:
 445:lwIP/src/core/netif.c **** #endif /* LWIP_TCP */
 894              		.loc 1 445 3 view .LVU303
 895              	.LBE111:
 896              	.LBE110:
 465:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(new_addr, IPADDR_TYPE_V4);
 897              		.loc 1 465 26 view .LVU304
 898 008e 0192     		str	r2, [sp, #4]
 466:lwIP/src/core/netif.c **** 
 899              		.loc 1 466 46 is_stmt 1 view .LVU305
 468:lwIP/src/core/netif.c **** 
 900              		.loc 1 468 5 view .LVU306
 901 0090 0093     		str	r3, [sp]
 470:lwIP/src/core/netif.c ****     netif_do_ip_addr_changed(old_addr, &new_addr);
 902              		.loc 1 470 99 view .LVU307
 471:lwIP/src/core/netif.c **** 
 903              		.loc 1 471 5 view .LVU308
 904              	.LVL60:
 905              	.LBB113:
 906              	.LBI110:
 442:lwIP/src/core/netif.c **** {
 907              		.loc 1 442 1 view .LVU309
 908              	.LBB112:
 445:lwIP/src/core/netif.c **** #endif /* LWIP_TCP */
 909              		.loc 1 445 3 view .LVU310
 910 0092 FFF7FEFF 		bl	tcp_netif_ip_addr_changed
 911              	.LVL61:
 448:lwIP/src/core/netif.c **** #endif /* LWIP_UDP */
 912              		.loc 1 448 3 view .LVU311
ARM GAS  /tmp/ccP9Y5Wu.s 			page 51


 913 0096 01A9     		add	r1, sp, #4
 914              	.LVL62:
 448:lwIP/src/core/netif.c **** #endif /* LWIP_UDP */
 915              		.loc 1 448 3 is_stmt 0 view .LVU312
 916 0098 6846     		mov	r0, sp
 917 009a FFF7FEFF 		bl	udp_netif_ip_addr_changed
 918              	.LVL63:
 448:lwIP/src/core/netif.c **** #endif /* LWIP_UDP */
 919              		.loc 1 448 3 view .LVU313
 920              	.LBE112:
 921              	.LBE113:
 473:lwIP/src/core/netif.c ****     mib2_remove_route_ip4(0, netif);
 922              		.loc 1 473 27 is_stmt 1 view .LVU314
 474:lwIP/src/core/netif.c ****     /* set new IP address to netif */
 923              		.loc 1 474 36 view .LVU315
 476:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->ip_addr, IPADDR_TYPE_V4);
 924              		.loc 1 476 5 view .LVU316
 925              	.LBB114:
 926              	.LBB115:
 880:lwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 927              		.loc 1 880 14 is_stmt 0 view .LVU317
 928 009e 94F82520 		ldrb	r2, [r4, #37]	@ zero_extendqisi2
 929              	.LBE115:
 930              	.LBE114:
 476:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->ip_addr, IPADDR_TYPE_V4);
 931              		.loc 1 476 5 view .LVU318
 932 00a2 3B68     		ldr	r3, [r7]
 933              	.LBB118:
 934              	.LBB116:
 880:lwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 935              		.loc 1 880 6 view .LVU319
 936 00a4 02F00501 		and	r1, r2, #5
 937              	.LBE116:
 938              	.LBE118:
 476:lwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->ip_addr, IPADDR_TYPE_V4);
 939              		.loc 1 476 5 view .LVU320
 940 00a8 2360     		str	r3, [r4]
 477:lwIP/src/core/netif.c ****     mib2_add_ip4(netif);
 941              		.loc 1 477 52 is_stmt 1 view .LVU321
 478:lwIP/src/core/netif.c ****     mib2_add_route_ip4(0, netif);
 942              		.loc 1 478 24 view .LVU322
 479:lwIP/src/core/netif.c **** 
 943              		.loc 1 479 33 view .LVU323
 481:lwIP/src/core/netif.c **** 
 944              		.loc 1 481 5 view .LVU324
 945              	.LVL64:
 946              	.LBB119:
 947              	.LBI114:
 875:lwIP/src/core/netif.c **** {
 948              		.loc 1 875 1 view .LVU325
 949              	.LBB117:
 877:lwIP/src/core/netif.c **** 
 950              		.loc 1 877 3 view .LVU326
 877:lwIP/src/core/netif.c **** 
 951              		.loc 1 877 3 view .LVU327
 877:lwIP/src/core/netif.c **** 
 952              		.loc 1 877 3 view .LVU328
ARM GAS  /tmp/ccP9Y5Wu.s 			page 52


 880:lwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 953              		.loc 1 880 3 view .LVU329
 886:lwIP/src/core/netif.c ****       !ip4_addr_isany_val(*netif_ip4_addr(netif))) {
 954              		.loc 1 886 3 view .LVU330
 886:lwIP/src/core/netif.c ****       !ip4_addr_isany_val(*netif_ip4_addr(netif))) {
 955              		.loc 1 886 46 is_stmt 0 view .LVU331
 956 00aa 0529     		cmp	r1, #5
 957 00ac EBD1     		bne	.L68
 958 00ae 002B     		cmp	r3, #0
 959 00b0 E9D0     		beq	.L68
 890:lwIP/src/core/netif.c ****       etharp_gratuitous(netif);
 960              		.loc 1 890 5 is_stmt 1 view .LVU332
 890:lwIP/src/core/netif.c ****       etharp_gratuitous(netif);
 961              		.loc 1 890 8 is_stmt 0 view .LVU333
 962 00b2 1207     		lsls	r2, r2, #28
 963 00b4 E7D5     		bpl	.L68
 891:lwIP/src/core/netif.c ****     }
 964              		.loc 1 891 7 is_stmt 1 view .LVU334
 965 00b6 2146     		mov	r1, r4
 966 00b8 2046     		mov	r0, r4
 967 00ba FFF7FEFF 		bl	etharp_request
 968              	.LVL65:
 891:lwIP/src/core/netif.c ****     }
 969              		.loc 1 891 7 is_stmt 0 view .LVU335
 970              	.LBE117:
 971              	.LBE119:
 483:lwIP/src/core/netif.c ****     return 1; /* address changed */
 972              		.loc 1 483 33 is_stmt 1 view .LVU336
 484:lwIP/src/core/netif.c ****   }
 973              		.loc 1 484 5 view .LVU337
 974 00be E2E7     		b	.L68
 975              	.L94:
 976              		.align	2
 977              	.L93:
 978 00c0 00000000 		.word	ip_addr_any
 979              	.LBE109:
 980              	.LBE108:
 981              	.LBE107:
 982              	.LBE120:
 983              		.cfi_endproc
 984              	.LFE116:
 986              		.section	.rodata.netif_add.str1.4,"aMS",%progbits,1
 987              		.align	2
 988              	.LC5:
 989 0000 73696E67 		.ascii	"single netif already set\000"
 989      6C65206E 
 989      65746966 
 989      20616C72 
 989      65616479 
 990 0019 000000   		.align	2
 991              	.LC6:
 992 001c 6E657469 		.ascii	"netif_add: invalid netif\000"
 992      665F6164 
 992      643A2069 
 992      6E76616C 
 992      6964206E 
 993 0035 000000   		.align	2
ARM GAS  /tmp/ccP9Y5Wu.s 			page 53


 994              	.LC7:
 995 0038 6E657469 		.ascii	"netif_add: No init function given\000"
 995      665F6164 
 995      643A204E 
 995      6F20696E 
 995      69742066 
 996              		.section	.text.netif_add,"ax",%progbits
 997              		.align	1
 998              		.p2align 2,,3
 999              		.global	netif_add
 1000              		.syntax unified
 1001              		.thumb
 1002              		.thumb_func
 1003              		.fpu fpv4-sp-d16
 1005              	netif_add:
 1006              	.LVL66:
 1007              	.LFB108:
 281:lwIP/src/core/netif.c **** #if LWIP_IPV6
 1008              		.loc 1 281 1 view -0
 1009              		.cfi_startproc
 1010              		@ args = 12, pretend = 0, frame = 0
 1011              		@ frame_needed = 0, uses_anonymous_args = 0
 286:lwIP/src/core/netif.c **** 
 1012              		.loc 1 286 28 view .LVU339
 289:lwIP/src/core/netif.c ****     LWIP_ASSERT("single netif already set", 0);
 1013              		.loc 1 289 3 view .LVU340
 281:lwIP/src/core/netif.c **** #if LWIP_IPV6
 1014              		.loc 1 281 1 is_stmt 0 view .LVU341
 1015 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1016              	.LCFI15:
 1017              		.cfi_def_cfa_offset 24
 1018              		.cfi_offset 3, -24
 1019              		.cfi_offset 4, -20
 1020              		.cfi_offset 5, -16
 1021              		.cfi_offset 6, -12
 1022              		.cfi_offset 7, -8
 1023              		.cfi_offset 14, -4
 289:lwIP/src/core/netif.c ****     LWIP_ASSERT("single netif already set", 0);
 1024              		.loc 1 289 21 view .LVU342
 1025 0002 1A4C     		ldr	r4, .L111
 281:lwIP/src/core/netif.c **** #if LWIP_IPV6
 1026              		.loc 1 281 1 view .LVU343
 1027 0004 079E     		ldr	r6, [sp, #28]
 289:lwIP/src/core/netif.c ****     LWIP_ASSERT("single netif already set", 0);
 1028              		.loc 1 289 21 view .LVU344
 1029 0006 2568     		ldr	r5, [r4]
 289:lwIP/src/core/netif.c ****     LWIP_ASSERT("single netif already set", 0);
 1030              		.loc 1 289 6 view .LVU345
 1031 0008 1DB1     		cbz	r5, .L96
 290:lwIP/src/core/netif.c ****     return NULL;
 1032              		.loc 1 290 5 is_stmt 1 discriminator 1 view .LVU346
 290:lwIP/src/core/netif.c ****     return NULL;
 1033              		.loc 1 290 5 discriminator 1 view .LVU347
 290:lwIP/src/core/netif.c ****     return NULL;
 1034              		.loc 1 290 5 discriminator 1 view .LVU348
 1035 000a 1948     		ldr	r0, .L111+4
 1036              	.LVL67:
ARM GAS  /tmp/ccP9Y5Wu.s 			page 54


 290:lwIP/src/core/netif.c ****     return NULL;
 1037              		.loc 1 290 5 is_stmt 0 discriminator 1 view .LVU349
 1038 000c FFF7FEFF 		bl	printf
 1039              	.LVL68:
 1040              	.L97:
 290:lwIP/src/core/netif.c ****     return NULL;
 1041              		.loc 1 290 5 is_stmt 1 discriminator 1 view .LVU350
 290:lwIP/src/core/netif.c ****     return NULL;
 1042              		.loc 1 290 5 discriminator 1 view .LVU351
 290:lwIP/src/core/netif.c ****     return NULL;
 1043              		.loc 1 290 5 discriminator 1 view .LVU352
 290:lwIP/src/core/netif.c ****     return NULL;
 1044              		.loc 1 290 5 discriminator 1 view .LVU353
 290:lwIP/src/core/netif.c ****     return NULL;
 1045              		.loc 1 290 5 discriminator 1 view .LVU354
 290:lwIP/src/core/netif.c ****     return NULL;
 1046              		.loc 1 290 5 discriminator 1 view .LVU355
 1047 0010 FEE7     		b	.L97
 1048              	.LVL69:
 1049              	.L96:
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1050              		.loc 1 295 3 view .LVU356
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1051              		.loc 1 295 3 view .LVU357
 1052 0012 0446     		mov	r4, r0
 1053 0014 10B3     		cbz	r0, .L109
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1054              		.loc 1 295 3 discriminator 2 view .LVU358
 296:lwIP/src/core/netif.c **** 
 1055              		.loc 1 296 3 discriminator 2 view .LVU359
 296:lwIP/src/core/netif.c **** 
 1056              		.loc 1 296 3 discriminator 2 view .LVU360
 1057 0016 2EB3     		cbz	r6, .L110
 1058              	.LVL70:
 1059              	.LBB123:
 1060              	.LBI123:
 276:lwIP/src/core/netif.c **** #if LWIP_IPV4
 1061              		.loc 1 276 1 view .LVU361
 1062              	.LBB124:
 296:lwIP/src/core/netif.c **** 
 1063              		.loc 1 296 3 view .LVU362
 299:lwIP/src/core/netif.c ****     ipaddr = ip_2_ip4(IP4_ADDR_ANY);
 1064              		.loc 1 299 3 view .LVU363
 300:lwIP/src/core/netif.c ****   }
 1065              		.loc 1 300 12 is_stmt 0 view .LVU364
 1066 0018 164F     		ldr	r7, .L111+8
 1067              	.LVL71:
 302:lwIP/src/core/netif.c ****     netmask = ip_2_ip4(IP4_ADDR_ANY);
 1068              		.loc 1 302 3 is_stmt 1 view .LVU365
 305:lwIP/src/core/netif.c ****     gw = ip_2_ip4(IP4_ADDR_ANY);
 1069              		.loc 1 305 3 view .LVU366
 310:lwIP/src/core/netif.c ****   ip_addr_set_zero_ip4(&netif->netmask);
 1070              		.loc 1 310 3 view .LVU367
 313:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 1071              		.loc 1 313 17 is_stmt 0 view .LVU368
 1072 001a DFF864C0 		ldr	ip, .L111+20
 367:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
ARM GAS  /tmp/ccP9Y5Wu.s 			page 55


 1073              		.loc 1 367 3 view .LVU369
 1074 001e 002B     		cmp	r3, #0
 1075 0020 08BF     		it	eq
 1076 0022 3B46     		moveq	r3, r7
 1077              	.LVL72:
 367:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 1078              		.loc 1 367 3 view .LVU370
 1079 0024 002A     		cmp	r2, #0
 1080 0026 08BF     		it	eq
 1081 0028 3A46     		moveq	r2, r7
 1082              	.LVL73:
 367:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 1083              		.loc 1 367 3 view .LVU371
 1084 002a 0029     		cmp	r1, #0
 1085 002c 08BF     		it	eq
 1086 002e 3946     		moveq	r1, r7
 1087              	.LVL74:
 312:lwIP/src/core/netif.c ****   netif->output = netif_null_output_ip4;
 1088              		.loc 1 312 3 view .LVU372
 1089 0030 8560     		str	r5, [r0, #8]
 357:lwIP/src/core/netif.c ****   netif->num = netif_num;
 1090              		.loc 1 357 16 view .LVU373
 1091 0032 069F     		ldr	r7, [sp, #24]
 327:lwIP/src/core/netif.c ****   netif->flags = 0;
 1092              		.loc 1 327 14 view .LVU374
 1093 0034 8583     		strh	r5, [r0, #28]	@ movhi
 328:lwIP/src/core/netif.c **** #ifdef netif_get_client_data
 1094              		.loc 1 328 16 view .LVU375
 1095 0036 80F82550 		strb	r5, [r0, #37]
 358:lwIP/src/core/netif.c ****   netif->input = input;
 1096              		.loc 1 358 14 view .LVU376
 1097 003a 80F82850 		strb	r5, [r0, #40]
 357:lwIP/src/core/netif.c ****   netif->num = netif_num;
 1098              		.loc 1 357 16 view .LVU377
 1099 003e 8761     		str	r7, [r0, #24]
 311:lwIP/src/core/netif.c ****   ip_addr_set_zero_ip4(&netif->gw);
 1100              		.loc 1 311 3 view .LVU378
 1101 0040 C0E90055 		strd	r5, r5, [r0]
 312:lwIP/src/core/netif.c ****   netif->output = netif_null_output_ip4;
 1102              		.loc 1 312 3 is_stmt 1 view .LVU379
 313:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 1103              		.loc 1 313 3 view .LVU380
 359:lwIP/src/core/netif.c **** 
 1104              		.loc 1 359 16 is_stmt 0 view .LVU381
 1105 0044 089D     		ldr	r5, [sp, #32]
 313:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 1106              		.loc 1 313 17 view .LVU382
 1107 0046 C0E9035C 		strd	r5, ip, [r0, #12]
 326:lwIP/src/core/netif.c ****   netif->mtu = 0;
 1108              		.loc 1 326 60 is_stmt 1 view .LVU383
 327:lwIP/src/core/netif.c ****   netif->flags = 0;
 1109              		.loc 1 327 3 view .LVU384
 328:lwIP/src/core/netif.c **** #ifdef netif_get_client_data
 1110              		.loc 1 328 3 view .LVU385
 357:lwIP/src/core/netif.c ****   netif->num = netif_num;
 1111              		.loc 1 357 3 view .LVU386
 358:lwIP/src/core/netif.c ****   netif->input = input;
ARM GAS  /tmp/ccP9Y5Wu.s 			page 56


 1112              		.loc 1 358 3 view .LVU387
 359:lwIP/src/core/netif.c **** 
 1113              		.loc 1 359 3 view .LVU388
 361:lwIP/src/core/netif.c **** #if ENABLE_LOOPBACK && LWIP_LOOPBACK_MAX_PBUFS
 1114              		.loc 1 361 27 view .LVU389
 367:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 1115              		.loc 1 367 3 view .LVU390
 1116 004a FFF7FEFF 		bl	netif_set_addr
 1117              	.LVL75:
 371:lwIP/src/core/netif.c ****     return NULL;
 1118              		.loc 1 371 3 view .LVU391
 371:lwIP/src/core/netif.c ****     return NULL;
 1119              		.loc 1 371 7 is_stmt 0 view .LVU392
 1120 004e 2046     		mov	r0, r4
 1121 0050 B047     		blx	r6
 1122              	.LVL76:
 372:lwIP/src/core/netif.c ****   }
 1123              		.loc 1 372 12 view .LVU393
 1124 0052 0028     		cmp	r0, #0
 1125              	.LBE124:
 1126              	.LBE123:
 439:lwIP/src/core/netif.c **** 
 1127              		.loc 1 439 1 view .LVU394
 1128 0054 0CBF     		ite	eq
 1129 0056 2046     		moveq	r0, r4
 1130 0058 0020     		movne	r0, #0
 1131 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1132              	.LVL77:
 1133              	.L109:
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1134              		.loc 1 295 3 is_stmt 1 discriminator 1 view .LVU395
 1135 005c 0648     		ldr	r0, .L111+12
 1136              	.LVL78:
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1137              		.loc 1 295 3 is_stmt 0 discriminator 1 view .LVU396
 1138 005e FFF7FEFF 		bl	printf
 1139              	.LVL79:
 1140              	.L99:
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1141              		.loc 1 295 3 is_stmt 1 discriminator 2 view .LVU397
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1142              		.loc 1 295 3 discriminator 2 view .LVU398
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1143              		.loc 1 295 3 discriminator 2 view .LVU399
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1144              		.loc 1 295 3 discriminator 2 view .LVU400
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1145              		.loc 1 295 3 discriminator 2 view .LVU401
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1146              		.loc 1 295 3 discriminator 2 view .LVU402
 1147 0062 FEE7     		b	.L99
 1148              	.LVL80:
 1149              	.L110:
 296:lwIP/src/core/netif.c **** 
 1150              		.loc 1 296 3 discriminator 1 view .LVU403
 1151 0064 0548     		ldr	r0, .L111+16
 1152              	.LVL81:
ARM GAS  /tmp/ccP9Y5Wu.s 			page 57


 296:lwIP/src/core/netif.c **** 
 1153              		.loc 1 296 3 is_stmt 0 discriminator 1 view .LVU404
 1154 0066 FFF7FEFF 		bl	printf
 1155              	.LVL82:
 1156              	.L101:
 296:lwIP/src/core/netif.c **** 
 1157              		.loc 1 296 3 is_stmt 1 discriminator 3 view .LVU405
 296:lwIP/src/core/netif.c **** 
 1158              		.loc 1 296 3 discriminator 3 view .LVU406
 296:lwIP/src/core/netif.c **** 
 1159              		.loc 1 296 3 discriminator 3 view .LVU407
 296:lwIP/src/core/netif.c **** 
 1160              		.loc 1 296 3 discriminator 3 view .LVU408
 296:lwIP/src/core/netif.c **** 
 1161              		.loc 1 296 3 discriminator 3 view .LVU409
 296:lwIP/src/core/netif.c **** 
 1162              		.loc 1 296 3 discriminator 3 view .LVU410
 1163 006a FEE7     		b	.L101
 1164              	.L112:
 1165              		.align	2
 1166              	.L111:
 1167 006c 00000000 		.word	netif_default
 1168 0070 00000000 		.word	.LC5
 1169 0074 00000000 		.word	ip_addr_any
 1170 0078 1C000000 		.word	.LC6
 1171 007c 38000000 		.word	.LC7
 1172 0080 00000000 		.word	netif_null_output_ip4
 1173              		.cfi_endproc
 1174              	.LFE108:
 1176              		.section	.text.netif_add_noaddr,"ax",%progbits
 1177              		.align	1
 1178              		.p2align 2,,3
 1179              		.global	netif_add_noaddr
 1180              		.syntax unified
 1181              		.thumb
 1182              		.thumb_func
 1183              		.fpu fpv4-sp-d16
 1185              	netif_add_noaddr:
 1186              	.LVL83:
 1187              	.LFB107:
 240:lwIP/src/core/netif.c ****   return netif_add(netif,
 1188              		.loc 1 240 1 view -0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 0
 1191              		@ frame_needed = 0, uses_anonymous_args = 0
 241:lwIP/src/core/netif.c **** #if LWIP_IPV4
 1192              		.loc 1 241 3 view .LVU412
 240:lwIP/src/core/netif.c ****   return netif_add(netif,
 1193              		.loc 1 240 1 is_stmt 0 view .LVU413
 1194 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1195              	.LCFI16:
 1196              		.cfi_def_cfa_offset 24
 1197              		.cfi_offset 3, -24
 1198              		.cfi_offset 4, -20
 1199              		.cfi_offset 5, -16
 1200              		.cfi_offset 6, -12
 1201              		.cfi_offset 7, -8
ARM GAS  /tmp/ccP9Y5Wu.s 			page 58


 1202              		.cfi_offset 14, -4
 1203              	.LBB129:
 1204              	.LBB130:
 289:lwIP/src/core/netif.c ****     LWIP_ASSERT("single netif already set", 0);
 1205              		.loc 1 289 21 view .LVU414
 1206 0002 164C     		ldr	r4, .L126
 1207 0004 2568     		ldr	r5, [r4]
 1208              	.LVL84:
 289:lwIP/src/core/netif.c ****     LWIP_ASSERT("single netif already set", 0);
 1209              		.loc 1 289 21 view .LVU415
 1210              	.LBE130:
 1211              	.LBI129:
 276:lwIP/src/core/netif.c **** #if LWIP_IPV4
 1212              		.loc 1 276 1 is_stmt 1 view .LVU416
 1213              	.LBB133:
 286:lwIP/src/core/netif.c **** 
 1214              		.loc 1 286 28 view .LVU417
 289:lwIP/src/core/netif.c ****     LWIP_ASSERT("single netif already set", 0);
 1215              		.loc 1 289 3 view .LVU418
 289:lwIP/src/core/netif.c ****     LWIP_ASSERT("single netif already set", 0);
 1216              		.loc 1 289 6 is_stmt 0 view .LVU419
 1217 0006 1DB1     		cbz	r5, .L114
 290:lwIP/src/core/netif.c ****     return NULL;
 1218              		.loc 1 290 5 is_stmt 1 view .LVU420
 290:lwIP/src/core/netif.c ****     return NULL;
 1219              		.loc 1 290 5 view .LVU421
 290:lwIP/src/core/netif.c ****     return NULL;
 1220              		.loc 1 290 5 view .LVU422
 1221 0008 1548     		ldr	r0, .L126+4
 1222              	.LVL85:
 290:lwIP/src/core/netif.c ****     return NULL;
 1223              		.loc 1 290 5 is_stmt 0 view .LVU423
 1224 000a FFF7FEFF 		bl	printf
 1225              	.LVL86:
 1226              	.L115:
 290:lwIP/src/core/netif.c ****     return NULL;
 1227              		.loc 1 290 5 is_stmt 1 view .LVU424
 290:lwIP/src/core/netif.c ****     return NULL;
 1228              		.loc 1 290 5 view .LVU425
 290:lwIP/src/core/netif.c ****     return NULL;
 1229              		.loc 1 290 5 view .LVU426
 290:lwIP/src/core/netif.c ****     return NULL;
 1230              		.loc 1 290 5 view .LVU427
 290:lwIP/src/core/netif.c ****     return NULL;
 1231              		.loc 1 290 5 view .LVU428
 290:lwIP/src/core/netif.c ****     return NULL;
 1232              		.loc 1 290 5 view .LVU429
 1233 000e FEE7     		b	.L115
 1234              	.LVL87:
 1235              	.L114:
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1236              		.loc 1 295 3 view .LVU430
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1237              		.loc 1 295 3 view .LVU431
 1238 0010 0446     		mov	r4, r0
 1239 0012 D0B1     		cbz	r0, .L124
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
ARM GAS  /tmp/ccP9Y5Wu.s 			page 59


 1240              		.loc 1 295 3 view .LVU432
 296:lwIP/src/core/netif.c **** 
 1241              		.loc 1 296 3 view .LVU433
 296:lwIP/src/core/netif.c **** 
 1242              		.loc 1 296 3 view .LVU434
 1243 0014 1646     		mov	r6, r2
 1244 0016 E2B1     		cbz	r2, .L125
 1245              	.LVL88:
 296:lwIP/src/core/netif.c **** 
 1246              		.loc 1 296 3 is_stmt 0 view .LVU435
 1247 0018 1A46     		mov	r2, r3
 1248              	.LVL89:
 1249              	.LBB131:
 1250              	.LBI131:
 276:lwIP/src/core/netif.c **** #if LWIP_IPV4
 1251              		.loc 1 276 1 is_stmt 1 view .LVU436
 1252              	.LBB132:
 296:lwIP/src/core/netif.c **** 
 1253              		.loc 1 296 3 view .LVU437
 299:lwIP/src/core/netif.c ****     ipaddr = ip_2_ip4(IP4_ADDR_ANY);
 1254              		.loc 1 299 3 view .LVU438
 300:lwIP/src/core/netif.c ****   }
 1255              		.loc 1 300 5 view .LVU439
 302:lwIP/src/core/netif.c ****     netmask = ip_2_ip4(IP4_ADDR_ANY);
 1256              		.loc 1 302 3 view .LVU440
 303:lwIP/src/core/netif.c ****   }
 1257              		.loc 1 303 5 view .LVU441
 305:lwIP/src/core/netif.c ****     gw = ip_2_ip4(IP4_ADDR_ANY);
 1258              		.loc 1 305 3 view .LVU442
 306:lwIP/src/core/netif.c ****   }
 1259              		.loc 1 306 5 view .LVU443
 310:lwIP/src/core/netif.c ****   ip_addr_set_zero_ip4(&netif->netmask);
 1260              		.loc 1 310 3 view .LVU444
 313:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 1261              		.loc 1 313 17 is_stmt 0 view .LVU445
 1262 001a 124F     		ldr	r7, .L126+8
 367:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 1263              		.loc 1 367 3 view .LVU446
 1264 001c 124B     		ldr	r3, .L126+12
 1265              	.LVL90:
 312:lwIP/src/core/netif.c ****   netif->output = netif_null_output_ip4;
 1266              		.loc 1 312 3 view .LVU447
 1267 001e 8560     		str	r5, [r0, #8]
 327:lwIP/src/core/netif.c ****   netif->flags = 0;
 1268              		.loc 1 327 14 view .LVU448
 1269 0020 8583     		strh	r5, [r0, #28]	@ movhi
 328:lwIP/src/core/netif.c **** #ifdef netif_get_client_data
 1270              		.loc 1 328 16 view .LVU449
 1271 0022 80F82550 		strb	r5, [r0, #37]
 357:lwIP/src/core/netif.c ****   netif->num = netif_num;
 1272              		.loc 1 357 16 view .LVU450
 1273 0026 8161     		str	r1, [r0, #24]
 367:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 1274              		.loc 1 367 3 view .LVU451
 1275 0028 1946     		mov	r1, r3
 1276              	.LVL91:
 358:lwIP/src/core/netif.c ****   netif->input = input;
ARM GAS  /tmp/ccP9Y5Wu.s 			page 60


 1277              		.loc 1 358 14 view .LVU452
 1278 002a 80F82850 		strb	r5, [r0, #40]
 359:lwIP/src/core/netif.c **** 
 1279              		.loc 1 359 16 view .LVU453
 1280 002e C260     		str	r2, [r0, #12]
 367:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 1281              		.loc 1 367 3 view .LVU454
 1282 0030 1A46     		mov	r2, r3
 1283              	.LVL92:
 313:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 1284              		.loc 1 313 17 view .LVU455
 1285 0032 0761     		str	r7, [r0, #16]
 311:lwIP/src/core/netif.c ****   ip_addr_set_zero_ip4(&netif->gw);
 1286              		.loc 1 311 3 view .LVU456
 1287 0034 C0E90055 		strd	r5, r5, [r0]
 312:lwIP/src/core/netif.c ****   netif->output = netif_null_output_ip4;
 1288              		.loc 1 312 3 is_stmt 1 view .LVU457
 313:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 1289              		.loc 1 313 3 view .LVU458
 326:lwIP/src/core/netif.c ****   netif->mtu = 0;
 1290              		.loc 1 326 60 view .LVU459
 327:lwIP/src/core/netif.c ****   netif->flags = 0;
 1291              		.loc 1 327 3 view .LVU460
 328:lwIP/src/core/netif.c **** #ifdef netif_get_client_data
 1292              		.loc 1 328 3 view .LVU461
 357:lwIP/src/core/netif.c ****   netif->num = netif_num;
 1293              		.loc 1 357 3 view .LVU462
 358:lwIP/src/core/netif.c ****   netif->input = input;
 1294              		.loc 1 358 3 view .LVU463
 359:lwIP/src/core/netif.c **** 
 1295              		.loc 1 359 3 view .LVU464
 361:lwIP/src/core/netif.c **** #if ENABLE_LOOPBACK && LWIP_LOOPBACK_MAX_PBUFS
 1296              		.loc 1 361 27 view .LVU465
 367:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 1297              		.loc 1 367 3 view .LVU466
 1298 0038 FFF7FEFF 		bl	netif_set_addr
 1299              	.LVL93:
 371:lwIP/src/core/netif.c ****     return NULL;
 1300              		.loc 1 371 3 view .LVU467
 371:lwIP/src/core/netif.c ****     return NULL;
 1301              		.loc 1 371 7 is_stmt 0 view .LVU468
 1302 003c 2046     		mov	r0, r4
 1303 003e B047     		blx	r6
 1304              	.LVL94:
 372:lwIP/src/core/netif.c ****   }
 1305              		.loc 1 372 12 view .LVU469
 1306 0040 0028     		cmp	r0, #0
 1307              	.LBE132:
 1308              	.LBE131:
 1309              	.LBE133:
 1310              	.LBE129:
 246:lwIP/src/core/netif.c **** 
 1311              		.loc 1 246 1 view .LVU470
 1312 0042 0CBF     		ite	eq
 1313 0044 2046     		moveq	r0, r4
 1314 0046 0020     		movne	r0, #0
 1315 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  /tmp/ccP9Y5Wu.s 			page 61


 1316              	.LVL95:
 1317              	.L124:
 1318              	.LBB135:
 1319              	.LBB134:
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1320              		.loc 1 295 3 is_stmt 1 view .LVU471
 1321 004a 0848     		ldr	r0, .L126+16
 1322              	.LVL96:
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1323              		.loc 1 295 3 is_stmt 0 view .LVU472
 1324 004c FFF7FEFF 		bl	printf
 1325              	.LVL97:
 1326              	.L117:
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1327              		.loc 1 295 3 is_stmt 1 view .LVU473
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1328              		.loc 1 295 3 view .LVU474
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1329              		.loc 1 295 3 view .LVU475
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1330              		.loc 1 295 3 view .LVU476
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1331              		.loc 1 295 3 view .LVU477
 295:lwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 1332              		.loc 1 295 3 view .LVU478
 1333 0050 FEE7     		b	.L117
 1334              	.LVL98:
 1335              	.L125:
 296:lwIP/src/core/netif.c **** 
 1336              		.loc 1 296 3 view .LVU479
 1337 0052 0748     		ldr	r0, .L126+20
 1338              	.LVL99:
 296:lwIP/src/core/netif.c **** 
 1339              		.loc 1 296 3 is_stmt 0 view .LVU480
 1340 0054 FFF7FEFF 		bl	printf
 1341              	.LVL100:
 1342              	.L119:
 296:lwIP/src/core/netif.c **** 
 1343              		.loc 1 296 3 is_stmt 1 view .LVU481
 296:lwIP/src/core/netif.c **** 
 1344              		.loc 1 296 3 view .LVU482
 296:lwIP/src/core/netif.c **** 
 1345              		.loc 1 296 3 view .LVU483
 296:lwIP/src/core/netif.c **** 
 1346              		.loc 1 296 3 view .LVU484
 296:lwIP/src/core/netif.c **** 
 1347              		.loc 1 296 3 view .LVU485
 296:lwIP/src/core/netif.c **** 
 1348              		.loc 1 296 3 view .LVU486
 1349 0058 FEE7     		b	.L119
 1350              	.L127:
 1351 005a 00BF     		.align	2
 1352              	.L126:
 1353 005c 00000000 		.word	netif_default
 1354 0060 00000000 		.word	.LC5
 1355 0064 00000000 		.word	netif_null_output_ip4
 1356 0068 00000000 		.word	ip_addr_any
ARM GAS  /tmp/ccP9Y5Wu.s 			page 62


 1357 006c 1C000000 		.word	.LC6
 1358 0070 38000000 		.word	.LC7
 1359              	.LBE134:
 1360              	.LBE135:
 1361              		.cfi_endproc
 1362              	.LFE107:
 1364              		.section	.text.netif_remove,"ax",%progbits
 1365              		.align	1
 1366              		.p2align 2,,3
 1367              		.global	netif_remove
 1368              		.syntax unified
 1369              		.thumb
 1370              		.thumb_func
 1371              		.fpu fpv4-sp-d16
 1373              	netif_remove:
 1374              	.LVL101:
 1375              	.LFB117:
 738:lwIP/src/core/netif.c **** #if LWIP_IPV6
 1376              		.loc 1 738 1 view -0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 743:lwIP/src/core/netif.c **** 
 1380              		.loc 1 743 28 view .LVU488
 745:lwIP/src/core/netif.c ****     return;
 1381              		.loc 1 745 3 view .LVU489
 745:lwIP/src/core/netif.c ****     return;
 1382              		.loc 1 745 6 is_stmt 0 view .LVU490
 1383 0000 20B3     		cbz	r0, .L147
 749:lwIP/src/core/netif.c **** 
 1384              		.loc 1 749 65 is_stmt 1 view .LVU491
 752:lwIP/src/core/netif.c ****     netif_do_ip_addr_changed(netif_ip_addr4(netif), NULL);
 1385              		.loc 1 752 3 view .LVU492
 752:lwIP/src/core/netif.c ****     netif_do_ip_addr_changed(netif_ip_addr4(netif), NULL);
 1386              		.loc 1 752 6 is_stmt 0 view .LVU493
 1387 0002 0368     		ldr	r3, [r0]
 738:lwIP/src/core/netif.c **** #if LWIP_IPV6
 1388              		.loc 1 738 1 view .LVU494
 1389 0004 10B5     		push	{r4, lr}
 1390              	.LCFI17:
 1391              		.cfi_def_cfa_offset 8
 1392              		.cfi_offset 4, -8
 1393              		.cfi_offset 14, -4
 1394 0006 0446     		mov	r4, r0
 752:lwIP/src/core/netif.c ****     netif_do_ip_addr_changed(netif_ip_addr4(netif), NULL);
 1395              		.loc 1 752 6 view .LVU495
 1396 0008 5BB9     		cbnz	r3, .L150
 775:lwIP/src/core/netif.c ****     /* set netif down before removing (call callback function) */
 1397              		.loc 1 775 3 is_stmt 1 view .LVU496
 775:lwIP/src/core/netif.c ****     /* set netif down before removing (call callback function) */
 1398              		.loc 1 775 7 is_stmt 0 view .LVU497
 1399 000a 94F82530 		ldrb	r3, [r4, #37]	@ zero_extendqisi2
 775:lwIP/src/core/netif.c ****     /* set netif down before removing (call callback function) */
 1400              		.loc 1 775 6 view .LVU498
 1401 000e DA07     		lsls	r2, r3, #31
 1402 0010 12D4     		bmi	.L151
 1403              	.LVL102:
ARM GAS  /tmp/ccP9Y5Wu.s 			page 63


 1404              	.L133:
 780:lwIP/src/core/netif.c **** 
 1405              		.loc 1 780 25 is_stmt 1 view .LVU499
 783:lwIP/src/core/netif.c ****     /* reset default netif */
 1406              		.loc 1 783 3 view .LVU500
 783:lwIP/src/core/netif.c ****     /* reset default netif */
 1407              		.loc 1 783 21 is_stmt 0 view .LVU501
 1408 0012 0F4B     		ldr	r3, .L153
 783:lwIP/src/core/netif.c ****     /* reset default netif */
 1409              		.loc 1 783 6 view .LVU502
 1410 0014 1A68     		ldr	r2, [r3]
 1411 0016 A242     		cmp	r2, r4
 1412 0018 00D0     		beq	.L152
 812:lwIP/src/core/netif.c **** 
 1413              		.loc 1 812 1 view .LVU503
 1414 001a 10BD     		pop	{r4, pc}
 1415              	.LVL103:
 1416              	.L152:
 785:lwIP/src/core/netif.c ****   }
 1417              		.loc 1 785 5 is_stmt 1 view .LVU504
 1418              	.LBB142:
 1419              	.LBI142:
 822:lwIP/src/core/netif.c **** {
 1420              		.loc 1 822 1 view .LVU505
 1421              	.LBB143:
 824:lwIP/src/core/netif.c **** 
 1422              		.loc 1 824 28 view .LVU506
 826:lwIP/src/core/netif.c ****     /* remove default route */
 1423              		.loc 1 826 3 view .LVU507
 831:lwIP/src/core/netif.c ****   }
 1424              		.loc 1 831 33 view .LVU508
 833:lwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("netif: setting default interface %c%c\n",
 1425              		.loc 1 833 3 view .LVU509
 833:lwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("netif: setting default interface %c%c\n",
 1426              		.loc 1 833 17 is_stmt 0 view .LVU510
 1427 001c 0022     		movs	r2, #0
 1428 001e 1A60     		str	r2, [r3]
 835:lwIP/src/core/netif.c **** }
 1429              		.loc 1 835 91 is_stmt 1 view .LVU511
 1430              	.LVL104:
 835:lwIP/src/core/netif.c **** }
 1431              		.loc 1 835 91 is_stmt 0 view .LVU512
 1432              	.LBE143:
 1433              	.LBE142:
 805:lwIP/src/core/netif.c **** #if LWIP_NETIF_REMOVE_CALLBACK
 1434              		.loc 1 805 28 is_stmt 1 view .LVU513
 811:lwIP/src/core/netif.c **** }
 1435              		.loc 1 811 64 view .LVU514
 812:lwIP/src/core/netif.c **** 
 1436              		.loc 1 812 1 is_stmt 0 view .LVU515
 1437 0020 10BD     		pop	{r4, pc}
 1438              	.LVL105:
 1439              	.L150:
 753:lwIP/src/core/netif.c ****   }
 1440              		.loc 1 753 5 is_stmt 1 view .LVU516
 1441              	.LBB144:
 1442              	.LBI144:
ARM GAS  /tmp/ccP9Y5Wu.s 			page 64


 442:lwIP/src/core/netif.c **** {
 1443              		.loc 1 442 1 view .LVU517
 1444              	.LBB145:
 445:lwIP/src/core/netif.c **** #endif /* LWIP_TCP */
 1445              		.loc 1 445 3 view .LVU518
 1446 0022 0021     		movs	r1, #0
 1447 0024 FFF7FEFF 		bl	tcp_netif_ip_addr_changed
 1448              	.LVL106:
 448:lwIP/src/core/netif.c **** #endif /* LWIP_UDP */
 1449              		.loc 1 448 3 view .LVU519
 1450 0028 0021     		movs	r1, #0
 1451 002a 2046     		mov	r0, r4
 1452 002c FFF7FEFF 		bl	udp_netif_ip_addr_changed
 1453              	.LVL107:
 448:lwIP/src/core/netif.c **** #endif /* LWIP_UDP */
 1454              		.loc 1 448 3 is_stmt 0 view .LVU520
 1455              	.LBE145:
 1456              	.LBE144:
 775:lwIP/src/core/netif.c ****     /* set netif down before removing (call callback function) */
 1457              		.loc 1 775 3 is_stmt 1 view .LVU521
 775:lwIP/src/core/netif.c ****     /* set netif down before removing (call callback function) */
 1458              		.loc 1 775 7 is_stmt 0 view .LVU522
 1459 0030 94F82530 		ldrb	r3, [r4, #37]	@ zero_extendqisi2
 775:lwIP/src/core/netif.c ****     /* set netif down before removing (call callback function) */
 1460              		.loc 1 775 6 view .LVU523
 1461 0034 DA07     		lsls	r2, r3, #31
 1462 0036 ECD5     		bpl	.L133
 1463              	.L151:
 1464              	.LBB146:
 1465              	.LBB147:
 934:lwIP/src/core/netif.c ****     MIB2_COPY_SYSUPTIME_TO(&netif->ts);
 1466              		.loc 1 934 5 is_stmt 1 view .LVU524
 934:lwIP/src/core/netif.c ****     MIB2_COPY_SYSUPTIME_TO(&netif->ts);
 1467              		.loc 1 934 5 view .LVU525
 1468 0038 23F00102 		bic	r2, r3, #1
 938:lwIP/src/core/netif.c ****       etharp_cleanup_netif(netif);
 1469              		.loc 1 938 8 is_stmt 0 view .LVU526
 1470 003c 1B07     		lsls	r3, r3, #28
 934:lwIP/src/core/netif.c ****     MIB2_COPY_SYSUPTIME_TO(&netif->ts);
 1471              		.loc 1 934 5 view .LVU527
 1472 003e 84F82520 		strb	r2, [r4, #37]
 934:lwIP/src/core/netif.c ****     MIB2_COPY_SYSUPTIME_TO(&netif->ts);
 1473              		.loc 1 934 5 is_stmt 1 view .LVU528
 935:lwIP/src/core/netif.c **** 
 1474              		.loc 1 935 39 view .LVU529
 938:lwIP/src/core/netif.c ****       etharp_cleanup_netif(netif);
 1475              		.loc 1 938 5 view .LVU530
 938:lwIP/src/core/netif.c ****       etharp_cleanup_netif(netif);
 1476              		.loc 1 938 8 is_stmt 0 view .LVU531
 1477 0042 E6D5     		bpl	.L133
 939:lwIP/src/core/netif.c ****     }
 1478              		.loc 1 939 7 is_stmt 1 view .LVU532
 1479 0044 2046     		mov	r0, r4
 1480 0046 FFF7FEFF 		bl	etharp_cleanup_netif
 1481              	.LVL108:
 1482 004a E2E7     		b	.L133
 1483              	.LVL109:
ARM GAS  /tmp/ccP9Y5Wu.s 			page 65


 1484              	.L147:
 1485              	.LCFI18:
 1486              		.cfi_def_cfa_offset 0
 1487              		.cfi_restore 4
 1488              		.cfi_restore 14
 939:lwIP/src/core/netif.c ****     }
 1489              		.loc 1 939 7 is_stmt 0 view .LVU533
 1490 004c 7047     		bx	lr
 1491              	.L154:
 1492 004e 00BF     		.align	2
 1493              	.L153:
 1494 0050 00000000 		.word	netif_default
 1495              	.LBE147:
 1496              	.LBE146:
 1497              		.cfi_endproc
 1498              	.LFE117:
 1500              		.section	.text.netif_set_default,"ax",%progbits
 1501              		.align	1
 1502              		.p2align 2,,3
 1503              		.global	netif_set_default
 1504              		.syntax unified
 1505              		.thumb
 1506              		.thumb_func
 1507              		.fpu fpv4-sp-d16
 1509              	netif_set_default:
 1510              	.LVL110:
 1511              	.LFB118:
 823:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 1512              		.loc 1 823 1 is_stmt 1 view -0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 0
 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516              		@ link register save eliminated.
 824:lwIP/src/core/netif.c **** 
 1517              		.loc 1 824 28 view .LVU535
 826:lwIP/src/core/netif.c ****     /* remove default route */
 1518              		.loc 1 826 3 view .LVU536
 831:lwIP/src/core/netif.c ****   }
 1519              		.loc 1 831 33 view .LVU537
 833:lwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("netif: setting default interface %c%c\n",
 1520              		.loc 1 833 3 view .LVU538
 833:lwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("netif: setting default interface %c%c\n",
 1521              		.loc 1 833 17 is_stmt 0 view .LVU539
 1522 0000 014B     		ldr	r3, .L156
 1523 0002 1860     		str	r0, [r3]
 835:lwIP/src/core/netif.c **** }
 1524              		.loc 1 835 91 is_stmt 1 view .LVU540
 836:lwIP/src/core/netif.c **** 
 1525              		.loc 1 836 1 is_stmt 0 view .LVU541
 1526 0004 7047     		bx	lr
 1527              	.L157:
 1528 0006 00BF     		.align	2
 1529              	.L156:
 1530 0008 00000000 		.word	netif_default
 1531              		.cfi_endproc
 1532              	.LFE118:
 1534              		.section	.rodata.netif_set_up.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/ccP9Y5Wu.s 			page 66


 1535              		.align	2
 1536              	.LC8:
 1537 0000 6E657469 		.ascii	"netif_set_up: invalid netif\000"
 1537      665F7365 
 1537      745F7570 
 1537      3A20696E 
 1537      76616C69 
 1538              		.section	.text.netif_set_up,"ax",%progbits
 1539              		.align	1
 1540              		.p2align 2,,3
 1541              		.global	netif_set_up
 1542              		.syntax unified
 1543              		.thumb
 1544              		.thumb_func
 1545              		.fpu fpv4-sp-d16
 1547              	netif_set_up:
 1548              	.LVL111:
 1549              	.LFB119:
 845:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 1550              		.loc 1 845 1 is_stmt 1 view -0
 1551              		.cfi_startproc
 1552              		@ args = 0, pretend = 0, frame = 0
 1553              		@ frame_needed = 0, uses_anonymous_args = 0
 846:lwIP/src/core/netif.c **** 
 1554              		.loc 1 846 28 view .LVU543
 848:lwIP/src/core/netif.c **** 
 1555              		.loc 1 848 3 view .LVU544
 848:lwIP/src/core/netif.c **** 
 1556              		.loc 1 848 3 view .LVU545
 845:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 1557              		.loc 1 845 1 is_stmt 0 view .LVU546
 1558 0000 10B5     		push	{r4, lr}
 1559              	.LCFI19:
 1560              		.cfi_def_cfa_offset 8
 1561              		.cfi_offset 4, -8
 1562              		.cfi_offset 14, -4
 848:lwIP/src/core/netif.c **** 
 1563              		.loc 1 848 3 view .LVU547
 1564 0002 C0B1     		cbz	r0, .L171
 848:lwIP/src/core/netif.c **** 
 1565              		.loc 1 848 3 is_stmt 1 discriminator 2 view .LVU548
 850:lwIP/src/core/netif.c ****     netif_set_flags(netif, NETIF_FLAG_UP);
 1566              		.loc 1 850 3 discriminator 2 view .LVU549
 850:lwIP/src/core/netif.c ****     netif_set_flags(netif, NETIF_FLAG_UP);
 1567              		.loc 1 850 14 is_stmt 0 discriminator 2 view .LVU550
 1568 0004 90F82520 		ldrb	r2, [r0, #37]	@ zero_extendqisi2
 1569 0008 0146     		mov	r1, r0
 850:lwIP/src/core/netif.c ****     netif_set_flags(netif, NETIF_FLAG_UP);
 1570              		.loc 1 850 6 discriminator 2 view .LVU551
 1571 000a D407     		lsls	r4, r2, #31
 1572 000c 00D5     		bpl	.L172
 1573              	.L158:
 870:lwIP/src/core/netif.c **** 
 1574              		.loc 1 870 1 view .LVU552
 1575 000e 10BD     		pop	{r4, pc}
 1576              	.L172:
 851:lwIP/src/core/netif.c **** 
ARM GAS  /tmp/ccP9Y5Wu.s 			page 67


 1577              		.loc 1 851 5 is_stmt 1 view .LVU553
 851:lwIP/src/core/netif.c **** 
 1578              		.loc 1 851 5 view .LVU554
 1579              	.LBB150:
 1580              	.LBB151:
 880:lwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 1581              		.loc 1 880 6 is_stmt 0 view .LVU555
 1582 0010 02F00503 		and	r3, r2, #5
 1583              	.LBE151:
 1584              	.LBE150:
 851:lwIP/src/core/netif.c **** 
 1585              		.loc 1 851 5 view .LVU556
 1586 0014 42F00104 		orr	r4, r2, #1
 1587              	.LBB155:
 1588              	.LBB152:
 880:lwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 1589              		.loc 1 880 6 view .LVU557
 1590 0018 43F00103 		orr	r3, r3, #1
 1591              	.LBE152:
 1592              	.LBE155:
 851:lwIP/src/core/netif.c **** 
 1593              		.loc 1 851 5 view .LVU558
 1594 001c 80F82540 		strb	r4, [r0, #37]
 851:lwIP/src/core/netif.c **** 
 1595              		.loc 1 851 5 is_stmt 1 view .LVU559
 853:lwIP/src/core/netif.c **** 
 1596              		.loc 1 853 39 view .LVU560
 855:lwIP/src/core/netif.c **** 
 1597              		.loc 1 855 33 view .LVU561
 865:lwIP/src/core/netif.c **** #if LWIP_IPV6
 1598              		.loc 1 865 5 view .LVU562
 1599              	.LVL112:
 1600              	.LBB156:
 1601              	.LBI150:
 875:lwIP/src/core/netif.c **** {
 1602              		.loc 1 875 1 view .LVU563
 1603              	.LBB153:
 877:lwIP/src/core/netif.c **** 
 1604              		.loc 1 877 3 view .LVU564
 877:lwIP/src/core/netif.c **** 
 1605              		.loc 1 877 3 view .LVU565
 877:lwIP/src/core/netif.c **** 
 1606              		.loc 1 877 3 view .LVU566
 880:lwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 1607              		.loc 1 880 3 view .LVU567
 880:lwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 1608              		.loc 1 880 6 is_stmt 0 view .LVU568
 1609 0020 052B     		cmp	r3, #5
 1610 0022 F4D1     		bne	.L158
 886:lwIP/src/core/netif.c ****       !ip4_addr_isany_val(*netif_ip4_addr(netif))) {
 1611              		.loc 1 886 3 is_stmt 1 view .LVU569
 886:lwIP/src/core/netif.c ****       !ip4_addr_isany_val(*netif_ip4_addr(netif))) {
 1612              		.loc 1 886 46 is_stmt 0 view .LVU570
 1613 0024 0368     		ldr	r3, [r0]
 1614 0026 002B     		cmp	r3, #0
 1615 0028 F1D0     		beq	.L158
 890:lwIP/src/core/netif.c ****       etharp_gratuitous(netif);
ARM GAS  /tmp/ccP9Y5Wu.s 			page 68


 1616              		.loc 1 890 5 is_stmt 1 view .LVU571
 890:lwIP/src/core/netif.c ****       etharp_gratuitous(netif);
 1617              		.loc 1 890 8 is_stmt 0 view .LVU572
 1618 002a 1307     		lsls	r3, r2, #28
 1619 002c EFD5     		bpl	.L158
 891:lwIP/src/core/netif.c ****     }
 1620              		.loc 1 891 7 is_stmt 1 view .LVU573
 1621              	.LBE153:
 1622              	.LBE156:
 870:lwIP/src/core/netif.c **** 
 1623              		.loc 1 870 1 is_stmt 0 view .LVU574
 1624 002e BDE81040 		pop	{r4, lr}
 1625              	.LCFI20:
 1626              		.cfi_remember_state
 1627              		.cfi_restore 14
 1628              		.cfi_restore 4
 1629              		.cfi_def_cfa_offset 0
 1630              	.LBB157:
 1631              	.LBB154:
 891:lwIP/src/core/netif.c ****     }
 1632              		.loc 1 891 7 view .LVU575
 1633 0032 FFF7FEBF 		b	etharp_request
 1634              	.LVL113:
 1635              	.L171:
 1636              	.LCFI21:
 1637              		.cfi_restore_state
 891:lwIP/src/core/netif.c ****     }
 1638              		.loc 1 891 7 view .LVU576
 1639              	.LBE154:
 1640              	.LBE157:
 848:lwIP/src/core/netif.c **** 
 1641              		.loc 1 848 3 is_stmt 1 discriminator 1 view .LVU577
 1642 0036 0248     		ldr	r0, .L173
 1643              	.LVL114:
 848:lwIP/src/core/netif.c **** 
 1644              		.loc 1 848 3 is_stmt 0 discriminator 1 view .LVU578
 1645 0038 FFF7FEFF 		bl	printf
 1646              	.LVL115:
 1647              	.L160:
 848:lwIP/src/core/netif.c **** 
 1648              		.loc 1 848 3 is_stmt 1 discriminator 1 view .LVU579
 848:lwIP/src/core/netif.c **** 
 1649              		.loc 1 848 3 discriminator 1 view .LVU580
 848:lwIP/src/core/netif.c **** 
 1650              		.loc 1 848 3 discriminator 1 view .LVU581
 848:lwIP/src/core/netif.c **** 
 1651              		.loc 1 848 3 discriminator 1 view .LVU582
 848:lwIP/src/core/netif.c **** 
 1652              		.loc 1 848 3 discriminator 1 view .LVU583
 848:lwIP/src/core/netif.c **** 
 1653              		.loc 1 848 3 discriminator 1 view .LVU584
 1654 003c FEE7     		b	.L160
 1655              	.L174:
 1656 003e 00BF     		.align	2
 1657              	.L173:
 1658 0040 00000000 		.word	.LC8
 1659              		.cfi_endproc
ARM GAS  /tmp/ccP9Y5Wu.s 			page 69


 1660              	.LFE119:
 1662              		.section	.rodata.netif_set_down.str1.4,"aMS",%progbits,1
 1663              		.align	2
 1664              	.LC9:
 1665 0000 6E657469 		.ascii	"netif_set_down: invalid netif\000"
 1665      665F7365 
 1665      745F646F 
 1665      776E3A20 
 1665      696E7661 
 1666              		.section	.text.netif_set_down,"ax",%progbits
 1667              		.align	1
 1668              		.p2align 2,,3
 1669              		.global	netif_set_down
 1670              		.syntax unified
 1671              		.thumb
 1672              		.thumb_func
 1673              		.fpu fpv4-sp-d16
 1675              	netif_set_down:
 1676              	.LVL116:
 1677              	.LFB121:
 920:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 1678              		.loc 1 920 1 view -0
 1679              		.cfi_startproc
 1680              		@ args = 0, pretend = 0, frame = 0
 1681              		@ frame_needed = 0, uses_anonymous_args = 0
 921:lwIP/src/core/netif.c **** 
 1682              		.loc 1 921 28 view .LVU586
 923:lwIP/src/core/netif.c **** 
 1683              		.loc 1 923 3 view .LVU587
 923:lwIP/src/core/netif.c **** 
 1684              		.loc 1 923 3 view .LVU588
 920:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 1685              		.loc 1 920 1 is_stmt 0 view .LVU589
 1686 0000 08B5     		push	{r3, lr}
 1687              	.LCFI22:
 1688              		.cfi_def_cfa_offset 8
 1689              		.cfi_offset 3, -8
 1690              		.cfi_offset 14, -4
 923:lwIP/src/core/netif.c **** 
 1691              		.loc 1 923 3 view .LVU590
 1692 0002 70B1     		cbz	r0, .L185
 923:lwIP/src/core/netif.c **** 
 1693              		.loc 1 923 3 is_stmt 1 discriminator 2 view .LVU591
 925:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 1694              		.loc 1 925 3 discriminator 2 view .LVU592
 925:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 1695              		.loc 1 925 12 is_stmt 0 discriminator 2 view .LVU593
 1696 0004 90F82520 		ldrb	r2, [r0, #37]	@ zero_extendqisi2
 925:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 1697              		.loc 1 925 6 discriminator 2 view .LVU594
 1698 0008 D107     		lsls	r1, r2, #31
 1699 000a 05D5     		bpl	.L175
 934:lwIP/src/core/netif.c ****     MIB2_COPY_SYSUPTIME_TO(&netif->ts);
 1700              		.loc 1 934 5 is_stmt 1 view .LVU595
 934:lwIP/src/core/netif.c ****     MIB2_COPY_SYSUPTIME_TO(&netif->ts);
 1701              		.loc 1 934 5 view .LVU596
 1702 000c 22F00101 		bic	r1, r2, #1
ARM GAS  /tmp/ccP9Y5Wu.s 			page 70


 938:lwIP/src/core/netif.c ****       etharp_cleanup_netif(netif);
 1703              		.loc 1 938 8 is_stmt 0 view .LVU597
 1704 0010 1307     		lsls	r3, r2, #28
 934:lwIP/src/core/netif.c ****     MIB2_COPY_SYSUPTIME_TO(&netif->ts);
 1705              		.loc 1 934 5 view .LVU598
 1706 0012 80F82510 		strb	r1, [r0, #37]
 934:lwIP/src/core/netif.c ****     MIB2_COPY_SYSUPTIME_TO(&netif->ts);
 1707              		.loc 1 934 5 is_stmt 1 view .LVU599
 935:lwIP/src/core/netif.c **** 
 1708              		.loc 1 935 39 view .LVU600
 938:lwIP/src/core/netif.c ****       etharp_cleanup_netif(netif);
 1709              		.loc 1 938 5 view .LVU601
 938:lwIP/src/core/netif.c ****       etharp_cleanup_netif(netif);
 1710              		.loc 1 938 8 is_stmt 0 view .LVU602
 1711 0016 00D4     		bmi	.L186
 1712              	.L175:
 949:lwIP/src/core/netif.c **** 
 1713              		.loc 1 949 1 view .LVU603
 1714 0018 08BD     		pop	{r3, pc}
 1715              	.L186:
 939:lwIP/src/core/netif.c ****     }
 1716              		.loc 1 939 7 is_stmt 1 view .LVU604
 949:lwIP/src/core/netif.c **** 
 1717              		.loc 1 949 1 is_stmt 0 view .LVU605
 1718 001a BDE80840 		pop	{r3, lr}
 1719              	.LCFI23:
 1720              		.cfi_remember_state
 1721              		.cfi_restore 14
 1722              		.cfi_restore 3
 1723              		.cfi_def_cfa_offset 0
 939:lwIP/src/core/netif.c ****     }
 1724              		.loc 1 939 7 view .LVU606
 1725 001e FFF7FEBF 		b	etharp_cleanup_netif
 1726              	.LVL117:
 1727              	.L185:
 1728              	.LCFI24:
 1729              		.cfi_restore_state
 923:lwIP/src/core/netif.c **** 
 1730              		.loc 1 923 3 is_stmt 1 discriminator 1 view .LVU607
 1731 0022 0248     		ldr	r0, .L187
 1732              	.LVL118:
 923:lwIP/src/core/netif.c **** 
 1733              		.loc 1 923 3 is_stmt 0 discriminator 1 view .LVU608
 1734 0024 FFF7FEFF 		bl	printf
 1735              	.LVL119:
 1736              	.L177:
 923:lwIP/src/core/netif.c **** 
 1737              		.loc 1 923 3 is_stmt 1 discriminator 1 view .LVU609
 923:lwIP/src/core/netif.c **** 
 1738              		.loc 1 923 3 discriminator 1 view .LVU610
 923:lwIP/src/core/netif.c **** 
 1739              		.loc 1 923 3 discriminator 1 view .LVU611
 923:lwIP/src/core/netif.c **** 
 1740              		.loc 1 923 3 discriminator 1 view .LVU612
 923:lwIP/src/core/netif.c **** 
 1741              		.loc 1 923 3 discriminator 1 view .LVU613
 923:lwIP/src/core/netif.c **** 
ARM GAS  /tmp/ccP9Y5Wu.s 			page 71


 1742              		.loc 1 923 3 discriminator 1 view .LVU614
 1743 0028 FEE7     		b	.L177
 1744              	.L188:
 1745 002a 00BF     		.align	2
 1746              	.L187:
 1747 002c 00000000 		.word	.LC9
 1748              		.cfi_endproc
 1749              	.LFE121:
 1751              		.section	.rodata.netif_set_link_up.str1.4,"aMS",%progbits,1
 1752              		.align	2
 1753              	.LC10:
 1754 0000 6E657469 		.ascii	"netif_set_link_up: invalid netif\000"
 1754      665F7365 
 1754      745F6C69 
 1754      6E6B5F75 
 1754      703A2069 
 1755              		.section	.text.netif_set_link_up,"ax",%progbits
 1756              		.align	1
 1757              		.p2align 2,,3
 1758              		.global	netif_set_link_up
 1759              		.syntax unified
 1760              		.thumb
 1761              		.thumb_func
 1762              		.fpu fpv4-sp-d16
 1764              	netif_set_link_up:
 1765              	.LVL120:
 1766              	.LFB122:
 989:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 1767              		.loc 1 989 1 view -0
 1768              		.cfi_startproc
 1769              		@ args = 0, pretend = 0, frame = 0
 1770              		@ frame_needed = 0, uses_anonymous_args = 0
 990:lwIP/src/core/netif.c **** 
 1771              		.loc 1 990 28 view .LVU616
 992:lwIP/src/core/netif.c **** 
 1772              		.loc 1 992 3 view .LVU617
 992:lwIP/src/core/netif.c **** 
 1773              		.loc 1 992 3 view .LVU618
 989:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 1774              		.loc 1 989 1 is_stmt 0 view .LVU619
 1775 0000 10B5     		push	{r4, lr}
 1776              	.LCFI25:
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 4, -8
 1779              		.cfi_offset 14, -4
 992:lwIP/src/core/netif.c **** 
 1780              		.loc 1 992 3 view .LVU620
 1781 0002 C0B1     		cbz	r0, .L202
 992:lwIP/src/core/netif.c **** 
 1782              		.loc 1 992 3 is_stmt 1 discriminator 2 view .LVU621
 994:lwIP/src/core/netif.c ****     netif_set_flags(netif, NETIF_FLAG_LINK_UP);
 1783              		.loc 1 994 3 discriminator 2 view .LVU622
 994:lwIP/src/core/netif.c ****     netif_set_flags(netif, NETIF_FLAG_LINK_UP);
 1784              		.loc 1 994 14 is_stmt 0 discriminator 2 view .LVU623
 1785 0004 90F82520 		ldrb	r2, [r0, #37]	@ zero_extendqisi2
 1786 0008 0146     		mov	r1, r0
 994:lwIP/src/core/netif.c ****     netif_set_flags(netif, NETIF_FLAG_LINK_UP);
ARM GAS  /tmp/ccP9Y5Wu.s 			page 72


 1787              		.loc 1 994 6 discriminator 2 view .LVU624
 1788 000a 5407     		lsls	r4, r2, #29
 1789 000c 00D5     		bpl	.L203
 1790              	.L189:
1019:lwIP/src/core/netif.c **** 
 1791              		.loc 1 1019 1 view .LVU625
 1792 000e 10BD     		pop	{r4, pc}
 1793              	.L203:
 995:lwIP/src/core/netif.c **** 
 1794              		.loc 1 995 5 is_stmt 1 view .LVU626
 995:lwIP/src/core/netif.c **** 
 1795              		.loc 1 995 5 view .LVU627
 1796              	.LBB160:
 1797              	.LBB161:
 880:lwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 1798              		.loc 1 880 6 is_stmt 0 view .LVU628
 1799 0010 02F00503 		and	r3, r2, #5
 1800              	.LBE161:
 1801              	.LBE160:
 995:lwIP/src/core/netif.c **** 
 1802              		.loc 1 995 5 view .LVU629
 1803 0014 42F00404 		orr	r4, r2, #4
 1804              	.LBB165:
 1805              	.LBB162:
 880:lwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 1806              		.loc 1 880 6 view .LVU630
 1807 0018 43F00403 		orr	r3, r3, #4
 1808              	.LBE162:
 1809              	.LBE165:
 995:lwIP/src/core/netif.c **** 
 1810              		.loc 1 995 5 view .LVU631
 1811 001c 80F82540 		strb	r4, [r0, #37]
 995:lwIP/src/core/netif.c **** 
 1812              		.loc 1 995 5 is_stmt 1 view .LVU632
1005:lwIP/src/core/netif.c **** #if LWIP_IPV6
 1813              		.loc 1 1005 5 view .LVU633
 1814              	.LVL121:
 1815              	.LBB166:
 1816              	.LBI160:
 875:lwIP/src/core/netif.c **** {
 1817              		.loc 1 875 1 view .LVU634
 1818              	.LBB163:
 877:lwIP/src/core/netif.c **** 
 1819              		.loc 1 877 3 view .LVU635
 877:lwIP/src/core/netif.c **** 
 1820              		.loc 1 877 3 view .LVU636
 877:lwIP/src/core/netif.c **** 
 1821              		.loc 1 877 3 view .LVU637
 880:lwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 1822              		.loc 1 880 3 view .LVU638
 880:lwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 1823              		.loc 1 880 6 is_stmt 0 view .LVU639
 1824 0020 052B     		cmp	r3, #5
 1825 0022 F4D1     		bne	.L189
 886:lwIP/src/core/netif.c ****       !ip4_addr_isany_val(*netif_ip4_addr(netif))) {
 1826              		.loc 1 886 3 is_stmt 1 view .LVU640
 886:lwIP/src/core/netif.c ****       !ip4_addr_isany_val(*netif_ip4_addr(netif))) {
ARM GAS  /tmp/ccP9Y5Wu.s 			page 73


 1827              		.loc 1 886 46 is_stmt 0 view .LVU641
 1828 0024 0368     		ldr	r3, [r0]
 1829 0026 002B     		cmp	r3, #0
 1830 0028 F1D0     		beq	.L189
 890:lwIP/src/core/netif.c ****       etharp_gratuitous(netif);
 1831              		.loc 1 890 5 is_stmt 1 view .LVU642
 890:lwIP/src/core/netif.c ****       etharp_gratuitous(netif);
 1832              		.loc 1 890 8 is_stmt 0 view .LVU643
 1833 002a 1307     		lsls	r3, r2, #28
 1834 002c EFD5     		bpl	.L189
 891:lwIP/src/core/netif.c ****     }
 1835              		.loc 1 891 7 is_stmt 1 view .LVU644
 1836              	.LBE163:
 1837              	.LBE166:
1019:lwIP/src/core/netif.c **** 
 1838              		.loc 1 1019 1 is_stmt 0 view .LVU645
 1839 002e BDE81040 		pop	{r4, lr}
 1840              	.LCFI26:
 1841              		.cfi_remember_state
 1842              		.cfi_restore 14
 1843              		.cfi_restore 4
 1844              		.cfi_def_cfa_offset 0
 1845              	.LBB167:
 1846              	.LBB164:
 891:lwIP/src/core/netif.c ****     }
 1847              		.loc 1 891 7 view .LVU646
 1848 0032 FFF7FEBF 		b	etharp_request
 1849              	.LVL122:
 1850              	.L202:
 1851              	.LCFI27:
 1852              		.cfi_restore_state
 891:lwIP/src/core/netif.c ****     }
 1853              		.loc 1 891 7 view .LVU647
 1854              	.LBE164:
 1855              	.LBE167:
 992:lwIP/src/core/netif.c **** 
 1856              		.loc 1 992 3 is_stmt 1 discriminator 1 view .LVU648
 1857 0036 0248     		ldr	r0, .L204
 1858              	.LVL123:
 992:lwIP/src/core/netif.c **** 
 1859              		.loc 1 992 3 is_stmt 0 discriminator 1 view .LVU649
 1860 0038 FFF7FEFF 		bl	printf
 1861              	.LVL124:
 1862              	.L191:
 992:lwIP/src/core/netif.c **** 
 1863              		.loc 1 992 3 is_stmt 1 discriminator 1 view .LVU650
 992:lwIP/src/core/netif.c **** 
 1864              		.loc 1 992 3 discriminator 1 view .LVU651
 992:lwIP/src/core/netif.c **** 
 1865              		.loc 1 992 3 discriminator 1 view .LVU652
 992:lwIP/src/core/netif.c **** 
 1866              		.loc 1 992 3 discriminator 1 view .LVU653
 992:lwIP/src/core/netif.c **** 
 1867              		.loc 1 992 3 discriminator 1 view .LVU654
 992:lwIP/src/core/netif.c **** 
 1868              		.loc 1 992 3 discriminator 1 view .LVU655
 1869 003c FEE7     		b	.L191
ARM GAS  /tmp/ccP9Y5Wu.s 			page 74


 1870              	.L205:
 1871 003e 00BF     		.align	2
 1872              	.L204:
 1873 0040 00000000 		.word	.LC10
 1874              		.cfi_endproc
 1875              	.LFE122:
 1877              		.section	.rodata.netif_set_link_down.str1.4,"aMS",%progbits,1
 1878              		.align	2
 1879              	.LC11:
 1880 0000 6E657469 		.ascii	"netif_set_link_down: invalid netif\000"
 1880      665F7365 
 1880      745F6C69 
 1880      6E6B5F64 
 1880      6F776E3A 
 1881              		.section	.text.netif_set_link_down,"ax",%progbits
 1882              		.align	1
 1883              		.p2align 2,,3
 1884              		.global	netif_set_link_down
 1885              		.syntax unified
 1886              		.thumb
 1887              		.thumb_func
 1888              		.fpu fpv4-sp-d16
 1890              	netif_set_link_down:
 1891              	.LVL125:
 1892              	.LFB123:
1027:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 1893              		.loc 1 1027 1 view -0
 1894              		.cfi_startproc
 1895              		@ args = 0, pretend = 0, frame = 0
 1896              		@ frame_needed = 0, uses_anonymous_args = 0
1028:lwIP/src/core/netif.c **** 
 1897              		.loc 1 1028 28 view .LVU657
1030:lwIP/src/core/netif.c **** 
 1898              		.loc 1 1030 3 view .LVU658
1030:lwIP/src/core/netif.c **** 
 1899              		.loc 1 1030 3 view .LVU659
1027:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 1900              		.loc 1 1027 1 is_stmt 0 view .LVU660
 1901 0000 08B5     		push	{r3, lr}
 1902              	.LCFI28:
 1903              		.cfi_def_cfa_offset 8
 1904              		.cfi_offset 3, -8
 1905              		.cfi_offset 14, -4
1030:lwIP/src/core/netif.c **** 
 1906              		.loc 1 1030 3 view .LVU661
 1907 0002 40B1     		cbz	r0, .L214
1030:lwIP/src/core/netif.c **** 
 1908              		.loc 1 1030 3 is_stmt 1 discriminator 2 view .LVU662
1032:lwIP/src/core/netif.c ****     netif_clear_flags(netif, NETIF_FLAG_LINK_UP);
 1909              		.loc 1 1032 3 discriminator 2 view .LVU663
1032:lwIP/src/core/netif.c ****     netif_clear_flags(netif, NETIF_FLAG_LINK_UP);
 1910              		.loc 1 1032 12 is_stmt 0 discriminator 2 view .LVU664
 1911 0004 90F82530 		ldrb	r3, [r0, #37]	@ zero_extendqisi2
1032:lwIP/src/core/netif.c ****     netif_clear_flags(netif, NETIF_FLAG_LINK_UP);
 1912              		.loc 1 1032 6 discriminator 2 view .LVU665
 1913 0008 5A07     		lsls	r2, r3, #29
 1914 000a 03D5     		bpl	.L206
ARM GAS  /tmp/ccP9Y5Wu.s 			page 75


1033:lwIP/src/core/netif.c ****     NETIF_LINK_CALLBACK(netif);
 1915              		.loc 1 1033 5 is_stmt 1 view .LVU666
1033:lwIP/src/core/netif.c ****     NETIF_LINK_CALLBACK(netif);
 1916              		.loc 1 1033 5 view .LVU667
 1917 000c 23F00403 		bic	r3, r3, #4
 1918 0010 80F82530 		strb	r3, [r0, #37]
1033:lwIP/src/core/netif.c ****     NETIF_LINK_CALLBACK(netif);
 1919              		.loc 1 1033 5 view .LVU668
1034:lwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 1920              		.loc 1 1034 31 view .LVU669
 1921              	.L206:
1043:lwIP/src/core/netif.c **** 
 1922              		.loc 1 1043 1 is_stmt 0 view .LVU670
 1923 0014 08BD     		pop	{r3, pc}
 1924              	.L214:
1030:lwIP/src/core/netif.c **** 
 1925              		.loc 1 1030 3 is_stmt 1 discriminator 1 view .LVU671
 1926 0016 0248     		ldr	r0, .L215
 1927              	.LVL126:
1030:lwIP/src/core/netif.c **** 
 1928              		.loc 1 1030 3 is_stmt 0 discriminator 1 view .LVU672
 1929 0018 FFF7FEFF 		bl	printf
 1930              	.LVL127:
 1931              	.L208:
1030:lwIP/src/core/netif.c **** 
 1932              		.loc 1 1030 3 is_stmt 1 discriminator 1 view .LVU673
1030:lwIP/src/core/netif.c **** 
 1933              		.loc 1 1030 3 discriminator 1 view .LVU674
1030:lwIP/src/core/netif.c **** 
 1934              		.loc 1 1030 3 discriminator 1 view .LVU675
1030:lwIP/src/core/netif.c **** 
 1935              		.loc 1 1030 3 discriminator 1 view .LVU676
1030:lwIP/src/core/netif.c **** 
 1936              		.loc 1 1030 3 discriminator 1 view .LVU677
1030:lwIP/src/core/netif.c **** 
 1937              		.loc 1 1030 3 discriminator 1 view .LVU678
 1938 001c FEE7     		b	.L208
 1939              	.L216:
 1940 001e 00BF     		.align	2
 1941              	.L215:
 1942 0020 00000000 		.word	.LC11
 1943              		.cfi_endproc
 1944              	.LFE123:
 1946              		.section	.text.netif_name_to_index,"ax",%progbits
 1947              		.align	1
 1948              		.p2align 2,,3
 1949              		.global	netif_name_to_index
 1950              		.syntax unified
 1951              		.thumb
 1952              		.thumb_func
 1953              		.fpu fpv4-sp-d16
 1955              	netif_name_to_index:
 1956              	.LVL128:
 1957              	.LFB125:
1627:lwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
1628:lwIP/src/core/netif.c **** 
1629:lwIP/src/core/netif.c **** /**
ARM GAS  /tmp/ccP9Y5Wu.s 			page 76


1630:lwIP/src/core/netif.c **** * @ingroup netif
1631:lwIP/src/core/netif.c **** * Return the interface index for the netif with name
1632:lwIP/src/core/netif.c **** * or NETIF_NO_INDEX if not found/on error
1633:lwIP/src/core/netif.c **** *
1634:lwIP/src/core/netif.c **** * @param name the name of the netif
1635:lwIP/src/core/netif.c **** */
1636:lwIP/src/core/netif.c **** u8_t
1637:lwIP/src/core/netif.c **** netif_name_to_index(const char *name)
1638:lwIP/src/core/netif.c **** {
 1958              		.loc 1 1638 1 view -0
 1959              		.cfi_startproc
 1960              		@ args = 0, pretend = 0, frame = 0
 1961              		@ frame_needed = 0, uses_anonymous_args = 0
1639:lwIP/src/core/netif.c ****   struct netif *netif = netif_find(name);
 1962              		.loc 1 1639 3 view .LVU680
 1963              	.LBB170:
 1964              	.LBI170:
1640:lwIP/src/core/netif.c ****   if (netif != NULL) {
1641:lwIP/src/core/netif.c ****     return netif_get_index(netif);
1642:lwIP/src/core/netif.c ****   }
1643:lwIP/src/core/netif.c ****   /* No name found, return invalid index */
1644:lwIP/src/core/netif.c ****   return NETIF_NO_INDEX;
1645:lwIP/src/core/netif.c **** }
1646:lwIP/src/core/netif.c **** 
1647:lwIP/src/core/netif.c **** /**
1648:lwIP/src/core/netif.c **** * @ingroup netif
1649:lwIP/src/core/netif.c **** * Return the interface name for the netif matching index
1650:lwIP/src/core/netif.c **** * or NULL if not found/on error
1651:lwIP/src/core/netif.c **** *
1652:lwIP/src/core/netif.c **** * @param idx the interface index of the netif
1653:lwIP/src/core/netif.c **** * @param name char buffer of at least NETIF_NAMESIZE bytes
1654:lwIP/src/core/netif.c **** */
1655:lwIP/src/core/netif.c **** char *
1656:lwIP/src/core/netif.c **** netif_index_to_name(u8_t idx, char *name)
1657:lwIP/src/core/netif.c **** {
1658:lwIP/src/core/netif.c ****   struct netif *netif = netif_get_by_index(idx);
1659:lwIP/src/core/netif.c **** 
1660:lwIP/src/core/netif.c ****   if (netif != NULL) {
1661:lwIP/src/core/netif.c ****     name[0] = netif->name[0];
1662:lwIP/src/core/netif.c ****     name[1] = netif->name[1];
1663:lwIP/src/core/netif.c ****     lwip_itoa(&name[2], NETIF_NAMESIZE - 2, netif_index_to_num(idx));
1664:lwIP/src/core/netif.c ****     return name;
1665:lwIP/src/core/netif.c ****   }
1666:lwIP/src/core/netif.c ****   return NULL;
1667:lwIP/src/core/netif.c **** }
1668:lwIP/src/core/netif.c **** 
1669:lwIP/src/core/netif.c **** /**
1670:lwIP/src/core/netif.c **** * @ingroup netif
1671:lwIP/src/core/netif.c **** * Return the interface for the netif index
1672:lwIP/src/core/netif.c **** *
1673:lwIP/src/core/netif.c **** * @param idx index of netif to find
1674:lwIP/src/core/netif.c **** */
1675:lwIP/src/core/netif.c **** struct netif *
1676:lwIP/src/core/netif.c **** netif_get_by_index(u8_t idx)
1677:lwIP/src/core/netif.c **** {
1678:lwIP/src/core/netif.c ****   struct netif *netif;
1679:lwIP/src/core/netif.c **** 
ARM GAS  /tmp/ccP9Y5Wu.s 			page 77


1680:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1681:lwIP/src/core/netif.c **** 
1682:lwIP/src/core/netif.c ****   if (idx != NETIF_NO_INDEX) {
1683:lwIP/src/core/netif.c ****     NETIF_FOREACH(netif) {
1684:lwIP/src/core/netif.c ****       if (idx == netif_get_index(netif)) {
1685:lwIP/src/core/netif.c ****         return netif; /* found! */
1686:lwIP/src/core/netif.c ****       }
1687:lwIP/src/core/netif.c ****     }
1688:lwIP/src/core/netif.c ****   }
1689:lwIP/src/core/netif.c **** 
1690:lwIP/src/core/netif.c ****   return NULL;
1691:lwIP/src/core/netif.c **** }
1692:lwIP/src/core/netif.c **** 
1693:lwIP/src/core/netif.c **** /**
1694:lwIP/src/core/netif.c ****  * @ingroup netif
1695:lwIP/src/core/netif.c ****  * Find a network interface by searching for its name
1696:lwIP/src/core/netif.c ****  *
1697:lwIP/src/core/netif.c ****  * @param name the name of the netif (like netif->name) plus concatenated number
1698:lwIP/src/core/netif.c ****  * in ascii representation (e.g. 'en0')
1699:lwIP/src/core/netif.c ****  */
1700:lwIP/src/core/netif.c **** struct netif *
1701:lwIP/src/core/netif.c **** netif_find(const char *name)
 1965              		.loc 1 1701 1 view .LVU681
 1966              	.LBB171:
1702:lwIP/src/core/netif.c **** {
1703:lwIP/src/core/netif.c ****   struct netif *netif;
 1967              		.loc 1 1703 3 view .LVU682
1704:lwIP/src/core/netif.c ****   u8_t num;
 1968              		.loc 1 1704 3 view .LVU683
1705:lwIP/src/core/netif.c **** 
1706:lwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 1969              		.loc 1 1706 28 view .LVU684
1707:lwIP/src/core/netif.c **** 
1708:lwIP/src/core/netif.c ****   if (name == NULL) {
 1970              		.loc 1 1708 3 view .LVU685
 1971              		.loc 1 1708 6 is_stmt 0 view .LVU686
 1972 0000 D8B1     		cbz	r0, .L227
1709:lwIP/src/core/netif.c ****     return NULL;
1710:lwIP/src/core/netif.c ****   }
1711:lwIP/src/core/netif.c **** 
1712:lwIP/src/core/netif.c ****   num = (u8_t)atoi(&name[2]);
 1973              		.loc 1 1712 3 is_stmt 1 view .LVU687
 1974              	.LBE171:
 1975              	.LBE170:
1638:lwIP/src/core/netif.c ****   struct netif *netif = netif_find(name);
 1976              		.loc 1 1638 1 is_stmt 0 view .LVU688
 1977 0002 10B5     		push	{r4, lr}
 1978              	.LCFI29:
 1979              		.cfi_def_cfa_offset 8
 1980              		.cfi_offset 4, -8
 1981              		.cfi_offset 14, -4
 1982 0004 0446     		mov	r4, r0
 1983              	.LBB174:
 1984              	.LBB172:
 1985              		.loc 1 1712 15 view .LVU689
 1986 0006 0230     		adds	r0, r0, #2
 1987              	.LVL129:
ARM GAS  /tmp/ccP9Y5Wu.s 			page 78


 1988              		.loc 1 1712 15 view .LVU690
 1989 0008 FFF7FEFF 		bl	atoi
 1990              	.LVL130:
1713:lwIP/src/core/netif.c **** 
1714:lwIP/src/core/netif.c ****   NETIF_FOREACH(netif) {
 1991              		.loc 1 1714 3 view .LVU691
 1992 000c 0C4A     		ldr	r2, .L229
1712:lwIP/src/core/netif.c **** 
 1993              		.loc 1 1712 7 view .LVU692
 1994 000e C3B2     		uxtb	r3, r0
 1995              	.LVL131:
 1996              		.loc 1 1714 3 is_stmt 1 view .LVU693
 1997 0010 1268     		ldr	r2, [r2]
 1998              	.LVL132:
 1999              		.loc 1 1714 3 is_stmt 0 view .LVU694
 2000 0012 6AB1     		cbz	r2, .L220
1715:lwIP/src/core/netif.c ****     if (num == netif->num &&
 2001              		.loc 1 1715 5 is_stmt 1 view .LVU695
 2002              		.loc 1 1715 21 is_stmt 0 view .LVU696
 2003 0014 92F82810 		ldrb	r1, [r2, #40]	@ zero_extendqisi2
 2004              		.loc 1 1715 8 view .LVU697
 2005 0018 8B42     		cmp	r3, r1
 2006 001a 09D1     		bne	.L220
 2007              		.loc 1 1715 27 view .LVU698
 2008 001c 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 2009 001e 92F82610 		ldrb	r1, [r2, #38]	@ zero_extendqisi2
 2010 0022 8842     		cmp	r0, r1
 2011 0024 04D1     		bne	.L220
1716:lwIP/src/core/netif.c ****         name[0] == netif->name[0] &&
 2012              		.loc 1 1716 35 view .LVU699
 2013 0026 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 2014 0028 92F82720 		ldrb	r2, [r2, #39]	@ zero_extendqisi2
 2015              	.LVL133:
 2016              		.loc 1 1716 35 view .LVU700
 2017 002c 9142     		cmp	r1, r2
 2018 002e 01D0     		beq	.L228
 2019              	.L220:
 2020              	.LBE172:
 2021              	.LBE174:
1644:lwIP/src/core/netif.c **** }
 2022              		.loc 1 1644 10 view .LVU701
 2023 0030 0020     		movs	r0, #0
 2024              	.LVL134:
1645:lwIP/src/core/netif.c **** 
 2025              		.loc 1 1645 1 view .LVU702
 2026 0032 10BD     		pop	{r4, pc}
 2027              	.LVL135:
 2028              	.L228:
 2029              	.LBB175:
 2030              	.LBB173:
1717:lwIP/src/core/netif.c ****         name[1] == netif->name[1]) {
1718:lwIP/src/core/netif.c ****       LWIP_DEBUGF(NETIF_DEBUG, ("netif_find: found %c%c\n", name[0], name[1]));
 2031              		.loc 1 1718 79 is_stmt 1 view .LVU703
1719:lwIP/src/core/netif.c ****       return netif;
 2032              		.loc 1 1719 7 view .LVU704
 2033              		.loc 1 1719 7 is_stmt 0 view .LVU705
 2034              	.LBE173:
ARM GAS  /tmp/ccP9Y5Wu.s 			page 79


 2035              	.LBE175:
1640:lwIP/src/core/netif.c ****     return netif_get_index(netif);
 2036              		.loc 1 1640 3 is_stmt 1 view .LVU706
1641:lwIP/src/core/netif.c ****   }
 2037              		.loc 1 1641 5 view .LVU707
1641:lwIP/src/core/netif.c ****   }
 2038              		.loc 1 1641 12 is_stmt 0 view .LVU708
 2039 0034 581C     		adds	r0, r3, #1
 2040 0036 C0B2     		uxtb	r0, r0
 2041              	.LVL136:
1645:lwIP/src/core/netif.c **** 
 2042              		.loc 1 1645 1 view .LVU709
 2043 0038 10BD     		pop	{r4, pc}
 2044              	.LVL137:
 2045              	.L227:
 2046              	.LCFI30:
 2047              		.cfi_def_cfa_offset 0
 2048              		.cfi_restore 4
 2049              		.cfi_restore 14
1644:lwIP/src/core/netif.c **** }
 2050              		.loc 1 1644 10 view .LVU710
 2051 003a 0020     		movs	r0, #0
 2052              	.LVL138:
1645:lwIP/src/core/netif.c **** 
 2053              		.loc 1 1645 1 view .LVU711
 2054 003c 7047     		bx	lr
 2055              	.L230:
 2056 003e 00BF     		.align	2
 2057              	.L229:
 2058 0040 00000000 		.word	netif_default
 2059              		.cfi_endproc
 2060              	.LFE125:
 2062              		.section	.text.netif_index_to_name,"ax",%progbits
 2063              		.align	1
 2064              		.p2align 2,,3
 2065              		.global	netif_index_to_name
 2066              		.syntax unified
 2067              		.thumb
 2068              		.thumb_func
 2069              		.fpu fpv4-sp-d16
 2071              	netif_index_to_name:
 2072              	.LVL139:
 2073              	.LFB126:
1657:lwIP/src/core/netif.c ****   struct netif *netif = netif_get_by_index(idx);
 2074              		.loc 1 1657 1 is_stmt 1 view -0
 2075              		.cfi_startproc
 2076              		@ args = 0, pretend = 0, frame = 0
 2077              		@ frame_needed = 0, uses_anonymous_args = 0
1658:lwIP/src/core/netif.c **** 
 2078              		.loc 1 1658 3 view .LVU713
 2079              	.LBB176:
 2080              	.LBI176:
1676:lwIP/src/core/netif.c **** {
 2081              		.loc 1 1676 1 view .LVU714
 2082              	.LBB177:
1678:lwIP/src/core/netif.c **** 
 2083              		.loc 1 1678 3 view .LVU715
ARM GAS  /tmp/ccP9Y5Wu.s 			page 80


1680:lwIP/src/core/netif.c **** 
 2084              		.loc 1 1680 28 view .LVU716
1682:lwIP/src/core/netif.c ****     NETIF_FOREACH(netif) {
 2085              		.loc 1 1682 3 view .LVU717
 2086              	.LBE177:
 2087              	.LBE176:
1657:lwIP/src/core/netif.c ****   struct netif *netif = netif_get_by_index(idx);
 2088              		.loc 1 1657 1 is_stmt 0 view .LVU718
 2089 0000 38B5     		push	{r3, r4, r5, lr}
 2090              	.LCFI31:
 2091              		.cfi_def_cfa_offset 16
 2092              		.cfi_offset 3, -16
 2093              		.cfi_offset 4, -12
 2094              		.cfi_offset 5, -8
 2095              		.cfi_offset 14, -4
 2096              	.LBB180:
 2097              	.LBB178:
1682:lwIP/src/core/netif.c ****     NETIF_FOREACH(netif) {
 2098              		.loc 1 1682 6 view .LVU719
 2099 0002 40B1     		cbz	r0, .L234
1683:lwIP/src/core/netif.c ****       if (idx == netif_get_index(netif)) {
 2100              		.loc 1 1683 5 is_stmt 1 view .LVU720
 2101 0004 0D4B     		ldr	r3, .L240
 2102 0006 1B68     		ldr	r3, [r3]
 2103              	.LVL140:
1683:lwIP/src/core/netif.c ****       if (idx == netif_get_index(netif)) {
 2104              		.loc 1 1683 5 is_stmt 0 view .LVU721
 2105 0008 33B1     		cbz	r3, .L231
1684:lwIP/src/core/netif.c ****         return netif; /* found! */
 2106              		.loc 1 1684 7 is_stmt 1 view .LVU722
1684:lwIP/src/core/netif.c ****         return netif; /* found! */
 2107              		.loc 1 1684 18 is_stmt 0 view .LVU723
 2108 000a 93F82820 		ldrb	r2, [r3, #40]	@ zero_extendqisi2
 2109 000e 0132     		adds	r2, r2, #1
1684:lwIP/src/core/netif.c ****         return netif; /* found! */
 2110              		.loc 1 1684 10 view .LVU724
 2111 0010 D2B2     		uxtb	r2, r2
 2112 0012 9042     		cmp	r0, r2
 2113 0014 02D0     		beq	.L239
 2114              	.LVL141:
 2115              	.L234:
1684:lwIP/src/core/netif.c ****         return netif; /* found! */
 2116              		.loc 1 1684 10 view .LVU725
 2117              	.LBE178:
 2118              	.LBE180:
1666:lwIP/src/core/netif.c **** }
 2119              		.loc 1 1666 10 view .LVU726
 2120 0016 0023     		movs	r3, #0
 2121              	.LVL142:
 2122              	.L231:
1667:lwIP/src/core/netif.c **** 
 2123              		.loc 1 1667 1 view .LVU727
 2124 0018 1846     		mov	r0, r3
 2125              	.LVL143:
1667:lwIP/src/core/netif.c **** 
 2126              		.loc 1 1667 1 view .LVU728
 2127 001a 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccP9Y5Wu.s 			page 81


 2128              	.LVL144:
 2129              	.L239:
 2130              	.LBB181:
 2131              	.LBB179:
1685:lwIP/src/core/netif.c ****       }
 2132              		.loc 1 1685 9 is_stmt 1 view .LVU729
1685:lwIP/src/core/netif.c ****       }
 2133              		.loc 1 1685 9 is_stmt 0 view .LVU730
 2134              	.LBE179:
 2135              	.LBE181:
1660:lwIP/src/core/netif.c ****     name[0] = netif->name[0];
 2136              		.loc 1 1660 3 is_stmt 1 view .LVU731
1661:lwIP/src/core/netif.c ****     name[1] = netif->name[1];
 2137              		.loc 1 1661 5 view .LVU732
 2138 001c 0C46     		mov	r4, r1
1661:lwIP/src/core/netif.c ****     name[1] = netif->name[1];
 2139              		.loc 1 1661 26 is_stmt 0 view .LVU733
 2140 001e 93F82650 		ldrb	r5, [r3, #38]	@ zero_extendqisi2
1663:lwIP/src/core/netif.c ****     return name;
 2141              		.loc 1 1663 5 view .LVU734
 2142 0022 421E     		subs	r2, r0, #1
 2143 0024 0421     		movs	r1, #4
 2144              	.LVL145:
1661:lwIP/src/core/netif.c ****     name[1] = netif->name[1];
 2145              		.loc 1 1661 13 view .LVU735
 2146 0026 2570     		strb	r5, [r4]
1662:lwIP/src/core/netif.c ****     lwip_itoa(&name[2], NETIF_NAMESIZE - 2, netif_index_to_num(idx));
 2147              		.loc 1 1662 5 is_stmt 1 view .LVU736
1663:lwIP/src/core/netif.c ****     return name;
 2148              		.loc 1 1663 5 is_stmt 0 view .LVU737
 2149 0028 A01C     		adds	r0, r4, #2
 2150              	.LVL146:
1662:lwIP/src/core/netif.c ****     lwip_itoa(&name[2], NETIF_NAMESIZE - 2, netif_index_to_num(idx));
 2151              		.loc 1 1662 26 view .LVU738
 2152 002a 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 2153              	.LVL147:
1662:lwIP/src/core/netif.c ****     lwip_itoa(&name[2], NETIF_NAMESIZE - 2, netif_index_to_num(idx));
 2154              		.loc 1 1662 13 view .LVU739
 2155 002e 6370     		strb	r3, [r4, #1]
1663:lwIP/src/core/netif.c ****     return name;
 2156              		.loc 1 1663 5 is_stmt 1 view .LVU740
 2157 0030 FFF7FEFF 		bl	lwip_itoa
 2158              	.LVL148:
1664:lwIP/src/core/netif.c ****   }
 2159              		.loc 1 1664 5 view .LVU741
1664:lwIP/src/core/netif.c ****   }
 2160              		.loc 1 1664 12 is_stmt 0 view .LVU742
 2161 0034 2346     		mov	r3, r4
1667:lwIP/src/core/netif.c **** 
 2162              		.loc 1 1667 1 view .LVU743
 2163 0036 1846     		mov	r0, r3
 2164 0038 38BD     		pop	{r3, r4, r5, pc}
 2165              	.LVL149:
 2166              	.L241:
1667:lwIP/src/core/netif.c **** 
 2167              		.loc 1 1667 1 view .LVU744
 2168 003a 00BF     		.align	2
ARM GAS  /tmp/ccP9Y5Wu.s 			page 82


 2169              	.L240:
 2170 003c 00000000 		.word	netif_default
 2171              		.cfi_endproc
 2172              	.LFE126:
 2174              		.section	.text.netif_get_by_index,"ax",%progbits
 2175              		.align	1
 2176              		.p2align 2,,3
 2177              		.global	netif_get_by_index
 2178              		.syntax unified
 2179              		.thumb
 2180              		.thumb_func
 2181              		.fpu fpv4-sp-d16
 2183              	netif_get_by_index:
 2184              	.LVL150:
 2185              	.LFB127:
1677:lwIP/src/core/netif.c ****   struct netif *netif;
 2186              		.loc 1 1677 1 is_stmt 1 view -0
 2187              		.cfi_startproc
 2188              		@ args = 0, pretend = 0, frame = 0
 2189              		@ frame_needed = 0, uses_anonymous_args = 0
 2190              		@ link register save eliminated.
1678:lwIP/src/core/netif.c **** 
 2191              		.loc 1 1678 3 view .LVU746
1680:lwIP/src/core/netif.c **** 
 2192              		.loc 1 1680 28 view .LVU747
1682:lwIP/src/core/netif.c ****     NETIF_FOREACH(netif) {
 2193              		.loc 1 1682 3 view .LVU748
1682:lwIP/src/core/netif.c ****     NETIF_FOREACH(netif) {
 2194              		.loc 1 1682 6 is_stmt 0 view .LVU749
 2195 0000 58B1     		cbz	r0, .L244
1683:lwIP/src/core/netif.c ****       if (idx == netif_get_index(netif)) {
 2196              		.loc 1 1683 5 is_stmt 1 view .LVU750
 2197 0002 074B     		ldr	r3, .L249
 2198 0004 1B68     		ldr	r3, [r3]
 2199              	.LVL151:
1683:lwIP/src/core/netif.c ****       if (idx == netif_get_index(netif)) {
 2200              		.loc 1 1683 5 is_stmt 0 view .LVU751
 2201 0006 33B1     		cbz	r3, .L242
1684:lwIP/src/core/netif.c ****         return netif; /* found! */
 2202              		.loc 1 1684 7 is_stmt 1 view .LVU752
1684:lwIP/src/core/netif.c ****         return netif; /* found! */
 2203              		.loc 1 1684 18 is_stmt 0 view .LVU753
 2204 0008 93F82820 		ldrb	r2, [r3, #40]	@ zero_extendqisi2
 2205 000c 0132     		adds	r2, r2, #1
1684:lwIP/src/core/netif.c ****         return netif; /* found! */
 2206              		.loc 1 1684 10 view .LVU754
 2207 000e D2B2     		uxtb	r2, r2
1690:lwIP/src/core/netif.c **** }
 2208              		.loc 1 1690 10 view .LVU755
 2209 0010 8242     		cmp	r2, r0
 2210 0012 18BF     		it	ne
 2211 0014 0023     		movne	r3, #0
 2212              	.LVL152:
 2213              	.L242:
1691:lwIP/src/core/netif.c **** 
 2214              		.loc 1 1691 1 view .LVU756
 2215 0016 1846     		mov	r0, r3
ARM GAS  /tmp/ccP9Y5Wu.s 			page 83


 2216              	.LVL153:
1691:lwIP/src/core/netif.c **** 
 2217              		.loc 1 1691 1 view .LVU757
 2218 0018 7047     		bx	lr
 2219              	.LVL154:
 2220              	.L244:
1690:lwIP/src/core/netif.c **** }
 2221              		.loc 1 1690 10 view .LVU758
 2222 001a 0346     		mov	r3, r0
1691:lwIP/src/core/netif.c **** 
 2223              		.loc 1 1691 1 view .LVU759
 2224 001c 1846     		mov	r0, r3
 2225              	.LVL155:
1691:lwIP/src/core/netif.c **** 
 2226              		.loc 1 1691 1 view .LVU760
 2227 001e 7047     		bx	lr
 2228              	.L250:
 2229              		.align	2
 2230              	.L249:
 2231 0020 00000000 		.word	netif_default
 2232              		.cfi_endproc
 2233              	.LFE127:
 2235              		.section	.text.netif_find,"ax",%progbits
 2236              		.align	1
 2237              		.p2align 2,,3
 2238              		.global	netif_find
 2239              		.syntax unified
 2240              		.thumb
 2241              		.thumb_func
 2242              		.fpu fpv4-sp-d16
 2244              	netif_find:
 2245              	.LVL156:
 2246              	.LFB128:
1702:lwIP/src/core/netif.c ****   struct netif *netif;
 2247              		.loc 1 1702 1 is_stmt 1 view -0
 2248              		.cfi_startproc
 2249              		@ args = 0, pretend = 0, frame = 0
 2250              		@ frame_needed = 0, uses_anonymous_args = 0
1703:lwIP/src/core/netif.c ****   u8_t num;
 2251              		.loc 1 1703 3 view .LVU762
1704:lwIP/src/core/netif.c **** 
 2252              		.loc 1 1704 3 view .LVU763
1706:lwIP/src/core/netif.c **** 
 2253              		.loc 1 1706 28 view .LVU764
1708:lwIP/src/core/netif.c ****     return NULL;
 2254              		.loc 1 1708 3 view .LVU765
1708:lwIP/src/core/netif.c ****     return NULL;
 2255              		.loc 1 1708 6 is_stmt 0 view .LVU766
 2256 0000 C0B1     		cbz	r0, .L261
1712:lwIP/src/core/netif.c **** 
 2257              		.loc 1 1712 3 is_stmt 1 view .LVU767
1702:lwIP/src/core/netif.c ****   struct netif *netif;
 2258              		.loc 1 1702 1 is_stmt 0 view .LVU768
 2259 0002 10B5     		push	{r4, lr}
 2260              	.LCFI32:
 2261              		.cfi_def_cfa_offset 8
 2262              		.cfi_offset 4, -8
ARM GAS  /tmp/ccP9Y5Wu.s 			page 84


 2263              		.cfi_offset 14, -4
 2264 0004 0446     		mov	r4, r0
1712:lwIP/src/core/netif.c **** 
 2265              		.loc 1 1712 15 view .LVU769
 2266 0006 0230     		adds	r0, r0, #2
 2267              	.LVL157:
1712:lwIP/src/core/netif.c **** 
 2268              		.loc 1 1712 15 view .LVU770
 2269 0008 FFF7FEFF 		bl	atoi
 2270              	.LVL158:
1714:lwIP/src/core/netif.c ****     if (num == netif->num &&
 2271              		.loc 1 1714 3 view .LVU771
 2272 000c 0A4A     		ldr	r2, .L262
1712:lwIP/src/core/netif.c **** 
 2273              		.loc 1 1712 7 view .LVU772
 2274 000e C3B2     		uxtb	r3, r0
 2275              	.LVL159:
1714:lwIP/src/core/netif.c ****     if (num == netif->num &&
 2276              		.loc 1 1714 3 is_stmt 1 view .LVU773
 2277 0010 1068     		ldr	r0, [r2]
 2278              	.LVL160:
1714:lwIP/src/core/netif.c ****     if (num == netif->num &&
 2279              		.loc 1 1714 3 is_stmt 0 view .LVU774
 2280 0012 68B1     		cbz	r0, .L254
1715:lwIP/src/core/netif.c ****         name[0] == netif->name[0] &&
 2281              		.loc 1 1715 5 is_stmt 1 view .LVU775
1715:lwIP/src/core/netif.c ****         name[0] == netif->name[0] &&
 2282              		.loc 1 1715 8 is_stmt 0 view .LVU776
 2283 0014 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 2284 0018 9A42     		cmp	r2, r3
 2285 001a 09D1     		bne	.L254
1715:lwIP/src/core/netif.c ****         name[0] == netif->name[0] &&
 2286              		.loc 1 1715 27 discriminator 1 view .LVU777
 2287 001c 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 2288 001e 90F82630 		ldrb	r3, [r0, #38]	@ zero_extendqisi2
 2289              	.LVL161:
1715:lwIP/src/core/netif.c ****         name[0] == netif->name[0] &&
 2290              		.loc 1 1715 27 discriminator 1 view .LVU778
 2291 0022 9A42     		cmp	r2, r3
 2292 0024 04D1     		bne	.L254
1716:lwIP/src/core/netif.c ****         name[1] == netif->name[1]) {
 2293              		.loc 1 1716 35 view .LVU779
 2294 0026 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 2295 0028 90F82730 		ldrb	r3, [r0, #39]	@ zero_extendqisi2
 2296 002c 9A42     		cmp	r2, r3
 2297 002e 00D0     		beq	.L251
 2298              	.L254:
1709:lwIP/src/core/netif.c ****   }
 2299              		.loc 1 1709 12 view .LVU780
 2300 0030 0020     		movs	r0, #0
 2301              	.LVL162:
 2302              	.L251:
1720:lwIP/src/core/netif.c ****     }
1721:lwIP/src/core/netif.c ****   }
1722:lwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("netif_find: didn't find %c%c\n", name[0], name[1]));
1723:lwIP/src/core/netif.c ****   return NULL;
1724:lwIP/src/core/netif.c **** }
ARM GAS  /tmp/ccP9Y5Wu.s 			page 85


 2303              		.loc 1 1724 1 view .LVU781
 2304 0032 10BD     		pop	{r4, pc}
 2305              	.LVL163:
 2306              	.L261:
 2307              	.LCFI33:
 2308              		.cfi_def_cfa_offset 0
 2309              		.cfi_restore 4
 2310              		.cfi_restore 14
1709:lwIP/src/core/netif.c ****   }
 2311              		.loc 1 1709 12 view .LVU782
 2312 0034 0020     		movs	r0, #0
 2313              	.LVL164:
 2314              		.loc 1 1724 1 view .LVU783
 2315 0036 7047     		bx	lr
 2316              	.L263:
 2317              		.align	2
 2318              	.L262:
 2319 0038 00000000 		.word	netif_default
 2320              		.cfi_endproc
 2321              	.LFE128:
 2323              		.comm	netif_default,4,4
 2324              		.text
 2325              	.Letext0:
 2326              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2327              		.file 3 "/usr/arm-none-eabi/include/sys/lock.h"
 2328              		.file 4 "/usr/arm-none-eabi/include/sys/_types.h"
 2329              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 2330              		.file 6 "/usr/arm-none-eabi/include/sys/reent.h"
 2331              		.file 7 "/usr/arm-none-eabi/include/stdlib.h"
 2332              		.file 8 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2333              		.file 9 "lwIP/src/include/lwip/arch.h"
 2334              		.file 10 "/usr/arm-none-eabi/include/ctype.h"
 2335              		.file 11 "lwIP/src/include/lwip/ip4_addr.h"
 2336              		.file 12 "lwIP/src/include/lwip/ip_addr.h"
 2337              		.file 13 "lwIP/src/include/lwip/err.h"
 2338              		.file 14 "lwIP/src/include/lwip/pbuf.h"
 2339              		.file 15 "lwIP/src/include/lwip/memp.h"
 2340              		.file 16 "lwIP/src/include/lwip/priv/memp_priv.h"
 2341              		.file 17 "lwIP/src/include/lwip/netif.h"
 2342              		.file 18 "lwIP/src/include/lwip/tcpbase.h"
 2343              		.file 19 "lwIP/src/include/lwip/prot/ip4.h"
 2344              		.file 20 "lwIP/src/include/lwip/ip.h"
 2345              		.file 21 "lwIP/src/include/lwip/tcp.h"
 2346              		.file 22 "lwIP/src/include/lwip/priv/tcp_priv.h"
 2347              		.file 23 "lwIP/src/include/lwip/prot/tcp.h"
 2348              		.file 24 "lwIP/src/include/lwip/udp.h"
 2349              		.file 25 "lwIP/src/include/lwip/prot/ethernet.h"
 2350              		.file 26 "lwIP/src/include/netif/ethernet.h"
 2351              		.file 27 "lwIP/src/include/lwip/def.h"
 2352              		.file 28 "/usr/arm-none-eabi/include/stdio.h"
 2353              		.file 29 "lwIP/src/include/lwip/etharp.h"
 2354              		.file 30 "lwIP/src/include/lwip/ip4.h"
ARM GAS  /tmp/ccP9Y5Wu.s 			page 86


DEFINED SYMBOLS
                            *ABS*:0000000000000000 netif.c
     /tmp/ccP9Y5Wu.s:18     .text.netif_null_output_ip4:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:26     .text.netif_null_output_ip4:0000000000000000 netif_null_output_ip4
     /tmp/ccP9Y5Wu.s:48     .text.netif_init:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:56     .text.netif_init:0000000000000000 netif_init
     /tmp/ccP9Y5Wu.s:69     .rodata.netif_input.str1.4:0000000000000000 $d
     /tmp/ccP9Y5Wu.s:76     .text.netif_input:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:84     .text.netif_input:0000000000000000 netif_input
     /tmp/ccP9Y5Wu.s:173    .text.netif_input:0000000000000030 $d
     /tmp/ccP9Y5Wu.s:179    .rodata.netif_set_ipaddr.str1.4:0000000000000000 $d
     /tmp/ccP9Y5Wu.s:183    .text.netif_set_ipaddr:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:191    .text.netif_set_ipaddr:0000000000000000 netif_set_ipaddr
     /tmp/ccP9Y5Wu.s:389    .text.netif_set_ipaddr:000000000000005c $d
     /tmp/ccP9Y5Wu.s:395    .rodata.netif_set_netmask.str1.4:0000000000000000 $d
     /tmp/ccP9Y5Wu.s:399    .text.netif_set_netmask:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:407    .text.netif_set_netmask:0000000000000000 netif_set_netmask
     /tmp/ccP9Y5Wu.s:487    .text.netif_set_netmask:0000000000000020 $d
     /tmp/ccP9Y5Wu.s:493    .rodata.netif_set_gw.str1.4:0000000000000000 $d
     /tmp/ccP9Y5Wu.s:497    .text.netif_set_gw:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:505    .text.netif_set_gw:0000000000000000 netif_set_gw
     /tmp/ccP9Y5Wu.s:583    .text.netif_set_gw:0000000000000020 $d
     /tmp/ccP9Y5Wu.s:589    .text.netif_set_addr:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:597    .text.netif_set_addr:0000000000000000 netif_set_addr
     /tmp/ccP9Y5Wu.s:978    .text.netif_set_addr:00000000000000c0 $d
     /tmp/ccP9Y5Wu.s:987    .rodata.netif_add.str1.4:0000000000000000 $d
     /tmp/ccP9Y5Wu.s:997    .text.netif_add:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:1005   .text.netif_add:0000000000000000 netif_add
     /tmp/ccP9Y5Wu.s:1167   .text.netif_add:000000000000006c $d
                            *COM*:0000000000000004 netif_default
     /tmp/ccP9Y5Wu.s:1177   .text.netif_add_noaddr:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:1185   .text.netif_add_noaddr:0000000000000000 netif_add_noaddr
     /tmp/ccP9Y5Wu.s:1353   .text.netif_add_noaddr:000000000000005c $d
     /tmp/ccP9Y5Wu.s:1365   .text.netif_remove:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:1373   .text.netif_remove:0000000000000000 netif_remove
     /tmp/ccP9Y5Wu.s:1494   .text.netif_remove:0000000000000050 $d
     /tmp/ccP9Y5Wu.s:1501   .text.netif_set_default:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:1509   .text.netif_set_default:0000000000000000 netif_set_default
     /tmp/ccP9Y5Wu.s:1530   .text.netif_set_default:0000000000000008 $d
     /tmp/ccP9Y5Wu.s:1535   .rodata.netif_set_up.str1.4:0000000000000000 $d
     /tmp/ccP9Y5Wu.s:1539   .text.netif_set_up:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:1547   .text.netif_set_up:0000000000000000 netif_set_up
     /tmp/ccP9Y5Wu.s:1658   .text.netif_set_up:0000000000000040 $d
     /tmp/ccP9Y5Wu.s:1663   .rodata.netif_set_down.str1.4:0000000000000000 $d
     /tmp/ccP9Y5Wu.s:1667   .text.netif_set_down:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:1675   .text.netif_set_down:0000000000000000 netif_set_down
     /tmp/ccP9Y5Wu.s:1747   .text.netif_set_down:000000000000002c $d
     /tmp/ccP9Y5Wu.s:1752   .rodata.netif_set_link_up.str1.4:0000000000000000 $d
     /tmp/ccP9Y5Wu.s:1756   .text.netif_set_link_up:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:1764   .text.netif_set_link_up:0000000000000000 netif_set_link_up
     /tmp/ccP9Y5Wu.s:1873   .text.netif_set_link_up:0000000000000040 $d
     /tmp/ccP9Y5Wu.s:1878   .rodata.netif_set_link_down.str1.4:0000000000000000 $d
     /tmp/ccP9Y5Wu.s:1882   .text.netif_set_link_down:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:1890   .text.netif_set_link_down:0000000000000000 netif_set_link_down
     /tmp/ccP9Y5Wu.s:1942   .text.netif_set_link_down:0000000000000020 $d
     /tmp/ccP9Y5Wu.s:1947   .text.netif_name_to_index:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:1955   .text.netif_name_to_index:0000000000000000 netif_name_to_index
ARM GAS  /tmp/ccP9Y5Wu.s 			page 87


     /tmp/ccP9Y5Wu.s:2058   .text.netif_name_to_index:0000000000000040 $d
     /tmp/ccP9Y5Wu.s:2063   .text.netif_index_to_name:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:2071   .text.netif_index_to_name:0000000000000000 netif_index_to_name
     /tmp/ccP9Y5Wu.s:2170   .text.netif_index_to_name:000000000000003c $d
     /tmp/ccP9Y5Wu.s:2175   .text.netif_get_by_index:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:2183   .text.netif_get_by_index:0000000000000000 netif_get_by_index
     /tmp/ccP9Y5Wu.s:2231   .text.netif_get_by_index:0000000000000020 $d
     /tmp/ccP9Y5Wu.s:2236   .text.netif_find:0000000000000000 $t
     /tmp/ccP9Y5Wu.s:2244   .text.netif_find:0000000000000000 netif_find
     /tmp/ccP9Y5Wu.s:2319   .text.netif_find:0000000000000038 $d

UNDEFINED SYMBOLS
ethernet_input
ip4_input
printf
tcp_netif_ip_addr_changed
udp_netif_ip_addr_changed
etharp_request
ip_addr_any
etharp_cleanup_netif
atoi
lwip_itoa
