ARM GAS  /tmp/cc62ai5Z.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_if.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.USBD_IfConfig,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	USBD_IfConfig
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	USBD_IfConfig:
  28              	.LVL0:
  29              	.LFB157:
  30              		.file 1 "USBDevice/Device/usbd_if.c"
   1:USBDevice/Device/usbd_if.c **** /**
   2:USBDevice/Device/usbd_if.c ****   ******************************************************************************
   3:USBDevice/Device/usbd_if.c ****   * @file    usbd_if.c
   4:USBDevice/Device/usbd_if.c ****   * @author  Benedek Kupper
   5:USBDevice/Device/usbd_if.c ****   * @version 0.1
   6:USBDevice/Device/usbd_if.c ****   * @date    2018-01-31
   7:USBDevice/Device/usbd_if.c ****   * @brief   Universal Serial Bus Device Driver
   8:USBDevice/Device/usbd_if.c ****   *          Device interface management
   9:USBDevice/Device/usbd_if.c ****   *
  10:USBDevice/Device/usbd_if.c ****   * Copyright (c) 2018 Benedek Kupper
  11:USBDevice/Device/usbd_if.c ****   *
  12:USBDevice/Device/usbd_if.c ****   * Licensed under the Apache License, Version 2.0 (the "License");
  13:USBDevice/Device/usbd_if.c ****   * you may not use this file except in compliance with the License.
  14:USBDevice/Device/usbd_if.c ****   * You may obtain a copy of the License at
  15:USBDevice/Device/usbd_if.c ****   *
  16:USBDevice/Device/usbd_if.c ****   *     http://www.apache.org/licenses/LICENSE-2.0
  17:USBDevice/Device/usbd_if.c ****   *
  18:USBDevice/Device/usbd_if.c ****   * Unless required by applicable law or agreed to in writing, software
  19:USBDevice/Device/usbd_if.c ****   * distributed under the License is distributed on an "AS IS" BASIS,
  20:USBDevice/Device/usbd_if.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:USBDevice/Device/usbd_if.c ****   * See the License for the specific language governing permissions and
  22:USBDevice/Device/usbd_if.c ****   * limitations under the License.
  23:USBDevice/Device/usbd_if.c ****   */
  24:USBDevice/Device/usbd_if.c **** #include <private/usbd_private.h>
  25:USBDevice/Device/usbd_if.c **** 
  26:USBDevice/Device/usbd_if.c **** /** @ingroup USBD_Private
  27:USBDevice/Device/usbd_if.c ****  * @defgroup USBD_Private_Functions_If USBD Interface Management
  28:USBDevice/Device/usbd_if.c ****  * @{ */
ARM GAS  /tmp/cc62ai5Z.s 			page 2


  29:USBDevice/Device/usbd_if.c **** 
  30:USBDevice/Device/usbd_if.c **** /**
  31:USBDevice/Device/usbd_if.c ****  * @brief This function changes the active device configuration.
  32:USBDevice/Device/usbd_if.c ****  * @param dev: USB Device handle reference
  33:USBDevice/Device/usbd_if.c ****  * @param cfgNum: New configuration selector index
  34:USBDevice/Device/usbd_if.c ****  */
  35:USBDevice/Device/usbd_if.c **** void USBD_IfConfig(USBD_HandleType *dev, uint8_t cfgNum)
  36:USBDevice/Device/usbd_if.c **** {
  31              		.loc 1 36 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  37:USBDevice/Device/usbd_if.c ****     if (dev->ConfigSelector != cfgNum)
  35              		.loc 1 37 5 view .LVU1
  36              		.loc 1 37 12 is_stmt 0 view .LVU2
  37 0000 90F82830 		ldrb	r3, [r0, #40]	@ zero_extendqisi2
  38              		.loc 1 37 8 view .LVU3
  39 0004 8B42     		cmp	r3, r1
  40 0006 3AD0     		beq	.L20
  41              	.LBB18:
  38:USBDevice/Device/usbd_if.c ****     {
  39:USBDevice/Device/usbd_if.c ****         uint8_t ifNum;
  42              		.loc 1 39 9 is_stmt 1 view .LVU4
  40:USBDevice/Device/usbd_if.c **** 
  41:USBDevice/Device/usbd_if.c ****         /* Clear any previously selected config */
  42:USBDevice/Device/usbd_if.c ****         if (dev->ConfigSelector != 0)
  43              		.loc 1 42 9 view .LVU5
  44              	.LBE18:
  36:USBDevice/Device/usbd_if.c ****     if (dev->ConfigSelector != cfgNum)
  45              		.loc 1 36 1 is_stmt 0 view .LVU6
  46 0008 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  47              	.LCFI0:
  48              		.cfi_def_cfa_offset 24
  49              		.cfi_offset 4, -24
  50              		.cfi_offset 5, -20
  51              		.cfi_offset 6, -16
  52              		.cfi_offset 7, -12
  53              		.cfi_offset 8, -8
  54              		.cfi_offset 14, -4
  55 000c 0546     		mov	r5, r0
  56 000e 0F46     		mov	r7, r1
  57              	.LBB31:
  58              		.loc 1 42 12 view .LVU7
  59 0010 ABB1     		cbz	r3, .L6
  60              	.LVL1:
  43:USBDevice/Device/usbd_if.c ****         {
  44:USBDevice/Device/usbd_if.c ****             for (ifNum = 0; ifNum < dev->IfCount; ifNum++)
  61              		.loc 1 44 29 is_stmt 1 view .LVU8
  62              		.loc 1 44 40 is_stmt 0 view .LVU9
  63 0012 90F82920 		ldrb	r2, [r0, #41]	@ zero_extendqisi2
  64              		.loc 1 44 13 view .LVU10
  65 0016 92B1     		cbz	r2, .L6
  66 0018 0026     		movs	r6, #0
  67 001a 3346     		mov	r3, r6
  45:USBDevice/Device/usbd_if.c ****             {
  46:USBDevice/Device/usbd_if.c ****                 USBD_IfClass_Deinit(dev->IF[ifNum]);
  47:USBDevice/Device/usbd_if.c ****                 dev->IF[ifNum]->AltSelector = 0;
ARM GAS  /tmp/cc62ai5Z.s 			page 3


  68              		.loc 1 47 45 view .LVU11
  69 001c B046     		mov	r8, r6
  70              	.LVL2:
  71              	.L9:
  46:USBDevice/Device/usbd_if.c ****                 dev->IF[ifNum]->AltSelector = 0;
  72              		.loc 1 46 17 is_stmt 1 discriminator 3 view .LVU12
  73              	.LBB19:
  74              	.LBB20:
  75              		.file 2 "USBDevice/Include/private/usbd_private.h"
   1:USBDevice/Include/private/usbd_private.h **** /**
   2:USBDevice/Include/private/usbd_private.h ****   ******************************************************************************
   3:USBDevice/Include/private/usbd_private.h ****   * @file    usbd_private.h
   4:USBDevice/Include/private/usbd_private.h ****   * @author  Benedek Kupper
   5:USBDevice/Include/private/usbd_private.h ****   * @version 0.1
   6:USBDevice/Include/private/usbd_private.h ****   * @date    2018-01-31
   7:USBDevice/Include/private/usbd_private.h ****   * @brief   Universal Serial Bus Device Driver
   8:USBDevice/Include/private/usbd_private.h ****   *          Private cross-domain functions header
   9:USBDevice/Include/private/usbd_private.h ****   *
  10:USBDevice/Include/private/usbd_private.h ****   * Copyright (c) 2018 Benedek Kupper
  11:USBDevice/Include/private/usbd_private.h ****   *
  12:USBDevice/Include/private/usbd_private.h ****   * Licensed under the Apache License, Version 2.0 (the "License");
  13:USBDevice/Include/private/usbd_private.h ****   * you may not use this file except in compliance with the License.
  14:USBDevice/Include/private/usbd_private.h ****   * You may obtain a copy of the License at
  15:USBDevice/Include/private/usbd_private.h ****   *
  16:USBDevice/Include/private/usbd_private.h ****   *     http://www.apache.org/licenses/LICENSE-2.0
  17:USBDevice/Include/private/usbd_private.h ****   *
  18:USBDevice/Include/private/usbd_private.h ****   * Unless required by applicable law or agreed to in writing, software
  19:USBDevice/Include/private/usbd_private.h ****   * distributed under the License is distributed on an "AS IS" BASIS,
  20:USBDevice/Include/private/usbd_private.h ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:USBDevice/Include/private/usbd_private.h ****   * See the License for the specific language governing permissions and
  22:USBDevice/Include/private/usbd_private.h ****   * limitations under the License.
  23:USBDevice/Include/private/usbd_private.h ****   */
  24:USBDevice/Include/private/usbd_private.h **** #ifndef __USBD_PRIVATE_H_
  25:USBDevice/Include/private/usbd_private.h **** #define __USBD_PRIVATE_H_
  26:USBDevice/Include/private/usbd_private.h **** 
  27:USBDevice/Include/private/usbd_private.h **** #ifdef __cplusplus
  28:USBDevice/Include/private/usbd_private.h **** extern "C"
  29:USBDevice/Include/private/usbd_private.h **** {
  30:USBDevice/Include/private/usbd_private.h **** #endif
  31:USBDevice/Include/private/usbd_private.h **** 
  32:USBDevice/Include/private/usbd_private.h **** #include <private/usbd_internal.h>
  33:USBDevice/Include/private/usbd_private.h **** 
  34:USBDevice/Include/private/usbd_private.h **** /* {function definition} <- {call site} */
  35:USBDevice/Include/private/usbd_private.h **** 
  36:USBDevice/Include/private/usbd_private.h **** /* usbd <- usbd_ctrl */
  37:USBDevice/Include/private/usbd_private.h **** USBD_ReturnType USBD_DevRequest         (USBD_HandleType *dev);
  38:USBDevice/Include/private/usbd_private.h **** 
  39:USBDevice/Include/private/usbd_private.h **** /* usbd_ctrl <- usbd_ep */
  40:USBDevice/Include/private/usbd_private.h **** void            USBD_CtrlInCallback     (USBD_HandleType *dev);
  41:USBDevice/Include/private/usbd_private.h **** void            USBD_CtrlOutCallback    (USBD_HandleType *dev);
  42:USBDevice/Include/private/usbd_private.h **** 
  43:USBDevice/Include/private/usbd_private.h **** /* usbd_if <- usbd_ctrl */
  44:USBDevice/Include/private/usbd_private.h **** USBD_ReturnType USBD_IfRequest          (USBD_HandleType *dev);
  45:USBDevice/Include/private/usbd_private.h **** 
  46:USBDevice/Include/private/usbd_private.h **** /* usbd_if <- usbd */
  47:USBDevice/Include/private/usbd_private.h **** void            USBD_IfConfig           (USBD_HandleType *dev,
  48:USBDevice/Include/private/usbd_private.h ****                                          uint8_t cfgNum);
ARM GAS  /tmp/cc62ai5Z.s 			page 4


  49:USBDevice/Include/private/usbd_private.h **** 
  50:USBDevice/Include/private/usbd_private.h **** /* usbd_if <- usbd_desc */
  51:USBDevice/Include/private/usbd_private.h **** const char*     USBD_IfString           (USBD_HandleType *dev);
  52:USBDevice/Include/private/usbd_private.h **** 
  53:USBDevice/Include/private/usbd_private.h **** /* usbd_ep <- usbd_ctrl */
  54:USBDevice/Include/private/usbd_private.h **** USBD_ReturnType USBD_EpRequest          (USBD_HandleType *dev);
  55:USBDevice/Include/private/usbd_private.h **** 
  56:USBDevice/Include/private/usbd_private.h **** /* usbd_desc <- usbd */
  57:USBDevice/Include/private/usbd_private.h **** USBD_ReturnType USBD_GetDescriptor      (USBD_HandleType *dev);
  58:USBDevice/Include/private/usbd_private.h **** 
  59:USBDevice/Include/private/usbd_private.h **** /** @ingroup USBD
  60:USBDevice/Include/private/usbd_private.h ****  * @defgroup USBD_Private_Functions_IfClass USBD Class-specific Interface Callouts
  61:USBDevice/Include/private/usbd_private.h ****  * @brief These functions simply call the class-specific function pointer
  62:USBDevice/Include/private/usbd_private.h ****  * @{ */
  63:USBDevice/Include/private/usbd_private.h **** 
  64:USBDevice/Include/private/usbd_private.h **** /**
  65:USBDevice/Include/private/usbd_private.h ****  * @brief Calls the interface's class specific
  66:USBDevice/Include/private/usbd_private.h ****  *        @ref USBD_ClassType::GetDescriptor function.
  67:USBDevice/Include/private/usbd_private.h ****  * @param itf:   reference of the interface
  68:USBDevice/Include/private/usbd_private.h ****  * @param ifNum: the interface index in the device
  69:USBDevice/Include/private/usbd_private.h ****  * @param dest:  destination buffer pointer
  70:USBDevice/Include/private/usbd_private.h ****  * @return Length of the descriptor
  71:USBDevice/Include/private/usbd_private.h ****  */
  72:USBDevice/Include/private/usbd_private.h **** static inline uint16_t USBD_IfClass_GetDesc(
  73:USBDevice/Include/private/usbd_private.h ****         USBD_IfHandleType *itf, uint8_t ifNum, uint8_t *dest)
  74:USBDevice/Include/private/usbd_private.h **** {
  75:USBDevice/Include/private/usbd_private.h ****     if (itf->Class->GetDescriptor != NULL)
  76:USBDevice/Include/private/usbd_private.h ****         { return itf->Class->GetDescriptor(itf, ifNum, dest); }
  77:USBDevice/Include/private/usbd_private.h ****     else
  78:USBDevice/Include/private/usbd_private.h ****         { return 0; }
  79:USBDevice/Include/private/usbd_private.h **** }
  80:USBDevice/Include/private/usbd_private.h **** 
  81:USBDevice/Include/private/usbd_private.h **** /**
  82:USBDevice/Include/private/usbd_private.h ****  * @brief Calls the interface's class specific
  83:USBDevice/Include/private/usbd_private.h ****  *        @ref USBD_ClassType::GetString function.
  84:USBDevice/Include/private/usbd_private.h ****  * @param itf:    reference of the interface
  85:USBDevice/Include/private/usbd_private.h ****  * @param intNum: the interface-internal string index
  86:USBDevice/Include/private/usbd_private.h ****  * @return String reference
  87:USBDevice/Include/private/usbd_private.h ****  */
  88:USBDevice/Include/private/usbd_private.h **** static inline const char* USBD_IfClass_GetString(
  89:USBDevice/Include/private/usbd_private.h ****         USBD_IfHandleType *itf, uint8_t intNum)
  90:USBDevice/Include/private/usbd_private.h **** {
  91:USBDevice/Include/private/usbd_private.h ****     if (itf->Class->GetString == NULL)
  92:USBDevice/Include/private/usbd_private.h ****     {   return (const char*)NULL; }
  93:USBDevice/Include/private/usbd_private.h ****     else
  94:USBDevice/Include/private/usbd_private.h ****     {   return itf->Class->GetString(itf, intNum); }
  95:USBDevice/Include/private/usbd_private.h **** }
  96:USBDevice/Include/private/usbd_private.h **** 
  97:USBDevice/Include/private/usbd_private.h **** /**
  98:USBDevice/Include/private/usbd_private.h ****  * @brief Calls the interface's class specific
  99:USBDevice/Include/private/usbd_private.h ****  *        @ref USBD_ClassType::Init function.
 100:USBDevice/Include/private/usbd_private.h ****  * @param itf: reference of the interface
 101:USBDevice/Include/private/usbd_private.h ****  */
 102:USBDevice/Include/private/usbd_private.h **** static inline void USBD_IfClass_Init(
 103:USBDevice/Include/private/usbd_private.h ****         USBD_IfHandleType *itf)
 104:USBDevice/Include/private/usbd_private.h **** {
 105:USBDevice/Include/private/usbd_private.h ****     USBD_SAFE_CALLBACK(itf->Class->Init, itf);
ARM GAS  /tmp/cc62ai5Z.s 			page 5


 106:USBDevice/Include/private/usbd_private.h **** }
 107:USBDevice/Include/private/usbd_private.h **** 
 108:USBDevice/Include/private/usbd_private.h **** /**
 109:USBDevice/Include/private/usbd_private.h ****  * @brief Calls the interface's class specific
 110:USBDevice/Include/private/usbd_private.h ****  *        @ref USBD_ClassType::Deinit function.
 111:USBDevice/Include/private/usbd_private.h ****  * @param itf: reference of the interface
 112:USBDevice/Include/private/usbd_private.h ****  */
 113:USBDevice/Include/private/usbd_private.h **** static inline void USBD_IfClass_Deinit(
 114:USBDevice/Include/private/usbd_private.h ****         USBD_IfHandleType *itf)
 115:USBDevice/Include/private/usbd_private.h **** {
 116:USBDevice/Include/private/usbd_private.h ****     USBD_SAFE_CALLBACK(itf->Class->Deinit, itf);
  76              		.loc 2 116 5 discriminator 3 view .LVU13
  77 001e 05EB8304 		add	r4, r5, r3, lsl #2
  78 0022 0136     		adds	r6, r6, #1
  79              	.LVL3:
  80              		.loc 2 116 5 is_stmt 0 discriminator 3 view .LVU14
  81              	.LBE20:
  82              	.LBE19:
  46:USBDevice/Device/usbd_if.c ****                 dev->IF[ifNum]->AltSelector = 0;
  83              		.loc 1 46 17 discriminator 3 view .LVU15
  84 0024 E06A     		ldr	r0, [r4, #44]
  85              	.LVL4:
  86              	.LBB23:
  87              	.LBI19:
 113:USBDevice/Include/private/usbd_private.h ****         USBD_IfHandleType *itf)
  88              		.loc 2 113 20 is_stmt 1 discriminator 3 view .LVU16
  89              	.LBB21:
  90              		.loc 2 116 5 discriminator 3 view .LVU17
  91              		.loc 2 116 5 discriminator 3 view .LVU18
  92 0026 4368     		ldr	r3, [r0, #4]
  93 0028 DB68     		ldr	r3, [r3, #12]
  94 002a 1BB3     		cbz	r3, .L7
  95              		.loc 2 116 5 is_stmt 0 view .LVU19
  96 002c 9847     		blx	r3
  97              	.LVL5:
  98              		.loc 2 116 5 view .LVU20
  99 002e 95F82920 		ldrb	r2, [r5, #41]	@ zero_extendqisi2
 100              		.loc 2 116 5 is_stmt 1 view .LVU21
 101              		.loc 2 116 5 is_stmt 0 view .LVU22
 102              	.LBE21:
 103              	.LBE23:
 104              		.loc 1 47 17 is_stmt 1 view .LVU23
  44:USBDevice/Device/usbd_if.c ****             {
 105              		.loc 1 44 13 is_stmt 0 view .LVU24
 106 0032 F3B2     		uxtb	r3, r6
 107              		.loc 1 47 45 view .LVU25
 108 0034 E16A     		ldr	r1, [r4, #44]
  44:USBDevice/Device/usbd_if.c ****             {
 109              		.loc 1 44 13 view .LVU26
 110 0036 9342     		cmp	r3, r2
 111              		.loc 1 47 45 view .LVU27
 112 0038 81F80880 		strb	r8, [r1, #8]
  44:USBDevice/Device/usbd_if.c ****             {
 113              		.loc 1 44 51 is_stmt 1 view .LVU28
  44:USBDevice/Device/usbd_if.c ****             {
 114              		.loc 1 44 29 view .LVU29
  44:USBDevice/Device/usbd_if.c ****             {
ARM GAS  /tmp/cc62ai5Z.s 			page 6


 115              		.loc 1 44 13 is_stmt 0 view .LVU30
 116 003c EFD3     		bcc	.L9
 117              	.L6:
  48:USBDevice/Device/usbd_if.c ****             }
  49:USBDevice/Device/usbd_if.c ****         }
  50:USBDevice/Device/usbd_if.c **** 
  51:USBDevice/Device/usbd_if.c ****         /* Update configuration index */
  52:USBDevice/Device/usbd_if.c ****         dev->ConfigSelector = cfgNum;
 118              		.loc 1 52 9 is_stmt 1 view .LVU31
 119              		.loc 1 52 29 is_stmt 0 view .LVU32
 120 003e 85F82870 		strb	r7, [r5, #40]
  53:USBDevice/Device/usbd_if.c **** 
  54:USBDevice/Device/usbd_if.c ****         /* Set the new selected valid config */
  55:USBDevice/Device/usbd_if.c ****         if (dev->ConfigSelector != 0)
 121              		.loc 1 55 9 is_stmt 1 view .LVU33
 122              		.loc 1 55 12 is_stmt 0 view .LVU34
 123 0042 8FB1     		cbz	r7, .L1
 124              	.LVL6:
  56:USBDevice/Device/usbd_if.c ****         {
  57:USBDevice/Device/usbd_if.c ****             for (ifNum = 0; ifNum < dev->IfCount; ifNum++)
 125              		.loc 1 57 29 is_stmt 1 view .LVU35
 126              		.loc 1 57 40 is_stmt 0 view .LVU36
 127 0044 95F82920 		ldrb	r2, [r5, #41]	@ zero_extendqisi2
 128              		.loc 1 57 13 view .LVU37
 129 0048 72B1     		cbz	r2, .L1
 130 004a 0024     		movs	r4, #0
 131 004c 2346     		mov	r3, r4
 132              	.LVL7:
 133              	.L12:
  58:USBDevice/Device/usbd_if.c ****             {
  59:USBDevice/Device/usbd_if.c ****                 USBD_IfClass_Init(dev->IF[ifNum]);
 134              		.loc 1 59 17 is_stmt 1 discriminator 3 view .LVU38
 135              	.LBB24:
 136              	.LBB25:
 105:USBDevice/Include/private/usbd_private.h **** }
 137              		.loc 2 105 5 discriminator 3 view .LVU39
 138              	.LBE25:
 139              	.LBE24:
 140              		.loc 1 59 17 is_stmt 0 discriminator 3 view .LVU40
 141 004e 05EB8303 		add	r3, r5, r3, lsl #2
 142 0052 0134     		adds	r4, r4, #1
 143              	.LVL8:
 144              		.loc 1 59 17 discriminator 3 view .LVU41
 145 0054 D86A     		ldr	r0, [r3, #44]
 146              	.LVL9:
 147              	.LBB28:
 148              	.LBI24:
 102:USBDevice/Include/private/usbd_private.h ****         USBD_IfHandleType *itf)
 149              		.loc 2 102 20 is_stmt 1 discriminator 3 view .LVU42
 150              	.LBB26:
 105:USBDevice/Include/private/usbd_private.h **** }
 151              		.loc 2 105 5 discriminator 3 view .LVU43
 105:USBDevice/Include/private/usbd_private.h **** }
 152              		.loc 2 105 5 discriminator 3 view .LVU44
 153 0056 4368     		ldr	r3, [r0, #4]
 154 0058 9B68     		ldr	r3, [r3, #8]
 155 005a 3BB1     		cbz	r3, .L10
ARM GAS  /tmp/cc62ai5Z.s 			page 7


 105:USBDevice/Include/private/usbd_private.h **** }
 156              		.loc 2 105 5 is_stmt 0 view .LVU45
 157 005c 9847     		blx	r3
 158              	.LVL10:
 105:USBDevice/Include/private/usbd_private.h **** }
 159              		.loc 2 105 5 view .LVU46
 160 005e 95F82920 		ldrb	r2, [r5, #41]	@ zero_extendqisi2
 105:USBDevice/Include/private/usbd_private.h **** }
 161              		.loc 2 105 5 is_stmt 1 view .LVU47
 105:USBDevice/Include/private/usbd_private.h **** }
 162              		.loc 2 105 5 is_stmt 0 view .LVU48
 163              	.LBE26:
 164              	.LBE28:
  57:USBDevice/Device/usbd_if.c ****             {
 165              		.loc 1 57 51 is_stmt 1 view .LVU49
  57:USBDevice/Device/usbd_if.c ****             {
 166              		.loc 1 57 29 view .LVU50
  57:USBDevice/Device/usbd_if.c ****             {
 167              		.loc 1 57 13 is_stmt 0 view .LVU51
 168 0062 E3B2     		uxtb	r3, r4
 169 0064 9342     		cmp	r3, r2
 170 0066 F2D3     		bcc	.L12
 171              	.L1:
  57:USBDevice/Device/usbd_if.c ****             {
 172              		.loc 1 57 13 view .LVU52
 173              	.LBE31:
  60:USBDevice/Device/usbd_if.c ****             }
  61:USBDevice/Device/usbd_if.c ****         }
  62:USBDevice/Device/usbd_if.c ****     }
  63:USBDevice/Device/usbd_if.c **** }
 174              		.loc 1 63 1 view .LVU53
 175 0068 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 176              	.LVL11:
 177              	.L10:
 178              	.LBB32:
 179              	.LBB29:
 180              	.LBB27:
 105:USBDevice/Include/private/usbd_private.h **** }
 181              		.loc 2 105 5 is_stmt 1 view .LVU54
 105:USBDevice/Include/private/usbd_private.h **** }
 182              		.loc 2 105 5 is_stmt 0 view .LVU55
 183              	.LBE27:
 184              	.LBE29:
  57:USBDevice/Device/usbd_if.c ****             {
 185              		.loc 1 57 51 is_stmt 1 view .LVU56
  57:USBDevice/Device/usbd_if.c ****             {
 186              		.loc 1 57 29 view .LVU57
  57:USBDevice/Device/usbd_if.c ****             {
 187              		.loc 1 57 13 is_stmt 0 view .LVU58
 188 006c E3B2     		uxtb	r3, r4
 189 006e 9A42     		cmp	r2, r3
 190 0070 EDD8     		bhi	.L12
 191 0072 F9E7     		b	.L1
 192              	.LVL12:
 193              	.L7:
 194              	.LBB30:
 195              	.LBB22:
ARM GAS  /tmp/cc62ai5Z.s 			page 8


 196              		.loc 2 116 5 is_stmt 1 view .LVU59
 197              		.loc 2 116 5 is_stmt 0 view .LVU60
 198              	.LBE22:
 199              	.LBE30:
  47:USBDevice/Device/usbd_if.c ****             }
 200              		.loc 1 47 17 is_stmt 1 view .LVU61
  47:USBDevice/Device/usbd_if.c ****             }
 201              		.loc 1 47 45 is_stmt 0 view .LVU62
 202 0074 0372     		strb	r3, [r0, #8]
  44:USBDevice/Device/usbd_if.c ****             {
 203              		.loc 1 44 51 is_stmt 1 view .LVU63
  44:USBDevice/Device/usbd_if.c ****             {
 204              		.loc 1 44 29 view .LVU64
  44:USBDevice/Device/usbd_if.c ****             {
 205              		.loc 1 44 13 is_stmt 0 view .LVU65
 206 0076 F3B2     		uxtb	r3, r6
 207 0078 9342     		cmp	r3, r2
 208 007a D0D3     		bcc	.L9
 209 007c DFE7     		b	.L6
 210              	.LVL13:
 211              	.L20:
 212              	.LCFI1:
 213              		.cfi_def_cfa_offset 0
 214              		.cfi_restore 4
 215              		.cfi_restore 5
 216              		.cfi_restore 6
 217              		.cfi_restore 7
 218              		.cfi_restore 8
 219              		.cfi_restore 14
  44:USBDevice/Device/usbd_if.c ****             {
 220              		.loc 1 44 13 view .LVU66
 221 007e 7047     		bx	lr
 222              	.LBE32:
 223              		.cfi_endproc
 224              	.LFE157:
 226              		.section	.text.USBD_IfString,"ax",%progbits
 227              		.align	1
 228              		.p2align 2,,3
 229              		.global	USBD_IfString
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu fpv4-sp-d16
 235              	USBD_IfString:
 236              	.LVL14:
 237              	.LFB158:
  64:USBDevice/Device/usbd_if.c **** 
  65:USBDevice/Device/usbd_if.c **** /** @} */
  66:USBDevice/Device/usbd_if.c **** 
  67:USBDevice/Device/usbd_if.c **** /** @addtogroup USBD_Private_Functions_Desc
  68:USBDevice/Device/usbd_if.c ****  * @{ */
  69:USBDevice/Device/usbd_if.c **** 
  70:USBDevice/Device/usbd_if.c **** /**
  71:USBDevice/Device/usbd_if.c ****  * @brief This function provides the string of the interface
  72:USBDevice/Device/usbd_if.c ****  *        which is selected by the setup request.
  73:USBDevice/Device/usbd_if.c ****  * @param dev: USB Device handle reference
  74:USBDevice/Device/usbd_if.c ****  * @return Reference to the interface's string, or NULL if not available
ARM GAS  /tmp/cc62ai5Z.s 			page 9


  75:USBDevice/Device/usbd_if.c ****  */
  76:USBDevice/Device/usbd_if.c **** const char* USBD_IfString(USBD_HandleType *dev)
  77:USBDevice/Device/usbd_if.c **** {
 238              		.loc 1 77 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
  78:USBDevice/Device/usbd_if.c ****     uint8_t ifNum  = ((uint8_t)dev->Setup.Value & 0xF) - USBD_ISTR_INTERFACES;
 243              		.loc 1 78 5 view .LVU68
 244              		.loc 1 78 49 is_stmt 0 view .LVU69
 245 0000 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
  79:USBDevice/Device/usbd_if.c ****     uint8_t intNum = ((uint8_t)dev->Setup.Value >> 4);
  80:USBDevice/Device/usbd_if.c ****     USBD_IfHandleType *itf = dev->IF[ifNum];
  81:USBDevice/Device/usbd_if.c ****     const char* str = NULL;
  82:USBDevice/Device/usbd_if.c **** 
  83:USBDevice/Device/usbd_if.c ****     if (ifNum < dev->IfCount)
 246              		.loc 1 83 8 view .LVU70
 247 0002 90F82920 		ldrb	r2, [r0, #41]	@ zero_extendqisi2
  78:USBDevice/Device/usbd_if.c ****     uint8_t ifNum  = ((uint8_t)dev->Setup.Value & 0xF) - USBD_ISTR_INTERFACES;
 248              		.loc 1 78 49 view .LVU71
 249 0006 01F00F03 		and	r3, r1, #15
  78:USBDevice/Device/usbd_if.c ****     uint8_t ifNum  = ((uint8_t)dev->Setup.Value & 0xF) - USBD_ISTR_INTERFACES;
 250              		.loc 1 78 13 view .LVU72
 251 000a 013B     		subs	r3, r3, #1
 252 000c DBB2     		uxtb	r3, r3
 253              	.LVL15:
  79:USBDevice/Device/usbd_if.c ****     uint8_t intNum = ((uint8_t)dev->Setup.Value >> 4);
 254              		.loc 1 79 5 is_stmt 1 view .LVU73
  80:USBDevice/Device/usbd_if.c ****     const char* str = NULL;
 255              		.loc 1 80 5 view .LVU74
  81:USBDevice/Device/usbd_if.c **** 
 256              		.loc 1 81 5 view .LVU75
 257              		.loc 1 83 5 view .LVU76
 258              		.loc 1 83 8 is_stmt 0 view .LVU77
 259 000e 9A42     		cmp	r2, r3
 260 0010 07D9     		bls	.L24
  80:USBDevice/Device/usbd_if.c ****     const char* str = NULL;
 261              		.loc 1 80 24 view .LVU78
 262 0012 00EB8300 		add	r0, r0, r3, lsl #2
 263              	.LVL16:
  80:USBDevice/Device/usbd_if.c ****     const char* str = NULL;
 264              		.loc 1 80 24 view .LVU79
 265 0016 C06A     		ldr	r0, [r0, #44]
  84:USBDevice/Device/usbd_if.c ****     {
  85:USBDevice/Device/usbd_if.c ****         str = USBD_IfClass_GetString(itf, intNum);
 266              		.loc 1 85 9 is_stmt 1 view .LVU80
 267              	.LVL17:
 268              	.LBB33:
 269              	.LBI33:
  88:USBDevice/Include/private/usbd_private.h ****         USBD_IfHandleType *itf, uint8_t intNum)
 270              		.loc 2 88 27 view .LVU81
 271              	.LBB34:
  91:USBDevice/Include/private/usbd_private.h ****     {   return (const char*)NULL; }
 272              		.loc 2 91 5 view .LVU82
  91:USBDevice/Include/private/usbd_private.h ****     {   return (const char*)NULL; }
 273              		.loc 2 91 19 is_stmt 0 view .LVU83
ARM GAS  /tmp/cc62ai5Z.s 			page 10


 274 0018 4368     		ldr	r3, [r0, #4]
 275              	.LVL18:
  91:USBDevice/Include/private/usbd_private.h ****     {   return (const char*)NULL; }
 276              		.loc 2 91 19 view .LVU84
 277 001a 5B68     		ldr	r3, [r3, #4]
  91:USBDevice/Include/private/usbd_private.h ****     {   return (const char*)NULL; }
 278              		.loc 2 91 8 view .LVU85
 279 001c 0BB1     		cbz	r3, .L24
  94:USBDevice/Include/private/usbd_private.h **** }
 280              		.loc 2 94 9 is_stmt 1 view .LVU86
  94:USBDevice/Include/private/usbd_private.h **** }
 281              		.loc 2 94 16 is_stmt 0 view .LVU87
 282 001e 0909     		lsrs	r1, r1, #4
 283              	.LVL19:
  94:USBDevice/Include/private/usbd_private.h **** }
 284              		.loc 2 94 16 view .LVU88
 285 0020 1847     		bx	r3
 286              	.LVL20:
 287              	.L24:
  94:USBDevice/Include/private/usbd_private.h **** }
 288              		.loc 2 94 16 view .LVU89
 289              	.LBE34:
 290              	.LBE33:
  86:USBDevice/Device/usbd_if.c ****     }
  87:USBDevice/Device/usbd_if.c **** 
  88:USBDevice/Device/usbd_if.c ****     return str;
  89:USBDevice/Device/usbd_if.c **** }
 291              		.loc 1 89 1 view .LVU90
 292 0022 0020     		movs	r0, #0
 293 0024 7047     		bx	lr
 294              		.cfi_endproc
 295              	.LFE158:
 297 0026 00BF     		.section	.text.USBD_IfRequest,"ax",%progbits
 298              		.align	1
 299              		.p2align 2,,3
 300              		.global	USBD_IfRequest
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.fpu fpv4-sp-d16
 306              	USBD_IfRequest:
 307              	.LVL21:
 308              	.LFB159:
  90:USBDevice/Device/usbd_if.c **** 
  91:USBDevice/Device/usbd_if.c **** /** @} */
  92:USBDevice/Device/usbd_if.c **** 
  93:USBDevice/Device/usbd_if.c **** /** @addtogroup USBD_Private_Functions_Ctrl
  94:USBDevice/Device/usbd_if.c ****  * @{ */
  95:USBDevice/Device/usbd_if.c **** 
  96:USBDevice/Device/usbd_if.c **** /**
  97:USBDevice/Device/usbd_if.c ****  * @brief Processes the interface request.
  98:USBDevice/Device/usbd_if.c ****  * @param dev: USB Device handle reference
  99:USBDevice/Device/usbd_if.c ****  * @return OK if the request is processed, INVALID if not supported
 100:USBDevice/Device/usbd_if.c ****  */
 101:USBDevice/Device/usbd_if.c **** USBD_ReturnType USBD_IfRequest(USBD_HandleType *dev)
 102:USBDevice/Device/usbd_if.c **** {
 309              		.loc 1 102 1 is_stmt 1 view -0
ARM GAS  /tmp/cc62ai5Z.s 			page 11


 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 103:USBDevice/Device/usbd_if.c ****     USBD_ReturnType retval = USBD_E_INVALID;
 313              		.loc 1 103 5 view .LVU92
 104:USBDevice/Device/usbd_if.c ****     uint8_t ifNum = (uint8_t)dev->Setup.Index;
 314              		.loc 1 104 5 view .LVU93
 105:USBDevice/Device/usbd_if.c ****     USBD_IfHandleType *itf = dev->IF[ifNum];
 315              		.loc 1 105 5 view .LVU94
 106:USBDevice/Device/usbd_if.c **** 
 107:USBDevice/Device/usbd_if.c ****     if ((dev->ConfigSelector == 0) || (ifNum >= dev->IfCount))
 316              		.loc 1 107 5 view .LVU95
 102:USBDevice/Device/usbd_if.c ****     USBD_ReturnType retval = USBD_E_INVALID;
 317              		.loc 1 102 1 is_stmt 0 view .LVU96
 318 0000 70B5     		push	{r4, r5, r6, lr}
 319              	.LCFI2:
 320              		.cfi_def_cfa_offset 16
 321              		.cfi_offset 4, -16
 322              		.cfi_offset 5, -12
 323              		.cfi_offset 6, -8
 324              		.cfi_offset 14, -4
 325              		.loc 1 107 8 view .LVU97
 326 0002 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 327 0006 DAB1     		cbz	r2, .L40
 104:USBDevice/Device/usbd_if.c ****     USBD_IfHandleType *itf = dev->IF[ifNum];
 328              		.loc 1 104 13 discriminator 1 view .LVU98
 329 0008 027A     		ldrb	r2, [r0, #8]	@ zero_extendqisi2
 330              		.loc 1 107 36 discriminator 1 view .LVU99
 331 000a 90F82910 		ldrb	r1, [r0, #41]	@ zero_extendqisi2
 332 000e 9142     		cmp	r1, r2
 333 0010 16D9     		bls	.L40
 108:USBDevice/Device/usbd_if.c ****     {
 109:USBDevice/Device/usbd_if.c ****         /* Configured and valid indexed interfaces only */
 110:USBDevice/Device/usbd_if.c ****     }
 111:USBDevice/Device/usbd_if.c ****     else if (dev->Setup.RequestType.Type == USB_REQ_TYPE_STANDARD)
 334              		.loc 1 111 42 view .LVU100
 335 0012 0479     		ldrb	r4, [r0, #4]	@ zero_extendqisi2
 105:USBDevice/Device/usbd_if.c **** 
 336              		.loc 1 105 24 view .LVU101
 337 0014 00EB8202 		add	r2, r0, r2, lsl #2
 338              		.loc 1 111 13 view .LVU102
 339 0018 14F06004 		ands	r4, r4, #96
 105:USBDevice/Device/usbd_if.c **** 
 340              		.loc 1 105 24 view .LVU103
 341 001c D56A     		ldr	r5, [r2, #44]
 342              		.loc 1 111 10 is_stmt 1 view .LVU104
 343              		.loc 1 111 13 is_stmt 0 view .LVU105
 344 001e 04D1     		bne	.L31
 112:USBDevice/Device/usbd_if.c ****     {
 113:USBDevice/Device/usbd_if.c ****         switch (dev->Setup.Request)
 345              		.loc 1 113 9 is_stmt 1 view .LVU106
 346              		.loc 1 113 27 is_stmt 0 view .LVU107
 347 0020 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 348              		.loc 1 113 9 view .LVU108
 349 0022 0A2A     		cmp	r2, #10
 350 0024 0FD0     		beq	.L32
 351 0026 0B2A     		cmp	r2, #11
ARM GAS  /tmp/cc62ai5Z.s 			page 12


 352 0028 06D0     		beq	.L33
 353              	.L31:
 114:USBDevice/Device/usbd_if.c ****         {
 115:USBDevice/Device/usbd_if.c ****             /* Current alternate setting of the IF */
 116:USBDevice/Device/usbd_if.c ****             case USB_REQ_GET_INTERFACE:
 117:USBDevice/Device/usbd_if.c ****             {
 118:USBDevice/Device/usbd_if.c ****                 retval = USBD_CtrlSendData(dev,
 119:USBDevice/Device/usbd_if.c ****                         &itf->AltSelector, sizeof(itf->AltSelector));
 120:USBDevice/Device/usbd_if.c ****                 break;
 121:USBDevice/Device/usbd_if.c ****             }
 122:USBDevice/Device/usbd_if.c **** 
 123:USBDevice/Device/usbd_if.c ****             /* Set alternate setting of the IF */
 124:USBDevice/Device/usbd_if.c ****             case USB_REQ_SET_INTERFACE:
 125:USBDevice/Device/usbd_if.c ****             {
 126:USBDevice/Device/usbd_if.c ****                 uint8_t altSel = (uint8_t)dev->Setup.Value;
 127:USBDevice/Device/usbd_if.c **** 
 128:USBDevice/Device/usbd_if.c ****                 /* Check validity */
 129:USBDevice/Device/usbd_if.c ****                 if (itf->AltCount > altSel)
 130:USBDevice/Device/usbd_if.c ****                 {
 131:USBDevice/Device/usbd_if.c ****                     /* Deinit previous AS */
 132:USBDevice/Device/usbd_if.c ****                     USBD_IfClass_Deinit(itf);
 133:USBDevice/Device/usbd_if.c **** 
 134:USBDevice/Device/usbd_if.c ****                     itf->AltSelector = altSel;
 135:USBDevice/Device/usbd_if.c **** 
 136:USBDevice/Device/usbd_if.c ****                     /* Init with new AS */
 137:USBDevice/Device/usbd_if.c ****                     USBD_IfClass_Init(itf);
 138:USBDevice/Device/usbd_if.c **** 
 139:USBDevice/Device/usbd_if.c ****                     retval = USBD_E_OK;
 140:USBDevice/Device/usbd_if.c ****                 }
 141:USBDevice/Device/usbd_if.c ****                 break;
 142:USBDevice/Device/usbd_if.c ****             }
 143:USBDevice/Device/usbd_if.c **** 
 144:USBDevice/Device/usbd_if.c ****             default:
 145:USBDevice/Device/usbd_if.c ****             {
 146:USBDevice/Device/usbd_if.c ****                 /* forward the request to the IF */
 147:USBDevice/Device/usbd_if.c ****                 retval = USBD_IfClass_SetupStage(itf);
 148:USBDevice/Device/usbd_if.c ****                 break;
 149:USBDevice/Device/usbd_if.c ****             }
 150:USBDevice/Device/usbd_if.c ****         }
 151:USBDevice/Device/usbd_if.c ****     }
 152:USBDevice/Device/usbd_if.c ****     else
 153:USBDevice/Device/usbd_if.c ****     {
 154:USBDevice/Device/usbd_if.c ****         /* forward the request to the IF */
 155:USBDevice/Device/usbd_if.c ****         retval = USBD_IfClass_SetupStage(itf);
 354              		.loc 1 155 9 is_stmt 1 view .LVU109
 355              	.LVL22:
 356              	.LBB35:
 357              	.LBI35:
 117:USBDevice/Include/private/usbd_private.h **** }
 118:USBDevice/Include/private/usbd_private.h **** 
 119:USBDevice/Include/private/usbd_private.h **** /**
 120:USBDevice/Include/private/usbd_private.h ****  * @brief Calls the interface's class specific
 121:USBDevice/Include/private/usbd_private.h ****  *        @ref USBD_ClassType::SetupStage function.
 122:USBDevice/Include/private/usbd_private.h ****  * @param itf: reference of the interface
 123:USBDevice/Include/private/usbd_private.h ****  * @return Return value of the function call
 124:USBDevice/Include/private/usbd_private.h ****  */
 125:USBDevice/Include/private/usbd_private.h **** static inline USBD_ReturnType USBD_IfClass_SetupStage(
ARM GAS  /tmp/cc62ai5Z.s 			page 13


 358              		.loc 2 125 31 view .LVU110
 359              	.LBB36:
 126:USBDevice/Include/private/usbd_private.h ****         USBD_IfHandleType *itf)
 127:USBDevice/Include/private/usbd_private.h **** {
 128:USBDevice/Include/private/usbd_private.h ****     if (itf->Class->SetupStage == NULL)
 360              		.loc 2 128 5 view .LVU111
 361              		.loc 2 128 19 is_stmt 0 view .LVU112
 362 002a 6B68     		ldr	r3, [r5, #4]
 363 002c 1B69     		ldr	r3, [r3, #16]
 364              		.loc 2 128 8 view .LVU113
 365 002e 3BB1     		cbz	r3, .L40
 129:USBDevice/Include/private/usbd_private.h ****     {   return USBD_E_INVALID; }
 130:USBDevice/Include/private/usbd_private.h ****     else
 131:USBDevice/Include/private/usbd_private.h ****     {   return itf->Class->SetupStage(itf); }
 366              		.loc 2 131 9 is_stmt 1 view .LVU114
 367              		.loc 2 131 16 is_stmt 0 view .LVU115
 368 0030 2846     		mov	r0, r5
 369              	.LVL23:
 370              		.loc 2 131 16 view .LVU116
 371              	.LBE36:
 372              	.LBE35:
 156:USBDevice/Device/usbd_if.c ****     }
 157:USBDevice/Device/usbd_if.c **** 
 158:USBDevice/Device/usbd_if.c ****     return retval;
 159:USBDevice/Device/usbd_if.c **** }
 373              		.loc 1 159 1 view .LVU117
 374 0032 BDE87040 		pop	{r4, r5, r6, lr}
 375              	.LCFI3:
 376              		.cfi_remember_state
 377              		.cfi_restore 14
 378              		.cfi_restore 6
 379              		.cfi_restore 5
 380              		.cfi_restore 4
 381              		.cfi_def_cfa_offset 0
 382              	.LBB38:
 383              	.LBB37:
 384              		.loc 2 131 16 view .LVU118
 385 0036 1847     		bx	r3
 386              	.LVL24:
 387              	.L33:
 388              	.LCFI4:
 389              		.cfi_restore_state
 390              		.loc 2 131 16 view .LVU119
 391              	.LBE37:
 392              	.LBE38:
 393              	.LBB39:
 126:USBDevice/Device/usbd_if.c **** 
 394              		.loc 1 126 17 is_stmt 1 view .LVU120
 126:USBDevice/Device/usbd_if.c **** 
 395              		.loc 1 126 25 is_stmt 0 view .LVU121
 396 0038 8679     		ldrb	r6, [r0, #6]	@ zero_extendqisi2
 397              	.LVL25:
 129:USBDevice/Device/usbd_if.c ****                 {
 398              		.loc 1 129 17 is_stmt 1 view .LVU122
 129:USBDevice/Device/usbd_if.c ****                 {
 399              		.loc 1 129 20 is_stmt 0 view .LVU123
 400 003a 6B7A     		ldrb	r3, [r5, #9]	@ zero_extendqisi2
ARM GAS  /tmp/cc62ai5Z.s 			page 14


 401 003c B342     		cmp	r3, r6
 402 003e 09D8     		bhi	.L51
 403              	.LVL26:
 404              	.L40:
 129:USBDevice/Device/usbd_if.c ****                 {
 405              		.loc 1 129 20 view .LVU124
 406              	.LBE39:
 103:USBDevice/Device/usbd_if.c ****     uint8_t ifNum = (uint8_t)dev->Setup.Index;
 407              		.loc 1 103 21 view .LVU125
 408 0040 0324     		movs	r4, #3
 409              	.LVL27:
 410              	.L30:
 158:USBDevice/Device/usbd_if.c **** }
 411              		.loc 1 158 5 is_stmt 1 view .LVU126
 412              		.loc 1 159 1 is_stmt 0 view .LVU127
 413 0042 2046     		mov	r0, r4
 414 0044 70BD     		pop	{r4, r5, r6, pc}
 415              	.LVL28:
 416              	.L32:
 118:USBDevice/Device/usbd_if.c ****                         &itf->AltSelector, sizeof(itf->AltSelector));
 417              		.loc 1 118 17 is_stmt 1 view .LVU128
 118:USBDevice/Device/usbd_if.c ****                         &itf->AltSelector, sizeof(itf->AltSelector));
 418              		.loc 1 118 26 is_stmt 0 view .LVU129
 419 0046 05F10801 		add	r1, r5, #8
 420 004a 0122     		movs	r2, #1
 421              		.loc 1 159 1 view .LVU130
 422 004c BDE87040 		pop	{r4, r5, r6, lr}
 423              	.LCFI5:
 424              		.cfi_remember_state
 425              		.cfi_restore 14
 426              		.cfi_restore 6
 427              		.cfi_restore 5
 428              		.cfi_restore 4
 429              		.cfi_def_cfa_offset 0
 118:USBDevice/Device/usbd_if.c ****                         &itf->AltSelector, sizeof(itf->AltSelector));
 430              		.loc 1 118 26 view .LVU131
 431 0050 FFF7FEBF 		b	USBD_CtrlSendData
 432              	.LVL29:
 433              	.L51:
 434              	.LCFI6:
 435              		.cfi_restore_state
 436              	.LBB44:
 132:USBDevice/Device/usbd_if.c **** 
 437              		.loc 1 132 21 is_stmt 1 view .LVU132
 438              	.LBB40:
 439              	.LBI40:
 113:USBDevice/Include/private/usbd_private.h ****         USBD_IfHandleType *itf)
 440              		.loc 2 113 20 view .LVU133
 441              	.LBB41:
 116:USBDevice/Include/private/usbd_private.h **** }
 442              		.loc 2 116 5 view .LVU134
 116:USBDevice/Include/private/usbd_private.h **** }
 443              		.loc 2 116 5 view .LVU135
 444 0054 6B68     		ldr	r3, [r5, #4]
 445 0056 DA68     		ldr	r2, [r3, #12]
 446 0058 12B1     		cbz	r2, .L35
 116:USBDevice/Include/private/usbd_private.h **** }
ARM GAS  /tmp/cc62ai5Z.s 			page 15


 447              		.loc 2 116 5 view .LVU136
 448 005a 2846     		mov	r0, r5
 449              	.LVL30:
 116:USBDevice/Include/private/usbd_private.h **** }
 450              		.loc 2 116 5 is_stmt 0 view .LVU137
 451 005c 9047     		blx	r2
 452              	.LVL31:
 116:USBDevice/Include/private/usbd_private.h **** }
 453              		.loc 2 116 5 view .LVU138
 454 005e 6B68     		ldr	r3, [r5, #4]
 455              	.L35:
 116:USBDevice/Include/private/usbd_private.h **** }
 456              		.loc 2 116 5 is_stmt 1 view .LVU139
 116:USBDevice/Include/private/usbd_private.h **** }
 457              		.loc 2 116 5 is_stmt 0 view .LVU140
 458              	.LBE41:
 459              	.LBE40:
 134:USBDevice/Device/usbd_if.c **** 
 460              		.loc 1 134 21 is_stmt 1 view .LVU141
 134:USBDevice/Device/usbd_if.c **** 
 461              		.loc 1 134 38 is_stmt 0 view .LVU142
 462 0060 2E72     		strb	r6, [r5, #8]
 137:USBDevice/Device/usbd_if.c **** 
 463              		.loc 1 137 21 is_stmt 1 view .LVU143
 464              	.LVL32:
 465              	.LBB42:
 466              	.LBI42:
 102:USBDevice/Include/private/usbd_private.h ****         USBD_IfHandleType *itf)
 467              		.loc 2 102 20 view .LVU144
 468              	.LBB43:
 105:USBDevice/Include/private/usbd_private.h **** }
 469              		.loc 2 105 5 view .LVU145
 105:USBDevice/Include/private/usbd_private.h **** }
 470              		.loc 2 105 5 view .LVU146
 471 0062 9B68     		ldr	r3, [r3, #8]
 472 0064 002B     		cmp	r3, #0
 473 0066 ECD0     		beq	.L30
 105:USBDevice/Include/private/usbd_private.h **** }
 474              		.loc 2 105 5 view .LVU147
 475 0068 2846     		mov	r0, r5
 476 006a 9847     		blx	r3
 477              	.LVL33:
 478 006c E9E7     		b	.L30
 479              	.LBE43:
 480              	.LBE42:
 481              	.LBE44:
 482              		.cfi_endproc
 483              	.LFE159:
 485 006e 00BF     		.text
 486              	.Letext0:
 487              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 488              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 489              		.file 5 "USBDevice/Include/usb_types.h"
 490              		.file 6 "STM32_XPD/STM32H7_XPD/inc/xpd_common.h"
 491              		.file 7 "STM32_XPD/CMSIS/Include/core_cm7.h"
 492              		.file 8 "STM32_XPD/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 493              		.file 9 "STM32_XPD/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
ARM GAS  /tmp/cc62ai5Z.s 			page 16


 494              		.file 10 "USBDevice/PDs/STM32_XPD/usbd_pd_def.h"
 495              		.file 11 "USBDevice/Include/usbd_types.h"
 496              		.file 12 "/usr/arm-none-eabi/include/sys/lock.h"
 497              		.file 13 "/usr/arm-none-eabi/include/sys/_types.h"
 498              		.file 14 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 499              		.file 15 "/usr/arm-none-eabi/include/sys/reent.h"
 500              		.file 16 "USBDevice/Include/private/usbd_internal.h"
ARM GAS  /tmp/cc62ai5Z.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_if.c
     /tmp/cc62ai5Z.s:18     .text.USBD_IfConfig:0000000000000000 $t
     /tmp/cc62ai5Z.s:27     .text.USBD_IfConfig:0000000000000000 USBD_IfConfig
     /tmp/cc62ai5Z.s:227    .text.USBD_IfString:0000000000000000 $t
     /tmp/cc62ai5Z.s:235    .text.USBD_IfString:0000000000000000 USBD_IfString
     /tmp/cc62ai5Z.s:298    .text.USBD_IfRequest:0000000000000000 $t
     /tmp/cc62ai5Z.s:306    .text.USBD_IfRequest:0000000000000000 USBD_IfRequest

UNDEFINED SYMBOLS
USBD_CtrlSendData
