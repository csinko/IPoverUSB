ARM GAS  /tmp/ccxnYZWm.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.USBD_Init,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	USBD_Init
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	USBD_Init:
  28              	.LVL0:
  29              	.LFB157:
  30              		.file 1 "USBDevice/Device/usbd.c"
   1:USBDevice/Device/usbd.c **** /**
   2:USBDevice/Device/usbd.c ****   ******************************************************************************
   3:USBDevice/Device/usbd.c ****   * @file    usbd.c
   4:USBDevice/Device/usbd.c ****   * @author  Benedek Kupper
   5:USBDevice/Device/usbd.c ****   * @version 0.1
   6:USBDevice/Device/usbd.c ****   * @date    2018-01-31
   7:USBDevice/Device/usbd.c ****   * @brief   Universal Serial Bus Device Driver
   8:USBDevice/Device/usbd.c ****   *          Device level control functions
   9:USBDevice/Device/usbd.c ****   *
  10:USBDevice/Device/usbd.c ****   * Copyright (c) 2018 Benedek Kupper
  11:USBDevice/Device/usbd.c ****   *
  12:USBDevice/Device/usbd.c ****   * Licensed under the Apache License, Version 2.0 (the "License");
  13:USBDevice/Device/usbd.c ****   * you may not use this file except in compliance with the License.
  14:USBDevice/Device/usbd.c ****   * You may obtain a copy of the License at
  15:USBDevice/Device/usbd.c ****   *
  16:USBDevice/Device/usbd.c ****   *     http://www.apache.org/licenses/LICENSE-2.0
  17:USBDevice/Device/usbd.c ****   *
  18:USBDevice/Device/usbd.c ****   * Unless required by applicable law or agreed to in writing, software
  19:USBDevice/Device/usbd.c ****   * distributed under the License is distributed on an "AS IS" BASIS,
  20:USBDevice/Device/usbd.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:USBDevice/Device/usbd.c ****   * See the License for the specific language governing permissions and
  22:USBDevice/Device/usbd.c ****   * limitations under the License.
  23:USBDevice/Device/usbd.c ****   */
  24:USBDevice/Device/usbd.c **** #include <private/usbd_private.h>
  25:USBDevice/Device/usbd.c **** 
  26:USBDevice/Device/usbd.c **** /** @ingroup USBD
  27:USBDevice/Device/usbd.c ****  * @defgroup USBD_Exported_Functions USB Device Exported Functions
  28:USBDevice/Device/usbd.c ****  * @brief These functions are called by the user code
ARM GAS  /tmp/ccxnYZWm.s 			page 2


  29:USBDevice/Device/usbd.c ****  *        (the callbacks by the Peripheral Driver).
  30:USBDevice/Device/usbd.c ****  * @{ */
  31:USBDevice/Device/usbd.c **** 
  32:USBDevice/Device/usbd.c **** /**
  33:USBDevice/Device/usbd.c ****  * @brief This function initializes the USB device.
  34:USBDevice/Device/usbd.c ****  * @param dev: USB Device handle reference
  35:USBDevice/Device/usbd.c ****  * @param desc: Device properties reference
  36:USBDevice/Device/usbd.c ****  */
  37:USBDevice/Device/usbd.c **** void USBD_Init(USBD_HandleType *dev, const USBD_DescriptionType *desc)
  38:USBDevice/Device/usbd.c **** {
  31              		.loc 1 38 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  39:USBDevice/Device/usbd.c ****     /* Assign USBD Descriptors */
  40:USBDevice/Device/usbd.c ****     dev->Desc = desc;
  36              		.loc 1 40 5 view .LVU1
  38:USBDevice/Device/usbd.c ****     /* Assign USBD Descriptors */
  37              		.loc 1 38 1 is_stmt 0 view .LVU2
  38 0000 70B4     		push	{r4, r5, r6}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 12
  41              		.cfi_offset 4, -12
  42              		.cfi_offset 5, -8
  43              		.cfi_offset 6, -4
  41:USBDevice/Device/usbd.c **** 
  42:USBDevice/Device/usbd.c ****     /* Set Device initial State */
  43:USBDevice/Device/usbd.c ****     dev->ConfigSelector = 0;
  44:USBDevice/Device/usbd.c ****     dev->Features.RemoteWakeup = 0;
  45:USBDevice/Device/usbd.c ****     dev->Features.SelfPowered  = dev->Desc->Config.SelfPowered;
  44              		.loc 1 45 32 view .LVU3
  45 0002 90F82620 		ldrb	r2, [r0, #38]	@ zero_extendqisi2
  43:USBDevice/Device/usbd.c ****     dev->Features.RemoteWakeup = 0;
  46              		.loc 1 43 25 view .LVU4
  47 0006 0026     		movs	r6, #0
  48              		.loc 1 45 51 view .LVU5
  49 0008 8D79     		ldrb	r5, [r1, #6]	@ zero_extendqisi2
  50              		.loc 1 45 32 view .LVU6
  51 000a 22F00302 		bic	r2, r2, #3
  43:USBDevice/Device/usbd.c ****     dev->Features.RemoteWakeup = 0;
  52              		.loc 1 43 25 view .LVU7
  53 000e 80F82860 		strb	r6, [r0, #40]
  54              		.loc 1 45 32 view .LVU8
  55 0012 C5F38014 		ubfx	r4, r5, #6, #1
  46:USBDevice/Device/usbd.c **** 
  47:USBDevice/Device/usbd.c ****     /* For FS device some buffer space can be saved by changing
  48:USBDevice/Device/usbd.c ****      * EP0 MPS to 32/16/8
  49:USBDevice/Device/usbd.c ****      * HS capable devices must keep this value at 64 */
  50:USBDevice/Device/usbd.c ****     dev->EP.IN [0].MaxPacketSize = USB_EP0_FS_MAX_PACKET_SIZE;
  56              		.loc 1 50 34 view .LVU9
  57 0016 4025     		movs	r5, #64
  40:USBDevice/Device/usbd.c **** 
  58              		.loc 1 40 15 view .LVU10
  59 0018 0160     		str	r1, [r0]
  43:USBDevice/Device/usbd.c ****     dev->Features.RemoteWakeup = 0;
  60              		.loc 1 43 5 is_stmt 1 view .LVU11
ARM GAS  /tmp/ccxnYZWm.s 			page 3


  44:USBDevice/Device/usbd.c ****     dev->Features.SelfPowered  = dev->Desc->Config.SelfPowered;
  61              		.loc 1 44 5 view .LVU12
  45:USBDevice/Device/usbd.c **** 
  62              		.loc 1 45 5 view .LVU13
  63              		.loc 1 50 5 view .LVU14
  45:USBDevice/Device/usbd.c **** 
  64              		.loc 1 45 32 is_stmt 0 view .LVU15
  65 001a 2243     		orrs	r2, r2, r4
  66              		.loc 1 50 34 view .LVU16
  67 001c A0F85450 		strh	r5, [r0, #84]	@ movhi
  51:USBDevice/Device/usbd.c ****     dev->EP.OUT[0].MaxPacketSize = USB_EP0_FS_MAX_PACKET_SIZE;
  68              		.loc 1 51 5 is_stmt 1 view .LVU17
  69              		.loc 1 51 34 is_stmt 0 view .LVU18
  70 0020 A0F8B450 		strh	r5, [r0, #180]	@ movhi
  52:USBDevice/Device/usbd.c **** 
  53:USBDevice/Device/usbd.c ****     /* Initialize low level driver with device configuration */
  54:USBDevice/Device/usbd.c ****     USBD_PD_Init(dev, &dev->Desc->Config);
  71              		.loc 1 54 5 is_stmt 1 view .LVU19
  45:USBDevice/Device/usbd.c **** 
  72              		.loc 1 45 32 is_stmt 0 view .LVU20
  73 0024 80F82620 		strb	r2, [r0, #38]
  55:USBDevice/Device/usbd.c **** }
  74              		.loc 1 55 1 view .LVU21
  75 0028 70BC     		pop	{r4, r5, r6}
  76              	.LCFI1:
  77              		.cfi_restore 6
  78              		.cfi_restore 5
  79              		.cfi_restore 4
  80              		.cfi_def_cfa_offset 0
  54:USBDevice/Device/usbd.c **** }
  81              		.loc 1 54 5 view .LVU22
  82 002a FFF7FEBF 		b	USB_vDevInit
  83              	.LVL1:
  54:USBDevice/Device/usbd.c **** }
  84              		.loc 1 54 5 view .LVU23
  85              		.cfi_endproc
  86              	.LFE157:
  88 002e 00BF     		.section	.text.USBD_Deinit,"ax",%progbits
  89              		.align	1
  90              		.p2align 2,,3
  91              		.global	USBD_Deinit
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu fpv4-sp-d16
  97              	USBD_Deinit:
  98              	.LVL2:
  99              	.LFB158:
  56:USBDevice/Device/usbd.c **** 
  57:USBDevice/Device/usbd.c **** /**
  58:USBDevice/Device/usbd.c ****  * @brief This function shuts down the USB device entirely.
  59:USBDevice/Device/usbd.c ****  * @param dev: USB Device handle reference
  60:USBDevice/Device/usbd.c ****  */
  61:USBDevice/Device/usbd.c **** void USBD_Deinit(USBD_HandleType *dev)
  62:USBDevice/Device/usbd.c **** {
 100              		.loc 1 62 1 is_stmt 1 view -0
 101              		.cfi_startproc
ARM GAS  /tmp/ccxnYZWm.s 			page 4


 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
  63:USBDevice/Device/usbd.c ****     USBD_IfConfig(dev, 0);
 104              		.loc 1 63 5 view .LVU25
  62:USBDevice/Device/usbd.c ****     USBD_IfConfig(dev, 0);
 105              		.loc 1 62 1 is_stmt 0 view .LVU26
 106 0000 10B5     		push	{r4, lr}
 107              	.LCFI2:
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
  62:USBDevice/Device/usbd.c ****     USBD_IfConfig(dev, 0);
 111              		.loc 1 62 1 view .LVU27
 112 0002 0446     		mov	r4, r0
 113              		.loc 1 63 5 view .LVU28
 114 0004 0021     		movs	r1, #0
 115 0006 FFF7FEFF 		bl	USBD_IfConfig
 116              	.LVL3:
  64:USBDevice/Device/usbd.c **** 
  65:USBDevice/Device/usbd.c ****     /* Deinitialize low level driver */
  66:USBDevice/Device/usbd.c ****     USBD_PD_Deinit(dev);
 117              		.loc 1 66 5 is_stmt 1 view .LVU29
 118 000a 2046     		mov	r0, r4
  67:USBDevice/Device/usbd.c **** }
 119              		.loc 1 67 1 is_stmt 0 view .LVU30
 120 000c BDE81040 		pop	{r4, lr}
 121              	.LCFI3:
 122              		.cfi_restore 14
 123              		.cfi_restore 4
 124              		.cfi_def_cfa_offset 0
 125              	.LVL4:
  66:USBDevice/Device/usbd.c **** }
 126              		.loc 1 66 5 view .LVU31
 127 0010 FFF7FEBF 		b	USB_vDevDeinit
 128              	.LVL5:
  66:USBDevice/Device/usbd.c **** }
 129              		.loc 1 66 5 view .LVU32
 130              		.cfi_endproc
 131              	.LFE158:
 133              		.section	.text.USBD_UnmountInterfaces,"ax",%progbits
 134              		.align	1
 135              		.p2align 2,,3
 136              		.global	USBD_UnmountInterfaces
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 140              		.fpu fpv4-sp-d16
 142              	USBD_UnmountInterfaces:
 143              	.LVL6:
 144              	.LFB159:
  68:USBDevice/Device/usbd.c **** 
  69:USBDevice/Device/usbd.c **** /**
  70:USBDevice/Device/usbd.c ****  * @brief Removes all mounted interfaces from the device.
  71:USBDevice/Device/usbd.c ****  * @param dev: USB Device handle reference
  72:USBDevice/Device/usbd.c ****  */
  73:USBDevice/Device/usbd.c **** void USBD_UnmountInterfaces(USBD_HandleType *dev)
  74:USBDevice/Device/usbd.c **** {
ARM GAS  /tmp/ccxnYZWm.s 			page 5


 145              		.loc 1 74 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
  75:USBDevice/Device/usbd.c ****     int i;
 149              		.loc 1 75 5 view .LVU34
  76:USBDevice/Device/usbd.c **** 
  77:USBDevice/Device/usbd.c ****     USBD_IfConfig(dev, 0);
 150              		.loc 1 77 5 view .LVU35
  74:USBDevice/Device/usbd.c ****     int i;
 151              		.loc 1 74 1 is_stmt 0 view .LVU36
 152 0000 10B5     		push	{r4, lr}
 153              	.LCFI4:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 14, -4
 157              		.loc 1 77 5 view .LVU37
 158 0002 0021     		movs	r1, #0
  74:USBDevice/Device/usbd.c ****     int i;
 159              		.loc 1 74 1 view .LVU38
 160 0004 0446     		mov	r4, r0
 161              		.loc 1 77 5 view .LVU39
 162 0006 FFF7FEFF 		bl	USBD_IfConfig
 163              	.LVL7:
  78:USBDevice/Device/usbd.c **** 
  79:USBDevice/Device/usbd.c ****     dev->IfCount = 0;
 164              		.loc 1 79 5 is_stmt 1 view .LVU40
 165              		.loc 1 79 18 is_stmt 0 view .LVU41
 166 000a 0023     		movs	r3, #0
 167 000c 84F82930 		strb	r3, [r4, #41]
  80:USBDevice/Device/usbd.c **** 
  81:USBDevice/Device/usbd.c ****     for (i = 1; i < USBD_MAX_EP_COUNT; i++)
 168              		.loc 1 81 5 is_stmt 1 view .LVU42
 169              	.LVL8:
 170              		.loc 1 81 17 view .LVU43
  82:USBDevice/Device/usbd.c ****     {
  83:USBDevice/Device/usbd.c ****         dev->EP.IN [i].MaxPacketSize = 0;
 171              		.loc 1 83 9 view .LVU44
 172              		.loc 1 83 38 is_stmt 0 view .LVU45
 173 0010 A4F86430 		strh	r3, [r4, #100]	@ movhi
  84:USBDevice/Device/usbd.c ****         dev->EP.IN [i].State = USB_EP_STATE_CLOSED;
 174              		.loc 1 84 9 is_stmt 1 view .LVU46
 175              		.loc 1 84 30 is_stmt 0 view .LVU47
 176 0014 84F86730 		strb	r3, [r4, #103]
  85:USBDevice/Device/usbd.c ****         dev->EP.OUT[i].MaxPacketSize = 0;
 177              		.loc 1 85 9 is_stmt 1 view .LVU48
 178              		.loc 1 85 38 is_stmt 0 view .LVU49
 179 0018 A4F8C430 		strh	r3, [r4, #196]	@ movhi
  86:USBDevice/Device/usbd.c ****         dev->EP.OUT[i].State = USB_EP_STATE_CLOSED;
 180              		.loc 1 86 9 is_stmt 1 view .LVU50
 181              		.loc 1 86 30 is_stmt 0 view .LVU51
 182 001c 84F8C730 		strb	r3, [r4, #199]
  81:USBDevice/Device/usbd.c ****     {
 183              		.loc 1 81 40 is_stmt 1 view .LVU52
 184              	.LVL9:
  81:USBDevice/Device/usbd.c ****     {
 185              		.loc 1 81 17 view .LVU53
ARM GAS  /tmp/ccxnYZWm.s 			page 6


  83:USBDevice/Device/usbd.c ****         dev->EP.IN [i].State = USB_EP_STATE_CLOSED;
 186              		.loc 1 83 9 view .LVU54
  83:USBDevice/Device/usbd.c ****         dev->EP.IN [i].State = USB_EP_STATE_CLOSED;
 187              		.loc 1 83 38 is_stmt 0 view .LVU55
 188 0020 A4F87430 		strh	r3, [r4, #116]	@ movhi
  84:USBDevice/Device/usbd.c ****         dev->EP.OUT[i].MaxPacketSize = 0;
 189              		.loc 1 84 9 is_stmt 1 view .LVU56
  84:USBDevice/Device/usbd.c ****         dev->EP.OUT[i].MaxPacketSize = 0;
 190              		.loc 1 84 30 is_stmt 0 view .LVU57
 191 0024 84F87730 		strb	r3, [r4, #119]
  85:USBDevice/Device/usbd.c ****         dev->EP.OUT[i].State = USB_EP_STATE_CLOSED;
 192              		.loc 1 85 9 is_stmt 1 view .LVU58
  85:USBDevice/Device/usbd.c ****         dev->EP.OUT[i].State = USB_EP_STATE_CLOSED;
 193              		.loc 1 85 38 is_stmt 0 view .LVU59
 194 0028 A4F8D430 		strh	r3, [r4, #212]	@ movhi
 195              		.loc 1 86 9 is_stmt 1 view .LVU60
 196              		.loc 1 86 30 is_stmt 0 view .LVU61
 197 002c 84F8D730 		strb	r3, [r4, #215]
  81:USBDevice/Device/usbd.c ****     {
 198              		.loc 1 81 40 is_stmt 1 view .LVU62
 199              	.LVL10:
  81:USBDevice/Device/usbd.c ****     {
 200              		.loc 1 81 17 view .LVU63
  83:USBDevice/Device/usbd.c ****         dev->EP.IN [i].State = USB_EP_STATE_CLOSED;
 201              		.loc 1 83 9 view .LVU64
  83:USBDevice/Device/usbd.c ****         dev->EP.IN [i].State = USB_EP_STATE_CLOSED;
 202              		.loc 1 83 38 is_stmt 0 view .LVU65
 203 0030 A4F88430 		strh	r3, [r4, #132]	@ movhi
  84:USBDevice/Device/usbd.c ****         dev->EP.OUT[i].MaxPacketSize = 0;
 204              		.loc 1 84 9 is_stmt 1 view .LVU66
  84:USBDevice/Device/usbd.c ****         dev->EP.OUT[i].MaxPacketSize = 0;
 205              		.loc 1 84 30 is_stmt 0 view .LVU67
 206 0034 84F88730 		strb	r3, [r4, #135]
  85:USBDevice/Device/usbd.c ****         dev->EP.OUT[i].State = USB_EP_STATE_CLOSED;
 207              		.loc 1 85 9 is_stmt 1 view .LVU68
  85:USBDevice/Device/usbd.c ****         dev->EP.OUT[i].State = USB_EP_STATE_CLOSED;
 208              		.loc 1 85 38 is_stmt 0 view .LVU69
 209 0038 A4F8E430 		strh	r3, [r4, #228]	@ movhi
 210              		.loc 1 86 9 is_stmt 1 view .LVU70
 211              		.loc 1 86 30 is_stmt 0 view .LVU71
 212 003c 84F8E730 		strb	r3, [r4, #231]
  81:USBDevice/Device/usbd.c ****     {
 213              		.loc 1 81 40 is_stmt 1 view .LVU72
 214              	.LVL11:
  81:USBDevice/Device/usbd.c ****     {
 215              		.loc 1 81 17 view .LVU73
  83:USBDevice/Device/usbd.c ****         dev->EP.IN [i].State = USB_EP_STATE_CLOSED;
 216              		.loc 1 83 9 view .LVU74
  83:USBDevice/Device/usbd.c ****         dev->EP.IN [i].State = USB_EP_STATE_CLOSED;
 217              		.loc 1 83 38 is_stmt 0 view .LVU75
 218 0040 A4F89430 		strh	r3, [r4, #148]	@ movhi
  84:USBDevice/Device/usbd.c ****         dev->EP.OUT[i].MaxPacketSize = 0;
 219              		.loc 1 84 9 is_stmt 1 view .LVU76
  84:USBDevice/Device/usbd.c ****         dev->EP.OUT[i].MaxPacketSize = 0;
 220              		.loc 1 84 30 is_stmt 0 view .LVU77
 221 0044 84F89730 		strb	r3, [r4, #151]
  85:USBDevice/Device/usbd.c ****         dev->EP.OUT[i].State = USB_EP_STATE_CLOSED;
ARM GAS  /tmp/ccxnYZWm.s 			page 7


 222              		.loc 1 85 9 is_stmt 1 view .LVU78
  85:USBDevice/Device/usbd.c ****         dev->EP.OUT[i].State = USB_EP_STATE_CLOSED;
 223              		.loc 1 85 38 is_stmt 0 view .LVU79
 224 0048 A4F8F430 		strh	r3, [r4, #244]	@ movhi
 225              		.loc 1 86 9 is_stmt 1 view .LVU80
 226              		.loc 1 86 30 is_stmt 0 view .LVU81
 227 004c 84F8F730 		strb	r3, [r4, #247]
  81:USBDevice/Device/usbd.c ****     {
 228              		.loc 1 81 40 is_stmt 1 view .LVU82
 229              	.LVL12:
  81:USBDevice/Device/usbd.c ****     {
 230              		.loc 1 81 17 view .LVU83
  83:USBDevice/Device/usbd.c ****         dev->EP.IN [i].State = USB_EP_STATE_CLOSED;
 231              		.loc 1 83 9 view .LVU84
  83:USBDevice/Device/usbd.c ****         dev->EP.IN [i].State = USB_EP_STATE_CLOSED;
 232              		.loc 1 83 38 is_stmt 0 view .LVU85
 233 0050 A4F8A430 		strh	r3, [r4, #164]	@ movhi
  84:USBDevice/Device/usbd.c ****         dev->EP.OUT[i].MaxPacketSize = 0;
 234              		.loc 1 84 9 is_stmt 1 view .LVU86
  84:USBDevice/Device/usbd.c ****         dev->EP.OUT[i].MaxPacketSize = 0;
 235              		.loc 1 84 30 is_stmt 0 view .LVU87
 236 0054 84F8A730 		strb	r3, [r4, #167]
  85:USBDevice/Device/usbd.c ****         dev->EP.OUT[i].State = USB_EP_STATE_CLOSED;
 237              		.loc 1 85 9 is_stmt 1 view .LVU88
  85:USBDevice/Device/usbd.c ****         dev->EP.OUT[i].State = USB_EP_STATE_CLOSED;
 238              		.loc 1 85 38 is_stmt 0 view .LVU89
 239 0058 A4F80431 		strh	r3, [r4, #260]	@ movhi
 240              		.loc 1 86 9 is_stmt 1 view .LVU90
 241              		.loc 1 86 30 is_stmt 0 view .LVU91
 242 005c 84F80731 		strb	r3, [r4, #263]
  81:USBDevice/Device/usbd.c ****     {
 243              		.loc 1 81 40 is_stmt 1 view .LVU92
 244              	.LVL13:
  81:USBDevice/Device/usbd.c ****     {
 245              		.loc 1 81 17 view .LVU93
  87:USBDevice/Device/usbd.c ****     }
  88:USBDevice/Device/usbd.c **** }
 246              		.loc 1 88 1 is_stmt 0 view .LVU94
 247 0060 10BD     		pop	{r4, pc}
 248              		.loc 1 88 1 view .LVU95
 249              		.cfi_endproc
 250              	.LFE159:
 252 0062 00BF     		.section	.text.USBD_Connect,"ax",%progbits
 253              		.align	1
 254              		.p2align 2,,3
 255              		.global	USBD_Connect
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 259              		.fpu fpv4-sp-d16
 261              	USBD_Connect:
 262              	.LVL14:
 263              	.LFB160:
  89:USBDevice/Device/usbd.c **** 
  90:USBDevice/Device/usbd.c **** /**
  91:USBDevice/Device/usbd.c ****  * @brief This function logically connects (attaches) the device to the bus.
  92:USBDevice/Device/usbd.c ****  * @param dev: USB Device handle reference
ARM GAS  /tmp/ccxnYZWm.s 			page 8


  93:USBDevice/Device/usbd.c ****  */
  94:USBDevice/Device/usbd.c **** void USBD_Connect(USBD_HandleType *dev)
  95:USBDevice/Device/usbd.c **** {
 264              		.loc 1 95 1 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
  96:USBDevice/Device/usbd.c ****     /* Start the low level driver */
  97:USBDevice/Device/usbd.c ****     USBD_PD_Start(dev);
 269              		.loc 1 97 5 view .LVU97
 270 0000 FFF7FEBF 		b	USB_vDevStart_IT
 271              	.LVL15:
 272              		.loc 1 97 5 is_stmt 0 view .LVU98
 273              		.cfi_endproc
 274              	.LFE160:
 276              		.section	.text.USBD_Disconnect,"ax",%progbits
 277              		.align	1
 278              		.p2align 2,,3
 279              		.global	USBD_Disconnect
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv4-sp-d16
 285              	USBD_Disconnect:
 286              	.LVL16:
 287              	.LFB161:
  98:USBDevice/Device/usbd.c **** }
  99:USBDevice/Device/usbd.c **** 
 100:USBDevice/Device/usbd.c **** /**
 101:USBDevice/Device/usbd.c ****  * @brief This function logically disconnects (detaches) the device from the bus.
 102:USBDevice/Device/usbd.c ****  * @param dev: USB Device handle reference
 103:USBDevice/Device/usbd.c ****  */
 104:USBDevice/Device/usbd.c **** void USBD_Disconnect(USBD_HandleType *dev)
 105:USBDevice/Device/usbd.c **** {
 288              		.loc 1 105 1 is_stmt 1 view -0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 106:USBDevice/Device/usbd.c ****     USBD_IfConfig(dev, 0);
 292              		.loc 1 106 5 view .LVU100
 105:USBDevice/Device/usbd.c ****     USBD_IfConfig(dev, 0);
 293              		.loc 1 105 1 is_stmt 0 view .LVU101
 294 0000 10B5     		push	{r4, lr}
 295              	.LCFI5:
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 4, -8
 298              		.cfi_offset 14, -4
 105:USBDevice/Device/usbd.c ****     USBD_IfConfig(dev, 0);
 299              		.loc 1 105 1 view .LVU102
 300 0002 0446     		mov	r4, r0
 301              		.loc 1 106 5 view .LVU103
 302 0004 0021     		movs	r1, #0
 303 0006 FFF7FEFF 		bl	USBD_IfConfig
 304              	.LVL17:
 107:USBDevice/Device/usbd.c **** 
 108:USBDevice/Device/usbd.c ****     /* Stop the low level driver */
ARM GAS  /tmp/ccxnYZWm.s 			page 9


 109:USBDevice/Device/usbd.c ****     USBD_PD_Stop(dev);
 305              		.loc 1 109 5 is_stmt 1 view .LVU104
 306 000a 2046     		mov	r0, r4
 110:USBDevice/Device/usbd.c **** }
 307              		.loc 1 110 1 is_stmt 0 view .LVU105
 308 000c BDE81040 		pop	{r4, lr}
 309              	.LCFI6:
 310              		.cfi_restore 14
 311              		.cfi_restore 4
 312              		.cfi_def_cfa_offset 0
 313              	.LVL18:
 109:USBDevice/Device/usbd.c **** }
 314              		.loc 1 109 5 view .LVU106
 315 0010 FFF7FEBF 		b	USB_vDevStop_IT
 316              	.LVL19:
 109:USBDevice/Device/usbd.c **** }
 317              		.loc 1 109 5 view .LVU107
 318              		.cfi_endproc
 319              	.LFE161:
 321              		.section	.text.USBD_SetRemoteWakeup,"ax",%progbits
 322              		.align	1
 323              		.p2align 2,,3
 324              		.global	USBD_SetRemoteWakeup
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 328              		.fpu fpv4-sp-d16
 330              	USBD_SetRemoteWakeup:
 331              	.LVL20:
 332              	.LFB162:
 111:USBDevice/Device/usbd.c **** 
 112:USBDevice/Device/usbd.c **** /**
 113:USBDevice/Device/usbd.c ****  * @brief This function sends remote wakeup signal to the host
 114:USBDevice/Device/usbd.c ****  *        as long as the feature is enabled.
 115:USBDevice/Device/usbd.c ****  * @param dev: USB Device handle reference
 116:USBDevice/Device/usbd.c ****  * @return OK if the feature is enabled, ERROR otherwise
 117:USBDevice/Device/usbd.c ****  */
 118:USBDevice/Device/usbd.c **** USBD_ReturnType USBD_SetRemoteWakeup(USBD_HandleType *dev)
 119:USBDevice/Device/usbd.c **** {
 333              		.loc 1 119 1 is_stmt 1 view -0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 120:USBDevice/Device/usbd.c ****     USBD_ReturnType retval = USBD_E_ERROR;
 337              		.loc 1 120 5 view .LVU109
 121:USBDevice/Device/usbd.c **** 
 122:USBDevice/Device/usbd.c ****     /* Check if remote wakeup is enabled by the host */
 123:USBDevice/Device/usbd.c ****     if (dev->Features.RemoteWakeup != 0)
 338              		.loc 1 123 5 view .LVU110
 119:USBDevice/Device/usbd.c ****     USBD_ReturnType retval = USBD_E_ERROR;
 339              		.loc 1 119 1 is_stmt 0 view .LVU111
 340 0000 08B5     		push	{r3, lr}
 341              	.LCFI7:
 342              		.cfi_def_cfa_offset 8
 343              		.cfi_offset 3, -8
 344              		.cfi_offset 14, -4
 345              		.loc 1 123 36 view .LVU112
ARM GAS  /tmp/ccxnYZWm.s 			page 10


 346 0002 90F82630 		ldrb	r3, [r0, #38]	@ zero_extendqisi2
 347              		.loc 1 123 8 view .LVU113
 348 0006 9B07     		lsls	r3, r3, #30
 349 0008 01D4     		bmi	.L15
 120:USBDevice/Device/usbd.c ****     USBD_ReturnType retval = USBD_E_ERROR;
 350              		.loc 1 120 21 view .LVU114
 351 000a 0120     		movs	r0, #1
 352              	.LVL21:
 124:USBDevice/Device/usbd.c ****     {
 125:USBDevice/Device/usbd.c ****         USBD_PD_SetRemoteWakeup(dev);
 126:USBDevice/Device/usbd.c ****         retval = USBD_E_OK;
 127:USBDevice/Device/usbd.c ****     }
 128:USBDevice/Device/usbd.c ****     return retval;
 353              		.loc 1 128 5 is_stmt 1 view .LVU115
 129:USBDevice/Device/usbd.c **** }
 354              		.loc 1 129 1 is_stmt 0 view .LVU116
 355 000c 08BD     		pop	{r3, pc}
 356              	.LVL22:
 357              	.L15:
 125:USBDevice/Device/usbd.c ****         retval = USBD_E_OK;
 358              		.loc 1 125 9 is_stmt 1 view .LVU117
 359 000e FFF7FEFF 		bl	USB_vSetRemoteWakeup
 360              	.LVL23:
 126:USBDevice/Device/usbd.c ****     }
 361              		.loc 1 126 9 view .LVU118
 126:USBDevice/Device/usbd.c ****     }
 362              		.loc 1 126 16 is_stmt 0 view .LVU119
 363 0012 0020     		movs	r0, #0
 364              	.LVL24:
 128:USBDevice/Device/usbd.c **** }
 365              		.loc 1 128 5 is_stmt 1 view .LVU120
 366              		.loc 1 129 1 is_stmt 0 view .LVU121
 367 0014 08BD     		pop	{r3, pc}
 368              		.cfi_endproc
 369              	.LFE162:
 371 0016 00BF     		.section	.text.USBD_ClearRemoteWakeup,"ax",%progbits
 372              		.align	1
 373              		.p2align 2,,3
 374              		.global	USBD_ClearRemoteWakeup
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv4-sp-d16
 380              	USBD_ClearRemoteWakeup:
 381              	.LVL25:
 382              	.LFB163:
 130:USBDevice/Device/usbd.c **** 
 131:USBDevice/Device/usbd.c **** /**
 132:USBDevice/Device/usbd.c ****  * @brief This function shall be called 1 - 15 ms after setting RemoteWakeup
 133:USBDevice/Device/usbd.c ****  *        in @ref USB_LinkStateType::USB_LINK_STATE_SUSPEND state.
 134:USBDevice/Device/usbd.c ****  *        The RemoteWakeup signal is cleared by hardware when exiting from
 135:USBDevice/Device/usbd.c ****  *        @ref USB_LinkStateType::USB_LINK_STATE_SLEEP state.
 136:USBDevice/Device/usbd.c ****  * @param dev: USB Device handle reference
 137:USBDevice/Device/usbd.c ****  * @return OK if the feature is enabled, ERROR otherwise
 138:USBDevice/Device/usbd.c ****  */
 139:USBDevice/Device/usbd.c **** USBD_ReturnType USBD_ClearRemoteWakeup(USBD_HandleType *dev)
 140:USBDevice/Device/usbd.c **** {
ARM GAS  /tmp/ccxnYZWm.s 			page 11


 383              		.loc 1 140 1 is_stmt 1 view -0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 141:USBDevice/Device/usbd.c ****     USBD_ReturnType retval = USBD_E_ERROR;
 387              		.loc 1 141 5 view .LVU123
 142:USBDevice/Device/usbd.c **** 
 143:USBDevice/Device/usbd.c ****     /* Check if remote wakeup is enabled by the host */
 144:USBDevice/Device/usbd.c ****     if (dev->Features.RemoteWakeup != 0)
 388              		.loc 1 144 5 view .LVU124
 140:USBDevice/Device/usbd.c ****     USBD_ReturnType retval = USBD_E_ERROR;
 389              		.loc 1 140 1 is_stmt 0 view .LVU125
 390 0000 08B5     		push	{r3, lr}
 391              	.LCFI8:
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 3, -8
 394              		.cfi_offset 14, -4
 395              		.loc 1 144 36 view .LVU126
 396 0002 90F82630 		ldrb	r3, [r0, #38]	@ zero_extendqisi2
 397              		.loc 1 144 8 view .LVU127
 398 0006 9B07     		lsls	r3, r3, #30
 399 0008 01D4     		bmi	.L20
 141:USBDevice/Device/usbd.c ****     USBD_ReturnType retval = USBD_E_ERROR;
 400              		.loc 1 141 21 view .LVU128
 401 000a 0120     		movs	r0, #1
 402              	.LVL26:
 145:USBDevice/Device/usbd.c ****     {
 146:USBDevice/Device/usbd.c ****         USBD_PD_ClearRemoteWakeup(dev);
 147:USBDevice/Device/usbd.c ****         retval = USBD_E_OK;
 148:USBDevice/Device/usbd.c ****     }
 149:USBDevice/Device/usbd.c ****     return retval;
 403              		.loc 1 149 5 is_stmt 1 view .LVU129
 150:USBDevice/Device/usbd.c **** }
 404              		.loc 1 150 1 is_stmt 0 view .LVU130
 405 000c 08BD     		pop	{r3, pc}
 406              	.LVL27:
 407              	.L20:
 146:USBDevice/Device/usbd.c ****         retval = USBD_E_OK;
 408              		.loc 1 146 9 is_stmt 1 view .LVU131
 409 000e FFF7FEFF 		bl	USB_vClearRemoteWakeup
 410              	.LVL28:
 147:USBDevice/Device/usbd.c ****     }
 411              		.loc 1 147 9 view .LVU132
 147:USBDevice/Device/usbd.c ****     }
 412              		.loc 1 147 16 is_stmt 0 view .LVU133
 413 0012 0020     		movs	r0, #0
 414              	.LVL29:
 149:USBDevice/Device/usbd.c **** }
 415              		.loc 1 149 5 is_stmt 1 view .LVU134
 416              		.loc 1 150 1 is_stmt 0 view .LVU135
 417 0014 08BD     		pop	{r3, pc}
 418              		.cfi_endproc
 419              	.LFE163:
 421 0016 00BF     		.section	.text.USBD_ResetCallback,"ax",%progbits
 422              		.align	1
 423              		.p2align 2,,3
 424              		.global	USBD_ResetCallback
ARM GAS  /tmp/ccxnYZWm.s 			page 12


 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 428              		.fpu fpv4-sp-d16
 430              	USBD_ResetCallback:
 431              	.LVL30:
 432              	.LFB164:
 151:USBDevice/Device/usbd.c **** 
 152:USBDevice/Device/usbd.c **** /**
 153:USBDevice/Device/usbd.c ****  * @brief This function performs the necessary actions upon receiving Reset signal:
 154:USBDevice/Device/usbd.c ****  *         - Opens the control endpoint 0
 155:USBDevice/Device/usbd.c ****  *         - Resets any previously active configuration
 156:USBDevice/Device/usbd.c ****  * @param dev: USB Device handle reference
 157:USBDevice/Device/usbd.c ****  * @param speed: The new device speed
 158:USBDevice/Device/usbd.c ****  */
 159:USBDevice/Device/usbd.c **** void USBD_ResetCallback(USBD_HandleType *dev, USB_SpeedType speed)
 160:USBDevice/Device/usbd.c **** {
 433              		.loc 1 160 1 is_stmt 1 view -0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 0, uses_anonymous_args = 0
 161:USBDevice/Device/usbd.c ****     dev->Speed = speed;
 437              		.loc 1 161 5 view .LVU137
 160:USBDevice/Device/usbd.c ****     dev->Speed = speed;
 438              		.loc 1 160 1 is_stmt 0 view .LVU138
 439 0000 0B46     		mov	r3, r1
 162:USBDevice/Device/usbd.c **** 
 163:USBDevice/Device/usbd.c ****     /* Reset any previous configuration */
 164:USBDevice/Device/usbd.c ****     USBD_IfConfig(dev, 0);
 440              		.loc 1 164 5 view .LVU139
 441 0002 0021     		movs	r1, #0
 442              	.LVL31:
 160:USBDevice/Device/usbd.c ****     dev->Speed = speed;
 443              		.loc 1 160 1 view .LVU140
 444 0004 10B5     		push	{r4, lr}
 445              	.LCFI9:
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 4, -8
 448              		.cfi_offset 14, -4
 160:USBDevice/Device/usbd.c ****     dev->Speed = speed;
 449              		.loc 1 160 1 view .LVU141
 450 0006 0446     		mov	r4, r0
 161:USBDevice/Device/usbd.c **** 
 451              		.loc 1 161 16 view .LVU142
 452 0008 80F82530 		strb	r3, [r0, #37]
 453              		.loc 1 164 5 is_stmt 1 view .LVU143
 454 000c FFF7FEFF 		bl	USBD_IfConfig
 455              	.LVL32:
 165:USBDevice/Device/usbd.c **** 
 166:USBDevice/Device/usbd.c **** #if (USBD_HS_SUPPORT == 1)
 167:USBDevice/Device/usbd.c ****     /* Limit packet sizes according to what the current speed allows */
 168:USBDevice/Device/usbd.c ****     if (speed == USB_SPEED_FULL)
 169:USBDevice/Device/usbd.c ****     {
 170:USBDevice/Device/usbd.c ****         USBD_EpHandleType *ep;
 171:USBDevice/Device/usbd.c **** 
 172:USBDevice/Device/usbd.c ****         /* Note on condition: EP0 doesn't require this adjustment */
 173:USBDevice/Device/usbd.c ****         for (ep = &dev->EP.OUT[USBD_MAX_EP_COUNT - 1]; ep > &dev->EP.IN[0]; ep--)
ARM GAS  /tmp/ccxnYZWm.s 			page 13


 174:USBDevice/Device/usbd.c ****         {
 175:USBDevice/Device/usbd.c ****             if (ep->Type == USB_EP_TYPE_ISOCHRONOUS)
 176:USBDevice/Device/usbd.c ****             {
 177:USBDevice/Device/usbd.c ****                 /* An FS frame is 1 ms, 8 times as long as a HS microframe
 178:USBDevice/Device/usbd.c ****                  * To keep the data rate the same, each transfer has to be
 179:USBDevice/Device/usbd.c ****                  * 8 times larger */
 180:USBDevice/Device/usbd.c ****                 ep->MaxPacketSize * 8;
 181:USBDevice/Device/usbd.c ****                 /* TODO if the result is higher than USB_EP_ISOC_FS_MPS,
 182:USBDevice/Device/usbd.c ****                  * the interface cannot function properly */
 183:USBDevice/Device/usbd.c ****             }
 184:USBDevice/Device/usbd.c ****             /* Other types have equal FS MPS limits */
 185:USBDevice/Device/usbd.c ****             else if (ep->MaxPacketSize > USB_EP_CTRL_FS_MPS)
 186:USBDevice/Device/usbd.c ****             {
 187:USBDevice/Device/usbd.c ****                 ep->MaxPacketSize = USB_EP_CTRL_FS_MPS;
 188:USBDevice/Device/usbd.c ****             }
 189:USBDevice/Device/usbd.c ****         }
 190:USBDevice/Device/usbd.c ****     }
 191:USBDevice/Device/usbd.c **** #endif
 192:USBDevice/Device/usbd.c **** 
 193:USBDevice/Device/usbd.c ****     /* Open control endpoint to start data transfers */
 194:USBDevice/Device/usbd.c ****     USBD_PD_CtrlEpOpen(dev);
 456              		.loc 1 194 5 view .LVU144
 457 0010 2046     		mov	r0, r4
 458 0012 FFF7FEFF 		bl	USB_vCtrlEpOpen
 459              	.LVL33:
 195:USBDevice/Device/usbd.c ****     dev->EP.OUT[0].State = USB_EP_STATE_IDLE;
 460              		.loc 1 195 5 view .LVU145
 461              		.loc 1 195 26 is_stmt 0 view .LVU146
 462 0016 0123     		movs	r3, #1
 463 0018 84F8B730 		strb	r3, [r4, #183]
 196:USBDevice/Device/usbd.c **** }
 464              		.loc 1 196 1 view .LVU147
 465 001c 10BD     		pop	{r4, pc}
 466              		.loc 1 196 1 view .LVU148
 467              		.cfi_endproc
 468              	.LFE164:
 470 001e 00BF     		.section	.text.USBD_DevRequest,"ax",%progbits
 471              		.align	1
 472              		.p2align 2,,3
 473              		.global	USBD_DevRequest
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
 477              		.fpu fpv4-sp-d16
 479              	USBD_DevRequest:
 480              	.LVL34:
 481              	.LFB171:
 197:USBDevice/Device/usbd.c **** 
 198:USBDevice/Device/usbd.c **** /** @} */
 199:USBDevice/Device/usbd.c **** 
 200:USBDevice/Device/usbd.c **** /** @ingroup USBD
 201:USBDevice/Device/usbd.c ****  * @defgroup USBD_Private USB Device Private Functions
 202:USBDevice/Device/usbd.c ****  */
 203:USBDevice/Device/usbd.c **** 
 204:USBDevice/Device/usbd.c **** /** @ingroup USBD_Private
 205:USBDevice/Device/usbd.c ****  * @addtogroup USBD_Private_Functions_Ctrl
 206:USBDevice/Device/usbd.c ****  * @{ */
ARM GAS  /tmp/ccxnYZWm.s 			page 14


 207:USBDevice/Device/usbd.c **** 
 208:USBDevice/Device/usbd.c **** /**
 209:USBDevice/Device/usbd.c ****  * @brief This function checks the SET_ADDRESS request's validity.
 210:USBDevice/Device/usbd.c ****  * @param dev: USB Device handle reference: USB Device handle reference
 211:USBDevice/Device/usbd.c ****  * @return OK if the request is accepted, INVALID otherwise
 212:USBDevice/Device/usbd.c ****  */
 213:USBDevice/Device/usbd.c **** static USBD_ReturnType USBD_SetAddress(USBD_HandleType *dev)
 214:USBDevice/Device/usbd.c **** {
 215:USBDevice/Device/usbd.c ****     USBD_ReturnType retval = USBD_E_INVALID;
 216:USBDevice/Device/usbd.c **** 
 217:USBDevice/Device/usbd.c ****     /* The request is only valid when not configured yet */
 218:USBDevice/Device/usbd.c ****     if ((dev->Setup.Index    == 0) &&
 219:USBDevice/Device/usbd.c ****         (dev->Setup.Length   == 0) &&
 220:USBDevice/Device/usbd.c ****         (dev->ConfigSelector == 0))
 221:USBDevice/Device/usbd.c ****     {
 222:USBDevice/Device/usbd.c **** #if (USBD_SET_ADDRESS_IMMEDIATE == 1)
 223:USBDevice/Device/usbd.c ****         USBD_PD_SetAddress(dev, dev->Setup.Value & 0x7F);
 224:USBDevice/Device/usbd.c **** #endif
 225:USBDevice/Device/usbd.c ****         /* Address is accepted, it will be applied
 226:USBDevice/Device/usbd.c ****          * after this Ctrl transfer is complete */
 227:USBDevice/Device/usbd.c ****         retval = USBD_E_OK;
 228:USBDevice/Device/usbd.c ****     }
 229:USBDevice/Device/usbd.c ****     return retval;
 230:USBDevice/Device/usbd.c **** }
 231:USBDevice/Device/usbd.c **** 
 232:USBDevice/Device/usbd.c **** /**
 233:USBDevice/Device/usbd.c ****  * @brief This function switches to the requested configuration.
 234:USBDevice/Device/usbd.c ****  * @param dev: USB Device handle reference
 235:USBDevice/Device/usbd.c ****  * @return OK if the configuration is available, INVALID otherwise
 236:USBDevice/Device/usbd.c ****  */
 237:USBDevice/Device/usbd.c **** static USBD_ReturnType USBD_SetConfig(USBD_HandleType *dev)
 238:USBDevice/Device/usbd.c **** {
 239:USBDevice/Device/usbd.c ****     USBD_ReturnType retval = USBD_E_INVALID;
 240:USBDevice/Device/usbd.c ****     uint8_t cfgNum = (uint8_t)dev->Setup.Value;
 241:USBDevice/Device/usbd.c **** 
 242:USBDevice/Device/usbd.c ****     if (cfgNum <= USBD_MAX_CONFIGURATION_COUNT)
 243:USBDevice/Device/usbd.c ****     {
 244:USBDevice/Device/usbd.c ****         USBD_IfConfig(dev, cfgNum);
 245:USBDevice/Device/usbd.c **** 
 246:USBDevice/Device/usbd.c ****         retval = USBD_E_OK;
 247:USBDevice/Device/usbd.c ****     }
 248:USBDevice/Device/usbd.c ****     return retval;
 249:USBDevice/Device/usbd.c **** }
 250:USBDevice/Device/usbd.c **** 
 251:USBDevice/Device/usbd.c **** /**
 252:USBDevice/Device/usbd.c ****  * @brief This function sends the current configuration index on the control endpoint.
 253:USBDevice/Device/usbd.c ****  * @param dev: USB Device handle reference
 254:USBDevice/Device/usbd.c ****  * @return Always OK
 255:USBDevice/Device/usbd.c ****  */
 256:USBDevice/Device/usbd.c **** static USBD_ReturnType USBD_GetConfig(USBD_HandleType *dev)
 257:USBDevice/Device/usbd.c **** {
 258:USBDevice/Device/usbd.c ****     dev->CtrlData[0] = dev->ConfigSelector;
 259:USBDevice/Device/usbd.c ****     return USBD_CtrlSendData(dev, dev->CtrlData, sizeof(dev->ConfigSelector));
 260:USBDevice/Device/usbd.c **** }
 261:USBDevice/Device/usbd.c **** 
 262:USBDevice/Device/usbd.c **** /**
 263:USBDevice/Device/usbd.c ****  * @brief This function sends the device feature status on the control endpoint.
ARM GAS  /tmp/ccxnYZWm.s 			page 15


 264:USBDevice/Device/usbd.c ****  * @param dev: USB Device handle reference
 265:USBDevice/Device/usbd.c ****  * @return Always OK
 266:USBDevice/Device/usbd.c ****  */
 267:USBDevice/Device/usbd.c **** static USBD_ReturnType USBD_GetStatus(USBD_HandleType *dev)
 268:USBDevice/Device/usbd.c **** {
 269:USBDevice/Device/usbd.c ****     uint16_t *devStatus = (uint16_t*)dev->CtrlData;
 270:USBDevice/Device/usbd.c ****     *devStatus = dev->Features.w;
 271:USBDevice/Device/usbd.c ****     return USBD_CtrlSendData(dev, devStatus, sizeof(*devStatus));
 272:USBDevice/Device/usbd.c **** }
 273:USBDevice/Device/usbd.c **** 
 274:USBDevice/Device/usbd.c **** /**
 275:USBDevice/Device/usbd.c ****  * @brief This function enables the remote wakeup feature (if it's selected).
 276:USBDevice/Device/usbd.c ****  * @param dev: USB Device handle reference
 277:USBDevice/Device/usbd.c ****  * @return OK if the feature is supported, INVALID otherwise
 278:USBDevice/Device/usbd.c ****  */
 279:USBDevice/Device/usbd.c **** static USBD_ReturnType USBD_SetFeature(USBD_HandleType *dev)
 280:USBDevice/Device/usbd.c **** {
 281:USBDevice/Device/usbd.c ****     USBD_ReturnType retval = USBD_E_INVALID;
 282:USBDevice/Device/usbd.c **** 
 283:USBDevice/Device/usbd.c ****     /* The only settable std device feature */
 284:USBDevice/Device/usbd.c ****     if (dev->Setup.Value == USB_FEATURE_REMOTE_WAKEUP)
 285:USBDevice/Device/usbd.c ****     {
 286:USBDevice/Device/usbd.c ****         dev->Features.RemoteWakeup = 1;
 287:USBDevice/Device/usbd.c ****         retval = USBD_E_OK;
 288:USBDevice/Device/usbd.c ****     }
 289:USBDevice/Device/usbd.c ****     return retval;
 290:USBDevice/Device/usbd.c **** }
 291:USBDevice/Device/usbd.c **** 
 292:USBDevice/Device/usbd.c **** /**
 293:USBDevice/Device/usbd.c ****  * @brief This function clears the remote wakeup feature (if it's selected).
 294:USBDevice/Device/usbd.c ****  * @param dev: USB Device handle reference
 295:USBDevice/Device/usbd.c ****  * @return OK if the feature is supported, INVALID otherwise
 296:USBDevice/Device/usbd.c ****  */
 297:USBDevice/Device/usbd.c **** static USBD_ReturnType USBD_ClearFeature(USBD_HandleType *dev)
 298:USBDevice/Device/usbd.c **** {
 299:USBDevice/Device/usbd.c ****     USBD_ReturnType retval = USBD_E_INVALID;
 300:USBDevice/Device/usbd.c **** 
 301:USBDevice/Device/usbd.c ****     /* The only settable std device feature */
 302:USBDevice/Device/usbd.c ****     if (dev->Setup.Value == USB_FEATURE_REMOTE_WAKEUP)
 303:USBDevice/Device/usbd.c ****     {
 304:USBDevice/Device/usbd.c ****         dev->Features.RemoteWakeup = 0;
 305:USBDevice/Device/usbd.c ****         retval = USBD_E_OK;
 306:USBDevice/Device/usbd.c ****     }
 307:USBDevice/Device/usbd.c ****     return retval;
 308:USBDevice/Device/usbd.c **** }
 309:USBDevice/Device/usbd.c **** 
 310:USBDevice/Device/usbd.c **** /**
 311:USBDevice/Device/usbd.c ****  * @brief This function handles standard device requests.
 312:USBDevice/Device/usbd.c ****  * @param dev: USB Device handle reference
 313:USBDevice/Device/usbd.c ****  * @return OK if the request is processed, INVALID if not supported
 314:USBDevice/Device/usbd.c ****  */
 315:USBDevice/Device/usbd.c **** USBD_ReturnType USBD_DevRequest(USBD_HandleType *dev)
 316:USBDevice/Device/usbd.c **** {
 482              		.loc 1 316 1 is_stmt 1 view -0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccxnYZWm.s 			page 16


 317:USBDevice/Device/usbd.c ****     USBD_ReturnType retval = USBD_E_INVALID;
 486              		.loc 1 317 5 view .LVU150
 318:USBDevice/Device/usbd.c **** 
 319:USBDevice/Device/usbd.c ****     /* On device level only (the below) standard requests are supported */
 320:USBDevice/Device/usbd.c ****     if (dev->Setup.RequestType.Type == USB_REQ_TYPE_STANDARD)
 487              		.loc 1 320 5 view .LVU151
 488              		.loc 1 320 37 is_stmt 0 view .LVU152
 489 0000 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 316:USBDevice/Device/usbd.c ****     USBD_ReturnType retval = USBD_E_INVALID;
 490              		.loc 1 316 1 view .LVU153
 491 0002 10B5     		push	{r4, lr}
 492              	.LCFI10:
 493              		.cfi_def_cfa_offset 8
 494              		.cfi_offset 4, -8
 495              		.cfi_offset 14, -4
 496              		.loc 1 320 8 view .LVU154
 497 0004 13F06004 		ands	r4, r3, #96
 498 0008 0CD1     		bne	.L39
 321:USBDevice/Device/usbd.c ****     {
 322:USBDevice/Device/usbd.c ****         switch (dev->Setup.Request)
 499              		.loc 1 322 9 is_stmt 1 view .LVU155
 500              		.loc 1 322 27 is_stmt 0 view .LVU156
 501 000a 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 502 000c 092B     		cmp	r3, #9
 503 000e 09D8     		bhi	.L39
 504 0010 DFE803F0 		tbb	[pc, r3]
 505              	.L26:
 506 0014 0B       		.byte	(.L32-.L26)/2
 507 0015 15       		.byte	(.L31-.L26)/2
 508 0016 08       		.byte	(.L39-.L26)/2
 509 0017 1F       		.byte	(.L30-.L26)/2
 510 0018 08       		.byte	(.L39-.L26)/2
 511 0019 24       		.byte	(.L29-.L26)/2
 512 001a 31       		.byte	(.L28-.L26)/2
 513 001b 08       		.byte	(.L39-.L26)/2
 514 001c 35       		.byte	(.L27-.L26)/2
 515 001d 05       		.byte	(.L25-.L26)/2
 516              		.p2align 1
 517              	.L25:
 323:USBDevice/Device/usbd.c ****         {
 324:USBDevice/Device/usbd.c ****             case USB_REQ_GET_DESCRIPTOR:
 325:USBDevice/Device/usbd.c ****                 retval = USBD_GetDescriptor(dev);
 326:USBDevice/Device/usbd.c ****                 break;
 327:USBDevice/Device/usbd.c **** 
 328:USBDevice/Device/usbd.c ****             case USB_REQ_SET_ADDRESS:
 329:USBDevice/Device/usbd.c ****                 retval = USBD_SetAddress(dev);
 330:USBDevice/Device/usbd.c ****                 break;
 331:USBDevice/Device/usbd.c **** 
 332:USBDevice/Device/usbd.c ****             case USB_REQ_SET_CONFIGURATION:
 333:USBDevice/Device/usbd.c ****                 retval = USBD_SetConfig(dev);
 518              		.loc 1 333 17 is_stmt 1 view .LVU157
 519              	.LVL35:
 520              	.LBB14:
 521              	.LBI14:
 237:USBDevice/Device/usbd.c **** {
 522              		.loc 1 237 24 view .LVU158
 523              	.LBB15:
ARM GAS  /tmp/ccxnYZWm.s 			page 17


 239:USBDevice/Device/usbd.c ****     uint8_t cfgNum = (uint8_t)dev->Setup.Value;
 524              		.loc 1 239 5 view .LVU159
 240:USBDevice/Device/usbd.c **** 
 525              		.loc 1 240 5 view .LVU160
 240:USBDevice/Device/usbd.c **** 
 526              		.loc 1 240 13 is_stmt 0 view .LVU161
 527 001e 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 528              	.LVL36:
 242:USBDevice/Device/usbd.c ****     {
 529              		.loc 1 242 5 is_stmt 1 view .LVU162
 242:USBDevice/Device/usbd.c ****     {
 530              		.loc 1 242 8 is_stmt 0 view .LVU163
 531 0020 0129     		cmp	r1, #1
 532 0022 3ED9     		bls	.L41
 533              	.LVL37:
 534              	.L39:
 242:USBDevice/Device/usbd.c ****     {
 535              		.loc 1 242 8 view .LVU164
 536              	.LBE15:
 537              	.LBE14:
 317:USBDevice/Device/usbd.c **** 
 538              		.loc 1 317 21 view .LVU165
 539 0024 0324     		movs	r4, #3
 540              	.LVL38:
 541              	.L24:
 334:USBDevice/Device/usbd.c ****                 break;
 335:USBDevice/Device/usbd.c **** 
 336:USBDevice/Device/usbd.c ****             case USB_REQ_GET_CONFIGURATION:
 337:USBDevice/Device/usbd.c ****                 retval = USBD_GetConfig(dev);
 338:USBDevice/Device/usbd.c ****                 break;
 339:USBDevice/Device/usbd.c **** 
 340:USBDevice/Device/usbd.c ****             case USB_REQ_GET_STATUS:
 341:USBDevice/Device/usbd.c ****                 retval = USBD_GetStatus(dev);
 342:USBDevice/Device/usbd.c ****                 break;
 343:USBDevice/Device/usbd.c **** 
 344:USBDevice/Device/usbd.c ****             case USB_REQ_SET_FEATURE:
 345:USBDevice/Device/usbd.c ****                 retval = USBD_SetFeature(dev);
 346:USBDevice/Device/usbd.c ****                 break;
 347:USBDevice/Device/usbd.c **** 
 348:USBDevice/Device/usbd.c ****             case USB_REQ_CLEAR_FEATURE:
 349:USBDevice/Device/usbd.c ****                 retval = USBD_ClearFeature(dev);
 350:USBDevice/Device/usbd.c ****                 break;
 351:USBDevice/Device/usbd.c **** 
 352:USBDevice/Device/usbd.c ****             default:
 353:USBDevice/Device/usbd.c ****                 break;
 354:USBDevice/Device/usbd.c ****         }
 355:USBDevice/Device/usbd.c ****     }
 356:USBDevice/Device/usbd.c ****     return retval;
 542              		.loc 1 356 5 is_stmt 1 view .LVU166
 357:USBDevice/Device/usbd.c **** }
 543              		.loc 1 357 1 is_stmt 0 view .LVU167
 544 0026 2046     		mov	r0, r4
 545 0028 10BD     		pop	{r4, pc}
 546              	.LVL39:
 547              	.L32:
 341:USBDevice/Device/usbd.c ****                 break;
 548              		.loc 1 341 17 is_stmt 1 view .LVU168
ARM GAS  /tmp/ccxnYZWm.s 			page 18


 549              	.LBB17:
 550              	.LBI17:
 267:USBDevice/Device/usbd.c **** {
 551              		.loc 1 267 24 view .LVU169
 552              	.LBB18:
 269:USBDevice/Device/usbd.c ****     *devStatus = dev->Features.w;
 553              		.loc 1 269 5 view .LVU170
 270:USBDevice/Device/usbd.c ****     return USBD_CtrlSendData(dev, devStatus, sizeof(*devStatus));
 554              		.loc 1 270 5 view .LVU171
 270:USBDevice/Device/usbd.c ****     return USBD_CtrlSendData(dev, devStatus, sizeof(*devStatus));
 555              		.loc 1 270 16 is_stmt 0 view .LVU172
 556 002a C38C     		ldrh	r3, [r0, #38]
 271:USBDevice/Device/usbd.c **** }
 557              		.loc 1 271 12 view .LVU173
 558 002c 0222     		movs	r2, #2
 559 002e 00F58671 		add	r1, r0, #268
 560              	.LVL40:
 270:USBDevice/Device/usbd.c ****     return USBD_CtrlSendData(dev, devStatus, sizeof(*devStatus));
 561              		.loc 1 270 16 view .LVU174
 562 0032 A0F80C31 		strh	r3, [r0, #268]	@ movhi
 271:USBDevice/Device/usbd.c **** }
 563              		.loc 1 271 5 is_stmt 1 view .LVU175
 564              	.LBE18:
 565              	.LBE17:
 566              		.loc 1 357 1 is_stmt 0 view .LVU176
 567 0036 BDE81040 		pop	{r4, lr}
 568              	.LCFI11:
 569              		.cfi_remember_state
 570              		.cfi_restore 14
 571              		.cfi_restore 4
 572              		.cfi_def_cfa_offset 0
 573              	.LBB20:
 574              	.LBB19:
 271:USBDevice/Device/usbd.c **** }
 575              		.loc 1 271 12 view .LVU177
 576 003a FFF7FEBF 		b	USBD_CtrlSendData
 577              	.LVL41:
 578              	.L31:
 579              	.LCFI12:
 580              		.cfi_restore_state
 271:USBDevice/Device/usbd.c **** }
 581              		.loc 1 271 12 view .LVU178
 582              	.LBE19:
 583              	.LBE20:
 349:USBDevice/Device/usbd.c ****                 break;
 584              		.loc 1 349 17 is_stmt 1 view .LVU179
 585              	.LBB21:
 586              	.LBI21:
 297:USBDevice/Device/usbd.c **** {
 587              		.loc 1 297 24 view .LVU180
 588              	.LBB22:
 299:USBDevice/Device/usbd.c **** 
 589              		.loc 1 299 5 view .LVU181
 302:USBDevice/Device/usbd.c ****     {
 590              		.loc 1 302 5 view .LVU182
 302:USBDevice/Device/usbd.c ****     {
 591              		.loc 1 302 8 is_stmt 0 view .LVU183
ARM GAS  /tmp/ccxnYZWm.s 			page 19


 592 003e C388     		ldrh	r3, [r0, #6]
 593 0040 012B     		cmp	r3, #1
 594 0042 EFD1     		bne	.L39
 304:USBDevice/Device/usbd.c ****         retval = USBD_E_OK;
 595              		.loc 1 304 9 is_stmt 1 view .LVU184
 304:USBDevice/Device/usbd.c ****         retval = USBD_E_OK;
 596              		.loc 1 304 36 is_stmt 0 view .LVU185
 597 0044 90F82630 		ldrb	r3, [r0, #38]	@ zero_extendqisi2
 598 0048 6FF34103 		bfc	r3, #1, #1
 599 004c 80F82630 		strb	r3, [r0, #38]
 305:USBDevice/Device/usbd.c ****     }
 600              		.loc 1 305 9 is_stmt 1 view .LVU186
 601              	.LVL42:
 305:USBDevice/Device/usbd.c ****     }
 602              		.loc 1 305 9 is_stmt 0 view .LVU187
 603 0050 E9E7     		b	.L24
 604              	.LVL43:
 605              	.L30:
 305:USBDevice/Device/usbd.c ****     }
 606              		.loc 1 305 9 view .LVU188
 607              	.LBE22:
 608              	.LBE21:
 345:USBDevice/Device/usbd.c ****                 break;
 609              		.loc 1 345 17 is_stmt 1 view .LVU189
 610              	.LBB23:
 611              	.LBI23:
 279:USBDevice/Device/usbd.c **** {
 612              		.loc 1 279 24 view .LVU190
 613              	.LBB24:
 281:USBDevice/Device/usbd.c **** 
 614              		.loc 1 281 5 view .LVU191
 284:USBDevice/Device/usbd.c ****     {
 615              		.loc 1 284 5 view .LVU192
 284:USBDevice/Device/usbd.c ****     {
 616              		.loc 1 284 8 is_stmt 0 view .LVU193
 617 0052 C288     		ldrh	r2, [r0, #6]
 618 0054 012A     		cmp	r2, #1
 619 0056 1DD0     		beq	.L42
 620              	.LBE24:
 621              	.LBE23:
 317:USBDevice/Device/usbd.c **** 
 622              		.loc 1 317 21 view .LVU194
 623 0058 1C46     		mov	r4, r3
 624 005a E4E7     		b	.L24
 625              	.LVL44:
 626              	.L29:
 329:USBDevice/Device/usbd.c ****                 break;
 627              		.loc 1 329 17 is_stmt 1 view .LVU195
 628              	.LBB26:
 629              	.LBI26:
 213:USBDevice/Device/usbd.c **** {
 630              		.loc 1 213 24 view .LVU196
 631              	.LBB27:
 215:USBDevice/Device/usbd.c **** 
 632              		.loc 1 215 5 view .LVU197
 218:USBDevice/Device/usbd.c ****         (dev->Setup.Length   == 0) &&
 633              		.loc 1 218 5 view .LVU198
ARM GAS  /tmp/ccxnYZWm.s 			page 20


 218:USBDevice/Device/usbd.c ****         (dev->Setup.Length   == 0) &&
 634              		.loc 1 218 8 is_stmt 0 view .LVU199
 635 005c 8368     		ldr	r3, [r0, #8]
 636 005e 002B     		cmp	r3, #0
 637 0060 E0D1     		bne	.L39
 220:USBDevice/Device/usbd.c ****     {
 638              		.loc 1 220 13 view .LVU200
 639 0062 90F82840 		ldrb	r4, [r0, #40]	@ zero_extendqisi2
 219:USBDevice/Device/usbd.c ****         (dev->ConfigSelector == 0))
 640              		.loc 1 219 36 view .LVU201
 641 0066 002C     		cmp	r4, #0
 642 0068 DCD1     		bne	.L39
 223:USBDevice/Device/usbd.c **** #endif
 643              		.loc 1 223 9 is_stmt 1 view .LVU202
 644 006a 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 645 006c 01F07F01 		and	r1, r1, #127
 646 0070 FFF7FEFF 		bl	USB_vSetAddress
 647              	.LVL45:
 227:USBDevice/Device/usbd.c ****     }
 648              		.loc 1 227 9 view .LVU203
 227:USBDevice/Device/usbd.c ****     }
 649              		.loc 1 227 9 is_stmt 0 view .LVU204
 650 0074 D7E7     		b	.L24
 651              	.LVL46:
 652              	.L28:
 227:USBDevice/Device/usbd.c ****     }
 653              		.loc 1 227 9 view .LVU205
 654              	.LBE27:
 655              	.LBE26:
 325:USBDevice/Device/usbd.c ****                 break;
 656              		.loc 1 325 17 is_stmt 1 view .LVU206
 657              		.loc 1 357 1 is_stmt 0 view .LVU207
 658 0076 BDE81040 		pop	{r4, lr}
 659              	.LCFI13:
 660              		.cfi_remember_state
 661              		.cfi_restore 14
 662              		.cfi_restore 4
 663              		.cfi_def_cfa_offset 0
 325:USBDevice/Device/usbd.c ****                 break;
 664              		.loc 1 325 26 view .LVU208
 665 007a FFF7FEBF 		b	USBD_GetDescriptor
 666              	.LVL47:
 667              	.L27:
 668              	.LCFI14:
 669              		.cfi_restore_state
 337:USBDevice/Device/usbd.c ****                 break;
 670              		.loc 1 337 17 is_stmt 1 view .LVU209
 671              	.LBB28:
 672              	.LBI28:
 256:USBDevice/Device/usbd.c **** {
 673              		.loc 1 256 24 view .LVU210
 674              	.LBB29:
 258:USBDevice/Device/usbd.c ****     return USBD_CtrlSendData(dev, dev->CtrlData, sizeof(dev->ConfigSelector));
 675              		.loc 1 258 5 view .LVU211
 258:USBDevice/Device/usbd.c ****     return USBD_CtrlSendData(dev, dev->CtrlData, sizeof(dev->ConfigSelector));
 676              		.loc 1 258 22 is_stmt 0 view .LVU212
 677 007e 90F82830 		ldrb	r3, [r0, #40]	@ zero_extendqisi2
ARM GAS  /tmp/ccxnYZWm.s 			page 21


 259:USBDevice/Device/usbd.c **** }
 678              		.loc 1 259 12 view .LVU213
 679 0082 0122     		movs	r2, #1
 680 0084 00F58671 		add	r1, r0, #268
 258:USBDevice/Device/usbd.c ****     return USBD_CtrlSendData(dev, dev->CtrlData, sizeof(dev->ConfigSelector));
 681              		.loc 1 258 22 view .LVU214
 682 0088 80F80C31 		strb	r3, [r0, #268]
 259:USBDevice/Device/usbd.c **** }
 683              		.loc 1 259 5 is_stmt 1 view .LVU215
 684              	.LBE29:
 685              	.LBE28:
 686              		.loc 1 357 1 is_stmt 0 view .LVU216
 687 008c BDE81040 		pop	{r4, lr}
 688              	.LCFI15:
 689              		.cfi_remember_state
 690              		.cfi_restore 14
 691              		.cfi_restore 4
 692              		.cfi_def_cfa_offset 0
 693              	.LBB31:
 694              	.LBB30:
 259:USBDevice/Device/usbd.c **** }
 695              		.loc 1 259 12 view .LVU217
 696 0090 FFF7FEBF 		b	USBD_CtrlSendData
 697              	.LVL48:
 698              	.L42:
 699              	.LCFI16:
 700              		.cfi_restore_state
 259:USBDevice/Device/usbd.c **** }
 701              		.loc 1 259 12 view .LVU218
 702              	.LBE30:
 703              	.LBE31:
 704              	.LBB32:
 705              	.LBB25:
 286:USBDevice/Device/usbd.c ****         retval = USBD_E_OK;
 706              		.loc 1 286 9 is_stmt 1 view .LVU219
 286:USBDevice/Device/usbd.c ****         retval = USBD_E_OK;
 707              		.loc 1 286 36 is_stmt 0 view .LVU220
 708 0094 90F82630 		ldrb	r3, [r0, #38]	@ zero_extendqisi2
 709 0098 43F00203 		orr	r3, r3, #2
 710 009c 80F82630 		strb	r3, [r0, #38]
 287:USBDevice/Device/usbd.c ****     }
 711              		.loc 1 287 9 is_stmt 1 view .LVU221
 712              	.LVL49:
 287:USBDevice/Device/usbd.c ****     }
 713              		.loc 1 287 9 is_stmt 0 view .LVU222
 714 00a0 C1E7     		b	.L24
 715              	.LVL50:
 716              	.L41:
 287:USBDevice/Device/usbd.c ****     }
 717              		.loc 1 287 9 view .LVU223
 718              	.LBE25:
 719              	.LBE32:
 720              	.LBB33:
 721              	.LBB16:
 244:USBDevice/Device/usbd.c **** 
 722              		.loc 1 244 9 is_stmt 1 view .LVU224
 723 00a2 FFF7FEFF 		bl	USBD_IfConfig
ARM GAS  /tmp/ccxnYZWm.s 			page 22


 724              	.LVL51:
 246:USBDevice/Device/usbd.c ****     }
 725              		.loc 1 246 9 view .LVU225
 246:USBDevice/Device/usbd.c ****     }
 726              		.loc 1 246 9 is_stmt 0 view .LVU226
 727 00a6 BEE7     		b	.L24
 728              	.LBE16:
 729              	.LBE33:
 730              		.cfi_endproc
 731              	.LFE171:
 733              		.text
 734              	.Letext0:
 735              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 736              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 737              		.file 4 "USBDevice/Include/usb_types.h"
 738              		.file 5 "STM32_XPD/STM32H7_XPD/inc/xpd_common.h"
 739              		.file 6 "STM32_XPD/CMSIS/Include/core_cm7.h"
 740              		.file 7 "STM32_XPD/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 741              		.file 8 "STM32_XPD/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 742              		.file 9 "USBDevice/PDs/STM32_XPD/usbd_pd_def.h"
 743              		.file 10 "USBDevice/Include/usbd_types.h"
 744              		.file 11 "/usr/arm-none-eabi/include/sys/lock.h"
 745              		.file 12 "/usr/arm-none-eabi/include/sys/_types.h"
 746              		.file 13 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 747              		.file 14 "/usr/arm-none-eabi/include/sys/reent.h"
 748              		.file 15 "USBDevice/Include/private/usbd_private.h"
 749              		.file 16 "USBDevice/Include/private/usbd_internal.h"
 750              		.file 17 "STM32_XPD/STM32H7_XPD/inc/xpd_usb_otg.h"
ARM GAS  /tmp/ccxnYZWm.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd.c
     /tmp/ccxnYZWm.s:18     .text.USBD_Init:0000000000000000 $t
     /tmp/ccxnYZWm.s:27     .text.USBD_Init:0000000000000000 USBD_Init
     /tmp/ccxnYZWm.s:89     .text.USBD_Deinit:0000000000000000 $t
     /tmp/ccxnYZWm.s:97     .text.USBD_Deinit:0000000000000000 USBD_Deinit
     /tmp/ccxnYZWm.s:134    .text.USBD_UnmountInterfaces:0000000000000000 $t
     /tmp/ccxnYZWm.s:142    .text.USBD_UnmountInterfaces:0000000000000000 USBD_UnmountInterfaces
     /tmp/ccxnYZWm.s:253    .text.USBD_Connect:0000000000000000 $t
     /tmp/ccxnYZWm.s:261    .text.USBD_Connect:0000000000000000 USBD_Connect
     /tmp/ccxnYZWm.s:277    .text.USBD_Disconnect:0000000000000000 $t
     /tmp/ccxnYZWm.s:285    .text.USBD_Disconnect:0000000000000000 USBD_Disconnect
     /tmp/ccxnYZWm.s:322    .text.USBD_SetRemoteWakeup:0000000000000000 $t
     /tmp/ccxnYZWm.s:330    .text.USBD_SetRemoteWakeup:0000000000000000 USBD_SetRemoteWakeup
     /tmp/ccxnYZWm.s:372    .text.USBD_ClearRemoteWakeup:0000000000000000 $t
     /tmp/ccxnYZWm.s:380    .text.USBD_ClearRemoteWakeup:0000000000000000 USBD_ClearRemoteWakeup
     /tmp/ccxnYZWm.s:422    .text.USBD_ResetCallback:0000000000000000 $t
     /tmp/ccxnYZWm.s:430    .text.USBD_ResetCallback:0000000000000000 USBD_ResetCallback
     /tmp/ccxnYZWm.s:471    .text.USBD_DevRequest:0000000000000000 $t
     /tmp/ccxnYZWm.s:479    .text.USBD_DevRequest:0000000000000000 USBD_DevRequest
     /tmp/ccxnYZWm.s:506    .text.USBD_DevRequest:0000000000000014 $d
     /tmp/ccxnYZWm.s:516    .text.USBD_DevRequest:000000000000001e $t

UNDEFINED SYMBOLS
USB_vDevInit
USBD_IfConfig
USB_vDevDeinit
USB_vDevStart_IT
USB_vDevStop_IT
USB_vSetRemoteWakeup
USB_vClearRemoteWakeup
USB_vCtrlEpOpen
USBD_CtrlSendData
USB_vSetAddress
USBD_GetDescriptor
