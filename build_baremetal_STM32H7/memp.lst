ARM GAS  /tmp/cckTVcmi.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"memp.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.memp_init_pool,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	memp_init_pool
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	memp_init_pool:
  28              	.LVL0:
  29              	.LFB105:
  30              		.file 1 "lwIP/src/core/memp.c"
   1:lwIP/src/core/memp.c **** /**
   2:lwIP/src/core/memp.c ****  * @file
   3:lwIP/src/core/memp.c ****  * Dynamic pool memory manager
   4:lwIP/src/core/memp.c ****  *
   5:lwIP/src/core/memp.c ****  * lwIP has dedicated pools for many structures (netconn, protocol control blocks,
   6:lwIP/src/core/memp.c ****  * packet buffers, ...). All these pools are managed here.
   7:lwIP/src/core/memp.c ****  *
   8:lwIP/src/core/memp.c ****  * @defgroup mempool Memory pools
   9:lwIP/src/core/memp.c ****  * @ingroup infrastructure
  10:lwIP/src/core/memp.c ****  * Custom memory pools
  11:lwIP/src/core/memp.c **** 
  12:lwIP/src/core/memp.c ****  */
  13:lwIP/src/core/memp.c **** 
  14:lwIP/src/core/memp.c **** /*
  15:lwIP/src/core/memp.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
  16:lwIP/src/core/memp.c ****  * All rights reserved.
  17:lwIP/src/core/memp.c ****  *
  18:lwIP/src/core/memp.c ****  * Redistribution and use in source and binary forms, with or without modification,
  19:lwIP/src/core/memp.c ****  * are permitted provided that the following conditions are met:
  20:lwIP/src/core/memp.c ****  *
  21:lwIP/src/core/memp.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  22:lwIP/src/core/memp.c ****  *    this list of conditions and the following disclaimer.
  23:lwIP/src/core/memp.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  24:lwIP/src/core/memp.c ****  *    this list of conditions and the following disclaimer in the documentation
  25:lwIP/src/core/memp.c ****  *    and/or other materials provided with the distribution.
  26:lwIP/src/core/memp.c ****  * 3. The name of the author may not be used to endorse or promote products
  27:lwIP/src/core/memp.c ****  *    derived from this software without specific prior written permission.
  28:lwIP/src/core/memp.c ****  *
ARM GAS  /tmp/cckTVcmi.s 			page 2


  29:lwIP/src/core/memp.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
  30:lwIP/src/core/memp.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  31:lwIP/src/core/memp.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
  32:lwIP/src/core/memp.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  33:lwIP/src/core/memp.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
  34:lwIP/src/core/memp.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  35:lwIP/src/core/memp.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  36:lwIP/src/core/memp.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
  37:lwIP/src/core/memp.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  38:lwIP/src/core/memp.c ****  * OF SUCH DAMAGE.
  39:lwIP/src/core/memp.c ****  *
  40:lwIP/src/core/memp.c ****  * This file is part of the lwIP TCP/IP stack.
  41:lwIP/src/core/memp.c ****  *
  42:lwIP/src/core/memp.c ****  * Author: Adam Dunkels <adam@sics.se>
  43:lwIP/src/core/memp.c ****  *
  44:lwIP/src/core/memp.c ****  */
  45:lwIP/src/core/memp.c **** 
  46:lwIP/src/core/memp.c **** #include "lwip/opt.h"
  47:lwIP/src/core/memp.c **** 
  48:lwIP/src/core/memp.c **** #include "lwip/memp.h"
  49:lwIP/src/core/memp.c **** #include "lwip/sys.h"
  50:lwIP/src/core/memp.c **** #include "lwip/stats.h"
  51:lwIP/src/core/memp.c **** 
  52:lwIP/src/core/memp.c **** #include <string.h>
  53:lwIP/src/core/memp.c **** 
  54:lwIP/src/core/memp.c **** /* Make sure we include everything we need for size calculation required by memp_std.h */
  55:lwIP/src/core/memp.c **** #include "lwip/pbuf.h"
  56:lwIP/src/core/memp.c **** #include "lwip/raw.h"
  57:lwIP/src/core/memp.c **** #include "lwip/udp.h"
  58:lwIP/src/core/memp.c **** #include "lwip/tcp.h"
  59:lwIP/src/core/memp.c **** #include "lwip/priv/tcp_priv.h"
  60:lwIP/src/core/memp.c **** #include "lwip/altcp.h"
  61:lwIP/src/core/memp.c **** #include "lwip/ip4_frag.h"
  62:lwIP/src/core/memp.c **** #include "lwip/netbuf.h"
  63:lwIP/src/core/memp.c **** #include "lwip/api.h"
  64:lwIP/src/core/memp.c **** #include "lwip/priv/tcpip_priv.h"
  65:lwIP/src/core/memp.c **** #include "lwip/priv/api_msg.h"
  66:lwIP/src/core/memp.c **** #include "lwip/priv/sockets_priv.h"
  67:lwIP/src/core/memp.c **** #include "lwip/etharp.h"
  68:lwIP/src/core/memp.c **** #include "lwip/igmp.h"
  69:lwIP/src/core/memp.c **** #include "lwip/timeouts.h"
  70:lwIP/src/core/memp.c **** /* needed by default MEMP_NUM_SYS_TIMEOUT */
  71:lwIP/src/core/memp.c **** #include "netif/ppp/ppp_opts.h"
  72:lwIP/src/core/memp.c **** #include "lwip/netdb.h"
  73:lwIP/src/core/memp.c **** #include "lwip/dns.h"
  74:lwIP/src/core/memp.c **** #include "lwip/priv/nd6_priv.h"
  75:lwIP/src/core/memp.c **** #include "lwip/ip6_frag.h"
  76:lwIP/src/core/memp.c **** #include "lwip/mld6.h"
  77:lwIP/src/core/memp.c **** 
  78:lwIP/src/core/memp.c **** #define LWIP_MEMPOOL(name,num,size,desc) LWIP_MEMPOOL_DECLARE(name,num,size,desc)
  79:lwIP/src/core/memp.c **** #include "lwip/priv/memp_std.h"
  80:lwIP/src/core/memp.c **** 
  81:lwIP/src/core/memp.c **** const struct memp_desc *const memp_pools[MEMP_MAX] = {
  82:lwIP/src/core/memp.c **** #define LWIP_MEMPOOL(name,num,size,desc) &memp_ ## name,
  83:lwIP/src/core/memp.c **** #include "lwip/priv/memp_std.h"
  84:lwIP/src/core/memp.c **** };
  85:lwIP/src/core/memp.c **** 
ARM GAS  /tmp/cckTVcmi.s 			page 3


  86:lwIP/src/core/memp.c **** #ifdef LWIP_HOOK_FILENAME
  87:lwIP/src/core/memp.c **** #include LWIP_HOOK_FILENAME
  88:lwIP/src/core/memp.c **** #endif
  89:lwIP/src/core/memp.c **** 
  90:lwIP/src/core/memp.c **** #if MEMP_MEM_MALLOC && MEMP_OVERFLOW_CHECK >= 2
  91:lwIP/src/core/memp.c **** #undef MEMP_OVERFLOW_CHECK
  92:lwIP/src/core/memp.c **** /* MEMP_OVERFLOW_CHECK >= 2 does not work with MEMP_MEM_MALLOC, use 1 instead */
  93:lwIP/src/core/memp.c **** #define MEMP_OVERFLOW_CHECK 1
  94:lwIP/src/core/memp.c **** #endif
  95:lwIP/src/core/memp.c **** 
  96:lwIP/src/core/memp.c **** #if MEMP_SANITY_CHECK && !MEMP_MEM_MALLOC
  97:lwIP/src/core/memp.c **** /**
  98:lwIP/src/core/memp.c ****  * Check that memp-lists don't form a circle, using "Floyd's cycle-finding algorithm".
  99:lwIP/src/core/memp.c ****  */
 100:lwIP/src/core/memp.c **** static int
 101:lwIP/src/core/memp.c **** memp_sanity(const struct memp_desc *desc)
 102:lwIP/src/core/memp.c **** {
 103:lwIP/src/core/memp.c ****   struct memp *t, *h;
 104:lwIP/src/core/memp.c **** 
 105:lwIP/src/core/memp.c ****   t = *desc->tab;
 106:lwIP/src/core/memp.c ****   if (t != NULL) {
 107:lwIP/src/core/memp.c ****     for (h = t->next; (t != NULL) && (h != NULL); t = t->next,
 108:lwIP/src/core/memp.c ****          h = ((h->next != NULL) ? h->next->next : NULL)) {
 109:lwIP/src/core/memp.c ****       if (t == h) {
 110:lwIP/src/core/memp.c ****         return 0;
 111:lwIP/src/core/memp.c ****       }
 112:lwIP/src/core/memp.c ****     }
 113:lwIP/src/core/memp.c ****   }
 114:lwIP/src/core/memp.c **** 
 115:lwIP/src/core/memp.c ****   return 1;
 116:lwIP/src/core/memp.c **** }
 117:lwIP/src/core/memp.c **** #endif /* MEMP_SANITY_CHECK && !MEMP_MEM_MALLOC */
 118:lwIP/src/core/memp.c **** 
 119:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
 120:lwIP/src/core/memp.c **** /**
 121:lwIP/src/core/memp.c ****  * Check if a memp element was victim of an overflow or underflow
 122:lwIP/src/core/memp.c ****  * (e.g. the restricted area after/before it has been altered)
 123:lwIP/src/core/memp.c ****  *
 124:lwIP/src/core/memp.c ****  * @param p the memp element to check
 125:lwIP/src/core/memp.c ****  * @param desc the pool p comes from
 126:lwIP/src/core/memp.c ****  */
 127:lwIP/src/core/memp.c **** static void
 128:lwIP/src/core/memp.c **** memp_overflow_check_element(struct memp *p, const struct memp_desc *desc)
 129:lwIP/src/core/memp.c **** {
 130:lwIP/src/core/memp.c ****   mem_overflow_check_raw((u8_t *)p + MEMP_SIZE, desc->size, "pool ", desc->desc);
 131:lwIP/src/core/memp.c **** }
 132:lwIP/src/core/memp.c **** 
 133:lwIP/src/core/memp.c **** /**
 134:lwIP/src/core/memp.c ****  * Initialize the restricted area of on memp element.
 135:lwIP/src/core/memp.c ****  */
 136:lwIP/src/core/memp.c **** static void
 137:lwIP/src/core/memp.c **** memp_overflow_init_element(struct memp *p, const struct memp_desc *desc)
 138:lwIP/src/core/memp.c **** {
 139:lwIP/src/core/memp.c ****   mem_overflow_init_raw((u8_t *)p + MEMP_SIZE, desc->size);
 140:lwIP/src/core/memp.c **** }
 141:lwIP/src/core/memp.c **** 
 142:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK >= 2
ARM GAS  /tmp/cckTVcmi.s 			page 4


 143:lwIP/src/core/memp.c **** /**
 144:lwIP/src/core/memp.c ****  * Do an overflow check for all elements in every pool.
 145:lwIP/src/core/memp.c ****  *
 146:lwIP/src/core/memp.c ****  * @see memp_overflow_check_element for a description of the check
 147:lwIP/src/core/memp.c ****  */
 148:lwIP/src/core/memp.c **** static void
 149:lwIP/src/core/memp.c **** memp_overflow_check_all(void)
 150:lwIP/src/core/memp.c **** {
 151:lwIP/src/core/memp.c ****   u16_t i, j;
 152:lwIP/src/core/memp.c ****   struct memp *p;
 153:lwIP/src/core/memp.c ****   SYS_ARCH_DECL_PROTECT(old_level);
 154:lwIP/src/core/memp.c ****   SYS_ARCH_PROTECT(old_level);
 155:lwIP/src/core/memp.c **** 
 156:lwIP/src/core/memp.c ****   for (i = 0; i < MEMP_MAX; ++i) {
 157:lwIP/src/core/memp.c ****     p = (struct memp *)LWIP_MEM_ALIGN(memp_pools[i]->base);
 158:lwIP/src/core/memp.c ****     for (j = 0; j < memp_pools[i]->num; ++j) {
 159:lwIP/src/core/memp.c ****       memp_overflow_check_element(p, memp_pools[i]);
 160:lwIP/src/core/memp.c ****       p = LWIP_ALIGNMENT_CAST(struct memp *, ((u8_t *)p + MEMP_SIZE + memp_pools[i]->size + MEM_SAN
 161:lwIP/src/core/memp.c ****     }
 162:lwIP/src/core/memp.c ****   }
 163:lwIP/src/core/memp.c ****   SYS_ARCH_UNPROTECT(old_level);
 164:lwIP/src/core/memp.c **** }
 165:lwIP/src/core/memp.c **** #endif /* MEMP_OVERFLOW_CHECK >= 2 */
 166:lwIP/src/core/memp.c **** #endif /* MEMP_OVERFLOW_CHECK */
 167:lwIP/src/core/memp.c **** 
 168:lwIP/src/core/memp.c **** /**
 169:lwIP/src/core/memp.c ****  * Initialize custom memory pool.
 170:lwIP/src/core/memp.c ****  * Related functions: memp_malloc_pool, memp_free_pool
 171:lwIP/src/core/memp.c ****  *
 172:lwIP/src/core/memp.c ****  * @param desc pool to initialize
 173:lwIP/src/core/memp.c ****  */
 174:lwIP/src/core/memp.c **** void
 175:lwIP/src/core/memp.c **** memp_init_pool(const struct memp_desc *desc)
 176:lwIP/src/core/memp.c **** {
  31              		.loc 1 176 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
 177:lwIP/src/core/memp.c **** #if MEMP_MEM_MALLOC
 178:lwIP/src/core/memp.c ****   LWIP_UNUSED_ARG(desc);
 179:lwIP/src/core/memp.c **** #else
 180:lwIP/src/core/memp.c ****   int i;
  36              		.loc 1 180 3 view .LVU1
 181:lwIP/src/core/memp.c ****   struct memp *memp;
  37              		.loc 1 181 3 view .LVU2
 182:lwIP/src/core/memp.c **** 
 183:lwIP/src/core/memp.c ****   *desc->tab = NULL;
  38              		.loc 1 183 3 view .LVU3
 176:lwIP/src/core/memp.c **** #if MEMP_MEM_MALLOC
  39              		.loc 1 176 1 is_stmt 0 view .LVU4
  40 0000 70B4     		push	{r4, r5, r6}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 12
  43              		.cfi_offset 4, -12
  44              		.cfi_offset 5, -8
  45              		.cfi_offset 6, -4
ARM GAS  /tmp/cckTVcmi.s 			page 5


  46              		.loc 1 183 14 view .LVU5
  47 0002 0021     		movs	r1, #0
 184:lwIP/src/core/memp.c ****   memp = (struct memp *)LWIP_MEM_ALIGN(desc->base);
 185:lwIP/src/core/memp.c **** #if MEMP_MEM_INIT
 186:lwIP/src/core/memp.c ****   /* force memset on pool memory */
 187:lwIP/src/core/memp.c ****   memset(memp, 0, (size_t)desc->num * (MEMP_SIZE + desc->size
 188:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
 189:lwIP/src/core/memp.c ****                                        + MEM_SANITY_REGION_AFTER_ALIGNED
 190:lwIP/src/core/memp.c **** #endif
 191:lwIP/src/core/memp.c ****                                       ));
 192:lwIP/src/core/memp.c **** #endif
 193:lwIP/src/core/memp.c ****   /* create a linked list of memp elements */
 194:lwIP/src/core/memp.c ****   for (i = 0; i < desc->num; ++i) {
  48              		.loc 1 194 23 view .LVU6
  49 0004 4588     		ldrh	r5, [r0, #2]
 183:lwIP/src/core/memp.c ****   memp = (struct memp *)LWIP_MEM_ALIGN(desc->base);
  50              		.loc 1 183 8 view .LVU7
  51 0006 D0E90134 		ldrd	r3, r4, [r0, #4]
 183:lwIP/src/core/memp.c ****   memp = (struct memp *)LWIP_MEM_ALIGN(desc->base);
  52              		.loc 1 183 14 view .LVU8
  53 000a 2160     		str	r1, [r4]
 184:lwIP/src/core/memp.c ****   memp = (struct memp *)LWIP_MEM_ALIGN(desc->base);
  54              		.loc 1 184 3 is_stmt 1 view .LVU9
  55              	.LVL1:
  56              		.loc 1 194 3 view .LVU10
  57              		.loc 1 194 15 view .LVU11
  58              		.loc 1 194 3 is_stmt 0 view .LVU12
  59 000c 65B1     		cbz	r5, .L1
  60 000e 0333     		adds	r3, r3, #3
  61              	.LVL2:
 195:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
 196:lwIP/src/core/memp.c ****     *desc->tab = memp;
 197:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
 198:lwIP/src/core/memp.c ****     memp_overflow_init_element(memp, desc);
 199:lwIP/src/core/memp.c **** #endif /* MEMP_OVERFLOW_CHECK */
 200:lwIP/src/core/memp.c ****     /* cast through void* to get rid of alignment warnings */
 201:lwIP/src/core/memp.c ****     memp = (struct memp *)(void *)((u8_t *)memp + MEMP_SIZE + desc->size
  62              		.loc 1 201 67 view .LVU13
  63 0010 0688     		ldrh	r6, [r0]
 194:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
  64              		.loc 1 194 10 view .LVU14
  65 0012 0A46     		mov	r2, r1
  66 0014 23F00303 		bic	r3, r3, #3
  67              	.LVL3:
  68              	.L3:
 195:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
  69              		.loc 1 195 5 is_stmt 1 discriminator 3 view .LVU15
 194:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
  70              		.loc 1 194 30 is_stmt 0 discriminator 3 view .LVU16
  71 0018 0132     		adds	r2, r2, #1
  72              	.LVL4:
  73              		.loc 1 201 10 discriminator 3 view .LVU17
  74 001a 9819     		adds	r0, r3, r6
 195:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
  75              		.loc 1 195 16 discriminator 3 view .LVU18
  76 001c 1960     		str	r1, [r3]
 196:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
ARM GAS  /tmp/cckTVcmi.s 			page 6


  77              		.loc 1 196 5 is_stmt 1 discriminator 3 view .LVU19
  78 001e 1946     		mov	r1, r3
 194:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
  79              		.loc 1 194 3 is_stmt 0 discriminator 3 view .LVU20
  80 0020 AA42     		cmp	r2, r5
 196:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
  81              		.loc 1 196 16 discriminator 3 view .LVU21
  82 0022 2360     		str	r3, [r4]
  83              		.loc 1 201 5 is_stmt 1 discriminator 3 view .LVU22
  84              	.LVL5:
 194:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
  85              		.loc 1 194 30 discriminator 3 view .LVU23
 194:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
  86              		.loc 1 194 15 discriminator 3 view .LVU24
  87              		.loc 1 201 10 is_stmt 0 discriminator 3 view .LVU25
  88 0024 0346     		mov	r3, r0
 194:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
  89              		.loc 1 194 3 discriminator 3 view .LVU26
  90 0026 F7D1     		bne	.L3
  91              	.LVL6:
  92              	.L1:
 202:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
 203:lwIP/src/core/memp.c ****                                    + MEM_SANITY_REGION_AFTER_ALIGNED
 204:lwIP/src/core/memp.c **** #endif
 205:lwIP/src/core/memp.c ****                                   );
 206:lwIP/src/core/memp.c ****   }
 207:lwIP/src/core/memp.c **** #if MEMP_STATS
 208:lwIP/src/core/memp.c ****   desc->stats->avail = desc->num;
 209:lwIP/src/core/memp.c **** #endif /* MEMP_STATS */
 210:lwIP/src/core/memp.c **** #endif /* !MEMP_MEM_MALLOC */
 211:lwIP/src/core/memp.c **** 
 212:lwIP/src/core/memp.c **** #if MEMP_STATS && (defined(LWIP_DEBUG) || LWIP_STATS_DISPLAY)
 213:lwIP/src/core/memp.c ****   desc->stats->name  = desc->desc;
 214:lwIP/src/core/memp.c **** #endif /* MEMP_STATS && (defined(LWIP_DEBUG) || LWIP_STATS_DISPLAY) */
 215:lwIP/src/core/memp.c **** }
  93              		.loc 1 215 1 view .LVU27
  94 0028 70BC     		pop	{r4, r5, r6}
  95              	.LCFI1:
  96              		.cfi_restore 6
  97              		.cfi_restore 5
  98              		.cfi_restore 4
  99              		.cfi_def_cfa_offset 0
 100 002a 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE105:
 104              		.section	.text.memp_init,"ax",%progbits
 105              		.align	1
 106              		.p2align 2,,3
 107              		.global	memp_init
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 111              		.fpu fpv4-sp-d16
 113              	memp_init:
 114              	.LFB106:
 216:lwIP/src/core/memp.c **** 
 217:lwIP/src/core/memp.c **** /**
ARM GAS  /tmp/cckTVcmi.s 			page 7


 218:lwIP/src/core/memp.c ****  * Initializes lwIP built-in pools.
 219:lwIP/src/core/memp.c ****  * Related functions: memp_malloc, memp_free
 220:lwIP/src/core/memp.c ****  *
 221:lwIP/src/core/memp.c ****  * Carves out memp_memory into linked lists for each pool-type.
 222:lwIP/src/core/memp.c ****  */
 223:lwIP/src/core/memp.c **** void
 224:lwIP/src/core/memp.c **** memp_init(void)
 225:lwIP/src/core/memp.c **** {
 115              		.loc 1 225 1 is_stmt 1 view -0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 226:lwIP/src/core/memp.c ****   u16_t i;
 119              		.loc 1 226 3 view .LVU29
 227:lwIP/src/core/memp.c **** 
 228:lwIP/src/core/memp.c ****   /* for every pool: */
 229:lwIP/src/core/memp.c ****   for (i = 0; i < LWIP_ARRAYSIZE(memp_pools); i++) {
 120              		.loc 1 229 3 view .LVU30
 121              	.LVL7:
 122              		.loc 1 229 15 view .LVU31
 225:lwIP/src/core/memp.c ****   u16_t i;
 123              		.loc 1 225 1 is_stmt 0 view .LVU32
 124 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 125              	.LCFI2:
 126              		.cfi_def_cfa_offset 20
 127              		.cfi_offset 4, -20
 128              		.cfi_offset 5, -16
 129              		.cfi_offset 6, -12
 130              		.cfi_offset 7, -8
 131              		.cfi_offset 14, -4
 132 0002 114F     		ldr	r7, .L19
 225:lwIP/src/core/memp.c ****   u16_t i;
 133              		.loc 1 225 1 view .LVU33
 134 0004 0625     		movs	r5, #6
 135 0006 114B     		ldr	r3, .L19+4
 136              	.LBB8:
 137              	.LBB9:
 183:lwIP/src/core/memp.c ****   memp = (struct memp *)LWIP_MEM_ALIGN(desc->base);
 138              		.loc 1 183 14 view .LVU34
 139 0008 4FF0000E 		mov	lr, #0
 140 000c 07F1240C 		add	ip, r7, #36
 141              	.LBE9:
 142              	.LBE8:
 225:lwIP/src/core/memp.c ****   u16_t i;
 143              		.loc 1 225 1 view .LVU35
 144 0010 0F4C     		ldr	r4, .L19+8
 145              	.LVL8:
 146              	.L14:
 230:lwIP/src/core/memp.c ****     memp_init_pool(memp_pools[i]);
 147              		.loc 1 230 5 is_stmt 1 discriminator 3 view .LVU36
 148              	.LBB12:
 149              	.LBB10:
 184:lwIP/src/core/memp.c **** #if MEMP_MEM_INIT
 150              		.loc 1 184 25 is_stmt 0 discriminator 3 view .LVU37
 151 0012 0333     		adds	r3, r3, #3
 152              	.LBE10:
 153              	.LBE12:
ARM GAS  /tmp/cckTVcmi.s 			page 8


 154              		.loc 1 230 5 discriminator 3 view .LVU38
 155 0014 57F8042B 		ldr	r2, [r7], #4
 156              	.LVL9:
 157              	.LBB13:
 158              	.LBI8:
 175:lwIP/src/core/memp.c **** {
 159              		.loc 1 175 1 is_stmt 1 discriminator 3 view .LVU39
 160              	.LBB11:
 180:lwIP/src/core/memp.c ****   struct memp *memp;
 161              		.loc 1 180 3 discriminator 3 view .LVU40
 181:lwIP/src/core/memp.c **** 
 162              		.loc 1 181 3 discriminator 3 view .LVU41
 183:lwIP/src/core/memp.c ****   memp = (struct memp *)LWIP_MEM_ALIGN(desc->base);
 163              		.loc 1 183 3 discriminator 3 view .LVU42
 183:lwIP/src/core/memp.c ****   memp = (struct memp *)LWIP_MEM_ALIGN(desc->base);
 164              		.loc 1 183 14 is_stmt 0 discriminator 3 view .LVU43
 165 0018 C4F800E0 		str	lr, [r4]
 184:lwIP/src/core/memp.c **** #if MEMP_MEM_INIT
 166              		.loc 1 184 3 is_stmt 1 discriminator 3 view .LVU44
 184:lwIP/src/core/memp.c **** #if MEMP_MEM_INIT
 167              		.loc 1 184 25 is_stmt 0 discriminator 3 view .LVU45
 168 001c 23F00303 		bic	r3, r3, #3
 169              	.LVL10:
 194:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
 170              		.loc 1 194 3 is_stmt 1 discriminator 3 view .LVU46
 194:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
 171              		.loc 1 194 15 discriminator 3 view .LVU47
 194:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
 172              		.loc 1 194 3 is_stmt 0 discriminator 3 view .LVU48
 173 0020 55B1     		cbz	r5, .L13
 201:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
 174              		.loc 1 201 67 view .LVU49
 175 0022 0021     		movs	r1, #0
 176 0024 1688     		ldrh	r6, [r2]
 194:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
 177              		.loc 1 194 10 view .LVU50
 178 0026 0A46     		mov	r2, r1
 179              	.LVL11:
 180              	.L12:
 195:lwIP/src/core/memp.c ****     *desc->tab = memp;
 181              		.loc 1 195 5 is_stmt 1 view .LVU51
 194:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
 182              		.loc 1 194 30 is_stmt 0 view .LVU52
 183 0028 0132     		adds	r2, r2, #1
 184              	.LVL12:
 201:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
 185              		.loc 1 201 10 view .LVU53
 186 002a 9819     		adds	r0, r3, r6
 195:lwIP/src/core/memp.c ****     *desc->tab = memp;
 187              		.loc 1 195 16 view .LVU54
 188 002c 1960     		str	r1, [r3]
 196:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
 189              		.loc 1 196 5 is_stmt 1 view .LVU55
 190 002e 1946     		mov	r1, r3
 194:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
 191              		.loc 1 194 3 is_stmt 0 view .LVU56
 192 0030 AA42     		cmp	r2, r5
ARM GAS  /tmp/cckTVcmi.s 			page 9


 196:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
 193              		.loc 1 196 16 view .LVU57
 194 0032 2360     		str	r3, [r4]
 201:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
 195              		.loc 1 201 5 is_stmt 1 view .LVU58
 196              	.LVL13:
 194:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
 197              		.loc 1 194 30 view .LVU59
 194:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
 198              		.loc 1 194 15 view .LVU60
 201:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
 199              		.loc 1 201 10 is_stmt 0 view .LVU61
 200 0034 0346     		mov	r3, r0
 194:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
 201              		.loc 1 194 3 view .LVU62
 202 0036 F7D1     		bne	.L12
 203              	.LVL14:
 204              	.L13:
 194:lwIP/src/core/memp.c ****     memp->next = *desc->tab;
 205              		.loc 1 194 3 view .LVU63
 206              	.LBE11:
 207              	.LBE13:
 229:lwIP/src/core/memp.c ****     memp_init_pool(memp_pools[i]);
 208              		.loc 1 229 47 is_stmt 1 view .LVU64
 229:lwIP/src/core/memp.c ****     memp_init_pool(memp_pools[i]);
 209              		.loc 1 229 15 view .LVU65
 229:lwIP/src/core/memp.c ****     memp_init_pool(memp_pools[i]);
 210              		.loc 1 229 3 is_stmt 0 view .LVU66
 211 0038 BC45     		cmp	ip, r7
 212 003a 04D0     		beq	.L18
 213 003c 3A68     		ldr	r2, [r7]
 214 003e D2E90134 		ldrd	r3, r4, [r2, #4]
 215 0042 5588     		ldrh	r5, [r2, #2]
 216 0044 E5E7     		b	.L14
 217              	.L18:
 231:lwIP/src/core/memp.c **** 
 232:lwIP/src/core/memp.c **** #if LWIP_STATS && MEMP_STATS
 233:lwIP/src/core/memp.c ****     lwip_stats.memp[i] = memp_pools[i]->stats;
 234:lwIP/src/core/memp.c **** #endif
 235:lwIP/src/core/memp.c ****   }
 236:lwIP/src/core/memp.c **** 
 237:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK >= 2
 238:lwIP/src/core/memp.c ****   /* check everything a first time to see if it worked */
 239:lwIP/src/core/memp.c ****   memp_overflow_check_all();
 240:lwIP/src/core/memp.c **** #endif /* MEMP_OVERFLOW_CHECK >= 2 */
 241:lwIP/src/core/memp.c **** }
 218              		.loc 1 241 1 view .LVU67
 219 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
 220              	.L20:
 221              		.align	2
 222              	.L19:
 223 0048 00000000 		.word	.LANCHOR1
 224 004c 00000000 		.word	memp_memory_UDP_PCB_base
 225 0050 00000000 		.word	.LANCHOR0
 226              		.cfi_endproc
 227              	.LFE106:
 229              		.section	.rodata.memp_malloc_pool.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/cckTVcmi.s 			page 10


 230              		.align	2
 231              	.LC0:
 232 0000 696E7661 		.ascii	"invalid pool desc\000"
 232      6C696420 
 232      706F6F6C 
 232      20646573 
 232      6300
 233 0012 0000     		.align	2
 234              	.LC1:
 235 0014 6D656D70 		.ascii	"memp_malloc: memp properly aligned\000"
 235      5F6D616C 
 235      6C6F633A 
 235      206D656D 
 235      70207072 
 236              		.section	.text.memp_malloc_pool,"ax",%progbits
 237              		.align	1
 238              		.p2align 2,,3
 239              		.global	memp_malloc_pool
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 243              		.fpu fpv4-sp-d16
 245              	memp_malloc_pool:
 246              	.LVL15:
 247              	.LFB108:
 242:lwIP/src/core/memp.c **** 
 243:lwIP/src/core/memp.c **** static void *
 244:lwIP/src/core/memp.c **** #if !MEMP_OVERFLOW_CHECK
 245:lwIP/src/core/memp.c **** do_memp_malloc_pool(const struct memp_desc *desc)
 246:lwIP/src/core/memp.c **** #else
 247:lwIP/src/core/memp.c **** do_memp_malloc_pool_fn(const struct memp_desc *desc, const char *file, const int line)
 248:lwIP/src/core/memp.c **** #endif
 249:lwIP/src/core/memp.c **** {
 250:lwIP/src/core/memp.c ****   struct memp *memp;
 251:lwIP/src/core/memp.c ****   SYS_ARCH_DECL_PROTECT(old_level);
 252:lwIP/src/core/memp.c **** 
 253:lwIP/src/core/memp.c **** #if MEMP_MEM_MALLOC
 254:lwIP/src/core/memp.c ****   memp = (struct memp *)mem_malloc(MEMP_SIZE + MEMP_ALIGN_SIZE(desc->size));
 255:lwIP/src/core/memp.c ****   SYS_ARCH_PROTECT(old_level);
 256:lwIP/src/core/memp.c **** #else /* MEMP_MEM_MALLOC */
 257:lwIP/src/core/memp.c ****   SYS_ARCH_PROTECT(old_level);
 258:lwIP/src/core/memp.c **** 
 259:lwIP/src/core/memp.c ****   memp = *desc->tab;
 260:lwIP/src/core/memp.c **** #endif /* MEMP_MEM_MALLOC */
 261:lwIP/src/core/memp.c **** 
 262:lwIP/src/core/memp.c ****   if (memp != NULL) {
 263:lwIP/src/core/memp.c **** #if !MEMP_MEM_MALLOC
 264:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK == 1
 265:lwIP/src/core/memp.c ****     memp_overflow_check_element(memp, desc);
 266:lwIP/src/core/memp.c **** #endif /* MEMP_OVERFLOW_CHECK */
 267:lwIP/src/core/memp.c **** 
 268:lwIP/src/core/memp.c ****     *desc->tab = memp->next;
 269:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
 270:lwIP/src/core/memp.c ****     memp->next = NULL;
 271:lwIP/src/core/memp.c **** #endif /* MEMP_OVERFLOW_CHECK */
 272:lwIP/src/core/memp.c **** #endif /* !MEMP_MEM_MALLOC */
 273:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
ARM GAS  /tmp/cckTVcmi.s 			page 11


 274:lwIP/src/core/memp.c ****     memp->file = file;
 275:lwIP/src/core/memp.c ****     memp->line = line;
 276:lwIP/src/core/memp.c **** #if MEMP_MEM_MALLOC
 277:lwIP/src/core/memp.c ****     memp_overflow_init_element(memp, desc);
 278:lwIP/src/core/memp.c **** #endif /* MEMP_MEM_MALLOC */
 279:lwIP/src/core/memp.c **** #endif /* MEMP_OVERFLOW_CHECK */
 280:lwIP/src/core/memp.c ****     LWIP_ASSERT("memp_malloc: memp properly aligned",
 281:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 282:lwIP/src/core/memp.c **** #if MEMP_STATS
 283:lwIP/src/core/memp.c ****     desc->stats->used++;
 284:lwIP/src/core/memp.c ****     if (desc->stats->used > desc->stats->max) {
 285:lwIP/src/core/memp.c ****       desc->stats->max = desc->stats->used;
 286:lwIP/src/core/memp.c ****     }
 287:lwIP/src/core/memp.c **** #endif
 288:lwIP/src/core/memp.c ****     SYS_ARCH_UNPROTECT(old_level);
 289:lwIP/src/core/memp.c ****     /* cast through u8_t* to get rid of alignment warnings */
 290:lwIP/src/core/memp.c ****     return ((u8_t *)memp + MEMP_SIZE);
 291:lwIP/src/core/memp.c ****   } else {
 292:lwIP/src/core/memp.c **** #if MEMP_STATS
 293:lwIP/src/core/memp.c ****     desc->stats->err++;
 294:lwIP/src/core/memp.c **** #endif
 295:lwIP/src/core/memp.c ****     SYS_ARCH_UNPROTECT(old_level);
 296:lwIP/src/core/memp.c ****     LWIP_DEBUGF(MEMP_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("memp_malloc: out of memory in pool %s\n", de
 297:lwIP/src/core/memp.c ****   }
 298:lwIP/src/core/memp.c **** 
 299:lwIP/src/core/memp.c ****   return NULL;
 300:lwIP/src/core/memp.c **** }
 301:lwIP/src/core/memp.c **** 
 302:lwIP/src/core/memp.c **** /**
 303:lwIP/src/core/memp.c ****  * Get an element from a custom pool.
 304:lwIP/src/core/memp.c ****  *
 305:lwIP/src/core/memp.c ****  * @param desc the pool to get an element from
 306:lwIP/src/core/memp.c ****  *
 307:lwIP/src/core/memp.c ****  * @return a pointer to the allocated memory or a NULL pointer on error
 308:lwIP/src/core/memp.c ****  */
 309:lwIP/src/core/memp.c **** void *
 310:lwIP/src/core/memp.c **** #if !MEMP_OVERFLOW_CHECK
 311:lwIP/src/core/memp.c **** memp_malloc_pool(const struct memp_desc *desc)
 312:lwIP/src/core/memp.c **** #else
 313:lwIP/src/core/memp.c **** memp_malloc_pool_fn(const struct memp_desc *desc, const char *file, const int line)
 314:lwIP/src/core/memp.c **** #endif
 315:lwIP/src/core/memp.c **** {
 248              		.loc 1 315 1 is_stmt 1 view -0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 316:lwIP/src/core/memp.c ****   LWIP_ASSERT("invalid pool desc", desc != NULL);
 252              		.loc 1 316 3 view .LVU69
 253              		.loc 1 316 3 view .LVU70
 315:lwIP/src/core/memp.c ****   LWIP_ASSERT("invalid pool desc", desc != NULL);
 254              		.loc 1 315 1 is_stmt 0 view .LVU71
 255 0000 08B5     		push	{r3, lr}
 256              	.LCFI3:
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 3, -8
 259              		.cfi_offset 14, -4
 260              		.loc 1 316 3 view .LVU72
ARM GAS  /tmp/cckTVcmi.s 			page 12


 261 0002 58B1     		cbz	r0, .L33
 262              		.loc 1 316 3 is_stmt 1 view .LVU73
 317:lwIP/src/core/memp.c ****   if (desc == NULL) {
 263              		.loc 1 317 3 view .LVU74
 318:lwIP/src/core/memp.c ****     return NULL;
 319:lwIP/src/core/memp.c ****   }
 320:lwIP/src/core/memp.c **** 
 321:lwIP/src/core/memp.c **** #if !MEMP_OVERFLOW_CHECK
 322:lwIP/src/core/memp.c ****   return do_memp_malloc_pool(desc);
 264              		.loc 1 322 3 view .LVU75
 265              		.loc 1 322 10 is_stmt 0 view .LVU76
 266 0004 8368     		ldr	r3, [r0, #8]
 267              	.LBB14:
 268              	.LBI14:
 245:lwIP/src/core/memp.c **** #else
 269              		.loc 1 245 1 is_stmt 1 view .LVU77
 270              	.LVL16:
 271              	.LBB15:
 250:lwIP/src/core/memp.c ****   SYS_ARCH_DECL_PROTECT(old_level);
 272              		.loc 1 250 3 view .LVU78
 251:lwIP/src/core/memp.c **** 
 273              		.loc 1 251 35 view .LVU79
 257:lwIP/src/core/memp.c **** 
 274              		.loc 1 257 30 view .LVU80
 259:lwIP/src/core/memp.c **** #endif /* MEMP_MEM_MALLOC */
 275              		.loc 1 259 3 view .LVU81
 259:lwIP/src/core/memp.c **** #endif /* MEMP_MEM_MALLOC */
 276              		.loc 1 259 8 is_stmt 0 view .LVU82
 277 0006 1868     		ldr	r0, [r3]
 278              	.LVL17:
 262:lwIP/src/core/memp.c **** #if !MEMP_MEM_MALLOC
 279              		.loc 1 262 3 is_stmt 1 view .LVU83
 262:lwIP/src/core/memp.c **** #if !MEMP_MEM_MALLOC
 280              		.loc 1 262 6 is_stmt 0 view .LVU84
 281 0008 18B1     		cbz	r0, .L21
 268:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
 282              		.loc 1 268 5 is_stmt 1 view .LVU85
 268:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
 283              		.loc 1 268 22 is_stmt 0 view .LVU86
 284 000a 0268     		ldr	r2, [r0]
 268:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
 285              		.loc 1 268 16 view .LVU87
 286 000c 1A60     		str	r2, [r3]
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 287              		.loc 1 280 5 is_stmt 1 view .LVU88
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 288              		.loc 1 280 5 view .LVU89
 289 000e 8307     		lsls	r3, r0, #30
 290 0010 00D1     		bne	.L34
 291              	.L21:
 292              	.LBE15:
 293              	.LBE14:
 323:lwIP/src/core/memp.c **** #else
 324:lwIP/src/core/memp.c ****   return do_memp_malloc_pool_fn(desc, file, line);
 325:lwIP/src/core/memp.c **** #endif
 326:lwIP/src/core/memp.c **** }
 294              		.loc 1 326 1 is_stmt 0 view .LVU90
ARM GAS  /tmp/cckTVcmi.s 			page 13


 295 0012 08BD     		pop	{r3, pc}
 296              	.L34:
 297              	.LBB17:
 298              	.LBB16:
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 299              		.loc 1 280 5 is_stmt 1 view .LVU91
 300 0014 0348     		ldr	r0, .L35
 301              	.LVL18:
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 302              		.loc 1 280 5 is_stmt 0 view .LVU92
 303 0016 FFF7FEFF 		bl	printf
 304              	.LVL19:
 305              	.L25:
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 306              		.loc 1 280 5 is_stmt 1 view .LVU93
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 307              		.loc 1 280 5 view .LVU94
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 308              		.loc 1 280 5 view .LVU95
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 309              		.loc 1 280 5 view .LVU96
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 310              		.loc 1 280 5 view .LVU97
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 311              		.loc 1 280 5 view .LVU98
 312 001a FEE7     		b	.L25
 313              	.LVL20:
 314              	.L33:
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 315              		.loc 1 280 5 is_stmt 0 view .LVU99
 316              	.LBE16:
 317              	.LBE17:
 316:lwIP/src/core/memp.c ****   if (desc == NULL) {
 318              		.loc 1 316 3 is_stmt 1 discriminator 1 view .LVU100
 319 001c 0248     		ldr	r0, .L35+4
 320              	.LVL21:
 316:lwIP/src/core/memp.c ****   if (desc == NULL) {
 321              		.loc 1 316 3 is_stmt 0 discriminator 1 view .LVU101
 322 001e FFF7FEFF 		bl	printf
 323              	.LVL22:
 324              	.L23:
 316:lwIP/src/core/memp.c ****   if (desc == NULL) {
 325              		.loc 1 316 3 is_stmt 1 discriminator 1 view .LVU102
 316:lwIP/src/core/memp.c ****   if (desc == NULL) {
 326              		.loc 1 316 3 discriminator 1 view .LVU103
 316:lwIP/src/core/memp.c ****   if (desc == NULL) {
 327              		.loc 1 316 3 discriminator 1 view .LVU104
 316:lwIP/src/core/memp.c ****   if (desc == NULL) {
 328              		.loc 1 316 3 discriminator 1 view .LVU105
 316:lwIP/src/core/memp.c ****   if (desc == NULL) {
 329              		.loc 1 316 3 discriminator 1 view .LVU106
 316:lwIP/src/core/memp.c ****   if (desc == NULL) {
 330              		.loc 1 316 3 discriminator 1 view .LVU107
 331 0022 FEE7     		b	.L23
 332              	.L36:
 333              		.align	2
 334              	.L35:
ARM GAS  /tmp/cckTVcmi.s 			page 14


 335 0024 14000000 		.word	.LC1
 336 0028 00000000 		.word	.LC0
 337              		.cfi_endproc
 338              	.LFE108:
 340              		.section	.rodata.memp_malloc.str1.4,"aMS",%progbits,1
 341              		.align	2
 342              	.LC2:
 343 0000 6D656D70 		.ascii	"memp_malloc: type < MEMP_MAX\000"
 343      5F6D616C 
 343      6C6F633A 
 343      20747970 
 343      65203C20 
 344              		.section	.text.memp_malloc,"ax",%progbits
 345              		.align	1
 346              		.p2align 2,,3
 347              		.global	memp_malloc
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu fpv4-sp-d16
 353              	memp_malloc:
 354              	.LVL23:
 355              	.LFB109:
 327:lwIP/src/core/memp.c **** 
 328:lwIP/src/core/memp.c **** /**
 329:lwIP/src/core/memp.c ****  * Get an element from a specific pool.
 330:lwIP/src/core/memp.c ****  *
 331:lwIP/src/core/memp.c ****  * @param type the pool to get an element from
 332:lwIP/src/core/memp.c ****  *
 333:lwIP/src/core/memp.c ****  * @return a pointer to the allocated memory or a NULL pointer on error
 334:lwIP/src/core/memp.c ****  */
 335:lwIP/src/core/memp.c **** void *
 336:lwIP/src/core/memp.c **** #if !MEMP_OVERFLOW_CHECK
 337:lwIP/src/core/memp.c **** memp_malloc(memp_t type)
 338:lwIP/src/core/memp.c **** #else
 339:lwIP/src/core/memp.c **** memp_malloc_fn(memp_t type, const char *file, const int line)
 340:lwIP/src/core/memp.c **** #endif
 341:lwIP/src/core/memp.c **** {
 356              		.loc 1 341 1 view -0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 342:lwIP/src/core/memp.c ****   void *memp;
 360              		.loc 1 342 3 view .LVU109
 343:lwIP/src/core/memp.c ****   LWIP_ERROR("memp_malloc: type < MEMP_MAX", (type < MEMP_MAX), return NULL;);
 361              		.loc 1 343 3 view .LVU110
 362              		.loc 1 343 3 view .LVU111
 363 0000 0828     		cmp	r0, #8
 341:lwIP/src/core/memp.c ****   void *memp;
 364              		.loc 1 341 1 is_stmt 0 view .LVU112
 365 0002 08B5     		push	{r3, lr}
 366              	.LCFI4:
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 3, -8
 369              		.cfi_offset 14, -4
 370              		.loc 1 343 3 view .LVU113
 371 0004 0ED8     		bhi	.L49
ARM GAS  /tmp/cckTVcmi.s 			page 15


 372              		.loc 1 343 3 is_stmt 1 discriminator 2 view .LVU114
 373              		.loc 1 343 3 discriminator 2 view .LVU115
 344:lwIP/src/core/memp.c **** 
 345:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK >= 2
 346:lwIP/src/core/memp.c ****   memp_overflow_check_all();
 347:lwIP/src/core/memp.c **** #endif /* MEMP_OVERFLOW_CHECK >= 2 */
 348:lwIP/src/core/memp.c **** 
 349:lwIP/src/core/memp.c **** #if !MEMP_OVERFLOW_CHECK
 350:lwIP/src/core/memp.c ****   memp = do_memp_malloc_pool(memp_pools[type]);
 374              		.loc 1 350 3 discriminator 2 view .LVU116
 375              		.loc 1 350 10 is_stmt 0 discriminator 2 view .LVU117
 376 0006 094B     		ldr	r3, .L51
 377 0008 53F82030 		ldr	r3, [r3, r0, lsl #2]
 378 000c 9B68     		ldr	r3, [r3, #8]
 379              	.LBB18:
 380              	.LBI18:
 245:lwIP/src/core/memp.c **** #else
 381              		.loc 1 245 1 is_stmt 1 discriminator 2 view .LVU118
 382              	.LVL24:
 383              	.LBB19:
 250:lwIP/src/core/memp.c ****   SYS_ARCH_DECL_PROTECT(old_level);
 384              		.loc 1 250 3 discriminator 2 view .LVU119
 251:lwIP/src/core/memp.c **** 
 385              		.loc 1 251 35 discriminator 2 view .LVU120
 257:lwIP/src/core/memp.c **** 
 386              		.loc 1 257 30 discriminator 2 view .LVU121
 259:lwIP/src/core/memp.c **** #endif /* MEMP_MEM_MALLOC */
 387              		.loc 1 259 3 discriminator 2 view .LVU122
 259:lwIP/src/core/memp.c **** #endif /* MEMP_MEM_MALLOC */
 388              		.loc 1 259 8 is_stmt 0 discriminator 2 view .LVU123
 389 000e 1868     		ldr	r0, [r3]
 390              	.LVL25:
 262:lwIP/src/core/memp.c **** #if !MEMP_MEM_MALLOC
 391              		.loc 1 262 3 is_stmt 1 discriminator 2 view .LVU124
 262:lwIP/src/core/memp.c **** #if !MEMP_MEM_MALLOC
 392              		.loc 1 262 6 is_stmt 0 discriminator 2 view .LVU125
 393 0010 18B1     		cbz	r0, .L37
 268:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
 394              		.loc 1 268 5 is_stmt 1 view .LVU126
 268:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
 395              		.loc 1 268 22 is_stmt 0 view .LVU127
 396 0012 0268     		ldr	r2, [r0]
 268:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK
 397              		.loc 1 268 16 view .LVU128
 398 0014 1A60     		str	r2, [r3]
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 399              		.loc 1 280 5 is_stmt 1 view .LVU129
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 400              		.loc 1 280 5 view .LVU130
 401 0016 8307     		lsls	r3, r0, #30
 402 0018 00D1     		bne	.L50
 403              	.L37:
 404              	.LBE19:
 405              	.LBE18:
 351:lwIP/src/core/memp.c **** #else
 352:lwIP/src/core/memp.c ****   memp = do_memp_malloc_pool_fn(memp_pools[type], file, line);
 353:lwIP/src/core/memp.c **** #endif
ARM GAS  /tmp/cckTVcmi.s 			page 16


 354:lwIP/src/core/memp.c **** 
 355:lwIP/src/core/memp.c ****   return memp;
 356:lwIP/src/core/memp.c **** }
 406              		.loc 1 356 1 is_stmt 0 view .LVU131
 407 001a 08BD     		pop	{r3, pc}
 408              	.L50:
 409              	.LBB21:
 410              	.LBB20:
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 411              		.loc 1 280 5 is_stmt 1 view .LVU132
 412 001c 0448     		ldr	r0, .L51+4
 413              	.LVL26:
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 414              		.loc 1 280 5 is_stmt 0 view .LVU133
 415 001e FFF7FEFF 		bl	printf
 416              	.LVL27:
 417              	.L41:
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 418              		.loc 1 280 5 is_stmt 1 view .LVU134
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 419              		.loc 1 280 5 view .LVU135
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 420              		.loc 1 280 5 view .LVU136
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 421              		.loc 1 280 5 view .LVU137
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 422              		.loc 1 280 5 view .LVU138
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 423              		.loc 1 280 5 view .LVU139
 424 0022 FEE7     		b	.L41
 425              	.LVL28:
 426              	.L49:
 280:lwIP/src/core/memp.c ****                 ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
 427              		.loc 1 280 5 is_stmt 0 view .LVU140
 428              	.LBE20:
 429              	.LBE21:
 343:lwIP/src/core/memp.c **** 
 430              		.loc 1 343 3 is_stmt 1 discriminator 1 view .LVU141
 431 0024 0348     		ldr	r0, .L51+8
 432              	.LVL29:
 343:lwIP/src/core/memp.c **** 
 433              		.loc 1 343 3 is_stmt 0 discriminator 1 view .LVU142
 434 0026 FFF7FEFF 		bl	printf
 435              	.LVL30:
 436              	.L39:
 343:lwIP/src/core/memp.c **** 
 437              		.loc 1 343 3 is_stmt 1 discriminator 1 view .LVU143
 343:lwIP/src/core/memp.c **** 
 438              		.loc 1 343 3 discriminator 1 view .LVU144
 343:lwIP/src/core/memp.c **** 
 439              		.loc 1 343 3 discriminator 1 view .LVU145
 343:lwIP/src/core/memp.c **** 
 440              		.loc 1 343 3 discriminator 1 view .LVU146
 343:lwIP/src/core/memp.c **** 
 441              		.loc 1 343 3 discriminator 1 view .LVU147
 343:lwIP/src/core/memp.c **** 
 442              		.loc 1 343 3 discriminator 1 view .LVU148
ARM GAS  /tmp/cckTVcmi.s 			page 17


 443 002a FEE7     		b	.L39
 444              	.L52:
 445              		.align	2
 446              	.L51:
 447 002c 00000000 		.word	.LANCHOR1
 448 0030 14000000 		.word	.LC1
 449 0034 00000000 		.word	.LC2
 450              		.cfi_endproc
 451              	.LFE109:
 453              		.section	.rodata.memp_free_pool.str1.4,"aMS",%progbits,1
 454              		.align	2
 455              	.LC3:
 456 0000 6D656D70 		.ascii	"memp_free: mem properly aligned\000"
 456      5F667265 
 456      653A206D 
 456      656D2070 
 456      726F7065 
 457              		.section	.text.memp_free_pool,"ax",%progbits
 458              		.align	1
 459              		.p2align 2,,3
 460              		.global	memp_free_pool
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 464              		.fpu fpv4-sp-d16
 466              	memp_free_pool:
 467              	.LVL31:
 468              	.LFB111:
 357:lwIP/src/core/memp.c **** 
 358:lwIP/src/core/memp.c **** static void
 359:lwIP/src/core/memp.c **** do_memp_free_pool(const struct memp_desc *desc, void *mem)
 360:lwIP/src/core/memp.c **** {
 361:lwIP/src/core/memp.c ****   struct memp *memp;
 362:lwIP/src/core/memp.c ****   SYS_ARCH_DECL_PROTECT(old_level);
 363:lwIP/src/core/memp.c **** 
 364:lwIP/src/core/memp.c ****   LWIP_ASSERT("memp_free: mem properly aligned",
 365:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 366:lwIP/src/core/memp.c **** 
 367:lwIP/src/core/memp.c ****   /* cast through void* to get rid of alignment warnings */
 368:lwIP/src/core/memp.c ****   memp = (struct memp *)(void *)((u8_t *)mem - MEMP_SIZE);
 369:lwIP/src/core/memp.c **** 
 370:lwIP/src/core/memp.c ****   SYS_ARCH_PROTECT(old_level);
 371:lwIP/src/core/memp.c **** 
 372:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK == 1
 373:lwIP/src/core/memp.c ****   memp_overflow_check_element(memp, desc);
 374:lwIP/src/core/memp.c **** #endif /* MEMP_OVERFLOW_CHECK */
 375:lwIP/src/core/memp.c **** 
 376:lwIP/src/core/memp.c **** #if MEMP_STATS
 377:lwIP/src/core/memp.c ****   desc->stats->used--;
 378:lwIP/src/core/memp.c **** #endif
 379:lwIP/src/core/memp.c **** 
 380:lwIP/src/core/memp.c **** #if MEMP_MEM_MALLOC
 381:lwIP/src/core/memp.c ****   LWIP_UNUSED_ARG(desc);
 382:lwIP/src/core/memp.c ****   SYS_ARCH_UNPROTECT(old_level);
 383:lwIP/src/core/memp.c ****   mem_free(memp);
 384:lwIP/src/core/memp.c **** #else /* MEMP_MEM_MALLOC */
 385:lwIP/src/core/memp.c ****   memp->next = *desc->tab;
ARM GAS  /tmp/cckTVcmi.s 			page 18


 386:lwIP/src/core/memp.c ****   *desc->tab = memp;
 387:lwIP/src/core/memp.c **** 
 388:lwIP/src/core/memp.c **** #if MEMP_SANITY_CHECK
 389:lwIP/src/core/memp.c ****   LWIP_ASSERT("memp sanity", memp_sanity(desc));
 390:lwIP/src/core/memp.c **** #endif /* MEMP_SANITY_CHECK */
 391:lwIP/src/core/memp.c **** 
 392:lwIP/src/core/memp.c ****   SYS_ARCH_UNPROTECT(old_level);
 393:lwIP/src/core/memp.c **** #endif /* !MEMP_MEM_MALLOC */
 394:lwIP/src/core/memp.c **** }
 395:lwIP/src/core/memp.c **** 
 396:lwIP/src/core/memp.c **** /**
 397:lwIP/src/core/memp.c ****  * Put a custom pool element back into its pool.
 398:lwIP/src/core/memp.c ****  *
 399:lwIP/src/core/memp.c ****  * @param desc the pool where to put mem
 400:lwIP/src/core/memp.c ****  * @param mem the memp element to free
 401:lwIP/src/core/memp.c ****  */
 402:lwIP/src/core/memp.c **** void
 403:lwIP/src/core/memp.c **** memp_free_pool(const struct memp_desc *desc, void *mem)
 404:lwIP/src/core/memp.c **** {
 469              		.loc 1 404 1 view -0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 405:lwIP/src/core/memp.c ****   LWIP_ASSERT("invalid pool desc", desc != NULL);
 473              		.loc 1 405 3 view .LVU150
 474              		.loc 1 405 3 view .LVU151
 404:lwIP/src/core/memp.c ****   LWIP_ASSERT("invalid pool desc", desc != NULL);
 475              		.loc 1 404 1 is_stmt 0 view .LVU152
 476 0000 08B5     		push	{r3, lr}
 477              	.LCFI5:
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 3, -8
 480              		.cfi_offset 14, -4
 481              		.loc 1 405 3 view .LVU153
 482 0002 60B1     		cbz	r0, .L63
 483              		.loc 1 405 3 is_stmt 1 discriminator 2 view .LVU154
 406:lwIP/src/core/memp.c ****   if ((desc == NULL) || (mem == NULL)) {
 484              		.loc 1 406 3 discriminator 2 view .LVU155
 485              		.loc 1 406 6 is_stmt 0 discriminator 2 view .LVU156
 486 0004 01B9     		cbnz	r1, .L64
 407:lwIP/src/core/memp.c ****     return;
 408:lwIP/src/core/memp.c ****   }
 409:lwIP/src/core/memp.c **** 
 410:lwIP/src/core/memp.c ****   do_memp_free_pool(desc, mem);
 411:lwIP/src/core/memp.c **** }
 487              		.loc 1 411 1 view .LVU157
 488 0006 08BD     		pop	{r3, pc}
 489              	.L64:
 410:lwIP/src/core/memp.c **** }
 490              		.loc 1 410 3 is_stmt 1 view .LVU158
 491              	.LVL32:
 492              	.LBB26:
 493              	.LBI26:
 359:lwIP/src/core/memp.c **** {
 494              		.loc 1 359 1 view .LVU159
 495              	.LBB27:
 361:lwIP/src/core/memp.c ****   SYS_ARCH_DECL_PROTECT(old_level);
ARM GAS  /tmp/cckTVcmi.s 			page 19


 496              		.loc 1 361 3 view .LVU160
 362:lwIP/src/core/memp.c **** 
 497              		.loc 1 362 35 view .LVU161
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 498              		.loc 1 364 3 view .LVU162
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 499              		.loc 1 364 3 view .LVU163
 500 0008 8B07     		lsls	r3, r1, #30
 501 000a 04D1     		bne	.L65
 502              	.LVL33:
 503              	.LBB28:
 504              	.LBI28:
 359:lwIP/src/core/memp.c **** {
 505              		.loc 1 359 1 view .LVU164
 506              	.LBB29:
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 507              		.loc 1 364 3 view .LVU165
 368:lwIP/src/core/memp.c **** 
 508              		.loc 1 368 3 view .LVU166
 370:lwIP/src/core/memp.c **** 
 509              		.loc 1 370 30 view .LVU167
 385:lwIP/src/core/memp.c ****   *desc->tab = memp;
 510              		.loc 1 385 3 view .LVU168
 385:lwIP/src/core/memp.c ****   *desc->tab = memp;
 511              		.loc 1 385 21 is_stmt 0 view .LVU169
 512 000c 8368     		ldr	r3, [r0, #8]
 385:lwIP/src/core/memp.c ****   *desc->tab = memp;
 513              		.loc 1 385 16 view .LVU170
 514 000e 1A68     		ldr	r2, [r3]
 385:lwIP/src/core/memp.c ****   *desc->tab = memp;
 515              		.loc 1 385 14 view .LVU171
 516 0010 0A60     		str	r2, [r1]
 386:lwIP/src/core/memp.c **** 
 517              		.loc 1 386 3 is_stmt 1 view .LVU172
 386:lwIP/src/core/memp.c **** 
 518              		.loc 1 386 14 is_stmt 0 view .LVU173
 519 0012 1960     		str	r1, [r3]
 392:lwIP/src/core/memp.c **** #endif /* !MEMP_MEM_MALLOC */
 520              		.loc 1 392 32 is_stmt 1 view .LVU174
 521              	.LVL34:
 392:lwIP/src/core/memp.c **** #endif /* !MEMP_MEM_MALLOC */
 522              		.loc 1 392 32 is_stmt 0 view .LVU175
 523              	.LBE29:
 524              	.LBE28:
 525              	.LBE27:
 526              	.LBE26:
 527              		.loc 1 411 1 view .LVU176
 528 0014 08BD     		pop	{r3, pc}
 529              	.LVL35:
 530              	.L65:
 531              	.LBB31:
 532              	.LBB30:
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 533              		.loc 1 364 3 is_stmt 1 view .LVU177
 534 0016 0448     		ldr	r0, .L66
 535              	.LVL36:
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
ARM GAS  /tmp/cckTVcmi.s 			page 20


 536              		.loc 1 364 3 is_stmt 0 view .LVU178
 537 0018 FFF7FEFF 		bl	printf
 538              	.LVL37:
 539              	.L58:
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 540              		.loc 1 364 3 is_stmt 1 view .LVU179
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 541              		.loc 1 364 3 view .LVU180
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 542              		.loc 1 364 3 view .LVU181
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 543              		.loc 1 364 3 view .LVU182
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 544              		.loc 1 364 3 view .LVU183
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 545              		.loc 1 364 3 view .LVU184
 546 001c FEE7     		b	.L58
 547              	.LVL38:
 548              	.L63:
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 549              		.loc 1 364 3 is_stmt 0 view .LVU185
 550              	.LBE30:
 551              	.LBE31:
 405:lwIP/src/core/memp.c ****   if ((desc == NULL) || (mem == NULL)) {
 552              		.loc 1 405 3 is_stmt 1 discriminator 1 view .LVU186
 553 001e 0348     		ldr	r0, .L66+4
 554              	.LVL39:
 405:lwIP/src/core/memp.c ****   if ((desc == NULL) || (mem == NULL)) {
 555              		.loc 1 405 3 is_stmt 0 discriminator 1 view .LVU187
 556 0020 FFF7FEFF 		bl	printf
 557              	.LVL40:
 558              	.L55:
 405:lwIP/src/core/memp.c ****   if ((desc == NULL) || (mem == NULL)) {
 559              		.loc 1 405 3 is_stmt 1 discriminator 1 view .LVU188
 405:lwIP/src/core/memp.c ****   if ((desc == NULL) || (mem == NULL)) {
 560              		.loc 1 405 3 discriminator 1 view .LVU189
 405:lwIP/src/core/memp.c ****   if ((desc == NULL) || (mem == NULL)) {
 561              		.loc 1 405 3 discriminator 1 view .LVU190
 405:lwIP/src/core/memp.c ****   if ((desc == NULL) || (mem == NULL)) {
 562              		.loc 1 405 3 discriminator 1 view .LVU191
 405:lwIP/src/core/memp.c ****   if ((desc == NULL) || (mem == NULL)) {
 563              		.loc 1 405 3 discriminator 1 view .LVU192
 405:lwIP/src/core/memp.c ****   if ((desc == NULL) || (mem == NULL)) {
 564              		.loc 1 405 3 discriminator 1 view .LVU193
 565 0024 FEE7     		b	.L55
 566              	.L67:
 567 0026 00BF     		.align	2
 568              	.L66:
 569 0028 00000000 		.word	.LC3
 570 002c 00000000 		.word	.LC0
 571              		.cfi_endproc
 572              	.LFE111:
 574              		.section	.rodata.memp_free.str1.4,"aMS",%progbits,1
 575              		.align	2
 576              	.LC4:
 577 0000 6D656D70 		.ascii	"memp_free: type < MEMP_MAX\000"
 577      5F667265 
ARM GAS  /tmp/cckTVcmi.s 			page 21


 577      653A2074 
 577      79706520 
 577      3C204D45 
 578              		.section	.text.memp_free,"ax",%progbits
 579              		.align	1
 580              		.p2align 2,,3
 581              		.global	memp_free
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 585              		.fpu fpv4-sp-d16
 587              	memp_free:
 588              	.LVL41:
 589              	.LFB112:
 412:lwIP/src/core/memp.c **** 
 413:lwIP/src/core/memp.c **** /**
 414:lwIP/src/core/memp.c ****  * Put an element back into its pool.
 415:lwIP/src/core/memp.c ****  *
 416:lwIP/src/core/memp.c ****  * @param type the pool where to put mem
 417:lwIP/src/core/memp.c ****  * @param mem the memp element to free
 418:lwIP/src/core/memp.c ****  */
 419:lwIP/src/core/memp.c **** void
 420:lwIP/src/core/memp.c **** memp_free(memp_t type, void *mem)
 421:lwIP/src/core/memp.c **** {
 590              		.loc 1 421 1 view -0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 422:lwIP/src/core/memp.c **** #ifdef LWIP_HOOK_MEMP_AVAILABLE
 423:lwIP/src/core/memp.c ****   struct memp *old_first;
 424:lwIP/src/core/memp.c **** #endif
 425:lwIP/src/core/memp.c **** 
 426:lwIP/src/core/memp.c ****   LWIP_ERROR("memp_free: type < MEMP_MAX", (type < MEMP_MAX), return;);
 594              		.loc 1 426 3 view .LVU195
 595              		.loc 1 426 3 view .LVU196
 596 0000 0828     		cmp	r0, #8
 421:lwIP/src/core/memp.c **** #ifdef LWIP_HOOK_MEMP_AVAILABLE
 597              		.loc 1 421 1 is_stmt 0 view .LVU197
 598 0002 08B5     		push	{r3, lr}
 599              	.LCFI6:
 600              		.cfi_def_cfa_offset 8
 601              		.cfi_offset 3, -8
 602              		.cfi_offset 14, -4
 603              		.loc 1 426 3 view .LVU198
 604 0004 0AD8     		bhi	.L78
 605              		.loc 1 426 3 is_stmt 1 discriminator 2 view .LVU199
 606              		.loc 1 426 3 discriminator 2 view .LVU200
 427:lwIP/src/core/memp.c **** 
 428:lwIP/src/core/memp.c ****   if (mem == NULL) {
 607              		.loc 1 428 3 discriminator 2 view .LVU201
 608              		.loc 1 428 6 is_stmt 0 discriminator 2 view .LVU202
 609 0006 41B1     		cbz	r1, .L68
 429:lwIP/src/core/memp.c ****     return;
 430:lwIP/src/core/memp.c ****   }
 431:lwIP/src/core/memp.c **** 
 432:lwIP/src/core/memp.c **** #if MEMP_OVERFLOW_CHECK >= 2
 433:lwIP/src/core/memp.c ****   memp_overflow_check_all();
ARM GAS  /tmp/cckTVcmi.s 			page 22


 434:lwIP/src/core/memp.c **** #endif /* MEMP_OVERFLOW_CHECK >= 2 */
 435:lwIP/src/core/memp.c **** 
 436:lwIP/src/core/memp.c **** #ifdef LWIP_HOOK_MEMP_AVAILABLE
 437:lwIP/src/core/memp.c ****   old_first = *memp_pools[type]->tab;
 438:lwIP/src/core/memp.c **** #endif
 439:lwIP/src/core/memp.c **** 
 440:lwIP/src/core/memp.c ****   do_memp_free_pool(memp_pools[type], mem);
 610              		.loc 1 440 3 is_stmt 1 view .LVU203
 611              	.LVL42:
 612              	.LBB36:
 613              	.LBI36:
 359:lwIP/src/core/memp.c **** {
 614              		.loc 1 359 1 view .LVU204
 615              	.LBB37:
 361:lwIP/src/core/memp.c ****   SYS_ARCH_DECL_PROTECT(old_level);
 616              		.loc 1 361 3 view .LVU205
 362:lwIP/src/core/memp.c **** 
 617              		.loc 1 362 35 view .LVU206
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 618              		.loc 1 364 3 view .LVU207
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 619              		.loc 1 364 3 view .LVU208
 620 0008 8B07     		lsls	r3, r1, #30
 621 000a 0BD1     		bne	.L79
 622              	.LVL43:
 623              	.LBB38:
 624              	.LBI38:
 359:lwIP/src/core/memp.c **** {
 625              		.loc 1 359 1 view .LVU209
 626              	.LBB39:
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 627              		.loc 1 364 3 view .LVU210
 368:lwIP/src/core/memp.c **** 
 628              		.loc 1 368 3 view .LVU211
 370:lwIP/src/core/memp.c **** 
 629              		.loc 1 370 30 view .LVU212
 385:lwIP/src/core/memp.c ****   *desc->tab = memp;
 630              		.loc 1 385 3 view .LVU213
 631              	.LBE39:
 632              	.LBE38:
 633              	.LBE37:
 634              	.LBE36:
 635              		.loc 1 440 3 is_stmt 0 view .LVU214
 636 000c 074B     		ldr	r3, .L80
 637              	.LBB44:
 638              	.LBB42:
 639              	.LBB41:
 640              	.LBB40:
 385:lwIP/src/core/memp.c ****   *desc->tab = memp;
 641              		.loc 1 385 21 view .LVU215
 642 000e 53F82030 		ldr	r3, [r3, r0, lsl #2]
 643 0012 9B68     		ldr	r3, [r3, #8]
 385:lwIP/src/core/memp.c ****   *desc->tab = memp;
 644              		.loc 1 385 16 view .LVU216
 645 0014 1A68     		ldr	r2, [r3]
 385:lwIP/src/core/memp.c ****   *desc->tab = memp;
 646              		.loc 1 385 14 view .LVU217
ARM GAS  /tmp/cckTVcmi.s 			page 23


 647 0016 0A60     		str	r2, [r1]
 386:lwIP/src/core/memp.c **** 
 648              		.loc 1 386 3 is_stmt 1 view .LVU218
 386:lwIP/src/core/memp.c **** 
 649              		.loc 1 386 14 is_stmt 0 view .LVU219
 650 0018 1960     		str	r1, [r3]
 392:lwIP/src/core/memp.c **** #endif /* !MEMP_MEM_MALLOC */
 651              		.loc 1 392 32 is_stmt 1 view .LVU220
 652              	.LVL44:
 653              	.L68:
 392:lwIP/src/core/memp.c **** #endif /* !MEMP_MEM_MALLOC */
 654              		.loc 1 392 32 is_stmt 0 view .LVU221
 655              	.LBE40:
 656              	.LBE41:
 657              	.LBE42:
 658              	.LBE44:
 441:lwIP/src/core/memp.c **** 
 442:lwIP/src/core/memp.c **** #ifdef LWIP_HOOK_MEMP_AVAILABLE
 443:lwIP/src/core/memp.c ****   if (old_first == NULL) {
 444:lwIP/src/core/memp.c ****     LWIP_HOOK_MEMP_AVAILABLE(type);
 445:lwIP/src/core/memp.c ****   }
 446:lwIP/src/core/memp.c **** #endif
 447:lwIP/src/core/memp.c **** }
 659              		.loc 1 447 1 view .LVU222
 660 001a 08BD     		pop	{r3, pc}
 661              	.L78:
 426:lwIP/src/core/memp.c **** 
 662              		.loc 1 426 3 is_stmt 1 discriminator 1 view .LVU223
 663 001c 0448     		ldr	r0, .L80+4
 664              	.LVL45:
 426:lwIP/src/core/memp.c **** 
 665              		.loc 1 426 3 is_stmt 0 discriminator 1 view .LVU224
 666 001e FFF7FEFF 		bl	printf
 667              	.LVL46:
 668              	.L70:
 426:lwIP/src/core/memp.c **** 
 669              		.loc 1 426 3 is_stmt 1 discriminator 1 view .LVU225
 426:lwIP/src/core/memp.c **** 
 670              		.loc 1 426 3 discriminator 1 view .LVU226
 426:lwIP/src/core/memp.c **** 
 671              		.loc 1 426 3 discriminator 1 view .LVU227
 426:lwIP/src/core/memp.c **** 
 672              		.loc 1 426 3 discriminator 1 view .LVU228
 426:lwIP/src/core/memp.c **** 
 673              		.loc 1 426 3 discriminator 1 view .LVU229
 426:lwIP/src/core/memp.c **** 
 674              		.loc 1 426 3 discriminator 1 view .LVU230
 675 0022 FEE7     		b	.L70
 676              	.LVL47:
 677              	.L79:
 678              	.LBB45:
 679              	.LBB43:
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 680              		.loc 1 364 3 view .LVU231
 681 0024 0348     		ldr	r0, .L80+8
 682              	.LVL48:
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
ARM GAS  /tmp/cckTVcmi.s 			page 24


 683              		.loc 1 364 3 is_stmt 0 view .LVU232
 684 0026 FFF7FEFF 		bl	printf
 685              	.LVL49:
 686              	.L73:
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 687              		.loc 1 364 3 is_stmt 1 view .LVU233
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 688              		.loc 1 364 3 view .LVU234
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 689              		.loc 1 364 3 view .LVU235
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 690              		.loc 1 364 3 view .LVU236
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 691              		.loc 1 364 3 view .LVU237
 364:lwIP/src/core/memp.c ****               ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
 692              		.loc 1 364 3 view .LVU238
 693 002a FEE7     		b	.L73
 694              	.L81:
 695              		.align	2
 696              	.L80:
 697 002c 00000000 		.word	.LANCHOR1
 698 0030 00000000 		.word	.LC4
 699 0034 00000000 		.word	.LC3
 700              	.LBE43:
 701              	.LBE45:
 702              		.cfi_endproc
 703              	.LFE112:
 705              		.global	memp_pools
 706              		.global	memp_PBUF_POOL
 707              		.comm	memp_memory_PBUF_POOL_base,6163,4
 708              		.global	memp_PBUF
 709              		.comm	memp_memory_PBUF_base,163,4
 710              		.global	memp_SYS_TIMEOUT
 711              		.comm	memp_memory_SYS_TIMEOUT_base,163,4
 712              		.global	memp_FRAG_PBUF
 713              		.comm	memp_memory_FRAG_PBUF_base,363,4
 714              		.global	memp_REASSDATA
 715              		.comm	memp_memory_REASSDATA_base,163,4
 716              		.global	memp_TCP_SEG
 717              		.comm	memp_memory_TCP_SEG_base,131,4
 718              		.global	memp_TCP_PCB_LISTEN
 719              		.comm	memp_memory_TCP_PCB_LISTEN_base,115,4
 720              		.global	memp_TCP_PCB
 721              		.comm	memp_memory_TCP_PCB_base,611,4
 722              		.global	memp_UDP_PCB
 723              		.comm	memp_memory_UDP_PCB_base,195,4
 724              		.section	.bss.memp_tab_FRAG_PBUF,"aw",%nobits
 725              		.align	2
 728              	memp_tab_FRAG_PBUF:
 729 0000 00000000 		.space	4
 730              		.section	.bss.memp_tab_PBUF,"aw",%nobits
 731              		.align	2
 734              	memp_tab_PBUF:
 735 0000 00000000 		.space	4
 736              		.section	.bss.memp_tab_PBUF_POOL,"aw",%nobits
 737              		.align	2
 740              	memp_tab_PBUF_POOL:
ARM GAS  /tmp/cckTVcmi.s 			page 25


 741 0000 00000000 		.space	4
 742              		.section	.bss.memp_tab_REASSDATA,"aw",%nobits
 743              		.align	2
 746              	memp_tab_REASSDATA:
 747 0000 00000000 		.space	4
 748              		.section	.bss.memp_tab_SYS_TIMEOUT,"aw",%nobits
 749              		.align	2
 752              	memp_tab_SYS_TIMEOUT:
 753 0000 00000000 		.space	4
 754              		.section	.bss.memp_tab_TCP_PCB,"aw",%nobits
 755              		.align	2
 758              	memp_tab_TCP_PCB:
 759 0000 00000000 		.space	4
 760              		.section	.bss.memp_tab_TCP_PCB_LISTEN,"aw",%nobits
 761              		.align	2
 764              	memp_tab_TCP_PCB_LISTEN:
 765 0000 00000000 		.space	4
 766              		.section	.bss.memp_tab_TCP_SEG,"aw",%nobits
 767              		.align	2
 770              	memp_tab_TCP_SEG:
 771 0000 00000000 		.space	4
 772              		.section	.bss.memp_tab_UDP_PCB,"aw",%nobits
 773              		.align	2
 774              		.set	.LANCHOR0,. + 0
 777              	memp_tab_UDP_PCB:
 778 0000 00000000 		.space	4
 779              		.section	.rodata.memp_FRAG_PBUF,"a"
 780              		.align	2
 783              	memp_FRAG_PBUF:
 784 0000 1800     		.short	24
 785 0002 0F00     		.short	15
 786 0004 00000000 		.word	memp_memory_FRAG_PBUF_base
 787 0008 00000000 		.word	memp_tab_FRAG_PBUF
 788              		.section	.rodata.memp_PBUF,"a"
 789              		.align	2
 792              	memp_PBUF:
 793 0000 1000     		.short	16
 794 0002 0A00     		.short	10
 795 0004 00000000 		.word	memp_memory_PBUF_base
 796 0008 00000000 		.word	memp_tab_PBUF
 797              		.section	.rodata.memp_PBUF_POOL,"a"
 798              		.align	2
 801              	memp_PBUF_POOL:
 802 0000 0406     		.short	1540
 803 0002 0400     		.short	4
 804 0004 00000000 		.word	memp_memory_PBUF_POOL_base
 805 0008 00000000 		.word	memp_tab_PBUF_POOL
 806              		.section	.rodata.memp_REASSDATA,"a"
 807              		.align	2
 810              	memp_REASSDATA:
 811 0000 2000     		.short	32
 812 0002 0500     		.short	5
 813 0004 00000000 		.word	memp_memory_REASSDATA_base
 814 0008 00000000 		.word	memp_tab_REASSDATA
 815              		.section	.rodata.memp_SYS_TIMEOUT,"a"
 816              		.align	2
 819              	memp_SYS_TIMEOUT:
ARM GAS  /tmp/cckTVcmi.s 			page 26


 820 0000 1000     		.short	16
 821 0002 0A00     		.short	10
 822 0004 00000000 		.word	memp_memory_SYS_TIMEOUT_base
 823 0008 00000000 		.word	memp_tab_SYS_TIMEOUT
 824              		.section	.rodata.memp_TCP_PCB,"a"
 825              		.align	2
 828              	memp_TCP_PCB:
 829 0000 9800     		.short	152
 830 0002 0400     		.short	4
 831 0004 00000000 		.word	memp_memory_TCP_PCB_base
 832 0008 00000000 		.word	memp_tab_TCP_PCB
 833              		.section	.rodata.memp_TCP_PCB_LISTEN,"a"
 834              		.align	2
 837              	memp_TCP_PCB_LISTEN:
 838 0000 1C00     		.short	28
 839 0002 0400     		.short	4
 840 0004 00000000 		.word	memp_memory_TCP_PCB_LISTEN_base
 841 0008 00000000 		.word	memp_tab_TCP_PCB_LISTEN
 842              		.section	.rodata.memp_TCP_SEG,"a"
 843              		.align	2
 846              	memp_TCP_SEG:
 847 0000 1000     		.short	16
 848 0002 0800     		.short	8
 849 0004 00000000 		.word	memp_memory_TCP_SEG_base
 850 0008 00000000 		.word	memp_tab_TCP_SEG
 851              		.section	.rodata.memp_UDP_PCB,"a"
 852              		.align	2
 855              	memp_UDP_PCB:
 856 0000 2000     		.short	32
 857 0002 0600     		.short	6
 858 0004 00000000 		.word	memp_memory_UDP_PCB_base
 859 0008 00000000 		.word	memp_tab_UDP_PCB
 860              		.section	.rodata.memp_pools,"a"
 861              		.align	2
 862              		.set	.LANCHOR1,. + 0
 865              	memp_pools:
 866 0000 00000000 		.word	memp_UDP_PCB
 867 0004 00000000 		.word	memp_TCP_PCB
 868 0008 00000000 		.word	memp_TCP_PCB_LISTEN
 869 000c 00000000 		.word	memp_TCP_SEG
 870 0010 00000000 		.word	memp_REASSDATA
 871 0014 00000000 		.word	memp_FRAG_PBUF
 872 0018 00000000 		.word	memp_SYS_TIMEOUT
 873 001c 00000000 		.word	memp_PBUF
 874 0020 00000000 		.word	memp_PBUF_POOL
 875              		.text
 876              	.Letext0:
 877              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 878              		.file 3 "/usr/arm-none-eabi/include/sys/lock.h"
 879              		.file 4 "/usr/arm-none-eabi/include/sys/_types.h"
 880              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 881              		.file 6 "/usr/arm-none-eabi/include/sys/reent.h"
 882              		.file 7 "/usr/arm-none-eabi/include/stdlib.h"
 883              		.file 8 "/usr/arm-none-eabi/include/sys/_stdint.h"
 884              		.file 9 "lwIP/src/include/lwip/arch.h"
 885              		.file 10 "/usr/arm-none-eabi/include/ctype.h"
 886              		.file 11 "lwIP/src/include/lwip/memp.h"
ARM GAS  /tmp/cckTVcmi.s 			page 27


 887              		.file 12 "lwIP/src/include/lwip/priv/memp_priv.h"
 888              		.file 13 "lwIP/src/include/lwip/err.h"
 889              		.file 14 "lwIP/src/include/lwip/pbuf.h"
 890              		.file 15 "lwIP/src/include/lwip/ip4_addr.h"
 891              		.file 16 "lwIP/src/include/lwip/ip_addr.h"
 892              		.file 17 "lwIP/src/include/lwip/netif.h"
 893              		.file 18 "lwIP/src/include/lwip/prot/ip4.h"
 894              		.file 19 "lwIP/src/include/lwip/ip.h"
 895              		.file 20 "lwIP/src/include/lwip/udp.h"
 896              		.file 21 "lwIP/src/include/lwip/tcpbase.h"
 897              		.file 22 "lwIP/src/include/lwip/tcp.h"
 898              		.file 23 "lwIP/src/include/lwip/priv/tcp_priv.h"
 899              		.file 24 "lwIP/src/include/lwip/prot/tcp.h"
 900              		.file 25 "lwIP/src/include/lwip/timeouts.h"
 901              		.file 26 "lwIP/src/include/lwip/dns.h"
 902              		.file 27 "lwIP/src/include/lwip/priv/memp_std.h"
 903              		.file 28 "/usr/arm-none-eabi/include/stdio.h"
ARM GAS  /tmp/cckTVcmi.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 memp.c
     /tmp/cckTVcmi.s:18     .text.memp_init_pool:0000000000000000 $t
     /tmp/cckTVcmi.s:27     .text.memp_init_pool:0000000000000000 memp_init_pool
     /tmp/cckTVcmi.s:105    .text.memp_init:0000000000000000 $t
     /tmp/cckTVcmi.s:113    .text.memp_init:0000000000000000 memp_init
     /tmp/cckTVcmi.s:223    .text.memp_init:0000000000000048 $d
                            *COM*:00000000000000c3 memp_memory_UDP_PCB_base
     /tmp/cckTVcmi.s:230    .rodata.memp_malloc_pool.str1.4:0000000000000000 $d
     /tmp/cckTVcmi.s:237    .text.memp_malloc_pool:0000000000000000 $t
     /tmp/cckTVcmi.s:245    .text.memp_malloc_pool:0000000000000000 memp_malloc_pool
     /tmp/cckTVcmi.s:335    .text.memp_malloc_pool:0000000000000024 $d
     /tmp/cckTVcmi.s:341    .rodata.memp_malloc.str1.4:0000000000000000 $d
     /tmp/cckTVcmi.s:345    .text.memp_malloc:0000000000000000 $t
     /tmp/cckTVcmi.s:353    .text.memp_malloc:0000000000000000 memp_malloc
     /tmp/cckTVcmi.s:447    .text.memp_malloc:000000000000002c $d
     /tmp/cckTVcmi.s:454    .rodata.memp_free_pool.str1.4:0000000000000000 $d
     /tmp/cckTVcmi.s:458    .text.memp_free_pool:0000000000000000 $t
     /tmp/cckTVcmi.s:466    .text.memp_free_pool:0000000000000000 memp_free_pool
     /tmp/cckTVcmi.s:569    .text.memp_free_pool:0000000000000028 $d
     /tmp/cckTVcmi.s:575    .rodata.memp_free.str1.4:0000000000000000 $d
     /tmp/cckTVcmi.s:579    .text.memp_free:0000000000000000 $t
     /tmp/cckTVcmi.s:587    .text.memp_free:0000000000000000 memp_free
     /tmp/cckTVcmi.s:697    .text.memp_free:000000000000002c $d
     /tmp/cckTVcmi.s:865    .rodata.memp_pools:0000000000000000 memp_pools
     /tmp/cckTVcmi.s:801    .rodata.memp_PBUF_POOL:0000000000000000 memp_PBUF_POOL
                            *COM*:0000000000001813 memp_memory_PBUF_POOL_base
     /tmp/cckTVcmi.s:792    .rodata.memp_PBUF:0000000000000000 memp_PBUF
                            *COM*:00000000000000a3 memp_memory_PBUF_base
     /tmp/cckTVcmi.s:819    .rodata.memp_SYS_TIMEOUT:0000000000000000 memp_SYS_TIMEOUT
                            *COM*:00000000000000a3 memp_memory_SYS_TIMEOUT_base
     /tmp/cckTVcmi.s:783    .rodata.memp_FRAG_PBUF:0000000000000000 memp_FRAG_PBUF
                            *COM*:000000000000016b memp_memory_FRAG_PBUF_base
     /tmp/cckTVcmi.s:810    .rodata.memp_REASSDATA:0000000000000000 memp_REASSDATA
                            *COM*:00000000000000a3 memp_memory_REASSDATA_base
     /tmp/cckTVcmi.s:846    .rodata.memp_TCP_SEG:0000000000000000 memp_TCP_SEG
                            *COM*:0000000000000083 memp_memory_TCP_SEG_base
     /tmp/cckTVcmi.s:837    .rodata.memp_TCP_PCB_LISTEN:0000000000000000 memp_TCP_PCB_LISTEN
                            *COM*:0000000000000073 memp_memory_TCP_PCB_LISTEN_base
     /tmp/cckTVcmi.s:828    .rodata.memp_TCP_PCB:0000000000000000 memp_TCP_PCB
                            *COM*:0000000000000263 memp_memory_TCP_PCB_base
     /tmp/cckTVcmi.s:855    .rodata.memp_UDP_PCB:0000000000000000 memp_UDP_PCB
     /tmp/cckTVcmi.s:725    .bss.memp_tab_FRAG_PBUF:0000000000000000 $d
     /tmp/cckTVcmi.s:728    .bss.memp_tab_FRAG_PBUF:0000000000000000 memp_tab_FRAG_PBUF
     /tmp/cckTVcmi.s:731    .bss.memp_tab_PBUF:0000000000000000 $d
     /tmp/cckTVcmi.s:734    .bss.memp_tab_PBUF:0000000000000000 memp_tab_PBUF
     /tmp/cckTVcmi.s:737    .bss.memp_tab_PBUF_POOL:0000000000000000 $d
     /tmp/cckTVcmi.s:740    .bss.memp_tab_PBUF_POOL:0000000000000000 memp_tab_PBUF_POOL
     /tmp/cckTVcmi.s:743    .bss.memp_tab_REASSDATA:0000000000000000 $d
     /tmp/cckTVcmi.s:746    .bss.memp_tab_REASSDATA:0000000000000000 memp_tab_REASSDATA
     /tmp/cckTVcmi.s:749    .bss.memp_tab_SYS_TIMEOUT:0000000000000000 $d
     /tmp/cckTVcmi.s:752    .bss.memp_tab_SYS_TIMEOUT:0000000000000000 memp_tab_SYS_TIMEOUT
     /tmp/cckTVcmi.s:755    .bss.memp_tab_TCP_PCB:0000000000000000 $d
     /tmp/cckTVcmi.s:758    .bss.memp_tab_TCP_PCB:0000000000000000 memp_tab_TCP_PCB
     /tmp/cckTVcmi.s:761    .bss.memp_tab_TCP_PCB_LISTEN:0000000000000000 $d
     /tmp/cckTVcmi.s:764    .bss.memp_tab_TCP_PCB_LISTEN:0000000000000000 memp_tab_TCP_PCB_LISTEN
     /tmp/cckTVcmi.s:767    .bss.memp_tab_TCP_SEG:0000000000000000 $d
ARM GAS  /tmp/cckTVcmi.s 			page 29


     /tmp/cckTVcmi.s:770    .bss.memp_tab_TCP_SEG:0000000000000000 memp_tab_TCP_SEG
     /tmp/cckTVcmi.s:773    .bss.memp_tab_UDP_PCB:0000000000000000 $d
     /tmp/cckTVcmi.s:777    .bss.memp_tab_UDP_PCB:0000000000000000 memp_tab_UDP_PCB
     /tmp/cckTVcmi.s:780    .rodata.memp_FRAG_PBUF:0000000000000000 $d
     /tmp/cckTVcmi.s:789    .rodata.memp_PBUF:0000000000000000 $d
     /tmp/cckTVcmi.s:798    .rodata.memp_PBUF_POOL:0000000000000000 $d
     /tmp/cckTVcmi.s:807    .rodata.memp_REASSDATA:0000000000000000 $d
     /tmp/cckTVcmi.s:816    .rodata.memp_SYS_TIMEOUT:0000000000000000 $d
     /tmp/cckTVcmi.s:825    .rodata.memp_TCP_PCB:0000000000000000 $d
     /tmp/cckTVcmi.s:834    .rodata.memp_TCP_PCB_LISTEN:0000000000000000 $d
     /tmp/cckTVcmi.s:843    .rodata.memp_TCP_SEG:0000000000000000 $d
     /tmp/cckTVcmi.s:852    .rodata.memp_UDP_PCB:0000000000000000 $d
     /tmp/cckTVcmi.s:861    .rodata.memp_pools:0000000000000000 $d

UNDEFINED SYMBOLS
printf
