ARM GAS  /tmp/ccYLVUts.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"syscalls.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.initialise_monitor_handles,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	initialise_monitor_handles
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	initialise_monitor_handles:
  28              	.LFB166:
  29              		.file 1 "Core/arch/syscalls.c"
   1:Core/arch/syscalls.c **** /*
   2:Core/arch/syscalls.c **** ******************************************************************************
   3:Core/arch/syscalls.c **** File:     syscalls.c
   4:Core/arch/syscalls.c **** Info:     Generated by Atollic TrueSTUDIO(R) 9.0.0   2018-02-24
   5:Core/arch/syscalls.c **** 
   6:Core/arch/syscalls.c **** The MIT License (MIT)
   7:Core/arch/syscalls.c **** Copyright (c) 2018 STMicroelectronics
   8:Core/arch/syscalls.c **** 
   9:Core/arch/syscalls.c **** Permission is hereby granted, free of charge, to any person obtaining a copy
  10:Core/arch/syscalls.c **** of this software and associated documentation files (the "Software"), to deal
  11:Core/arch/syscalls.c **** in the Software without restriction, including without limitation the rights
  12:Core/arch/syscalls.c **** to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  13:Core/arch/syscalls.c **** copies of the Software, and to permit persons to whom the Software is
  14:Core/arch/syscalls.c **** furnished to do so, subject to the following conditions:
  15:Core/arch/syscalls.c **** 
  16:Core/arch/syscalls.c **** The above copyright notice and this permission notice shall be included in all
  17:Core/arch/syscalls.c **** copies or substantial portions of the Software.
  18:Core/arch/syscalls.c **** 
  19:Core/arch/syscalls.c **** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  20:Core/arch/syscalls.c **** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  21:Core/arch/syscalls.c **** FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  22:Core/arch/syscalls.c **** AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  23:Core/arch/syscalls.c **** LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  24:Core/arch/syscalls.c **** OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  25:Core/arch/syscalls.c **** SOFTWARE.
  26:Core/arch/syscalls.c **** 
  27:Core/arch/syscalls.c **** ******************************************************************************
  28:Core/arch/syscalls.c **** */
  29:Core/arch/syscalls.c **** 
ARM GAS  /tmp/ccYLVUts.s 			page 2


  30:Core/arch/syscalls.c **** /* Includes */
  31:Core/arch/syscalls.c **** #include <stdint.h>
  32:Core/arch/syscalls.c **** #include <sys/stat.h>
  33:Core/arch/syscalls.c **** #include <stdlib.h>
  34:Core/arch/syscalls.c **** #include <errno.h>
  35:Core/arch/syscalls.c **** #include <stdio.h>
  36:Core/arch/syscalls.c **** #include <signal.h>
  37:Core/arch/syscalls.c **** #include <time.h>
  38:Core/arch/syscalls.c **** #include <sys/time.h>
  39:Core/arch/syscalls.c **** #include <sys/times.h>
  40:Core/arch/syscalls.c **** 
  41:Core/arch/syscalls.c **** #include <xpd_config.h>
  42:Core/arch/syscalls.c **** #include <usbd_config.h>
  43:Core/arch/syscalls.c **** 
  44:Core/arch/syscalls.c **** /* Variables */
  45:Core/arch/syscalls.c **** #undef errno
  46:Core/arch/syscalls.c **** extern int32_t errno;
  47:Core/arch/syscalls.c **** 
  48:Core/arch/syscalls.c **** uint8_t *__env[1] = { 0 };
  49:Core/arch/syscalls.c **** uint8_t **environ = __env;
  50:Core/arch/syscalls.c **** 
  51:Core/arch/syscalls.c **** 
  52:Core/arch/syscalls.c **** /* Functions */
  53:Core/arch/syscalls.c **** void initialise_monitor_handles()
  54:Core/arch/syscalls.c **** {
  30              		.loc 1 54 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  55:Core/arch/syscalls.c **** }
  35              		.loc 1 55 1 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE166:
  40 0002 00BF     		.section	.text._getpid,"ax",%progbits
  41              		.align	1
  42              		.p2align 2,,3
  43              		.global	_getpid
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	_getpid:
  50              	.LFB167:
  56:Core/arch/syscalls.c **** 
  57:Core/arch/syscalls.c **** int _getpid(void)
  58:Core/arch/syscalls.c **** {
  51              		.loc 1 58 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  59:Core/arch/syscalls.c **** 	errno = ENOSYS;
  56              		.loc 1 59 2 view .LVU3
  57              		.loc 1 59 8 is_stmt 0 view .LVU4
  58 0000 024B     		ldr	r3, .L4
ARM GAS  /tmp/ccYLVUts.s 			page 3


  59 0002 5822     		movs	r2, #88
  60:Core/arch/syscalls.c **** 	return -1;
  61:Core/arch/syscalls.c **** }
  60              		.loc 1 61 1 view .LVU5
  61 0004 4FF0FF30 		mov	r0, #-1
  59:Core/arch/syscalls.c **** 	errno = ENOSYS;
  62              		.loc 1 59 8 view .LVU6
  63 0008 1A60     		str	r2, [r3]
  60:Core/arch/syscalls.c **** 	return -1;
  64              		.loc 1 60 2 is_stmt 1 view .LVU7
  65              		.loc 1 61 1 is_stmt 0 view .LVU8
  66 000a 7047     		bx	lr
  67              	.L5:
  68              		.align	2
  69              	.L4:
  70 000c 00000000 		.word	errno
  71              		.cfi_endproc
  72              	.LFE167:
  74              		.section	.text._gettimeofday,"ax",%progbits
  75              		.align	1
  76              		.p2align 2,,3
  77              		.global	_gettimeofday
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.fpu fpv4-sp-d16
  83              	_gettimeofday:
  84              	.LVL0:
  85              	.LFB168:
  62:Core/arch/syscalls.c **** 
  63:Core/arch/syscalls.c **** int _gettimeofday(struct timeval  *ptimeval, void *ptimezone)
  64:Core/arch/syscalls.c **** {
  86              		.loc 1 64 1 is_stmt 1 view -0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  65:Core/arch/syscalls.c ****   errno = ENOSYS;
  91              		.loc 1 65 3 view .LVU10
  92              		.loc 1 65 9 is_stmt 0 view .LVU11
  93 0000 024B     		ldr	r3, .L7
  94 0002 5822     		movs	r2, #88
  66:Core/arch/syscalls.c ****   return -1;
  67:Core/arch/syscalls.c **** }
  95              		.loc 1 67 1 view .LVU12
  96 0004 4FF0FF30 		mov	r0, #-1
  97              	.LVL1:
  65:Core/arch/syscalls.c ****   errno = ENOSYS;
  98              		.loc 1 65 9 view .LVU13
  99 0008 1A60     		str	r2, [r3]
  66:Core/arch/syscalls.c ****   return -1;
 100              		.loc 1 66 3 is_stmt 1 view .LVU14
 101              		.loc 1 67 1 is_stmt 0 view .LVU15
 102 000a 7047     		bx	lr
 103              	.L8:
 104              		.align	2
 105              	.L7:
ARM GAS  /tmp/ccYLVUts.s 			page 4


 106 000c 00000000 		.word	errno
 107              		.cfi_endproc
 108              	.LFE168:
 110              		.section	.text._kill,"ax",%progbits
 111              		.align	1
 112              		.p2align 2,,3
 113              		.global	_kill
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	_kill:
 120              	.LVL2:
 121              	.LFB169:
  68:Core/arch/syscalls.c **** 
  69:Core/arch/syscalls.c **** int _kill(int32_t pid, int32_t sig)
  70:Core/arch/syscalls.c **** {
 122              		.loc 1 70 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
  71:Core/arch/syscalls.c **** 	errno = ENOSYS;
 127              		.loc 1 71 2 view .LVU17
 128              		.loc 1 71 8 is_stmt 0 view .LVU18
 129 0000 024B     		ldr	r3, .L10
 130 0002 5822     		movs	r2, #88
  72:Core/arch/syscalls.c **** 	return -1;
  73:Core/arch/syscalls.c **** }
 131              		.loc 1 73 1 view .LVU19
 132 0004 4FF0FF30 		mov	r0, #-1
 133              	.LVL3:
  71:Core/arch/syscalls.c **** 	errno = ENOSYS;
 134              		.loc 1 71 8 view .LVU20
 135 0008 1A60     		str	r2, [r3]
  72:Core/arch/syscalls.c **** 	return -1;
 136              		.loc 1 72 2 is_stmt 1 view .LVU21
 137              		.loc 1 73 1 is_stmt 0 view .LVU22
 138 000a 7047     		bx	lr
 139              	.L11:
 140              		.align	2
 141              	.L10:
 142 000c 00000000 		.word	errno
 143              		.cfi_endproc
 144              	.LFE169:
 146              		.section	.text._exit,"ax",%progbits
 147              		.align	1
 148              		.p2align 2,,3
 149              		.global	_exit
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 153              		.fpu fpv4-sp-d16
 155              	_exit:
 156              	.LFB170:
  74:Core/arch/syscalls.c **** 
  75:Core/arch/syscalls.c **** void _exit(int32_t status)
ARM GAS  /tmp/ccYLVUts.s 			page 5


  76:Core/arch/syscalls.c **** {
 157              		.loc 1 76 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ Volatile: function does not return.
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163              	.LVL4:
 164              	.L13:
  77:Core/arch/syscalls.c **** 	while (1) {}		/* Make sure we hang here */
 165              		.loc 1 77 2 discriminator 1 view .LVU24
 166              		.loc 1 77 13 discriminator 1 view .LVU25
 167              		.loc 1 77 8 discriminator 1 view .LVU26
 168 0000 FEE7     		b	.L13
 169              		.cfi_endproc
 170              	.LFE170:
 172 0002 00BF     		.section	.text._write,"ax",%progbits
 173              		.align	1
 174              		.p2align 2,,3
 175              		.global	_write
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu fpv4-sp-d16
 181              	_write:
 182              	.LVL5:
 183              	.LFB171:
  78:Core/arch/syscalls.c **** }
  79:Core/arch/syscalls.c **** 
  80:Core/arch/syscalls.c **** #if !defined(STDOUT_BUFFER_SIZE) || (STDOUT_BUFFER_SIZE == 0)
  81:Core/arch/syscalls.c **** int _write(int32_t file, uint8_t *ptr, int32_t len)
  82:Core/arch/syscalls.c **** {
 184              		.loc 1 82 1 view -0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
  83:Core/arch/syscalls.c ****     int l = len;
 189              		.loc 1 83 5 view .LVU28
  84:Core/arch/syscalls.c **** 
  85:Core/arch/syscalls.c ****     while (l--)
 190              		.loc 1 85 5 view .LVU29
 191              		.loc 1 85 11 view .LVU30
 192              		.loc 1 85 11 is_stmt 0 view .LVU31
 193 0000 D2B1     		cbz	r2, .L33
 194              	.LBB8:
 195              	.LBB9:
 196              		.file 2 "STM32_XPD/CMSIS/Include/core_cm7.h"
   1:STM32_XPD/CMSIS/Include/core_cm7.h **** /**************************************************************************//**
   2:STM32_XPD/CMSIS/Include/core_cm7.h ****  * @file     core_cm7.h
   3:STM32_XPD/CMSIS/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:STM32_XPD/CMSIS/Include/core_cm7.h ****  * @version  V5.0.8
   5:STM32_XPD/CMSIS/Include/core_cm7.h ****  * @date     04. June 2018
   6:STM32_XPD/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
   7:STM32_XPD/CMSIS/Include/core_cm7.h **** /*
   8:STM32_XPD/CMSIS/Include/core_cm7.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:STM32_XPD/CMSIS/Include/core_cm7.h ****  *
ARM GAS  /tmp/ccYLVUts.s 			page 6


  10:STM32_XPD/CMSIS/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:STM32_XPD/CMSIS/Include/core_cm7.h ****  *
  12:STM32_XPD/CMSIS/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:STM32_XPD/CMSIS/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:STM32_XPD/CMSIS/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:STM32_XPD/CMSIS/Include/core_cm7.h ****  *
  16:STM32_XPD/CMSIS/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:STM32_XPD/CMSIS/Include/core_cm7.h ****  *
  18:STM32_XPD/CMSIS/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:STM32_XPD/CMSIS/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:STM32_XPD/CMSIS/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:STM32_XPD/CMSIS/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:STM32_XPD/CMSIS/Include/core_cm7.h ****  * limitations under the License.
  23:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
  24:STM32_XPD/CMSIS/Include/core_cm7.h **** 
  25:STM32_XPD/CMSIS/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:STM32_XPD/CMSIS/Include/core_cm7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:STM32_XPD/CMSIS/Include/core_cm7.h **** #elif defined (__clang__)
  28:STM32_XPD/CMSIS/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  29:STM32_XPD/CMSIS/Include/core_cm7.h **** #endif
  30:STM32_XPD/CMSIS/Include/core_cm7.h **** 
  31:STM32_XPD/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:STM32_XPD/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  33:STM32_XPD/CMSIS/Include/core_cm7.h **** 
  34:STM32_XPD/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  35:STM32_XPD/CMSIS/Include/core_cm7.h **** 
  36:STM32_XPD/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  37:STM32_XPD/CMSIS/Include/core_cm7.h ****  extern "C" {
  38:STM32_XPD/CMSIS/Include/core_cm7.h **** #endif
  39:STM32_XPD/CMSIS/Include/core_cm7.h **** 
  40:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
  41:STM32_XPD/CMSIS/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:STM32_XPD/CMSIS/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:STM32_XPD/CMSIS/Include/core_cm7.h **** 
  44:STM32_XPD/CMSIS/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:STM32_XPD/CMSIS/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:STM32_XPD/CMSIS/Include/core_cm7.h **** 
  47:STM32_XPD/CMSIS/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:STM32_XPD/CMSIS/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:STM32_XPD/CMSIS/Include/core_cm7.h **** 
  50:STM32_XPD/CMSIS/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:STM32_XPD/CMSIS/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
  53:STM32_XPD/CMSIS/Include/core_cm7.h **** 
  54:STM32_XPD/CMSIS/Include/core_cm7.h **** 
  55:STM32_XPD/CMSIS/Include/core_cm7.h **** /*******************************************************************************
  56:STM32_XPD/CMSIS/Include/core_cm7.h ****  *                 CMSIS definitions
  57:STM32_XPD/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
  58:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
  59:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
  61:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
  62:STM32_XPD/CMSIS/Include/core_cm7.h **** 
  63:STM32_XPD/CMSIS/Include/core_cm7.h **** #include "cmsis_version.h"
  64:STM32_XPD/CMSIS/Include/core_cm7.h **** 
  65:STM32_XPD/CMSIS/Include/core_cm7.h **** /* CMSIS CM7 definitions */
  66:STM32_XPD/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [31:1
ARM GAS  /tmp/ccYLVUts.s 			page 7


  67:STM32_XPD/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( __CM_CMSIS_VERSION_SUB)                  /*!< \deprecated [15:0
  68:STM32_XPD/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  69:STM32_XPD/CMSIS/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< \deprecated CMSIS
  70:STM32_XPD/CMSIS/Include/core_cm7.h **** 
  71:STM32_XPD/CMSIS/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  72:STM32_XPD/CMSIS/Include/core_cm7.h **** 
  73:STM32_XPD/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:STM32_XPD/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:STM32_XPD/CMSIS/Include/core_cm7.h **** */
  76:STM32_XPD/CMSIS/Include/core_cm7.h **** #if defined ( __CC_ARM )
  77:STM32_XPD/CMSIS/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  78:STM32_XPD/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:STM32_XPD/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  80:STM32_XPD/CMSIS/Include/core_cm7.h ****     #else
  81:STM32_XPD/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:STM32_XPD/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  83:STM32_XPD/CMSIS/Include/core_cm7.h ****     #endif
  84:STM32_XPD/CMSIS/Include/core_cm7.h ****   #else
  85:STM32_XPD/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  86:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
  87:STM32_XPD/CMSIS/Include/core_cm7.h **** 
  88:STM32_XPD/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:STM32_XPD/CMSIS/Include/core_cm7.h ****   #if defined __ARM_PCS_VFP
  90:STM32_XPD/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:STM32_XPD/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  92:STM32_XPD/CMSIS/Include/core_cm7.h ****     #else
  93:STM32_XPD/CMSIS/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:STM32_XPD/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  95:STM32_XPD/CMSIS/Include/core_cm7.h ****     #endif
  96:STM32_XPD/CMSIS/Include/core_cm7.h ****   #else
  97:STM32_XPD/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  98:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
  99:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 100:STM32_XPD/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
 101:STM32_XPD/CMSIS/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:STM32_XPD/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:STM32_XPD/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 104:STM32_XPD/CMSIS/Include/core_cm7.h ****     #else
 105:STM32_XPD/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:STM32_XPD/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 107:STM32_XPD/CMSIS/Include/core_cm7.h ****     #endif
 108:STM32_XPD/CMSIS/Include/core_cm7.h ****   #else
 109:STM32_XPD/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 110:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
 111:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 112:STM32_XPD/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 113:STM32_XPD/CMSIS/Include/core_cm7.h ****   #if defined __ARMVFP__
 114:STM32_XPD/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:STM32_XPD/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 116:STM32_XPD/CMSIS/Include/core_cm7.h ****     #else
 117:STM32_XPD/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:STM32_XPD/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 119:STM32_XPD/CMSIS/Include/core_cm7.h ****     #endif
 120:STM32_XPD/CMSIS/Include/core_cm7.h ****   #else
 121:STM32_XPD/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 122:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
 123:STM32_XPD/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccYLVUts.s 			page 8


 124:STM32_XPD/CMSIS/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 125:STM32_XPD/CMSIS/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 126:STM32_XPD/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:STM32_XPD/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 128:STM32_XPD/CMSIS/Include/core_cm7.h ****     #else
 129:STM32_XPD/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:STM32_XPD/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 131:STM32_XPD/CMSIS/Include/core_cm7.h ****     #endif
 132:STM32_XPD/CMSIS/Include/core_cm7.h ****   #else
 133:STM32_XPD/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 134:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
 135:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 136:STM32_XPD/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 137:STM32_XPD/CMSIS/Include/core_cm7.h ****   #if defined __FPU_VFP__
 138:STM32_XPD/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:STM32_XPD/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 140:STM32_XPD/CMSIS/Include/core_cm7.h ****     #else
 141:STM32_XPD/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:STM32_XPD/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 143:STM32_XPD/CMSIS/Include/core_cm7.h ****     #endif
 144:STM32_XPD/CMSIS/Include/core_cm7.h ****   #else
 145:STM32_XPD/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 146:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
 147:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 148:STM32_XPD/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 149:STM32_XPD/CMSIS/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 150:STM32_XPD/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:STM32_XPD/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 152:STM32_XPD/CMSIS/Include/core_cm7.h ****     #else
 153:STM32_XPD/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:STM32_XPD/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 155:STM32_XPD/CMSIS/Include/core_cm7.h ****     #endif
 156:STM32_XPD/CMSIS/Include/core_cm7.h ****   #else
 157:STM32_XPD/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 158:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
 159:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 160:STM32_XPD/CMSIS/Include/core_cm7.h **** #endif
 161:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 162:STM32_XPD/CMSIS/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 164:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 165:STM32_XPD/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 166:STM32_XPD/CMSIS/Include/core_cm7.h **** }
 167:STM32_XPD/CMSIS/Include/core_cm7.h **** #endif
 168:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 169:STM32_XPD/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 170:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 171:STM32_XPD/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 172:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 173:STM32_XPD/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 174:STM32_XPD/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 175:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 176:STM32_XPD/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 177:STM32_XPD/CMSIS/Include/core_cm7.h ****  extern "C" {
 178:STM32_XPD/CMSIS/Include/core_cm7.h **** #endif
 179:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 180:STM32_XPD/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
ARM GAS  /tmp/ccYLVUts.s 			page 9


 181:STM32_XPD/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 182:STM32_XPD/CMSIS/Include/core_cm7.h ****   #ifndef __CM7_REV
 183:STM32_XPD/CMSIS/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 184:STM32_XPD/CMSIS/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 185:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
 186:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 187:STM32_XPD/CMSIS/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 188:STM32_XPD/CMSIS/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 189:STM32_XPD/CMSIS/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
 191:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 192:STM32_XPD/CMSIS/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 193:STM32_XPD/CMSIS/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 194:STM32_XPD/CMSIS/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
 196:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 197:STM32_XPD/CMSIS/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 198:STM32_XPD/CMSIS/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 199:STM32_XPD/CMSIS/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 200:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
 201:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 202:STM32_XPD/CMSIS/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 203:STM32_XPD/CMSIS/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 204:STM32_XPD/CMSIS/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 205:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
 206:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 207:STM32_XPD/CMSIS/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 208:STM32_XPD/CMSIS/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 209:STM32_XPD/CMSIS/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 210:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
 211:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 212:STM32_XPD/CMSIS/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 213:STM32_XPD/CMSIS/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 214:STM32_XPD/CMSIS/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 215:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
 216:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 217:STM32_XPD/CMSIS/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 218:STM32_XPD/CMSIS/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 219:STM32_XPD/CMSIS/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 220:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
 221:STM32_XPD/CMSIS/Include/core_cm7.h **** #endif
 222:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 223:STM32_XPD/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 224:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
 225:STM32_XPD/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 226:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 227:STM32_XPD/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 228:STM32_XPD/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 229:STM32_XPD/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 230:STM32_XPD/CMSIS/Include/core_cm7.h **** */
 231:STM32_XPD/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 232:STM32_XPD/CMSIS/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 233:STM32_XPD/CMSIS/Include/core_cm7.h **** #else
 234:STM32_XPD/CMSIS/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 235:STM32_XPD/CMSIS/Include/core_cm7.h **** #endif
 236:STM32_XPD/CMSIS/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 237:STM32_XPD/CMSIS/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
ARM GAS  /tmp/ccYLVUts.s 			page 10


 238:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 239:STM32_XPD/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 240:STM32_XPD/CMSIS/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 241:STM32_XPD/CMSIS/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 242:STM32_XPD/CMSIS/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 243:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 244:STM32_XPD/CMSIS/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 245:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 246:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 247:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 248:STM32_XPD/CMSIS/Include/core_cm7.h **** /*******************************************************************************
 249:STM32_XPD/CMSIS/Include/core_cm7.h ****  *                 Register Abstraction
 250:STM32_XPD/CMSIS/Include/core_cm7.h ****   Core Register contain:
 251:STM32_XPD/CMSIS/Include/core_cm7.h ****   - Core Register
 252:STM32_XPD/CMSIS/Include/core_cm7.h ****   - Core NVIC Register
 253:STM32_XPD/CMSIS/Include/core_cm7.h ****   - Core SCB Register
 254:STM32_XPD/CMSIS/Include/core_cm7.h ****   - Core SysTick Register
 255:STM32_XPD/CMSIS/Include/core_cm7.h ****   - Core Debug Register
 256:STM32_XPD/CMSIS/Include/core_cm7.h ****   - Core MPU Register
 257:STM32_XPD/CMSIS/Include/core_cm7.h ****   - Core FPU Register
 258:STM32_XPD/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
 259:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
 260:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 261:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 262:STM32_XPD/CMSIS/Include/core_cm7.h **** */
 263:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 264:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
 265:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 266:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 267:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief      Core Register type definitions.
 268:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
 269:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
 270:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 271:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
 272:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 273:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
 274:STM32_XPD/CMSIS/Include/core_cm7.h **** typedef union
 275:STM32_XPD/CMSIS/Include/core_cm7.h **** {
 276:STM32_XPD/CMSIS/Include/core_cm7.h ****   struct
 277:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
 278:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 279:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 280:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 281:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 282:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 283:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 284:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 285:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 286:STM32_XPD/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 287:STM32_XPD/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 288:STM32_XPD/CMSIS/Include/core_cm7.h **** } APSR_Type;
 289:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 290:STM32_XPD/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 291:STM32_XPD/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 292:STM32_XPD/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 293:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 294:STM32_XPD/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
ARM GAS  /tmp/ccYLVUts.s 			page 11


 295:STM32_XPD/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 296:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 297:STM32_XPD/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 298:STM32_XPD/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 299:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 300:STM32_XPD/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 301:STM32_XPD/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 302:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 303:STM32_XPD/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 304:STM32_XPD/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 305:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 306:STM32_XPD/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 307:STM32_XPD/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 308:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 309:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 310:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
 311:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 312:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
 313:STM32_XPD/CMSIS/Include/core_cm7.h **** typedef union
 314:STM32_XPD/CMSIS/Include/core_cm7.h **** {
 315:STM32_XPD/CMSIS/Include/core_cm7.h ****   struct
 316:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
 317:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 318:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 319:STM32_XPD/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 320:STM32_XPD/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:STM32_XPD/CMSIS/Include/core_cm7.h **** } IPSR_Type;
 322:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 323:STM32_XPD/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 324:STM32_XPD/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 325:STM32_XPD/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 326:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 327:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 328:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
 329:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 330:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
 331:STM32_XPD/CMSIS/Include/core_cm7.h **** typedef union
 332:STM32_XPD/CMSIS/Include/core_cm7.h **** {
 333:STM32_XPD/CMSIS/Include/core_cm7.h ****   struct
 334:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
 335:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 336:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 337:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 338:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 339:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 340:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 341:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 342:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 343:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 344:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 345:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 346:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 347:STM32_XPD/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 348:STM32_XPD/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 349:STM32_XPD/CMSIS/Include/core_cm7.h **** } xPSR_Type;
 350:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 351:STM32_XPD/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
ARM GAS  /tmp/ccYLVUts.s 			page 12


 352:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 353:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 354:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 355:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 356:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 357:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 358:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 359:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 360:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 361:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 362:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 363:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 364:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 365:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 366:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 367:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 368:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 369:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 370:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 371:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 372:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 373:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 374:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 375:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 376:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 377:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 378:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 379:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 380:STM32_XPD/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 381:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 382:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 383:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
 384:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 385:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
 386:STM32_XPD/CMSIS/Include/core_cm7.h **** typedef union
 387:STM32_XPD/CMSIS/Include/core_cm7.h **** {
 388:STM32_XPD/CMSIS/Include/core_cm7.h ****   struct
 389:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
 390:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 391:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 392:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 393:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 394:STM32_XPD/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 395:STM32_XPD/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 396:STM32_XPD/CMSIS/Include/core_cm7.h **** } CONTROL_Type;
 397:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 398:STM32_XPD/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 399:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 400:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 401:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 402:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 403:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 404:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 405:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 406:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 407:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 408:STM32_XPD/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
ARM GAS  /tmp/ccYLVUts.s 			page 13


 409:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 410:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 411:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
 412:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 413:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 414:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 415:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
 416:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
 417:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 418:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
 419:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 420:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
 421:STM32_XPD/CMSIS/Include/core_cm7.h **** typedef struct
 422:STM32_XPD/CMSIS/Include/core_cm7.h **** {
 423:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 424:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 425:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 426:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RSERVED1[24U];
 427:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 428:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 429:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 430:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 431:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 432:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 433:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 434:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 435:STM32_XPD/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 436:STM32_XPD/CMSIS/Include/core_cm7.h **** }  NVIC_Type;
 437:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 438:STM32_XPD/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 439:STM32_XPD/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 440:STM32_XPD/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 441:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 442:STM32_XPD/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 443:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 444:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 445:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
 446:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 447:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 448:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 449:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
 450:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
 451:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 452:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
 453:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 454:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
 455:STM32_XPD/CMSIS/Include/core_cm7.h **** typedef struct
 456:STM32_XPD/CMSIS/Include/core_cm7.h **** {
 457:STM32_XPD/CMSIS/Include/core_cm7.h ****   union {
 458:STM32_XPD/CMSIS/Include/core_cm7.h ****     struct {
 459:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IM uint32_t REVISION : 4;
 460:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IM uint32_t PARTNO : 12;
 461:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IM uint32_t ARCHITECTURE : 4;
 462:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IM uint32_t VARIANT : 4;
 463:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IM uint32_t IMPLEMENTER : 8;
 464:STM32_XPD/CMSIS/Include/core_cm7.h ****     } b;
 465:STM32_XPD/CMSIS/Include/core_cm7.h ****     __IM uint32_t w;
ARM GAS  /tmp/ccYLVUts.s 			page 14


 466:STM32_XPD/CMSIS/Include/core_cm7.h ****   } CPUID;
 467:STM32_XPD/CMSIS/Include/core_cm7.h ****   union {
 468:STM32_XPD/CMSIS/Include/core_cm7.h ****     struct {
 469:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t VECTACTIVE : 9;
 470:STM32_XPD/CMSIS/Include/core_cm7.h ****             uint32_t __RESERVED0 : 2;
 471:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t RETTOBASE : 1;
 472:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t VECTPENDING : 9;
 473:STM32_XPD/CMSIS/Include/core_cm7.h ****             uint32_t __RESERVED1 : 1;
 474:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t ISRPENDING : 1;
 475:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t ISRPREEMPT : 1;
 476:STM32_XPD/CMSIS/Include/core_cm7.h ****             uint32_t __RESERVED2 : 1;
 477:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t PENDSTCLR : 1;
 478:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t PENDSTSET : 1;
 479:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t PENDSVCLR : 1;
 480:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t PENDSVSET : 1;
 481:STM32_XPD/CMSIS/Include/core_cm7.h ****             uint32_t __RESERVED3 : 2;
 482:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t NMIPENDSET : 1;
 483:STM32_XPD/CMSIS/Include/core_cm7.h ****     } b;
 484:STM32_XPD/CMSIS/Include/core_cm7.h ****     __IOM uint32_t w;
 485:STM32_XPD/CMSIS/Include/core_cm7.h ****   } ICSR;
 486:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VTOR;
 487:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AIRCR;
 488:STM32_XPD/CMSIS/Include/core_cm7.h ****   union {
 489:STM32_XPD/CMSIS/Include/core_cm7.h ****     struct {
 490:STM32_XPD/CMSIS/Include/core_cm7.h ****               uint32_t __RESERVED0 : 1;
 491:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t SLEEPONEXIT : 1;
 492:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t SLEEPDEEP : 1;
 493:STM32_XPD/CMSIS/Include/core_cm7.h ****               uint32_t __RESERVED1 : 1;
 494:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t SEVONPEND : 1;
 495:STM32_XPD/CMSIS/Include/core_cm7.h ****               uint32_t __RESERVED2 : 27;
 496:STM32_XPD/CMSIS/Include/core_cm7.h ****     } b;
 497:STM32_XPD/CMSIS/Include/core_cm7.h ****     __IOM uint32_t w;
 498:STM32_XPD/CMSIS/Include/core_cm7.h ****   } SCR;
 499:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CCR;
 500:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 501:STM32_XPD/CMSIS/Include/core_cm7.h ****   union {
 502:STM32_XPD/CMSIS/Include/core_cm7.h ****     struct {
 503:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t MEMFAULTACT : 1;
 504:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t BUSFAULTACT : 1;
 505:STM32_XPD/CMSIS/Include/core_cm7.h ****               uint32_t __RESERVED0 : 1;
 506:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t USGFAULTACT : 1;
 507:STM32_XPD/CMSIS/Include/core_cm7.h ****               uint32_t __RESERVED1 : 3;
 508:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t SVCALLACT : 1;
 509:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t MONITORACT : 1;
 510:STM32_XPD/CMSIS/Include/core_cm7.h ****               uint32_t __RESERVED2 : 1;
 511:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t PENDSVACT : 1;
 512:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t SYSTICKACT : 1;
 513:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t USGFAULTPENDED : 1;
 514:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t MEMFAULTPENDED : 1;
 515:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t BUSFAULTPENDED : 1;
 516:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t SVCALLPENDED : 1;
 517:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t MEMFAULTENA : 1;
 518:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t BUSFAULTENA : 1;
 519:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t USGFAULTENA : 1;
 520:STM32_XPD/CMSIS/Include/core_cm7.h ****               uint32_t __RESERVED3 : 13;
 521:STM32_XPD/CMSIS/Include/core_cm7.h ****     } b;
 522:STM32_XPD/CMSIS/Include/core_cm7.h ****     __IOM uint32_t w;
ARM GAS  /tmp/ccYLVUts.s 			page 15


 523:STM32_XPD/CMSIS/Include/core_cm7.h ****   } SHCSR;
 524:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 525:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 526:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 527:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 528:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 529:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 530:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 531:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 532:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 533:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 534:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 535:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 536:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 537:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 538:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 539:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 540:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 541:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 542:STM32_XPD/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 543:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 544:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 545:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 546:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 2
 547:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 548:STM32_XPD/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 549:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 550:STM32_XPD/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 551:STM32_XPD/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 552:STM32_XPD/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 553:STM32_XPD/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 554:STM32_XPD/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 555:STM32_XPD/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 556:STM32_XPD/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 557:STM32_XPD/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 558:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 559:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 560:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 561:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 562:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 563:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 564:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 565:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 566:STM32_XPD/CMSIS/Include/core_cm7.h **** } SCB_Type;
 567:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 568:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 569:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 570:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 571:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 572:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 573:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 574:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 575:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 576:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 577:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 578:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 579:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
ARM GAS  /tmp/ccYLVUts.s 			page 16


 580:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 581:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 582:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 583:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 584:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 585:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 586:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 587:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 588:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 589:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 590:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 591:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 592:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 593:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 594:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 595:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 596:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 597:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 598:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 599:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 600:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 601:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 602:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 603:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 604:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 605:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 606:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 607:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 608:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 609:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 610:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 611:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 612:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 613:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 614:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 615:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 616:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 617:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 618:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 619:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 620:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 621:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 622:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 623:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 624:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 625:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 626:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 627:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 628:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 629:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 630:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 631:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 632:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 633:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 634:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 635:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 636:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
ARM GAS  /tmp/ccYLVUts.s 			page 17


 637:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 638:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 639:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 640:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 641:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 642:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 643:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 644:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 645:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 646:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 647:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 648:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 649:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 650:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 651:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 652:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 653:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 654:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 655:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 656:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 657:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 658:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 659:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 660:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 661:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 662:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 663:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 664:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 665:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 666:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 667:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 668:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 669:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 670:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 671:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 672:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 673:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 674:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 675:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 676:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 677:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 678:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 679:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 680:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 681:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 682:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 683:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 684:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 685:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 686:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 687:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 688:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 689:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 690:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 691:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 692:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 693:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
ARM GAS  /tmp/ccYLVUts.s 			page 18


 694:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 695:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 696:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 697:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 698:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 699:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 700:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 701:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 702:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 703:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 704:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 705:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 706:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 707:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 708:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 709:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 710:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 711:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 712:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 713:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 714:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 715:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 716:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 717:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 718:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 719:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 720:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 721:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 722:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 723:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 724:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 725:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 726:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 727:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 728:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 729:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 730:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 731:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 732:STM32_XPD/CMSIS/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 733:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 734:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 735:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 736:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 737:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 738:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 739:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 740:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 741:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 742:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 743:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 744:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 745:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 746:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 747:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 748:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 749:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 750:STM32_XPD/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccYLVUts.s 			page 19


 751:STM32_XPD/CMSIS/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 752:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 753:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 754:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 755:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 756:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 757:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 758:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 759:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 760:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 761:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 762:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 763:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 764:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 765:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 766:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 767:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 768:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 769:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 770:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 771:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 772:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 773:STM32_XPD/CMSIS/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 774:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 775:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 776:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 777:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 778:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 779:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 780:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 781:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 782:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 783:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 784:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 785:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 786:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 787:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 788:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 789:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 790:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 791:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 792:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 793:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 794:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 795:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 796:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 797:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 798:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 799:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 800:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 801:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 802:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 803:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 804:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 805:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 806:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 807:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
ARM GAS  /tmp/ccYLVUts.s 			page 20


 808:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 809:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 810:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 811:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 812:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 813:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 814:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 815:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 816:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 817:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 818:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 819:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 820:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 821:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 822:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 823:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 824:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 825:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 826:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 827:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 828:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 829:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 830:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 831:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 832:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 833:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 834:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 835:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 836:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 837:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 838:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 839:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 840:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 841:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 842:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 843:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 844:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 845:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 846:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 847:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 848:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 849:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 850:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 851:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 852:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 853:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 854:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 855:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 856:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 857:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 858:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 859:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 860:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 861:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 862:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 863:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 864:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
ARM GAS  /tmp/ccYLVUts.s 			page 21


 865:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 866:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 867:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 868:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 869:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 870:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 871:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 872:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 873:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 874:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 875:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 876:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 877:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 878:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 879:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 880:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 881:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 882:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 883:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 884:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 885:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 886:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 887:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 888:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 889:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 890:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 891:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 892:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 893:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 894:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 895:STM32_XPD/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 896:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 897:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 898:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 899:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 900:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 901:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 902:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 903:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 904:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 905:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 906:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 907:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 908:STM32_XPD/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 909:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 910:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 911:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 912:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 913:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 914:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 915:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 916:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 917:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 918:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 919:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 920:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 921:STM32_XPD/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
ARM GAS  /tmp/ccYLVUts.s 			page 22


 922:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 923:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 924:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 925:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 926:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 927:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 928:STM32_XPD/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 929:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 930:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 931:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 932:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 933:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 934:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 935:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 936:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 937:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 938:STM32_XPD/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 939:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 940:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 941:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 942:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 943:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 944:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 945:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 946:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 947:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 948:STM32_XPD/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 949:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 950:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 951:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 952:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 953:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 954:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 955:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 956:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 957:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 958:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 959:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 960:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 961:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 962:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 963:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 964:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 965:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 966:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 967:STM32_XPD/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 968:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 969:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 970:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
 971:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 972:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 973:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 974:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
 975:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
 976:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 977:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
 978:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
ARM GAS  /tmp/ccYLVUts.s 			page 23


 979:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
 980:STM32_XPD/CMSIS/Include/core_cm7.h **** typedef struct
 981:STM32_XPD/CMSIS/Include/core_cm7.h **** {
 982:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 983:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 984:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 985:STM32_XPD/CMSIS/Include/core_cm7.h **** } SCnSCB_Type;
 986:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 987:STM32_XPD/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 988:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 989:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 990:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 991:STM32_XPD/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 992:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 993:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 994:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 995:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 996:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 997:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 998:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 999:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
1000:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1001:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
1002:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
1003:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1004:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
1005:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
1006:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1007:STM32_XPD/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
1008:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1009:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1010:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1011:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1012:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
1013:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
1014:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
1015:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1016:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1017:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1018:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
1019:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1020:STM32_XPD/CMSIS/Include/core_cm7.h **** typedef struct
1021:STM32_XPD/CMSIS/Include/core_cm7.h **** {
1022:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
1023:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
1024:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
1025:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
1026:STM32_XPD/CMSIS/Include/core_cm7.h **** } SysTick_Type;
1027:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1028:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
1029:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
1030:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
1031:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1032:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
1033:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
1034:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1035:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
ARM GAS  /tmp/ccYLVUts.s 			page 24


1036:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
1037:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1038:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
1039:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
1040:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1041:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
1042:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
1043:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
1044:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1045:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
1046:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
1047:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
1048:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1049:STM32_XPD/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
1050:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
1051:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
1052:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1053:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
1054:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
1055:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1056:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
1057:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
1058:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1059:STM32_XPD/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
1060:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1061:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1062:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1063:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1064:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1065:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1066:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
1067:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1068:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1069:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1070:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1071:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1072:STM32_XPD/CMSIS/Include/core_cm7.h **** typedef struct
1073:STM32_XPD/CMSIS/Include/core_cm7.h **** {
1074:STM32_XPD/CMSIS/Include/core_cm7.h ****   __OM  union
1075:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
1076:STM32_XPD/CMSIS/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1077:STM32_XPD/CMSIS/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1078:STM32_XPD/CMSIS/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1079:STM32_XPD/CMSIS/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1080:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1081:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1082:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1083:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1084:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1085:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1086:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[29U];
1087:STM32_XPD/CMSIS/Include/core_cm7.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
1088:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
1089:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
1090:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1091:STM32_XPD/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1092:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
ARM GAS  /tmp/ccYLVUts.s 			page 25


1093:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1094:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1095:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1096:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1097:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1098:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1099:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1100:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1101:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1102:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1103:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1104:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1105:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1106:STM32_XPD/CMSIS/Include/core_cm7.h **** } ITM_Type;
1107:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1108:STM32_XPD/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1109:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1110:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
1111:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1112:STM32_XPD/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1113:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1114:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1115:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1116:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1117:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1118:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1119:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1120:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1121:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1122:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1123:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1124:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1125:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1126:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1127:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1128:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1129:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1130:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1131:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1132:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1133:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1134:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1135:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1136:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1137:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1138:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1139:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1140:STM32_XPD/CMSIS/Include/core_cm7.h **** /* ITM Integration Write Register Definitions */
1141:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
1142:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
1143:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1144:STM32_XPD/CMSIS/Include/core_cm7.h **** /* ITM Integration Read Register Definitions */
1145:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
1146:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
1147:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1148:STM32_XPD/CMSIS/Include/core_cm7.h **** /* ITM Integration Mode Control Register Definitions */
1149:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
ARM GAS  /tmp/ccYLVUts.s 			page 26


1150:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
1151:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1152:STM32_XPD/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1153:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1154:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1155:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1156:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1157:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1158:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1159:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1160:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1161:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1162:STM32_XPD/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1163:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1164:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1165:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1166:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1167:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1168:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1169:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
1170:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1171:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1172:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1173:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1174:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1175:STM32_XPD/CMSIS/Include/core_cm7.h **** typedef struct
1176:STM32_XPD/CMSIS/Include/core_cm7.h **** {
1177:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1178:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1179:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1180:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1181:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1182:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1183:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1184:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1185:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1186:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1187:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1188:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1189:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1190:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1191:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1192:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1193:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1194:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1195:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1196:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1197:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1198:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1199:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1200:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1201:STM32_XPD/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1202:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1203:STM32_XPD/CMSIS/Include/core_cm7.h **** } DWT_Type;
1204:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1205:STM32_XPD/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1206:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
ARM GAS  /tmp/ccYLVUts.s 			page 27


1207:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1208:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1209:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1210:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1211:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1212:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1213:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1214:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1215:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1216:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1217:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1218:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1219:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1220:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1221:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1222:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1223:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1224:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1225:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1226:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1227:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1228:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1229:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1230:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1231:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1232:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1233:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1234:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1235:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1236:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1237:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1238:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1239:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1240:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1241:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1242:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1243:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1244:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1245:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1246:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1247:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1248:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1249:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1250:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1251:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1252:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1253:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1254:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1255:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1256:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1257:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1258:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1259:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1260:STM32_XPD/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1261:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1262:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1263:STM32_XPD/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccYLVUts.s 			page 28


1264:STM32_XPD/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1265:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1266:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1267:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1268:STM32_XPD/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1269:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1270:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1271:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1272:STM32_XPD/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1273:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1274:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1275:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1276:STM32_XPD/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1277:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1278:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1279:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1280:STM32_XPD/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1281:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1282:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1283:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1284:STM32_XPD/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1285:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1286:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1287:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1288:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1289:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1290:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1291:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1292:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1293:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1294:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1295:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1296:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1297:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1298:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1299:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1300:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1301:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1302:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1303:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1304:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1305:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1306:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1307:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1308:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1309:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1310:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1311:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1312:STM32_XPD/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1313:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1314:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1315:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1316:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1317:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1318:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1319:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
1320:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
ARM GAS  /tmp/ccYLVUts.s 			page 29


1321:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1322:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1323:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1324:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1325:STM32_XPD/CMSIS/Include/core_cm7.h **** typedef struct
1326:STM32_XPD/CMSIS/Include/core_cm7.h **** {
1327:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1328:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1329:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1330:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1331:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1332:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1333:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1334:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1335:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1336:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1337:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1338:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1339:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1340:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1341:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1342:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1343:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1344:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1345:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1346:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1347:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1348:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1349:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1350:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1351:STM32_XPD/CMSIS/Include/core_cm7.h **** } TPI_Type;
1352:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1353:STM32_XPD/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1354:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1355:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1356:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1357:STM32_XPD/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1358:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1359:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1360:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1361:STM32_XPD/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1362:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1363:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1364:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1365:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1366:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1367:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1368:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1369:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1370:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1371:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1372:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1373:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1374:STM32_XPD/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1375:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1376:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1377:STM32_XPD/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccYLVUts.s 			page 30


1378:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1379:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1380:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1381:STM32_XPD/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1382:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1383:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1384:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1385:STM32_XPD/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1386:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1387:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1388:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1389:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1390:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1391:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1392:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1393:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1394:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1395:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1396:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1397:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1398:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1399:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1400:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1401:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1402:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1403:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1404:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1405:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1406:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1407:STM32_XPD/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1408:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1409:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1410:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1411:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1412:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1413:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1414:STM32_XPD/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1415:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1416:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1417:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1418:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1419:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1420:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1421:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1422:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1423:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1424:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1425:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1426:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1427:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1428:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1429:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1430:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1431:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1432:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1433:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1434:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
ARM GAS  /tmp/ccYLVUts.s 			page 31


1435:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1436:STM32_XPD/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1437:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1438:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1439:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1440:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1441:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1442:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1443:STM32_XPD/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1444:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1445:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1446:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1447:STM32_XPD/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1448:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1449:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1450:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1451:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1452:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1453:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1454:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1455:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1456:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1457:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1458:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1459:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1460:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1461:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1462:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1463:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1464:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1465:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1466:STM32_XPD/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1467:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1468:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1469:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1470:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1471:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1472:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1473:STM32_XPD/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1474:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1475:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1476:STM32_XPD/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1477:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1478:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1479:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1480:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1481:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
1482:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1483:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1484:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1485:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1486:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1487:STM32_XPD/CMSIS/Include/core_cm7.h **** typedef struct
1488:STM32_XPD/CMSIS/Include/core_cm7.h **** {
1489:STM32_XPD/CMSIS/Include/core_cm7.h ****   union {
1490:STM32_XPD/CMSIS/Include/core_cm7.h ****     struct {
1491:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IM  uint32_t SEPARATE : 1;
ARM GAS  /tmp/ccYLVUts.s 			page 32


1492:STM32_XPD/CMSIS/Include/core_cm7.h ****              uint32_t __RESERVED0 : 7;
1493:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IM  uint32_t DREGION : 8;
1494:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IM  uint32_t IREGION : 8;
1495:STM32_XPD/CMSIS/Include/core_cm7.h ****              uint32_t __RESERVED1 : 8;
1496:STM32_XPD/CMSIS/Include/core_cm7.h ****     } b;
1497:STM32_XPD/CMSIS/Include/core_cm7.h ****     __IM uint32_t w;
1498:STM32_XPD/CMSIS/Include/core_cm7.h ****   }  TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1499:STM32_XPD/CMSIS/Include/core_cm7.h ****   union {
1500:STM32_XPD/CMSIS/Include/core_cm7.h ****     struct {
1501:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t ENABLE : 1;
1502:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t HFNMIENA : 1;
1503:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t PRIVDEFENA : 1;
1504:STM32_XPD/CMSIS/Include/core_cm7.h ****              uint32_t __RESERVED0 : 29;
1505:STM32_XPD/CMSIS/Include/core_cm7.h ****     } b;
1506:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t w;
1507:STM32_XPD/CMSIS/Include/core_cm7.h ****   } CTRL;
1508:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1509:STM32_XPD/CMSIS/Include/core_cm7.h ****   union {
1510:STM32_XPD/CMSIS/Include/core_cm7.h ****     struct {
1511:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t REGION : 4;
1512:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t VALID : 1;
1513:STM32_XPD/CMSIS/Include/core_cm7.h ****         __IOM uint32_t ADDR : 27;
1514:STM32_XPD/CMSIS/Include/core_cm7.h ****     } b;
1515:STM32_XPD/CMSIS/Include/core_cm7.h ****     __IOM uint32_t w;
1516:STM32_XPD/CMSIS/Include/core_cm7.h ****   } RBAR;
1517:STM32_XPD/CMSIS/Include/core_cm7.h ****   union {
1518:STM32_XPD/CMSIS/Include/core_cm7.h ****     struct {
1519:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t ENABLE : 1;
1520:STM32_XPD/CMSIS/Include/core_cm7.h ****             uint32_t __RESERVED0 : 7;
1521:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t SRC : 8;
1522:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t B : 1;
1523:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t C : 1;
1524:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t S : 1;
1525:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t TEX : 3;
1526:STM32_XPD/CMSIS/Include/core_cm7.h ****             uint32_t __RESERVED1 : 2;
1527:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t AP : 3;
1528:STM32_XPD/CMSIS/Include/core_cm7.h ****             uint32_t __RESERVED2 : 1;
1529:STM32_XPD/CMSIS/Include/core_cm7.h ****       __IOM uint32_t XN : 1;
1530:STM32_XPD/CMSIS/Include/core_cm7.h ****             uint32_t __RESERVED3 : 3;
1531:STM32_XPD/CMSIS/Include/core_cm7.h ****     } b;
1532:STM32_XPD/CMSIS/Include/core_cm7.h ****     __IOM uint32_t w;
1533:STM32_XPD/CMSIS/Include/core_cm7.h ****   } RASR;
1534:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1535:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1536:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1537:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1538:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1539:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1540:STM32_XPD/CMSIS/Include/core_cm7.h **** } MPU_Type;
1541:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1542:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_RALIASES                  4U
1543:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1544:STM32_XPD/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1545:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1546:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1547:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1548:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
ARM GAS  /tmp/ccYLVUts.s 			page 33


1549:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1550:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1551:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1552:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1553:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1554:STM32_XPD/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1555:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1556:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1557:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1558:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1559:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1560:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1561:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1562:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1563:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1564:STM32_XPD/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1565:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1566:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1567:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1568:STM32_XPD/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1569:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1570:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1571:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1572:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1573:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1574:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1575:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1576:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1577:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1578:STM32_XPD/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1579:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1580:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1581:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1582:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1583:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1584:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1585:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1586:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1587:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1588:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1589:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1590:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1591:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1592:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1593:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1594:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1595:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1596:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1597:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1598:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1599:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1600:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1601:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1602:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1603:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1604:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1605:STM32_XPD/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccYLVUts.s 			page 34


1606:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1607:STM32_XPD/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1608:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1609:STM32_XPD/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1610:STM32_XPD/CMSIS/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1611:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1612:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1613:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1614:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1615:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1616:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1617:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
1618:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1619:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1620:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1621:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1622:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1623:STM32_XPD/CMSIS/Include/core_cm7.h **** typedef struct
1624:STM32_XPD/CMSIS/Include/core_cm7.h **** {
1625:STM32_XPD/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1626:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1627:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1628:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1629:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1630:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1631:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1632:STM32_XPD/CMSIS/Include/core_cm7.h **** } FPU_Type;
1633:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1634:STM32_XPD/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1635:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1636:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1637:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1638:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1639:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1640:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1641:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1642:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1643:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1644:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1645:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1646:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1647:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1648:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1649:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1650:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1651:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1652:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1653:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1654:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1655:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1656:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1657:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1658:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1659:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1660:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1661:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1662:STM32_XPD/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
ARM GAS  /tmp/ccYLVUts.s 			page 35


1663:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1664:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1665:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1666:STM32_XPD/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1667:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1668:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1669:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1670:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1671:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1672:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1673:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1674:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1675:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1676:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1677:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1678:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1679:STM32_XPD/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1680:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1681:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1682:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1683:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1684:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1685:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1686:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1687:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1688:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1689:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1690:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1691:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1692:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1693:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1694:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1695:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1696:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1697:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1698:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1699:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1700:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1701:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1702:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1703:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1704:STM32_XPD/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1705:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1706:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1707:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1708:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1709:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1710:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1711:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1712:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1713:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1714:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1715:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1716:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1717:STM32_XPD/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1718:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1719:STM32_XPD/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
ARM GAS  /tmp/ccYLVUts.s 			page 36


1720:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1721:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1722:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1723:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1724:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1725:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1726:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
1727:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1728:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1729:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1730:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1731:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1732:STM32_XPD/CMSIS/Include/core_cm7.h **** typedef struct
1733:STM32_XPD/CMSIS/Include/core_cm7.h **** {
1734:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1735:STM32_XPD/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1736:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1737:STM32_XPD/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1738:STM32_XPD/CMSIS/Include/core_cm7.h **** } CoreDebug_Type;
1739:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1740:STM32_XPD/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1741:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1742:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1743:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1744:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1745:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1746:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1747:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1748:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1749:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1750:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1751:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1752:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1753:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1754:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1755:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1756:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1757:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1758:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1759:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1760:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1761:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1762:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1763:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1764:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1765:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1766:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1767:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1768:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1769:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1770:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1771:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1772:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1773:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1774:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1775:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1776:STM32_XPD/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccYLVUts.s 			page 37


1777:STM32_XPD/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1778:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1779:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1780:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1781:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1782:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1783:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1784:STM32_XPD/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1785:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1786:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1787:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1788:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1789:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1790:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1791:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1792:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1793:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1794:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1795:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1796:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1797:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1798:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1799:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1800:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1801:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1802:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1803:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1804:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1805:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1806:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1807:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1808:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1809:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1810:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1811:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1812:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1813:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1814:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1815:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1816:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1817:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1818:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1819:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1820:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1821:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1822:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1823:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1824:STM32_XPD/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1825:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1826:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1827:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1828:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1829:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1830:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1831:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
1832:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1833:STM32_XPD/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccYLVUts.s 			page 38


1834:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1835:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1836:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1837:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1838:STM32_XPD/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1839:STM32_XPD/CMSIS/Include/core_cm7.h **** */
1840:STM32_XPD/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1841:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1842:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1843:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1844:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1845:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1846:STM32_XPD/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1847:STM32_XPD/CMSIS/Include/core_cm7.h **** */
1848:STM32_XPD/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1849:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1850:STM32_XPD/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1851:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1852:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1853:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1854:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1855:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1856:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1857:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
1858:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1859:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1860:STM32_XPD/CMSIS/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1861:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1862:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1863:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1864:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1865:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1866:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1867:STM32_XPD/CMSIS/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1868:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1869:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1870:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1871:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1872:STM32_XPD/CMSIS/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1873:STM32_XPD/CMSIS/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1874:STM32_XPD/CMSIS/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1875:STM32_XPD/CMSIS/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1876:STM32_XPD/CMSIS/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1877:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1878:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1879:STM32_XPD/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1880:STM32_XPD/CMSIS/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1881:STM32_XPD/CMSIS/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1882:STM32_XPD/CMSIS/Include/core_cm7.h **** #endif
1883:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1884:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1885:STM32_XPD/CMSIS/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1886:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1887:STM32_XPD/CMSIS/Include/core_cm7.h **** /*@} */
1888:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1889:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1890:STM32_XPD/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccYLVUts.s 			page 39


1891:STM32_XPD/CMSIS/Include/core_cm7.h **** /*******************************************************************************
1892:STM32_XPD/CMSIS/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1893:STM32_XPD/CMSIS/Include/core_cm7.h ****   Core Function Interface contains:
1894:STM32_XPD/CMSIS/Include/core_cm7.h ****   - Core NVIC Functions
1895:STM32_XPD/CMSIS/Include/core_cm7.h ****   - Core SysTick Functions
1896:STM32_XPD/CMSIS/Include/core_cm7.h ****   - Core Debug Functions
1897:STM32_XPD/CMSIS/Include/core_cm7.h ****   - Core Register Access Functions
1898:STM32_XPD/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
1899:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1900:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1901:STM32_XPD/CMSIS/Include/core_cm7.h **** */
1902:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1903:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1904:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1905:STM32_XPD/CMSIS/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1906:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1907:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1908:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1909:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1910:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
1911:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1912:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1913:STM32_XPD/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_NVIC_VIRTUAL
1914:STM32_XPD/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1915:STM32_XPD/CMSIS/Include/core_cm7.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1916:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
1917:STM32_XPD/CMSIS/Include/core_cm7.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1918:STM32_XPD/CMSIS/Include/core_cm7.h **** #else
1919:STM32_XPD/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1920:STM32_XPD/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1921:STM32_XPD/CMSIS/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1922:STM32_XPD/CMSIS/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1923:STM32_XPD/CMSIS/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1924:STM32_XPD/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1925:STM32_XPD/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1926:STM32_XPD/CMSIS/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1927:STM32_XPD/CMSIS/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1928:STM32_XPD/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1929:STM32_XPD/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1930:STM32_XPD/CMSIS/Include/core_cm7.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1931:STM32_XPD/CMSIS/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1932:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1933:STM32_XPD/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1934:STM32_XPD/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1935:STM32_XPD/CMSIS/Include/core_cm7.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1936:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
1937:STM32_XPD/CMSIS/Include/core_cm7.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1938:STM32_XPD/CMSIS/Include/core_cm7.h **** #else
1939:STM32_XPD/CMSIS/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1940:STM32_XPD/CMSIS/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1941:STM32_XPD/CMSIS/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1942:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1943:STM32_XPD/CMSIS/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1944:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1945:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1946:STM32_XPD/CMSIS/Include/core_cm7.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1947:STM32_XPD/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
ARM GAS  /tmp/ccYLVUts.s 			page 40


1948:STM32_XPD/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1949:STM32_XPD/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1950:STM32_XPD/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1951:STM32_XPD/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1952:STM32_XPD/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1953:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1954:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1955:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1956:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Set Priority Grouping
1957:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1958:STM32_XPD/CMSIS/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1959:STM32_XPD/CMSIS/Include/core_cm7.h ****            Only values from 0..7 are used.
1960:STM32_XPD/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1961:STM32_XPD/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1962:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1963:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1964:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1965:STM32_XPD/CMSIS/Include/core_cm7.h **** {
1966:STM32_XPD/CMSIS/Include/core_cm7.h ****   uint32_t reg_value;
1967:STM32_XPD/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1968:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1969:STM32_XPD/CMSIS/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1970:STM32_XPD/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1971:STM32_XPD/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1972:STM32_XPD/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1973:STM32_XPD/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1974:STM32_XPD/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
1975:STM32_XPD/CMSIS/Include/core_cm7.h **** }
1976:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1977:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1978:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1979:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Get Priority Grouping
1980:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1981:STM32_XPD/CMSIS/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1982:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1983:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1984:STM32_XPD/CMSIS/Include/core_cm7.h **** {
1985:STM32_XPD/CMSIS/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1986:STM32_XPD/CMSIS/Include/core_cm7.h **** }
1987:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1988:STM32_XPD/CMSIS/Include/core_cm7.h **** 
1989:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
1990:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Enable Interrupt
1991:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1992:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1993:STM32_XPD/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1994:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
1995:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1996:STM32_XPD/CMSIS/Include/core_cm7.h **** {
1997:STM32_XPD/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1998:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
1999:STM32_XPD/CMSIS/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
2000:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2001:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2002:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2003:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2004:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
ARM GAS  /tmp/ccYLVUts.s 			page 41


2005:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
2006:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
2007:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
2008:STM32_XPD/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
2009:STM32_XPD/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
2010:STM32_XPD/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
2011:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2012:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
2013:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2014:STM32_XPD/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2015:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2016:STM32_XPD/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2017:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2018:STM32_XPD/CMSIS/Include/core_cm7.h ****   else
2019:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2020:STM32_XPD/CMSIS/Include/core_cm7.h ****     return(0U);
2021:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2022:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2023:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2024:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2025:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2026:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Disable Interrupt
2027:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
2028:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
2029:STM32_XPD/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
2030:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2031:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
2032:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2033:STM32_XPD/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2034:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2035:STM32_XPD/CMSIS/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
2036:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2037:STM32_XPD/CMSIS/Include/core_cm7.h ****     __ISB();
2038:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2039:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2040:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2041:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2042:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2043:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Get Pending Interrupt
2044:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
2045:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
2046:STM32_XPD/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
2047:STM32_XPD/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
2048:STM32_XPD/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
2049:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2050:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
2051:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2052:STM32_XPD/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2053:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2054:STM32_XPD/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2055:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2056:STM32_XPD/CMSIS/Include/core_cm7.h ****   else
2057:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2058:STM32_XPD/CMSIS/Include/core_cm7.h ****     return(0U);
2059:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2060:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2061:STM32_XPD/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccYLVUts.s 			page 42


2062:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2063:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2064:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Set Pending Interrupt
2065:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
2066:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
2067:STM32_XPD/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
2068:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2069:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
2070:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2071:STM32_XPD/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2072:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2073:STM32_XPD/CMSIS/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
2074:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2075:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2076:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2077:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2078:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2079:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
2080:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
2081:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
2082:STM32_XPD/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
2083:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2084:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
2085:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2086:STM32_XPD/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2087:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2088:STM32_XPD/CMSIS/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
2089:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2090:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2091:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2092:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2093:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2094:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Get Active Interrupt
2095:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
2096:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
2097:STM32_XPD/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
2098:STM32_XPD/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is active.
2099:STM32_XPD/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
2100:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2101:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
2102:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2103:STM32_XPD/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2104:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2105:STM32_XPD/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2106:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2107:STM32_XPD/CMSIS/Include/core_cm7.h ****   else
2108:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2109:STM32_XPD/CMSIS/Include/core_cm7.h ****     return(0U);
2110:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2111:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2112:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2113:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2114:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2115:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Priority
2116:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
2117:STM32_XPD/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2118:STM32_XPD/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
ARM GAS  /tmp/ccYLVUts.s 			page 43


2119:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
2120:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
2121:STM32_XPD/CMSIS/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
2122:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2123:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
2124:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2125:STM32_XPD/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2126:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2127:STM32_XPD/CMSIS/Include/core_cm7.h ****     NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2128:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2129:STM32_XPD/CMSIS/Include/core_cm7.h ****   else
2130:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2131:STM32_XPD/CMSIS/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2132:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2133:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2134:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2135:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2136:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2137:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Priority
2138:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2139:STM32_XPD/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2140:STM32_XPD/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2141:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2142:STM32_XPD/CMSIS/Include/core_cm7.h ****   \return             Interrupt Priority.
2143:STM32_XPD/CMSIS/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2144:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2145:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2146:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2147:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2148:STM32_XPD/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2149:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2150:STM32_XPD/CMSIS/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)));
2151:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2152:STM32_XPD/CMSIS/Include/core_cm7.h ****   else
2153:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2154:STM32_XPD/CMSIS/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
2155:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2156:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2157:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2158:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2159:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2160:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Encode Priority
2161:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2162:STM32_XPD/CMSIS/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
2163:STM32_XPD/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2164:STM32_XPD/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2165:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2166:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2167:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2168:STM32_XPD/CMSIS/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2169:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2170:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2171:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2172:STM32_XPD/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2173:STM32_XPD/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2174:STM32_XPD/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2175:STM32_XPD/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccYLVUts.s 			page 44


2176:STM32_XPD/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2177:STM32_XPD/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2178:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2179:STM32_XPD/CMSIS/Include/core_cm7.h ****   return (
2180:STM32_XPD/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
2181:STM32_XPD/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
2182:STM32_XPD/CMSIS/Include/core_cm7.h ****          );
2183:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2184:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2185:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2186:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2187:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Decode Priority
2188:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
2189:STM32_XPD/CMSIS/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2190:STM32_XPD/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2191:STM32_XPD/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2192:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2193:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2194:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2195:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2196:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2197:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2198:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2199:STM32_XPD/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2200:STM32_XPD/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2201:STM32_XPD/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2202:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2203:STM32_XPD/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2204:STM32_XPD/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2205:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2206:STM32_XPD/CMSIS/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
2207:STM32_XPD/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
2208:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2209:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2210:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2211:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2212:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Vector
2213:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2214:STM32_XPD/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2215:STM32_XPD/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2216:STM32_XPD/CMSIS/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2217:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
2218:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2219:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2220:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2221:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2222:STM32_XPD/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2223:STM32_XPD/CMSIS/Include/core_cm7.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
2224:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2225:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2226:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2227:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2228:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2229:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2230:STM32_XPD/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2231:STM32_XPD/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2232:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
ARM GAS  /tmp/ccYLVUts.s 			page 45


2233:STM32_XPD/CMSIS/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2234:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2235:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2236:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2237:STM32_XPD/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2238:STM32_XPD/CMSIS/Include/core_cm7.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
2239:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2240:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2241:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2242:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2243:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   System Reset
2244:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2245:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2246:STM32_XPD/CMSIS/Include/core_cm7.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
2247:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2248:STM32_XPD/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2249:STM32_XPD/CMSIS/Include/core_cm7.h ****                                                                        buffered write are completed
2250:STM32_XPD/CMSIS/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
2251:STM32_XPD/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
2252:STM32_XPD/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2253:STM32_XPD/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2254:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2255:STM32_XPD/CMSIS/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2256:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2257:STM32_XPD/CMSIS/Include/core_cm7.h ****     __NOP();
2258:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2259:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2260:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2261:STM32_XPD/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2262:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2263:STM32_XPD/CMSIS/Include/core_cm7.h **** /* ##########################  MPU functions  #################################### */
2264:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2265:STM32_XPD/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
2266:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2267:STM32_XPD/CMSIS/Include/core_cm7.h **** #include "mpu_armv7.h"
2268:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2269:STM32_XPD/CMSIS/Include/core_cm7.h **** #endif
2270:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2271:STM32_XPD/CMSIS/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2272:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2273:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2274:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2275:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2276:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
2277:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2278:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2279:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2280:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   get FPU type
2281:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details returns the FPU type
2282:STM32_XPD/CMSIS/Include/core_cm7.h ****   \returns
2283:STM32_XPD/CMSIS/Include/core_cm7.h ****    - \b  0: No FPU
2284:STM32_XPD/CMSIS/Include/core_cm7.h ****    - \b  1: Single precision FPU
2285:STM32_XPD/CMSIS/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2286:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2287:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2288:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2289:STM32_XPD/CMSIS/Include/core_cm7.h ****   uint32_t mvfr0;
ARM GAS  /tmp/ccYLVUts.s 			page 46


2290:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2291:STM32_XPD/CMSIS/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2292:STM32_XPD/CMSIS/Include/core_cm7.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2293:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2294:STM32_XPD/CMSIS/Include/core_cm7.h ****     return 2U;           /* Double + Single precision FPU */
2295:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2296:STM32_XPD/CMSIS/Include/core_cm7.h ****   else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2297:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2298:STM32_XPD/CMSIS/Include/core_cm7.h ****     return 1U;           /* Single precision FPU */
2299:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2300:STM32_XPD/CMSIS/Include/core_cm7.h ****   else
2301:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2302:STM32_XPD/CMSIS/Include/core_cm7.h ****     return 0U;           /* No FPU */
2303:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2304:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2305:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2306:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2307:STM32_XPD/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2308:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2309:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2310:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2311:STM32_XPD/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2312:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2313:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2314:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2315:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2316:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
2317:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2318:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2319:STM32_XPD/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2320:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2321:STM32_XPD/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2322:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2323:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2324:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2325:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Enable I-Cache
2326:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Turns on I-Cache
2327:STM32_XPD/CMSIS/Include/core_cm7.h ****   */
2328:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableICache (void)
2329:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2330:STM32_XPD/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2331:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2332:STM32_XPD/CMSIS/Include/core_cm7.h ****     __ISB();
2333:STM32_XPD/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2334:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2335:STM32_XPD/CMSIS/Include/core_cm7.h ****     __ISB();
2336:STM32_XPD/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
2337:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2338:STM32_XPD/CMSIS/Include/core_cm7.h ****     __ISB();
2339:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
2340:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2341:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2342:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2343:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2344:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Disable I-Cache
2345:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Turns off I-Cache
2346:STM32_XPD/CMSIS/Include/core_cm7.h ****   */
ARM GAS  /tmp/ccYLVUts.s 			page 47


2347:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableICache (void)
2348:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2349:STM32_XPD/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2350:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2351:STM32_XPD/CMSIS/Include/core_cm7.h ****     __ISB();
2352:STM32_XPD/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2353:STM32_XPD/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2354:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2355:STM32_XPD/CMSIS/Include/core_cm7.h ****     __ISB();
2356:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
2357:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2358:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2359:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2360:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2361:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2362:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache
2363:STM32_XPD/CMSIS/Include/core_cm7.h ****   */
2364:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateICache (void)
2365:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2366:STM32_XPD/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2367:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2368:STM32_XPD/CMSIS/Include/core_cm7.h ****     __ISB();
2369:STM32_XPD/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2370:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2371:STM32_XPD/CMSIS/Include/core_cm7.h ****     __ISB();
2372:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
2373:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2374:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2375:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2376:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2377:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Enable D-Cache
2378:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Turns on D-Cache
2379:STM32_XPD/CMSIS/Include/core_cm7.h ****   */
2380:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableDCache (void)
2381:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2382:STM32_XPD/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2383:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2384:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2385:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2386:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2387:STM32_XPD/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2388:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2389:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2390:STM32_XPD/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2391:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2392:STM32_XPD/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2393:STM32_XPD/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2394:STM32_XPD/CMSIS/Include/core_cm7.h ****     do {
2395:STM32_XPD/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2396:STM32_XPD/CMSIS/Include/core_cm7.h ****       do {
2397:STM32_XPD/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2398:STM32_XPD/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2399:STM32_XPD/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2400:STM32_XPD/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2401:STM32_XPD/CMSIS/Include/core_cm7.h ****         #endif
2402:STM32_XPD/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2403:STM32_XPD/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
ARM GAS  /tmp/ccYLVUts.s 			page 48


2404:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2405:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2406:STM32_XPD/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
2407:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2408:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2409:STM32_XPD/CMSIS/Include/core_cm7.h ****     __ISB();
2410:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
2411:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2412:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2413:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2414:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2415:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Disable D-Cache
2416:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Turns off D-Cache
2417:STM32_XPD/CMSIS/Include/core_cm7.h ****   */
2418:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableDCache (void)
2419:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2420:STM32_XPD/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2421:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2422:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2423:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2424:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2425:STM32_XPD/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2426:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2427:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2428:STM32_XPD/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk;  /* disable D-Cache */
2429:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2430:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2431:STM32_XPD/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2432:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2433:STM32_XPD/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2434:STM32_XPD/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2435:STM32_XPD/CMSIS/Include/core_cm7.h ****     do {
2436:STM32_XPD/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2437:STM32_XPD/CMSIS/Include/core_cm7.h ****       do {
2438:STM32_XPD/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2439:STM32_XPD/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2440:STM32_XPD/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2441:STM32_XPD/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2442:STM32_XPD/CMSIS/Include/core_cm7.h ****         #endif
2443:STM32_XPD/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2444:STM32_XPD/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2445:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2446:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2447:STM32_XPD/CMSIS/Include/core_cm7.h ****     __ISB();
2448:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
2449:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2450:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2451:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2452:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2453:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Invalidate D-Cache
2454:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache
2455:STM32_XPD/CMSIS/Include/core_cm7.h ****   */
2456:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateDCache (void)
2457:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2458:STM32_XPD/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2459:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2460:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t sets;
ARM GAS  /tmp/ccYLVUts.s 			page 49


2461:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2462:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2463:STM32_XPD/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2464:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2465:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2466:STM32_XPD/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2467:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2468:STM32_XPD/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2469:STM32_XPD/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2470:STM32_XPD/CMSIS/Include/core_cm7.h ****     do {
2471:STM32_XPD/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2472:STM32_XPD/CMSIS/Include/core_cm7.h ****       do {
2473:STM32_XPD/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2474:STM32_XPD/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2475:STM32_XPD/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2476:STM32_XPD/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2477:STM32_XPD/CMSIS/Include/core_cm7.h ****         #endif
2478:STM32_XPD/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2479:STM32_XPD/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2480:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2481:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2482:STM32_XPD/CMSIS/Include/core_cm7.h ****     __ISB();
2483:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
2484:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2485:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2486:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2487:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2488:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Clean D-Cache
2489:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache
2490:STM32_XPD/CMSIS/Include/core_cm7.h ****   */
2491:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanDCache (void)
2492:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2493:STM32_XPD/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2494:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2495:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2496:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2497:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2498:STM32_XPD/CMSIS/Include/core_cm7.h ****      SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2499:STM32_XPD/CMSIS/Include/core_cm7.h ****    __DSB();
2500:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2501:STM32_XPD/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2502:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2503:STM32_XPD/CMSIS/Include/core_cm7.h ****                                             /* clean D-Cache */
2504:STM32_XPD/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2505:STM32_XPD/CMSIS/Include/core_cm7.h ****     do {
2506:STM32_XPD/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2507:STM32_XPD/CMSIS/Include/core_cm7.h ****       do {
2508:STM32_XPD/CMSIS/Include/core_cm7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
2509:STM32_XPD/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk)  );
2510:STM32_XPD/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2511:STM32_XPD/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2512:STM32_XPD/CMSIS/Include/core_cm7.h ****         #endif
2513:STM32_XPD/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2514:STM32_XPD/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2515:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2516:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2517:STM32_XPD/CMSIS/Include/core_cm7.h ****     __ISB();
ARM GAS  /tmp/ccYLVUts.s 			page 50


2518:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
2519:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2520:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2521:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2522:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2523:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   Clean & Invalidate D-Cache
2524:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Cleans and Invalidates D-Cache
2525:STM32_XPD/CMSIS/Include/core_cm7.h ****   */
2526:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanInvalidateDCache (void)
2527:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2528:STM32_XPD/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2529:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2530:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2531:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2532:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2533:STM32_XPD/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2534:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2535:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2536:STM32_XPD/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2537:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2538:STM32_XPD/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2539:STM32_XPD/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2540:STM32_XPD/CMSIS/Include/core_cm7.h ****     do {
2541:STM32_XPD/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2542:STM32_XPD/CMSIS/Include/core_cm7.h ****       do {
2543:STM32_XPD/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2544:STM32_XPD/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2545:STM32_XPD/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2546:STM32_XPD/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2547:STM32_XPD/CMSIS/Include/core_cm7.h ****         #endif
2548:STM32_XPD/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2549:STM32_XPD/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2550:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2551:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2552:STM32_XPD/CMSIS/Include/core_cm7.h ****     __ISB();
2553:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
2554:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2555:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2556:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2557:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2558:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Invalidate by address
2559:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache for the given address
2560:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2561:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2562:STM32_XPD/CMSIS/Include/core_cm7.h **** */
2563:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateDCache_by_Addr (uint32_t *addr, int32_t dsize)
2564:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2565:STM32_XPD/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2566:STM32_XPD/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
2567:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t)addr;
2568:STM32_XPD/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32;                /* in Cortex-M7 size of cache line is fixed to 8 words (
2569:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2570:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2571:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2572:STM32_XPD/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
2573:STM32_XPD/CMSIS/Include/core_cm7.h ****       SCB->DCIMVAC = op_addr;
2574:STM32_XPD/CMSIS/Include/core_cm7.h ****       op_addr += (uint32_t)linesize;
ARM GAS  /tmp/ccYLVUts.s 			page 51


2575:STM32_XPD/CMSIS/Include/core_cm7.h ****       op_size -=           linesize;
2576:STM32_XPD/CMSIS/Include/core_cm7.h ****     }
2577:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2578:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2579:STM32_XPD/CMSIS/Include/core_cm7.h ****     __ISB();
2580:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
2581:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2582:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2583:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2584:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2585:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Clean by address
2586:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache for the given address
2587:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2588:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2589:STM32_XPD/CMSIS/Include/core_cm7.h **** */
2590:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
2591:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2592:STM32_XPD/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2593:STM32_XPD/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
2594:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t) addr;
2595:STM32_XPD/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32;                /* in Cortex-M7 size of cache line is fixed to 8 words (
2596:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2597:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2598:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2599:STM32_XPD/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
2600:STM32_XPD/CMSIS/Include/core_cm7.h ****       SCB->DCCMVAC = op_addr;
2601:STM32_XPD/CMSIS/Include/core_cm7.h ****       op_addr += (uint32_t)linesize;
2602:STM32_XPD/CMSIS/Include/core_cm7.h ****       op_size -=           linesize;
2603:STM32_XPD/CMSIS/Include/core_cm7.h ****     }
2604:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2605:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2606:STM32_XPD/CMSIS/Include/core_cm7.h ****     __ISB();
2607:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
2608:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2609:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2610:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2611:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2612:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Clean and Invalidate by address
2613:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Cleans and invalidates D_Cache for the given address
2614:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2615:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2616:STM32_XPD/CMSIS/Include/core_cm7.h **** */
2617:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanInvalidateDCache_by_Addr (uint32_t *addr, int32_t dsize)
2618:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2619:STM32_XPD/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2620:STM32_XPD/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
2621:STM32_XPD/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t) addr;
2622:STM32_XPD/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32;                /* in Cortex-M7 size of cache line is fixed to 8 words (
2623:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2624:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2625:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2626:STM32_XPD/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
2627:STM32_XPD/CMSIS/Include/core_cm7.h ****       SCB->DCCIMVAC = op_addr;
2628:STM32_XPD/CMSIS/Include/core_cm7.h ****       op_addr += (uint32_t)linesize;
2629:STM32_XPD/CMSIS/Include/core_cm7.h ****       op_size -=           linesize;
2630:STM32_XPD/CMSIS/Include/core_cm7.h ****     }
2631:STM32_XPD/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccYLVUts.s 			page 52


2632:STM32_XPD/CMSIS/Include/core_cm7.h ****     __DSB();
2633:STM32_XPD/CMSIS/Include/core_cm7.h ****     __ISB();
2634:STM32_XPD/CMSIS/Include/core_cm7.h ****   #endif
2635:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2636:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2637:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2638:STM32_XPD/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_CacheFunctions */
2639:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2640:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2641:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2642:STM32_XPD/CMSIS/Include/core_cm7.h **** /* ##################################    SysTick function  ########################################
2643:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2644:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2645:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2646:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure the System.
2647:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
2648:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2649:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2650:STM32_XPD/CMSIS/Include/core_cm7.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
2651:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2652:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2653:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   System Tick Configuration
2654:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2655:STM32_XPD/CMSIS/Include/core_cm7.h ****            Counter is in free running mode to generate periodic interrupts.
2656:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2657:STM32_XPD/CMSIS/Include/core_cm7.h ****   \return          0  Function succeeded.
2658:STM32_XPD/CMSIS/Include/core_cm7.h ****   \return          1  Function failed.
2659:STM32_XPD/CMSIS/Include/core_cm7.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2660:STM32_XPD/CMSIS/Include/core_cm7.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2661:STM32_XPD/CMSIS/Include/core_cm7.h ****            must contain a vendor-specific implementation of this function.
2662:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2663:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
2664:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2665:STM32_XPD/CMSIS/Include/core_cm7.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
2666:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2667:STM32_XPD/CMSIS/Include/core_cm7.h ****     return (1UL);                                                   /* Reload value impossible */
2668:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2669:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2670:STM32_XPD/CMSIS/Include/core_cm7.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
2671:STM32_XPD/CMSIS/Include/core_cm7.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
2672:STM32_XPD/CMSIS/Include/core_cm7.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
2673:STM32_XPD/CMSIS/Include/core_cm7.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
2674:STM32_XPD/CMSIS/Include/core_cm7.h ****                    SysTick_CTRL_TICKINT_Msk   |
2675:STM32_XPD/CMSIS/Include/core_cm7.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
2676:STM32_XPD/CMSIS/Include/core_cm7.h ****   return (0UL);                                                     /* Function successful */
2677:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2678:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2679:STM32_XPD/CMSIS/Include/core_cm7.h **** #endif
2680:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2681:STM32_XPD/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_SysTickFunctions */
2682:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2683:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2684:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2685:STM32_XPD/CMSIS/Include/core_cm7.h **** /* ##################################### Debug In/Output function #################################
2686:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2687:STM32_XPD/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2688:STM32_XPD/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_DebugFunctions ITM Functions
ARM GAS  /tmp/ccYLVUts.s 			page 53


2689:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief    Functions that access the ITM debug interface.
2690:STM32_XPD/CMSIS/Include/core_cm7.h ****   @{
2691:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2692:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2693:STM32_XPD/CMSIS/Include/core_cm7.h **** extern volatile int32_t ITM_RxBuffer;                              /*!< External variable to receiv
2694:STM32_XPD/CMSIS/Include/core_cm7.h **** #define                 ITM_RXBUFFER_EMPTY  ((int32_t)0x5AA55AA5U) /*!< Value identifying \ref ITM_
2695:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2696:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2697:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2698:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   ITM Send Character
2699:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Transmits a character via the ITM channel 0, and
2700:STM32_XPD/CMSIS/Include/core_cm7.h ****            \li Just returns when no debugger is connected that has booked the output.
2701:STM32_XPD/CMSIS/Include/core_cm7.h ****            \li Is blocking when a debugger is connected, but the previous character sent has not be
2702:STM32_XPD/CMSIS/Include/core_cm7.h ****   \param [in]     ch  Character to transmit.
2703:STM32_XPD/CMSIS/Include/core_cm7.h ****   \returns            Character to transmit.
2704:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2705:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
2706:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2707:STM32_XPD/CMSIS/Include/core_cm7.h ****   if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 197              		.loc 2 2707 12 view .LVU32
 198 0002 4FF06043 		mov	r3, #-536870912
 199              	.LBE9:
 200              	.LBE8:
  82:Core/arch/syscalls.c ****     int l = len;
 201              		.loc 1 82 1 view .LVU33
 202 0006 30B4     		push	{r4, r5}
 203              	.LCFI0:
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 4, -8
 206              		.cfi_offset 5, -4
 207 0008 8D18     		adds	r5, r1, r2
 208              	.LVL6:
 209              	.L19:
  86:Core/arch/syscalls.c ****         ITM_SendChar(*ptr++);
 210              		.loc 1 86 9 is_stmt 1 view .LVU34
 211              	.LBB13:
 212              	.LBB10:
 213              		.loc 2 2707 12 is_stmt 0 view .LVU35
 214 000a D3F8804E 		ldr	r4, [r3, #3712]
 215              	.LBE10:
 216              	.LBE13:
 217              		.loc 1 86 26 view .LVU36
 218 000e 0131     		adds	r1, r1, #1
 219              	.LVL7:
 220              	.LBB14:
 221              	.LBI8:
2705:STM32_XPD/CMSIS/Include/core_cm7.h **** {
 222              		.loc 2 2705 26 is_stmt 1 view .LVU37
 223              	.LBB11:
 224              		.loc 2 2707 3 view .LVU38
 225              		.loc 2 2707 6 is_stmt 0 view .LVU39
 226 0010 E407     		lsls	r4, r4, #31
 227 0012 0CD5     		bpl	.L16
2708:STM32_XPD/CMSIS/Include/core_cm7.h ****       ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 228              		.loc 2 2708 12 view .LVU40
 229 0014 D3F8004E 		ldr	r4, [r3, #3584]
2707:STM32_XPD/CMSIS/Include/core_cm7.h ****       ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
ARM GAS  /tmp/ccYLVUts.s 			page 54


 230              		.loc 2 2707 48 view .LVU41
 231 0018 E007     		lsls	r0, r4, #31
 232 001a 08D5     		bpl	.L16
2709:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2710:STM32_XPD/CMSIS/Include/core_cm7.h ****     while (ITM->PORT[0U].u32 == 0UL)
 233              		.loc 2 2710 25 view .LVU42
 234 001c 1C68     		ldr	r4, [r3]
 235              	.LBE11:
 236              	.LBE14:
 237              		.loc 1 86 22 view .LVU43
 238 001e 11F8010C 		ldrb	r0, [r1, #-1]	@ zero_extendqisi2
 239              	.LBB15:
 240              	.LBB12:
 241              		.loc 2 2710 11 is_stmt 1 view .LVU44
 242 0022 1CB9     		cbnz	r4, .L17
 243              	.L18:
2711:STM32_XPD/CMSIS/Include/core_cm7.h ****     {
2712:STM32_XPD/CMSIS/Include/core_cm7.h ****       __NOP();
 244              		.loc 2 2712 7 view .LVU45
 245              		.syntax unified
 246              	@ 2712 "STM32_XPD/CMSIS/Include/core_cm7.h" 1
 247 0024 00BF     		nop
 248              	@ 0 "" 2
2710:STM32_XPD/CMSIS/Include/core_cm7.h ****     {
 249              		.loc 2 2710 11 view .LVU46
2710:STM32_XPD/CMSIS/Include/core_cm7.h ****     {
 250              		.loc 2 2710 25 is_stmt 0 view .LVU47
 251              		.thumb
 252              		.syntax unified
 253 0026 1C68     		ldr	r4, [r3]
2710:STM32_XPD/CMSIS/Include/core_cm7.h ****     {
 254              		.loc 2 2710 11 view .LVU48
 255 0028 002C     		cmp	r4, #0
 256 002a FBD0     		beq	.L18
 257              	.L17:
2713:STM32_XPD/CMSIS/Include/core_cm7.h ****     }
2714:STM32_XPD/CMSIS/Include/core_cm7.h ****     ITM->PORT[0U].u8 = (uint8_t)ch;
 258              		.loc 2 2714 5 is_stmt 1 view .LVU49
 259              		.loc 2 2714 22 is_stmt 0 view .LVU50
 260 002c 1870     		strb	r0, [r3]
 261              	.LVL8:
 262              	.L16:
 263              		.loc 2 2714 22 view .LVU51
 264              	.LBE12:
 265              	.LBE15:
  85:Core/arch/syscalls.c ****         ITM_SendChar(*ptr++);
 266              		.loc 1 85 11 is_stmt 1 view .LVU52
  85:Core/arch/syscalls.c ****         ITM_SendChar(*ptr++);
 267              		.loc 1 85 11 is_stmt 0 view .LVU53
 268 002e A942     		cmp	r1, r5
 269 0030 EBD1     		bne	.L19
  87:Core/arch/syscalls.c **** 	
  88:Core/arch/syscalls.c ****     return len;
 270              		.loc 1 88 5 is_stmt 1 view .LVU54
  89:Core/arch/syscalls.c **** }
 271              		.loc 1 89 1 is_stmt 0 view .LVU55
 272 0032 1046     		mov	r0, r2
ARM GAS  /tmp/ccYLVUts.s 			page 55


 273 0034 30BC     		pop	{r4, r5}
 274              	.LCFI1:
 275              		.cfi_restore 5
 276              		.cfi_restore 4
 277              		.cfi_def_cfa_offset 0
 278 0036 7047     		bx	lr
 279              	.LVL9:
 280              	.L33:
  88:Core/arch/syscalls.c **** }
 281              		.loc 1 88 5 is_stmt 1 view .LVU56
 282              		.loc 1 89 1 is_stmt 0 view .LVU57
 283 0038 1046     		mov	r0, r2
 284              	.LVL10:
 285              		.loc 1 89 1 view .LVU58
 286 003a 7047     		bx	lr
 287              		.cfi_endproc
 288              	.LFE171:
 290              		.section	.text._read,"ax",%progbits
 291              		.align	1
 292              		.p2align 2,,3
 293              		.global	_read
 294              		.syntax unified
 295              		.thumb
 296              		.thumb_func
 297              		.fpu fpv4-sp-d16
 299              	_read:
 300              	.LVL11:
 301              	.LFB172:
  90:Core/arch/syscalls.c **** #endif
  91:Core/arch/syscalls.c **** 
  92:Core/arch/syscalls.c **** #if !defined(STDIN_BUFFER_SIZE) || (STDIN_BUFFER_SIZE == 0)
  93:Core/arch/syscalls.c **** int _read(int32_t file, uint8_t *ptr, int32_t len)
  94:Core/arch/syscalls.c **** {
 302              		.loc 1 94 1 is_stmt 1 view -0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306              		@ link register save eliminated.
  95:Core/arch/syscalls.c ****     int l = len;
 307              		.loc 1 95 5 view .LVU60
  96:Core/arch/syscalls.c **** 
  97:Core/arch/syscalls.c ****     while (l > 0)
 308              		.loc 1 97 5 view .LVU61
 309              		.loc 1 97 11 view .LVU62
 310 0000 101E     		subs	r0, r2, #0
 311              	.LVL12:
 312              		.loc 1 97 11 is_stmt 0 view .LVU63
 313 0002 12DD     		ble	.L46
 314 0004 0C4B     		ldr	r3, .L49
  98:Core/arch/syscalls.c ****     {
  99:Core/arch/syscalls.c ****         while (!ITM_CheckChar()) ;
 100:Core/arch/syscalls.c ****         *ptr++ = (uint8_t)ITM_ReceiveChar();
 315              		.loc 1 100 16 view .LVU64
 316 0006 FF22     		movs	r2, #255
 317              	.LVL13:
  94:Core/arch/syscalls.c ****     int l = len;
 318              		.loc 1 94 1 view .LVU65
ARM GAS  /tmp/ccYLVUts.s 			page 56


 319 0008 70B4     		push	{r4, r5, r6}
 320              	.LCFI2:
 321              		.cfi_def_cfa_offset 12
 322              		.cfi_offset 4, -12
 323              		.cfi_offset 5, -8
 324              		.cfi_offset 6, -4
 325 000a 0E18     		adds	r6, r1, r0
 326              	.LBB16:
 327              	.LBB17:
2715:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2716:STM32_XPD/CMSIS/Include/core_cm7.h ****   return (ch);
2717:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2718:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2719:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2720:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2721:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   ITM Receive Character
2722:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Inputs a character via the external variable \ref ITM_RxBuffer.
2723:STM32_XPD/CMSIS/Include/core_cm7.h ****   \return             Received character.
2724:STM32_XPD/CMSIS/Include/core_cm7.h ****   \return         -1  No character pending.
2725:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2726:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE int32_t ITM_ReceiveChar (void)
2727:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2728:STM32_XPD/CMSIS/Include/core_cm7.h ****   int32_t ch = -1;                           /* no character available */
2729:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2730:STM32_XPD/CMSIS/Include/core_cm7.h ****   if (ITM_RxBuffer != ITM_RXBUFFER_EMPTY)
2731:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2732:STM32_XPD/CMSIS/Include/core_cm7.h ****     ch = ITM_RxBuffer;
2733:STM32_XPD/CMSIS/Include/core_cm7.h ****     ITM_RxBuffer = ITM_RXBUFFER_EMPTY;       /* ready for next character */
2734:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2735:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2736:STM32_XPD/CMSIS/Include/core_cm7.h ****   return (ch);
2737:STM32_XPD/CMSIS/Include/core_cm7.h **** }
2738:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2739:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2740:STM32_XPD/CMSIS/Include/core_cm7.h **** /**
2741:STM32_XPD/CMSIS/Include/core_cm7.h ****   \brief   ITM Check Character
2742:STM32_XPD/CMSIS/Include/core_cm7.h ****   \details Checks whether a character is pending for reading in the variable \ref ITM_RxBuffer.
2743:STM32_XPD/CMSIS/Include/core_cm7.h ****   \return          0  No character available.
2744:STM32_XPD/CMSIS/Include/core_cm7.h ****   \return          1  Character available.
2745:STM32_XPD/CMSIS/Include/core_cm7.h ****  */
2746:STM32_XPD/CMSIS/Include/core_cm7.h **** __STATIC_INLINE int32_t ITM_CheckChar (void)
2747:STM32_XPD/CMSIS/Include/core_cm7.h **** {
2748:STM32_XPD/CMSIS/Include/core_cm7.h **** 
2749:STM32_XPD/CMSIS/Include/core_cm7.h ****   if (ITM_RxBuffer == ITM_RXBUFFER_EMPTY)
 328              		.loc 2 2749 6 view .LVU66
 329 000c 0B4C     		ldr	r4, .L49+4
 330              	.LVL14:
 331              	.L38:
 332              		.loc 2 2749 6 view .LVU67
 333              	.LBE17:
 334              	.LBE16:
  99:Core/arch/syscalls.c ****         *ptr++ = (uint8_t)ITM_ReceiveChar();
 335              		.loc 1 99 34 is_stmt 1 discriminator 1 view .LVU68
  99:Core/arch/syscalls.c ****         *ptr++ = (uint8_t)ITM_ReceiveChar();
 336              		.loc 1 99 15 discriminator 1 view .LVU69
 337              	.LBB20:
 338              	.LBI16:
ARM GAS  /tmp/ccYLVUts.s 			page 57


2746:STM32_XPD/CMSIS/Include/core_cm7.h **** {
 339              		.loc 2 2746 25 discriminator 1 view .LVU70
 340              	.LBB18:
 341              		.loc 2 2749 3 discriminator 1 view .LVU71
2750:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2751:STM32_XPD/CMSIS/Include/core_cm7.h ****     return (0);                              /* no character available */
2752:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
2753:STM32_XPD/CMSIS/Include/core_cm7.h ****   else
2754:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
2755:STM32_XPD/CMSIS/Include/core_cm7.h ****     return (1);                              /*    character available */
 342              		.loc 2 2755 5 discriminator 1 view .LVU72
 343              	.LBE18:
 344              	.LBE20:
 345              		.loc 1 100 9 discriminator 1 view .LVU73
 346              	.LBB21:
 347              	.LBI21:
2726:STM32_XPD/CMSIS/Include/core_cm7.h **** {
 348              		.loc 2 2726 25 discriminator 1 view .LVU74
 349              	.LBB22:
2728:STM32_XPD/CMSIS/Include/core_cm7.h **** 
 350              		.loc 2 2728 3 discriminator 1 view .LVU75
2730:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
 351              		.loc 2 2730 3 discriminator 1 view .LVU76
2732:STM32_XPD/CMSIS/Include/core_cm7.h ****     ITM_RxBuffer = ITM_RXBUFFER_EMPTY;       /* ready for next character */
 352              		.loc 2 2732 5 discriminator 1 view .LVU77
 353              	.LBE22:
 354              	.LBE21:
 355              	.LBB25:
 356              	.LBB19:
2749:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
 357              		.loc 2 2749 20 is_stmt 0 discriminator 1 view .LVU78
 358 000e 1D68     		ldr	r5, [r3]
2749:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
 359              		.loc 2 2749 6 discriminator 1 view .LVU79
 360 0010 A542     		cmp	r5, r4
 361 0012 FCD0     		beq	.L38
 362              	.LBE19:
 363              	.LBE25:
 364              	.LBB26:
 365              	.LBB23:
2730:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
 366              		.loc 2 2730 20 view .LVU80
 367 0014 1D68     		ldr	r5, [r3]
2730:STM32_XPD/CMSIS/Include/core_cm7.h ****   {
 368              		.loc 2 2730 6 view .LVU81
 369 0016 A542     		cmp	r5, r4
 370 0018 08D0     		beq	.L39
2732:STM32_XPD/CMSIS/Include/core_cm7.h ****     ITM_RxBuffer = ITM_RXBUFFER_EMPTY;       /* ready for next character */
 371              		.loc 2 2732 8 view .LVU82
 372 001a 1D68     		ldr	r5, [r3]
 373              	.LVL15:
2733:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
 374              		.loc 2 2733 5 is_stmt 1 view .LVU83
2733:STM32_XPD/CMSIS/Include/core_cm7.h ****   }
 375              		.loc 2 2733 18 is_stmt 0 view .LVU84
 376 001c 1C60     		str	r4, [r3]
 377              	.LVL16:
ARM GAS  /tmp/ccYLVUts.s 			page 58


2736:STM32_XPD/CMSIS/Include/core_cm7.h **** }
 378              		.loc 2 2736 3 is_stmt 1 view .LVU85
2736:STM32_XPD/CMSIS/Include/core_cm7.h **** }
 379              		.loc 2 2736 3 is_stmt 0 view .LVU86
 380              	.LBE23:
 381              	.LBE26:
 382              		.loc 1 100 16 view .LVU87
 383 001e 01F8015B 		strb	r5, [r1], #1
 384              	.LVL17:
 101:Core/arch/syscalls.c ****         l--;
 385              		.loc 1 101 9 is_stmt 1 view .LVU88
  97:Core/arch/syscalls.c ****     {
 386              		.loc 1 97 11 view .LVU89
 387 0022 B142     		cmp	r1, r6
 388 0024 F3D1     		bne	.L38
 389              	.L43:
 102:Core/arch/syscalls.c ****     }
 103:Core/arch/syscalls.c ****     return len;
 104:Core/arch/syscalls.c **** }
 390              		.loc 1 104 1 is_stmt 0 view .LVU90
 391 0026 70BC     		pop	{r4, r5, r6}
 392              	.LCFI3:
 393              		.cfi_restore 6
 394              		.cfi_restore 5
 395              		.cfi_restore 4
 396              		.cfi_def_cfa_offset 0
 397 0028 7047     		bx	lr
 398              	.LVL18:
 399              	.L46:
 400              		.loc 1 104 1 view .LVU91
 401 002a 7047     		bx	lr
 402              	.LVL19:
 403              	.L39:
 404              	.LCFI4:
 405              		.cfi_def_cfa_offset 12
 406              		.cfi_offset 4, -12
 407              		.cfi_offset 5, -8
 408              		.cfi_offset 6, -4
 409              	.LBB27:
 410              	.LBB24:
2736:STM32_XPD/CMSIS/Include/core_cm7.h **** }
 411              		.loc 2 2736 3 is_stmt 1 view .LVU92
2736:STM32_XPD/CMSIS/Include/core_cm7.h **** }
 412              		.loc 2 2736 3 is_stmt 0 view .LVU93
 413              	.LBE24:
 414              	.LBE27:
 100:Core/arch/syscalls.c ****         l--;
 415              		.loc 1 100 16 view .LVU94
 416 002c 01F8012B 		strb	r2, [r1], #1
 417              	.LVL20:
 101:Core/arch/syscalls.c ****     }
 418              		.loc 1 101 9 is_stmt 1 view .LVU95
  97:Core/arch/syscalls.c ****     {
 419              		.loc 1 97 11 view .LVU96
 420 0030 B142     		cmp	r1, r6
 421 0032 ECD1     		bne	.L38
 422 0034 F7E7     		b	.L43
ARM GAS  /tmp/ccYLVUts.s 			page 59


 423              	.L50:
 424 0036 00BF     		.align	2
 425              	.L49:
 426 0038 00000000 		.word	ITM_RxBuffer
 427 003c A55AA55A 		.word	1520786085
 428              		.cfi_endproc
 429              	.LFE172:
 431              		.section	.text._sbrk,"ax",%progbits
 432              		.align	1
 433              		.p2align 2,,3
 434              		.global	_sbrk
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 438              		.fpu fpv4-sp-d16
 440              	_sbrk:
 441              	.LVL21:
 442              	.LFB173:
 105:Core/arch/syscalls.c **** #endif
 106:Core/arch/syscalls.c **** 
 107:Core/arch/syscalls.c **** void * _sbrk(int32_t incr)
 108:Core/arch/syscalls.c **** {
 443              		.loc 1 108 1 view -0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              		@ link register save eliminated.
 109:Core/arch/syscalls.c **** 	extern char   end; /* Set by linker.  */
 448              		.loc 1 109 2 view .LVU98
 110:Core/arch/syscalls.c **** 	static char * heap_end;
 449              		.loc 1 110 2 view .LVU99
 111:Core/arch/syscalls.c **** 	char *        prev_heap_end;
 450              		.loc 1 111 2 view .LVU100
 112:Core/arch/syscalls.c **** 
 113:Core/arch/syscalls.c **** 	if (heap_end == 0) {
 451              		.loc 1 113 2 view .LVU101
 452              		.loc 1 113 15 is_stmt 0 view .LVU102
 453 0000 0449     		ldr	r1, .L54
 454 0002 054A     		ldr	r2, .L54+4
 455 0004 0B68     		ldr	r3, [r1]
 456 0006 002B     		cmp	r3, #0
 457 0008 08BF     		it	eq
 458 000a 1346     		moveq	r3, r2
 114:Core/arch/syscalls.c **** 		heap_end = & end;
 115:Core/arch/syscalls.c **** 	}
 116:Core/arch/syscalls.c **** 
 117:Core/arch/syscalls.c **** 	prev_heap_end = heap_end;
 459              		.loc 1 117 2 is_stmt 1 view .LVU103
 460              	.LVL22:
 118:Core/arch/syscalls.c **** 	heap_end += incr;
 461              		.loc 1 118 2 view .LVU104
 462              		.loc 1 118 11 is_stmt 0 view .LVU105
 463 000c 1A18     		adds	r2, r3, r0
 119:Core/arch/syscalls.c **** 
 120:Core/arch/syscalls.c **** 	return (void *) prev_heap_end;
 121:Core/arch/syscalls.c **** }
 464              		.loc 1 121 1 view .LVU106
ARM GAS  /tmp/ccYLVUts.s 			page 60


 465 000e 1846     		mov	r0, r3
 466              	.LVL23:
 118:Core/arch/syscalls.c **** 	heap_end += incr;
 467              		.loc 1 118 11 view .LVU107
 468 0010 0A60     		str	r2, [r1]
 469              	.LVL24:
 120:Core/arch/syscalls.c **** }
 470              		.loc 1 120 2 is_stmt 1 view .LVU108
 471              		.loc 1 121 1 is_stmt 0 view .LVU109
 472 0012 7047     		bx	lr
 473              	.L55:
 474              		.align	2
 475              	.L54:
 476 0014 00000000 		.word	.LANCHOR0
 477 0018 00000000 		.word	end
 478              		.cfi_endproc
 479              	.LFE173:
 481              		.section	.text._close,"ax",%progbits
 482              		.align	1
 483              		.p2align 2,,3
 484              		.global	_close
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 488              		.fpu fpv4-sp-d16
 490              	_close:
 491              	.LVL25:
 492              	.LFB174:
 122:Core/arch/syscalls.c **** 
 123:Core/arch/syscalls.c **** int _close(int32_t file)
 124:Core/arch/syscalls.c **** {
 493              		.loc 1 124 1 is_stmt 1 view -0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 125:Core/arch/syscalls.c **** 	errno = ENOSYS;
 498              		.loc 1 125 2 view .LVU111
 499              		.loc 1 125 8 is_stmt 0 view .LVU112
 500 0000 024B     		ldr	r3, .L57
 501 0002 5822     		movs	r2, #88
 126:Core/arch/syscalls.c **** 	return -1;
 127:Core/arch/syscalls.c **** }
 502              		.loc 1 127 1 view .LVU113
 503 0004 4FF0FF30 		mov	r0, #-1
 504              	.LVL26:
 125:Core/arch/syscalls.c **** 	errno = ENOSYS;
 505              		.loc 1 125 8 view .LVU114
 506 0008 1A60     		str	r2, [r3]
 126:Core/arch/syscalls.c **** 	return -1;
 507              		.loc 1 126 2 is_stmt 1 view .LVU115
 508              		.loc 1 127 1 is_stmt 0 view .LVU116
 509 000a 7047     		bx	lr
 510              	.L58:
 511              		.align	2
 512              	.L57:
 513 000c 00000000 		.word	errno
ARM GAS  /tmp/ccYLVUts.s 			page 61


 514              		.cfi_endproc
 515              	.LFE174:
 517              		.section	.text._fstat,"ax",%progbits
 518              		.align	1
 519              		.p2align 2,,3
 520              		.global	_fstat
 521              		.syntax unified
 522              		.thumb
 523              		.thumb_func
 524              		.fpu fpv4-sp-d16
 526              	_fstat:
 527              	.LVL27:
 528              	.LFB175:
 128:Core/arch/syscalls.c **** 
 129:Core/arch/syscalls.c **** 
 130:Core/arch/syscalls.c **** int _fstat(int32_t file, struct stat *st)
 131:Core/arch/syscalls.c **** {
 529              		.loc 1 131 1 is_stmt 1 view -0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              		@ link register save eliminated.
 132:Core/arch/syscalls.c **** 	errno = ENOSYS;
 534              		.loc 1 132 2 view .LVU118
 535              		.loc 1 132 8 is_stmt 0 view .LVU119
 536 0000 024B     		ldr	r3, .L60
 537 0002 5822     		movs	r2, #88
 133:Core/arch/syscalls.c **** 	return -1;
 134:Core/arch/syscalls.c **** }
 538              		.loc 1 134 1 view .LVU120
 539 0004 4FF0FF30 		mov	r0, #-1
 540              	.LVL28:
 132:Core/arch/syscalls.c **** 	errno = ENOSYS;
 541              		.loc 1 132 8 view .LVU121
 542 0008 1A60     		str	r2, [r3]
 133:Core/arch/syscalls.c **** 	return -1;
 543              		.loc 1 133 2 is_stmt 1 view .LVU122
 544              		.loc 1 134 1 is_stmt 0 view .LVU123
 545 000a 7047     		bx	lr
 546              	.L61:
 547              		.align	2
 548              	.L60:
 549 000c 00000000 		.word	errno
 550              		.cfi_endproc
 551              	.LFE175:
 553              		.section	.text._isatty,"ax",%progbits
 554              		.align	1
 555              		.p2align 2,,3
 556              		.global	_isatty
 557              		.syntax unified
 558              		.thumb
 559              		.thumb_func
 560              		.fpu fpv4-sp-d16
 562              	_isatty:
 563              	.LVL29:
 564              	.LFB176:
 135:Core/arch/syscalls.c **** 
ARM GAS  /tmp/ccYLVUts.s 			page 62


 136:Core/arch/syscalls.c **** int _isatty(int32_t file)
 137:Core/arch/syscalls.c **** {
 565              		.loc 1 137 1 is_stmt 1 view -0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 138:Core/arch/syscalls.c **** 	errno = ENOSYS;
 570              		.loc 1 138 2 view .LVU125
 571              		.loc 1 138 8 is_stmt 0 view .LVU126
 572 0000 024B     		ldr	r3, .L63
 573 0002 5822     		movs	r2, #88
 139:Core/arch/syscalls.c **** 	return 0;
 140:Core/arch/syscalls.c **** }
 574              		.loc 1 140 1 view .LVU127
 575 0004 0020     		movs	r0, #0
 576              	.LVL30:
 138:Core/arch/syscalls.c **** 	errno = ENOSYS;
 577              		.loc 1 138 8 view .LVU128
 578 0006 1A60     		str	r2, [r3]
 139:Core/arch/syscalls.c **** 	return 0;
 579              		.loc 1 139 2 is_stmt 1 view .LVU129
 580              		.loc 1 140 1 is_stmt 0 view .LVU130
 581 0008 7047     		bx	lr
 582              	.L64:
 583 000a 00BF     		.align	2
 584              	.L63:
 585 000c 00000000 		.word	errno
 586              		.cfi_endproc
 587              	.LFE176:
 589              		.section	.text._lseek,"ax",%progbits
 590              		.align	1
 591              		.p2align 2,,3
 592              		.global	_lseek
 593              		.syntax unified
 594              		.thumb
 595              		.thumb_func
 596              		.fpu fpv4-sp-d16
 598              	_lseek:
 599              	.LVL31:
 600              	.LFB177:
 141:Core/arch/syscalls.c **** 
 142:Core/arch/syscalls.c **** int _lseek(int32_t file, int32_t ptr, int32_t dir)
 143:Core/arch/syscalls.c **** {
 601              		.loc 1 143 1 is_stmt 1 view -0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              		@ link register save eliminated.
 144:Core/arch/syscalls.c **** 	errno = ENOSYS;
 606              		.loc 1 144 2 view .LVU132
 607              		.loc 1 144 8 is_stmt 0 view .LVU133
 608 0000 024B     		ldr	r3, .L66
 609 0002 5822     		movs	r2, #88
 610              	.LVL32:
 145:Core/arch/syscalls.c **** 	return -1;
 146:Core/arch/syscalls.c **** }
ARM GAS  /tmp/ccYLVUts.s 			page 63


 611              		.loc 1 146 1 view .LVU134
 612 0004 4FF0FF30 		mov	r0, #-1
 613              	.LVL33:
 144:Core/arch/syscalls.c **** 	errno = ENOSYS;
 614              		.loc 1 144 8 view .LVU135
 615 0008 1A60     		str	r2, [r3]
 145:Core/arch/syscalls.c **** 	return -1;
 616              		.loc 1 145 2 is_stmt 1 view .LVU136
 617              		.loc 1 146 1 is_stmt 0 view .LVU137
 618 000a 7047     		bx	lr
 619              	.L67:
 620              		.align	2
 621              	.L66:
 622 000c 00000000 		.word	errno
 623              		.cfi_endproc
 624              	.LFE177:
 626              		.section	.text._readlink,"ax",%progbits
 627              		.align	1
 628              		.p2align 2,,3
 629              		.global	_readlink
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 633              		.fpu fpv4-sp-d16
 635              	_readlink:
 636              	.LVL34:
 637              	.LFB178:
 147:Core/arch/syscalls.c **** 
 148:Core/arch/syscalls.c **** int _readlink(const char *path, char *buf, size_t bufsize)
 149:Core/arch/syscalls.c **** {
 638              		.loc 1 149 1 is_stmt 1 view -0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642              		@ link register save eliminated.
 150:Core/arch/syscalls.c ****   errno = ENOSYS;
 643              		.loc 1 150 3 view .LVU139
 644              		.loc 1 150 9 is_stmt 0 view .LVU140
 645 0000 024B     		ldr	r3, .L69
 646 0002 5822     		movs	r2, #88
 647              	.LVL35:
 151:Core/arch/syscalls.c ****   return -1;
 152:Core/arch/syscalls.c **** }
 648              		.loc 1 152 1 view .LVU141
 649 0004 4FF0FF30 		mov	r0, #-1
 650              	.LVL36:
 150:Core/arch/syscalls.c ****   errno = ENOSYS;
 651              		.loc 1 150 9 view .LVU142
 652 0008 1A60     		str	r2, [r3]
 151:Core/arch/syscalls.c ****   return -1;
 653              		.loc 1 151 3 is_stmt 1 view .LVU143
 654              		.loc 1 152 1 is_stmt 0 view .LVU144
 655 000a 7047     		bx	lr
 656              	.L70:
 657              		.align	2
 658              	.L69:
 659 000c 00000000 		.word	errno
ARM GAS  /tmp/ccYLVUts.s 			page 64


 660              		.cfi_endproc
 661              	.LFE178:
 663              		.section	.text._open,"ax",%progbits
 664              		.align	1
 665              		.p2align 2,,3
 666              		.global	_open
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 670              		.fpu fpv4-sp-d16
 672              	_open:
 673              	.LVL37:
 674              	.LFB179:
 153:Core/arch/syscalls.c **** 
 154:Core/arch/syscalls.c **** int _open(const uint8_t *path, int32_t flags, int32_t mode)
 155:Core/arch/syscalls.c **** {
 675              		.loc 1 155 1 is_stmt 1 view -0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              		@ link register save eliminated.
 156:Core/arch/syscalls.c **** 	errno = ENOSYS;
 680              		.loc 1 156 2 view .LVU146
 681              		.loc 1 156 8 is_stmt 0 view .LVU147
 682 0000 024B     		ldr	r3, .L72
 683 0002 5822     		movs	r2, #88
 684              	.LVL38:
 157:Core/arch/syscalls.c **** 	return -1;
 158:Core/arch/syscalls.c **** }
 685              		.loc 1 158 1 view .LVU148
 686 0004 4FF0FF30 		mov	r0, #-1
 687              	.LVL39:
 156:Core/arch/syscalls.c **** 	errno = ENOSYS;
 688              		.loc 1 156 8 view .LVU149
 689 0008 1A60     		str	r2, [r3]
 157:Core/arch/syscalls.c **** 	return -1;
 690              		.loc 1 157 2 is_stmt 1 view .LVU150
 691              		.loc 1 158 1 is_stmt 0 view .LVU151
 692 000a 7047     		bx	lr
 693              	.L73:
 694              		.align	2
 695              	.L72:
 696 000c 00000000 		.word	errno
 697              		.cfi_endproc
 698              	.LFE179:
 700              		.section	.text._wait,"ax",%progbits
 701              		.align	1
 702              		.p2align 2,,3
 703              		.global	_wait
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 707              		.fpu fpv4-sp-d16
 709              	_wait:
 710              	.LVL40:
 711              	.LFB180:
 159:Core/arch/syscalls.c **** 
ARM GAS  /tmp/ccYLVUts.s 			page 65


 160:Core/arch/syscalls.c **** int _wait(int32_t *status)
 161:Core/arch/syscalls.c **** {
 712              		.loc 1 161 1 is_stmt 1 view -0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 162:Core/arch/syscalls.c **** 	errno = ENOSYS;
 717              		.loc 1 162 2 view .LVU153
 718              		.loc 1 162 8 is_stmt 0 view .LVU154
 719 0000 024B     		ldr	r3, .L75
 720 0002 5822     		movs	r2, #88
 163:Core/arch/syscalls.c **** 	return -1;
 164:Core/arch/syscalls.c **** }
 721              		.loc 1 164 1 view .LVU155
 722 0004 4FF0FF30 		mov	r0, #-1
 723              	.LVL41:
 162:Core/arch/syscalls.c **** 	errno = ENOSYS;
 724              		.loc 1 162 8 view .LVU156
 725 0008 1A60     		str	r2, [r3]
 163:Core/arch/syscalls.c **** 	return -1;
 726              		.loc 1 163 2 is_stmt 1 view .LVU157
 727              		.loc 1 164 1 is_stmt 0 view .LVU158
 728 000a 7047     		bx	lr
 729              	.L76:
 730              		.align	2
 731              	.L75:
 732 000c 00000000 		.word	errno
 733              		.cfi_endproc
 734              	.LFE180:
 736              		.section	.text._unlink,"ax",%progbits
 737              		.align	1
 738              		.p2align 2,,3
 739              		.global	_unlink
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 743              		.fpu fpv4-sp-d16
 745              	_unlink:
 746              	.LFB197:
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750              		@ link register save eliminated.
 751 0000 024B     		ldr	r3, .L78
 752 0002 5822     		movs	r2, #88
 753 0004 4FF0FF30 		mov	r0, #-1
 754 0008 1A60     		str	r2, [r3]
 755 000a 7047     		bx	lr
 756              	.L79:
 757              		.align	2
 758              	.L78:
 759 000c 00000000 		.word	errno
 760              		.cfi_endproc
 761              	.LFE197:
 763              		.section	.text._times,"ax",%progbits
 764              		.align	1
ARM GAS  /tmp/ccYLVUts.s 			page 66


 765              		.p2align 2,,3
 766              		.global	_times
 767              		.syntax unified
 768              		.thumb
 769              		.thumb_func
 770              		.fpu fpv4-sp-d16
 772              	_times:
 773              	.LFB199:
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              		@ link register save eliminated.
 778 0000 024B     		ldr	r3, .L81
 779 0002 5822     		movs	r2, #88
 780 0004 4FF0FF30 		mov	r0, #-1
 781 0008 1A60     		str	r2, [r3]
 782 000a 7047     		bx	lr
 783              	.L82:
 784              		.align	2
 785              	.L81:
 786 000c 00000000 		.word	errno
 787              		.cfi_endproc
 788              	.LFE199:
 790              		.section	.text._stat,"ax",%progbits
 791              		.align	1
 792              		.p2align 2,,3
 793              		.global	_stat
 794              		.syntax unified
 795              		.thumb
 796              		.thumb_func
 797              		.fpu fpv4-sp-d16
 799              	_stat:
 800              	.LFB191:
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              		@ link register save eliminated.
 805 0000 024B     		ldr	r3, .L84
 806 0002 5822     		movs	r2, #88
 807 0004 4FF0FF30 		mov	r0, #-1
 808 0008 1A60     		str	r2, [r3]
 809 000a 7047     		bx	lr
 810              	.L85:
 811              		.align	2
 812              	.L84:
 813 000c 00000000 		.word	errno
 814              		.cfi_endproc
 815              	.LFE191:
 817              		.section	.text._symlink,"ax",%progbits
 818              		.align	1
 819              		.p2align 2,,3
 820              		.global	_symlink
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu fpv4-sp-d16
 826              	_symlink:
ARM GAS  /tmp/ccYLVUts.s 			page 67


 827              	.LFB193:
 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 0
 830              		@ frame_needed = 0, uses_anonymous_args = 0
 831              		@ link register save eliminated.
 832 0000 024B     		ldr	r3, .L87
 833 0002 5822     		movs	r2, #88
 834 0004 4FF0FF30 		mov	r0, #-1
 835 0008 1A60     		str	r2, [r3]
 836 000a 7047     		bx	lr
 837              	.L88:
 838              		.align	2
 839              	.L87:
 840 000c 00000000 		.word	errno
 841              		.cfi_endproc
 842              	.LFE193:
 844              		.section	.text._link,"ax",%progbits
 845              		.align	1
 846              		.p2align 2,,3
 847              		.global	_link
 848              		.syntax unified
 849              		.thumb
 850              		.thumb_func
 851              		.fpu fpv4-sp-d16
 853              	_link:
 854              	.LFB195:
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 859 0000 024B     		ldr	r3, .L90
 860 0002 5822     		movs	r2, #88
 861 0004 4FF0FF30 		mov	r0, #-1
 862 0008 1A60     		str	r2, [r3]
 863 000a 7047     		bx	lr
 864              	.L91:
 865              		.align	2
 866              	.L90:
 867 000c 00000000 		.word	errno
 868              		.cfi_endproc
 869              	.LFE195:
 871              		.section	.text._fork,"ax",%progbits
 872              		.align	1
 873              		.p2align 2,,3
 874              		.global	_fork
 875              		.syntax unified
 876              		.thumb
 877              		.thumb_func
 878              		.fpu fpv4-sp-d16
 880              	_fork:
 881              	.LFB189:
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885              		@ link register save eliminated.
 886 0000 024B     		ldr	r3, .L93
 887 0002 5822     		movs	r2, #88
ARM GAS  /tmp/ccYLVUts.s 			page 68


 888 0004 4FF0FF30 		mov	r0, #-1
 889 0008 1A60     		str	r2, [r3]
 890 000a 7047     		bx	lr
 891              	.L94:
 892              		.align	2
 893              	.L93:
 894 000c 00000000 		.word	errno
 895              		.cfi_endproc
 896              	.LFE189:
 898              		.section	.text._execve,"ax",%progbits
 899              		.align	1
 900              		.p2align 2,,3
 901              		.global	_execve
 902              		.syntax unified
 903              		.thumb
 904              		.thumb_func
 905              		.fpu fpv4-sp-d16
 907              	_execve:
 908              	.LVL42:
 909              	.LFB187:
 165:Core/arch/syscalls.c **** 
 166:Core/arch/syscalls.c **** int _unlink(const uint8_t *name)
 167:Core/arch/syscalls.c **** {
 168:Core/arch/syscalls.c **** 	errno = ENOSYS;
 169:Core/arch/syscalls.c **** 	return -1;
 170:Core/arch/syscalls.c **** }
 171:Core/arch/syscalls.c **** 
 172:Core/arch/syscalls.c **** int _times(struct tms *buf)
 173:Core/arch/syscalls.c **** {
 174:Core/arch/syscalls.c **** 	errno = ENOSYS;
 175:Core/arch/syscalls.c **** 	return -1;
 176:Core/arch/syscalls.c **** }
 177:Core/arch/syscalls.c **** 
 178:Core/arch/syscalls.c **** int _stat(const uint8_t *file, struct stat *st)
 179:Core/arch/syscalls.c **** {
 180:Core/arch/syscalls.c **** 	errno = ENOSYS;
 181:Core/arch/syscalls.c **** 	return -1;
 182:Core/arch/syscalls.c **** }
 183:Core/arch/syscalls.c **** 
 184:Core/arch/syscalls.c **** int _symlink(const char *path1, const char *path2)
 185:Core/arch/syscalls.c **** {
 186:Core/arch/syscalls.c ****   errno = ENOSYS;
 187:Core/arch/syscalls.c ****   return -1;
 188:Core/arch/syscalls.c **** }
 189:Core/arch/syscalls.c **** 
 190:Core/arch/syscalls.c **** int _link(const uint8_t *old, const uint8_t *new)
 191:Core/arch/syscalls.c **** {
 192:Core/arch/syscalls.c **** 	errno = ENOSYS;
 193:Core/arch/syscalls.c **** 	return -1;
 194:Core/arch/syscalls.c **** }
 195:Core/arch/syscalls.c **** 
 196:Core/arch/syscalls.c **** int _fork(void)
 197:Core/arch/syscalls.c **** {
 198:Core/arch/syscalls.c **** 	errno = ENOSYS;
 199:Core/arch/syscalls.c **** 	return -1;
 200:Core/arch/syscalls.c **** }
 201:Core/arch/syscalls.c **** 
ARM GAS  /tmp/ccYLVUts.s 			page 69


 202:Core/arch/syscalls.c **** int _execve(const uint8_t *name, uint8_t * const *argv, uint8_t * const *env)
 203:Core/arch/syscalls.c **** {
 910              		.loc 1 203 1 is_stmt 1 view -0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914              		@ link register save eliminated.
 204:Core/arch/syscalls.c **** 	errno = ENOSYS;
 915              		.loc 1 204 2 view .LVU160
 916              		.loc 1 204 8 is_stmt 0 view .LVU161
 917 0000 024B     		ldr	r3, .L96
 918 0002 5822     		movs	r2, #88
 919              	.LVL43:
 205:Core/arch/syscalls.c **** 	return -1;
 206:Core/arch/syscalls.c **** }
 920              		.loc 1 206 1 view .LVU162
 921 0004 4FF0FF30 		mov	r0, #-1
 922              	.LVL44:
 204:Core/arch/syscalls.c **** 	errno = ENOSYS;
 923              		.loc 1 204 8 view .LVU163
 924 0008 1A60     		str	r2, [r3]
 205:Core/arch/syscalls.c **** 	return -1;
 925              		.loc 1 205 2 is_stmt 1 view .LVU164
 926              		.loc 1 206 1 is_stmt 0 view .LVU165
 927 000a 7047     		bx	lr
 928              	.L97:
 929              		.align	2
 930              	.L96:
 931 000c 00000000 		.word	errno
 932              		.cfi_endproc
 933              	.LFE187:
 935              		.global	environ
 936              		.global	__env
 937              		.section	.bss.__env,"aw",%nobits
 938              		.align	2
 941              	__env:
 942 0000 00000000 		.space	4
 943              		.section	.bss.heap_end.9951,"aw",%nobits
 944              		.align	2
 945              		.set	.LANCHOR0,. + 0
 948              	heap_end.9951:
 949 0000 00000000 		.space	4
 950              		.section	.data.environ,"aw"
 951              		.align	2
 954              	environ:
 955 0000 00000000 		.word	__env
 956              		.text
 957              	.Letext0:
 958              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 959              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 960              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 961              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 962              		.file 7 "/usr/arm-none-eabi/include/sys/_types.h"
 963              		.file 8 "/usr/arm-none-eabi/include/sys/reent.h"
 964              		.file 9 "/usr/arm-none-eabi/include/sys/_timeval.h"
 965              		.file 10 "/usr/arm-none-eabi/include/sys/types.h"
 966              		.file 11 "/usr/arm-none-eabi/include/time.h"
ARM GAS  /tmp/ccYLVUts.s 			page 70


 967              		.file 12 "/usr/arm-none-eabi/include/sys/stat.h"
 968              		.file 13 "/usr/arm-none-eabi/include/stdlib.h"
 969              		.file 14 "/usr/arm-none-eabi/include/sys/errno.h"
 970              		.file 15 "/usr/arm-none-eabi/include/sys/times.h"
 971              		.file 16 "STM32_XPD/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
ARM GAS  /tmp/ccYLVUts.s 			page 71


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscalls.c
     /tmp/ccYLVUts.s:18     .text.initialise_monitor_handles:0000000000000000 $t
     /tmp/ccYLVUts.s:27     .text.initialise_monitor_handles:0000000000000000 initialise_monitor_handles
     /tmp/ccYLVUts.s:41     .text._getpid:0000000000000000 $t
     /tmp/ccYLVUts.s:49     .text._getpid:0000000000000000 _getpid
     /tmp/ccYLVUts.s:70     .text._getpid:000000000000000c $d
     /tmp/ccYLVUts.s:75     .text._gettimeofday:0000000000000000 $t
     /tmp/ccYLVUts.s:83     .text._gettimeofday:0000000000000000 _gettimeofday
     /tmp/ccYLVUts.s:106    .text._gettimeofday:000000000000000c $d
     /tmp/ccYLVUts.s:111    .text._kill:0000000000000000 $t
     /tmp/ccYLVUts.s:119    .text._kill:0000000000000000 _kill
     /tmp/ccYLVUts.s:142    .text._kill:000000000000000c $d
     /tmp/ccYLVUts.s:147    .text._exit:0000000000000000 $t
     /tmp/ccYLVUts.s:155    .text._exit:0000000000000000 _exit
     /tmp/ccYLVUts.s:173    .text._write:0000000000000000 $t
     /tmp/ccYLVUts.s:181    .text._write:0000000000000000 _write
     /tmp/ccYLVUts.s:291    .text._read:0000000000000000 $t
     /tmp/ccYLVUts.s:299    .text._read:0000000000000000 _read
     /tmp/ccYLVUts.s:426    .text._read:0000000000000038 $d
     /tmp/ccYLVUts.s:432    .text._sbrk:0000000000000000 $t
     /tmp/ccYLVUts.s:440    .text._sbrk:0000000000000000 _sbrk
     /tmp/ccYLVUts.s:476    .text._sbrk:0000000000000014 $d
     /tmp/ccYLVUts.s:482    .text._close:0000000000000000 $t
     /tmp/ccYLVUts.s:490    .text._close:0000000000000000 _close
     /tmp/ccYLVUts.s:513    .text._close:000000000000000c $d
     /tmp/ccYLVUts.s:518    .text._fstat:0000000000000000 $t
     /tmp/ccYLVUts.s:526    .text._fstat:0000000000000000 _fstat
     /tmp/ccYLVUts.s:549    .text._fstat:000000000000000c $d
     /tmp/ccYLVUts.s:554    .text._isatty:0000000000000000 $t
     /tmp/ccYLVUts.s:562    .text._isatty:0000000000000000 _isatty
     /tmp/ccYLVUts.s:585    .text._isatty:000000000000000c $d
     /tmp/ccYLVUts.s:590    .text._lseek:0000000000000000 $t
     /tmp/ccYLVUts.s:598    .text._lseek:0000000000000000 _lseek
     /tmp/ccYLVUts.s:622    .text._lseek:000000000000000c $d
     /tmp/ccYLVUts.s:627    .text._readlink:0000000000000000 $t
     /tmp/ccYLVUts.s:635    .text._readlink:0000000000000000 _readlink
     /tmp/ccYLVUts.s:659    .text._readlink:000000000000000c $d
     /tmp/ccYLVUts.s:664    .text._open:0000000000000000 $t
     /tmp/ccYLVUts.s:672    .text._open:0000000000000000 _open
     /tmp/ccYLVUts.s:696    .text._open:000000000000000c $d
     /tmp/ccYLVUts.s:701    .text._wait:0000000000000000 $t
     /tmp/ccYLVUts.s:709    .text._wait:0000000000000000 _wait
     /tmp/ccYLVUts.s:732    .text._wait:000000000000000c $d
     /tmp/ccYLVUts.s:737    .text._unlink:0000000000000000 $t
     /tmp/ccYLVUts.s:745    .text._unlink:0000000000000000 _unlink
     /tmp/ccYLVUts.s:759    .text._unlink:000000000000000c $d
     /tmp/ccYLVUts.s:764    .text._times:0000000000000000 $t
     /tmp/ccYLVUts.s:772    .text._times:0000000000000000 _times
     /tmp/ccYLVUts.s:786    .text._times:000000000000000c $d
     /tmp/ccYLVUts.s:791    .text._stat:0000000000000000 $t
     /tmp/ccYLVUts.s:799    .text._stat:0000000000000000 _stat
     /tmp/ccYLVUts.s:813    .text._stat:000000000000000c $d
     /tmp/ccYLVUts.s:818    .text._symlink:0000000000000000 $t
     /tmp/ccYLVUts.s:826    .text._symlink:0000000000000000 _symlink
     /tmp/ccYLVUts.s:840    .text._symlink:000000000000000c $d
     /tmp/ccYLVUts.s:845    .text._link:0000000000000000 $t
ARM GAS  /tmp/ccYLVUts.s 			page 72


     /tmp/ccYLVUts.s:853    .text._link:0000000000000000 _link
     /tmp/ccYLVUts.s:867    .text._link:000000000000000c $d
     /tmp/ccYLVUts.s:872    .text._fork:0000000000000000 $t
     /tmp/ccYLVUts.s:880    .text._fork:0000000000000000 _fork
     /tmp/ccYLVUts.s:894    .text._fork:000000000000000c $d
     /tmp/ccYLVUts.s:899    .text._execve:0000000000000000 $t
     /tmp/ccYLVUts.s:907    .text._execve:0000000000000000 _execve
     /tmp/ccYLVUts.s:931    .text._execve:000000000000000c $d
     /tmp/ccYLVUts.s:954    .data.environ:0000000000000000 environ
     /tmp/ccYLVUts.s:941    .bss.__env:0000000000000000 __env
     /tmp/ccYLVUts.s:938    .bss.__env:0000000000000000 $d
     /tmp/ccYLVUts.s:944    .bss.heap_end.9951:0000000000000000 $d
     /tmp/ccYLVUts.s:948    .bss.heap_end.9951:0000000000000000 heap_end.9951
     /tmp/ccYLVUts.s:951    .data.environ:0000000000000000 $d

UNDEFINED SYMBOLS
errno
ITM_RxBuffer
end
