ARM GAS  /tmp/ccJm3wen.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"dns.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.dns_call_found,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	dns_call_found:
  27              	.LVL0:
  28              	.LFB120:
  29              		.file 1 "lwIP/src/core/dns.c"
   1:lwIP/src/core/dns.c **** /**
   2:lwIP/src/core/dns.c ****  * @file
   3:lwIP/src/core/dns.c ****  * DNS - host name to IP address resolver.
   4:lwIP/src/core/dns.c ****  *
   5:lwIP/src/core/dns.c ****  * @defgroup dns DNS
   6:lwIP/src/core/dns.c ****  * @ingroup callbackstyle_api
   7:lwIP/src/core/dns.c ****  *
   8:lwIP/src/core/dns.c ****  * Implements a DNS host name to IP address resolver.
   9:lwIP/src/core/dns.c ****  *
  10:lwIP/src/core/dns.c ****  * The lwIP DNS resolver functions are used to lookup a host name and
  11:lwIP/src/core/dns.c ****  * map it to a numerical IP address. It maintains a list of resolved
  12:lwIP/src/core/dns.c ****  * hostnames that can be queried with the dns_lookup() function.
  13:lwIP/src/core/dns.c ****  * New hostnames can be resolved using the dns_query() function.
  14:lwIP/src/core/dns.c ****  *
  15:lwIP/src/core/dns.c ****  * The lwIP version of the resolver also adds a non-blocking version of
  16:lwIP/src/core/dns.c ****  * gethostbyname() that will work with a raw API application. This function
  17:lwIP/src/core/dns.c ****  * checks for an IP address string first and converts it if it is valid.
  18:lwIP/src/core/dns.c ****  * gethostbyname() then does a dns_lookup() to see if the name is
  19:lwIP/src/core/dns.c ****  * already in the table. If so, the IP is returned. If not, a query is
  20:lwIP/src/core/dns.c ****  * issued and the function returns with a ERR_INPROGRESS status. The app
  21:lwIP/src/core/dns.c ****  * using the dns client must then go into a waiting state.
  22:lwIP/src/core/dns.c ****  *
  23:lwIP/src/core/dns.c ****  * Once a hostname has been resolved (or found to be non-existent),
  24:lwIP/src/core/dns.c ****  * the resolver code calls a specified callback function (which
  25:lwIP/src/core/dns.c ****  * must be implemented by the module that uses the resolver).
  26:lwIP/src/core/dns.c ****  *
  27:lwIP/src/core/dns.c ****  * Multicast DNS queries are supported for names ending on ".local".
  28:lwIP/src/core/dns.c ****  * However, only "One-Shot Multicast DNS Queries" are supported (RFC 6762
  29:lwIP/src/core/dns.c ****  * chapter 5.1), this is not a fully compliant implementation of continuous
ARM GAS  /tmp/ccJm3wen.s 			page 2


  30:lwIP/src/core/dns.c ****  * mDNS querying!
  31:lwIP/src/core/dns.c ****  *
  32:lwIP/src/core/dns.c ****  * All functions must be called from TCPIP thread.
  33:lwIP/src/core/dns.c ****  *
  34:lwIP/src/core/dns.c ****  * @see DNS_MAX_SERVERS
  35:lwIP/src/core/dns.c ****  * @see LWIP_DHCP_MAX_DNS_SERVERS
  36:lwIP/src/core/dns.c ****  * @see @ref netconn_common for thread-safe access.
  37:lwIP/src/core/dns.c ****  */
  38:lwIP/src/core/dns.c **** 
  39:lwIP/src/core/dns.c **** /*
  40:lwIP/src/core/dns.c ****  * Port to lwIP from uIP
  41:lwIP/src/core/dns.c ****  * by Jim Pettinato April 2007
  42:lwIP/src/core/dns.c ****  *
  43:lwIP/src/core/dns.c ****  * security fixes and more by Simon Goldschmidt
  44:lwIP/src/core/dns.c ****  *
  45:lwIP/src/core/dns.c ****  * uIP version Copyright (c) 2002-2003, Adam Dunkels.
  46:lwIP/src/core/dns.c ****  * All rights reserved.
  47:lwIP/src/core/dns.c ****  *
  48:lwIP/src/core/dns.c ****  * Redistribution and use in source and binary forms, with or without
  49:lwIP/src/core/dns.c ****  * modification, are permitted provided that the following conditions
  50:lwIP/src/core/dns.c ****  * are met:
  51:lwIP/src/core/dns.c ****  * 1. Redistributions of source code must retain the above copyright
  52:lwIP/src/core/dns.c ****  *    notice, this list of conditions and the following disclaimer.
  53:lwIP/src/core/dns.c ****  * 2. Redistributions in binary form must reproduce the above copyright
  54:lwIP/src/core/dns.c ****  *    notice, this list of conditions and the following disclaimer in the
  55:lwIP/src/core/dns.c ****  *    documentation and/or other materials provided with the distribution.
  56:lwIP/src/core/dns.c ****  * 3. The name of the author may not be used to endorse or promote
  57:lwIP/src/core/dns.c ****  *    products derived from this software without specific prior
  58:lwIP/src/core/dns.c ****  *    written permission.
  59:lwIP/src/core/dns.c ****  *
  60:lwIP/src/core/dns.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
  61:lwIP/src/core/dns.c ****  * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  62:lwIP/src/core/dns.c ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  63:lwIP/src/core/dns.c ****  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
  64:lwIP/src/core/dns.c ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  65:lwIP/src/core/dns.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
  66:lwIP/src/core/dns.c ****  * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  67:lwIP/src/core/dns.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  68:lwIP/src/core/dns.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  69:lwIP/src/core/dns.c ****  * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  70:lwIP/src/core/dns.c ****  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  71:lwIP/src/core/dns.c ****  */
  72:lwIP/src/core/dns.c **** 
  73:lwIP/src/core/dns.c **** /*-----------------------------------------------------------------------------
  74:lwIP/src/core/dns.c ****  * RFC 1035 - Domain names - implementation and specification
  75:lwIP/src/core/dns.c ****  * RFC 2181 - Clarifications to the DNS Specification
  76:lwIP/src/core/dns.c ****  *----------------------------------------------------------------------------*/
  77:lwIP/src/core/dns.c **** 
  78:lwIP/src/core/dns.c **** /** @todo: define good default values (rfc compliance) */
  79:lwIP/src/core/dns.c **** /** @todo: improve answer parsing, more checkings... */
  80:lwIP/src/core/dns.c **** /** @todo: check RFC1035 - 7.3. Processing responses */
  81:lwIP/src/core/dns.c **** /** @todo: one-shot mDNS: dual-stack fallback to another IP version */
  82:lwIP/src/core/dns.c **** 
  83:lwIP/src/core/dns.c **** /*-----------------------------------------------------------------------------
  84:lwIP/src/core/dns.c ****  * Includes
  85:lwIP/src/core/dns.c ****  *----------------------------------------------------------------------------*/
  86:lwIP/src/core/dns.c **** 
ARM GAS  /tmp/ccJm3wen.s 			page 3


  87:lwIP/src/core/dns.c **** #include "lwip/opt.h"
  88:lwIP/src/core/dns.c **** 
  89:lwIP/src/core/dns.c **** #if LWIP_DNS /* don't build if not configured for use in lwipopts.h */
  90:lwIP/src/core/dns.c **** 
  91:lwIP/src/core/dns.c **** #include "lwip/def.h"
  92:lwIP/src/core/dns.c **** #include "lwip/udp.h"
  93:lwIP/src/core/dns.c **** #include "lwip/mem.h"
  94:lwIP/src/core/dns.c **** #include "lwip/memp.h"
  95:lwIP/src/core/dns.c **** #include "lwip/dns.h"
  96:lwIP/src/core/dns.c **** #include "lwip/prot/dns.h"
  97:lwIP/src/core/dns.c **** 
  98:lwIP/src/core/dns.c **** #include <string.h>
  99:lwIP/src/core/dns.c **** 
 100:lwIP/src/core/dns.c **** /** Random generator function to create random TXIDs and source ports for queries */
 101:lwIP/src/core/dns.c **** #ifndef DNS_RAND_TXID
 102:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & LWIP_DNS_SECURE_RAND_XID) != 0)
 103:lwIP/src/core/dns.c **** #define DNS_RAND_TXID LWIP_RAND
 104:lwIP/src/core/dns.c **** #else
 105:lwIP/src/core/dns.c **** static u16_t dns_txid;
 106:lwIP/src/core/dns.c **** #define DNS_RAND_TXID() (++dns_txid)
 107:lwIP/src/core/dns.c **** #endif
 108:lwIP/src/core/dns.c **** #endif
 109:lwIP/src/core/dns.c **** 
 110:lwIP/src/core/dns.c **** /** Limits the source port to be >= 1024 by default */
 111:lwIP/src/core/dns.c **** #ifndef DNS_PORT_ALLOWED
 112:lwIP/src/core/dns.c **** #define DNS_PORT_ALLOWED(port) ((port) >= 1024)
 113:lwIP/src/core/dns.c **** #endif
 114:lwIP/src/core/dns.c **** 
 115:lwIP/src/core/dns.c **** /** DNS resource record max. TTL (one week as default) */
 116:lwIP/src/core/dns.c **** #ifndef DNS_MAX_TTL
 117:lwIP/src/core/dns.c **** #define DNS_MAX_TTL               604800
 118:lwIP/src/core/dns.c **** #elif DNS_MAX_TTL > 0x7FFFFFFF
 119:lwIP/src/core/dns.c **** #error DNS_MAX_TTL must be a positive 32-bit value
 120:lwIP/src/core/dns.c **** #endif
 121:lwIP/src/core/dns.c **** 
 122:lwIP/src/core/dns.c **** #if DNS_TABLE_SIZE > 255
 123:lwIP/src/core/dns.c **** #error DNS_TABLE_SIZE must fit into an u8_t
 124:lwIP/src/core/dns.c **** #endif
 125:lwIP/src/core/dns.c **** #if DNS_MAX_SERVERS > 255
 126:lwIP/src/core/dns.c **** #error DNS_MAX_SERVERS must fit into an u8_t
 127:lwIP/src/core/dns.c **** #endif
 128:lwIP/src/core/dns.c **** 
 129:lwIP/src/core/dns.c **** /* The number of parallel requests (i.e. calls to dns_gethostbyname
 130:lwIP/src/core/dns.c ****  * that cannot be answered from the DNS table.
 131:lwIP/src/core/dns.c ****  * This is set to the table size by default.
 132:lwIP/src/core/dns.c ****  */
 133:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & LWIP_DNS_SECURE_NO_MULTIPLE_OUTSTANDING) != 0)
 134:lwIP/src/core/dns.c **** #ifndef DNS_MAX_REQUESTS
 135:lwIP/src/core/dns.c **** #define DNS_MAX_REQUESTS          DNS_TABLE_SIZE
 136:lwIP/src/core/dns.c **** #else
 137:lwIP/src/core/dns.c **** #if DNS_MAX_REQUESTS > 255
 138:lwIP/src/core/dns.c **** #error DNS_MAX_REQUESTS must fit into an u8_t
 139:lwIP/src/core/dns.c **** #endif
 140:lwIP/src/core/dns.c **** #endif
 141:lwIP/src/core/dns.c **** #else
 142:lwIP/src/core/dns.c **** /* In this configuration, both arrays have to have the same size and are used
 143:lwIP/src/core/dns.c ****  * like one entry (used/free) */
ARM GAS  /tmp/ccJm3wen.s 			page 4


 144:lwIP/src/core/dns.c **** #define DNS_MAX_REQUESTS          DNS_TABLE_SIZE
 145:lwIP/src/core/dns.c **** #endif
 146:lwIP/src/core/dns.c **** 
 147:lwIP/src/core/dns.c **** /* The number of UDP source ports used in parallel */
 148:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & LWIP_DNS_SECURE_RAND_SRC_PORT) != 0)
 149:lwIP/src/core/dns.c **** #ifndef DNS_MAX_SOURCE_PORTS
 150:lwIP/src/core/dns.c **** #define DNS_MAX_SOURCE_PORTS      DNS_MAX_REQUESTS
 151:lwIP/src/core/dns.c **** #else
 152:lwIP/src/core/dns.c **** #if DNS_MAX_SOURCE_PORTS > 255
 153:lwIP/src/core/dns.c **** #error DNS_MAX_SOURCE_PORTS must fit into an u8_t
 154:lwIP/src/core/dns.c **** #endif
 155:lwIP/src/core/dns.c **** #endif
 156:lwIP/src/core/dns.c **** #else
 157:lwIP/src/core/dns.c **** #ifdef DNS_MAX_SOURCE_PORTS
 158:lwIP/src/core/dns.c **** #undef DNS_MAX_SOURCE_PORTS
 159:lwIP/src/core/dns.c **** #endif
 160:lwIP/src/core/dns.c **** #define DNS_MAX_SOURCE_PORTS      1
 161:lwIP/src/core/dns.c **** #endif
 162:lwIP/src/core/dns.c **** 
 163:lwIP/src/core/dns.c **** #if LWIP_IPV4 && LWIP_IPV6
 164:lwIP/src/core/dns.c **** #define LWIP_DNS_ADDRTYPE_IS_IPV6(t) (((t) == LWIP_DNS_ADDRTYPE_IPV6_IPV4) || ((t) == LWIP_DNS_ADDR
 165:lwIP/src/core/dns.c **** #define LWIP_DNS_ADDRTYPE_MATCH_IP(t, ip) (IP_IS_V6_VAL(ip) ? LWIP_DNS_ADDRTYPE_IS_IPV6(t) : (!LWIP
 166:lwIP/src/core/dns.c **** #define LWIP_DNS_ADDRTYPE_ARG(x) , x
 167:lwIP/src/core/dns.c **** #define LWIP_DNS_ADDRTYPE_ARG_OR_ZERO(x) x
 168:lwIP/src/core/dns.c **** #define LWIP_DNS_SET_ADDRTYPE(x, y) do { x = y; } while(0)
 169:lwIP/src/core/dns.c **** #else
 170:lwIP/src/core/dns.c **** #if LWIP_IPV6
 171:lwIP/src/core/dns.c **** #define LWIP_DNS_ADDRTYPE_IS_IPV6(t) 1
 172:lwIP/src/core/dns.c **** #else
 173:lwIP/src/core/dns.c **** #define LWIP_DNS_ADDRTYPE_IS_IPV6(t) 0
 174:lwIP/src/core/dns.c **** #endif
 175:lwIP/src/core/dns.c **** #define LWIP_DNS_ADDRTYPE_MATCH_IP(t, ip) 1
 176:lwIP/src/core/dns.c **** #define LWIP_DNS_ADDRTYPE_ARG(x)
 177:lwIP/src/core/dns.c **** #define LWIP_DNS_ADDRTYPE_ARG_OR_ZERO(x) 0
 178:lwIP/src/core/dns.c **** #define LWIP_DNS_SET_ADDRTYPE(x, y)
 179:lwIP/src/core/dns.c **** #endif /* LWIP_IPV4 && LWIP_IPV6 */
 180:lwIP/src/core/dns.c **** 
 181:lwIP/src/core/dns.c **** #if LWIP_DNS_SUPPORT_MDNS_QUERIES
 182:lwIP/src/core/dns.c **** #define LWIP_DNS_ISMDNS_ARG(x) , x
 183:lwIP/src/core/dns.c **** #else
 184:lwIP/src/core/dns.c **** #define LWIP_DNS_ISMDNS_ARG(x)
 185:lwIP/src/core/dns.c **** #endif
 186:lwIP/src/core/dns.c **** 
 187:lwIP/src/core/dns.c **** /** DNS query message structure.
 188:lwIP/src/core/dns.c ****     No packing needed: only used locally on the stack. */
 189:lwIP/src/core/dns.c **** struct dns_query {
 190:lwIP/src/core/dns.c ****   /* DNS query record starts with either a domain name or a pointer
 191:lwIP/src/core/dns.c ****      to a name already present somewhere in the packet. */
 192:lwIP/src/core/dns.c ****   u16_t type;
 193:lwIP/src/core/dns.c ****   u16_t cls;
 194:lwIP/src/core/dns.c **** };
 195:lwIP/src/core/dns.c **** #define SIZEOF_DNS_QUERY 4
 196:lwIP/src/core/dns.c **** 
 197:lwIP/src/core/dns.c **** /** DNS answer message structure.
 198:lwIP/src/core/dns.c ****     No packing needed: only used locally on the stack. */
 199:lwIP/src/core/dns.c **** struct dns_answer {
 200:lwIP/src/core/dns.c ****   /* DNS answer record starts with either a domain name or a pointer
ARM GAS  /tmp/ccJm3wen.s 			page 5


 201:lwIP/src/core/dns.c ****      to a name already present somewhere in the packet. */
 202:lwIP/src/core/dns.c ****   u16_t type;
 203:lwIP/src/core/dns.c ****   u16_t cls;
 204:lwIP/src/core/dns.c ****   u32_t ttl;
 205:lwIP/src/core/dns.c ****   u16_t len;
 206:lwIP/src/core/dns.c **** };
 207:lwIP/src/core/dns.c **** #define SIZEOF_DNS_ANSWER 10
 208:lwIP/src/core/dns.c **** /* maximum allowed size for the struct due to non-packed */
 209:lwIP/src/core/dns.c **** #define SIZEOF_DNS_ANSWER_ASSERT 12
 210:lwIP/src/core/dns.c **** 
 211:lwIP/src/core/dns.c **** /* DNS table entry states */
 212:lwIP/src/core/dns.c **** typedef enum {
 213:lwIP/src/core/dns.c ****   DNS_STATE_UNUSED           = 0,
 214:lwIP/src/core/dns.c ****   DNS_STATE_NEW              = 1,
 215:lwIP/src/core/dns.c ****   DNS_STATE_ASKING           = 2,
 216:lwIP/src/core/dns.c ****   DNS_STATE_DONE             = 3
 217:lwIP/src/core/dns.c **** } dns_state_enum_t;
 218:lwIP/src/core/dns.c **** 
 219:lwIP/src/core/dns.c **** /** DNS table entry */
 220:lwIP/src/core/dns.c **** struct dns_table_entry {
 221:lwIP/src/core/dns.c ****   u32_t ttl;
 222:lwIP/src/core/dns.c ****   ip_addr_t ipaddr;
 223:lwIP/src/core/dns.c ****   u16_t txid;
 224:lwIP/src/core/dns.c ****   u8_t  state;
 225:lwIP/src/core/dns.c ****   u8_t  server_idx;
 226:lwIP/src/core/dns.c ****   u8_t  tmr;
 227:lwIP/src/core/dns.c ****   u8_t  retries;
 228:lwIP/src/core/dns.c ****   u8_t  seqno;
 229:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & LWIP_DNS_SECURE_RAND_SRC_PORT) != 0)
 230:lwIP/src/core/dns.c ****   u8_t pcb_idx;
 231:lwIP/src/core/dns.c **** #endif
 232:lwIP/src/core/dns.c ****   char name[DNS_MAX_NAME_LENGTH];
 233:lwIP/src/core/dns.c **** #if LWIP_IPV4 && LWIP_IPV6
 234:lwIP/src/core/dns.c ****   u8_t reqaddrtype;
 235:lwIP/src/core/dns.c **** #endif /* LWIP_IPV4 && LWIP_IPV6 */
 236:lwIP/src/core/dns.c **** #if LWIP_DNS_SUPPORT_MDNS_QUERIES
 237:lwIP/src/core/dns.c ****   u8_t is_mdns;
 238:lwIP/src/core/dns.c **** #endif
 239:lwIP/src/core/dns.c **** };
 240:lwIP/src/core/dns.c **** 
 241:lwIP/src/core/dns.c **** /** DNS request table entry: used when dns_gehostbyname cannot answer the
 242:lwIP/src/core/dns.c ****  * request from the DNS table */
 243:lwIP/src/core/dns.c **** struct dns_req_entry {
 244:lwIP/src/core/dns.c ****   /* pointer to callback on DNS query done */
 245:lwIP/src/core/dns.c ****   dns_found_callback found;
 246:lwIP/src/core/dns.c ****   /* argument passed to the callback function */
 247:lwIP/src/core/dns.c ****   void *arg;
 248:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & LWIP_DNS_SECURE_NO_MULTIPLE_OUTSTANDING) != 0)
 249:lwIP/src/core/dns.c ****   u8_t dns_table_idx;
 250:lwIP/src/core/dns.c **** #endif
 251:lwIP/src/core/dns.c **** #if LWIP_IPV4 && LWIP_IPV6
 252:lwIP/src/core/dns.c ****   u8_t reqaddrtype;
 253:lwIP/src/core/dns.c **** #endif /* LWIP_IPV4 && LWIP_IPV6 */
 254:lwIP/src/core/dns.c **** };
 255:lwIP/src/core/dns.c **** 
 256:lwIP/src/core/dns.c **** #if DNS_LOCAL_HOSTLIST
 257:lwIP/src/core/dns.c **** 
ARM GAS  /tmp/ccJm3wen.s 			page 6


 258:lwIP/src/core/dns.c **** #if DNS_LOCAL_HOSTLIST_IS_DYNAMIC
 259:lwIP/src/core/dns.c **** /** Local host-list. For hostnames in this list, no
 260:lwIP/src/core/dns.c ****  *  external name resolution is performed */
 261:lwIP/src/core/dns.c **** static struct local_hostlist_entry *local_hostlist_dynamic;
 262:lwIP/src/core/dns.c **** #else /* DNS_LOCAL_HOSTLIST_IS_DYNAMIC */
 263:lwIP/src/core/dns.c **** 
 264:lwIP/src/core/dns.c **** /** Defining this allows the local_hostlist_static to be placed in a different
 265:lwIP/src/core/dns.c ****  * linker section (e.g. FLASH) */
 266:lwIP/src/core/dns.c **** #ifndef DNS_LOCAL_HOSTLIST_STORAGE_PRE
 267:lwIP/src/core/dns.c **** #define DNS_LOCAL_HOSTLIST_STORAGE_PRE static
 268:lwIP/src/core/dns.c **** #endif /* DNS_LOCAL_HOSTLIST_STORAGE_PRE */
 269:lwIP/src/core/dns.c **** /** Defining this allows the local_hostlist_static to be placed in a different
 270:lwIP/src/core/dns.c ****  * linker section (e.g. FLASH) */
 271:lwIP/src/core/dns.c **** #ifndef DNS_LOCAL_HOSTLIST_STORAGE_POST
 272:lwIP/src/core/dns.c **** #define DNS_LOCAL_HOSTLIST_STORAGE_POST
 273:lwIP/src/core/dns.c **** #endif /* DNS_LOCAL_HOSTLIST_STORAGE_POST */
 274:lwIP/src/core/dns.c **** DNS_LOCAL_HOSTLIST_STORAGE_PRE struct local_hostlist_entry local_hostlist_static[]
 275:lwIP/src/core/dns.c ****   DNS_LOCAL_HOSTLIST_STORAGE_POST = DNS_LOCAL_HOSTLIST_INIT;
 276:lwIP/src/core/dns.c **** 
 277:lwIP/src/core/dns.c **** #endif /* DNS_LOCAL_HOSTLIST_IS_DYNAMIC */
 278:lwIP/src/core/dns.c **** 
 279:lwIP/src/core/dns.c **** static void dns_init_local(void);
 280:lwIP/src/core/dns.c **** static err_t dns_lookup_local(const char *hostname, ip_addr_t *addr LWIP_DNS_ADDRTYPE_ARG(u8_t dns_
 281:lwIP/src/core/dns.c **** static void dns_server_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, const ip_addr_t *addr, 
 282:lwIP/src/core/dns.c **** #endif /* DNS_LOCAL_HOSTLIST */
 283:lwIP/src/core/dns.c **** 
 284:lwIP/src/core/dns.c **** 
 285:lwIP/src/core/dns.c **** /* forward declarations */
 286:lwIP/src/core/dns.c **** static void dns_recv(void *s, struct udp_pcb *pcb, struct pbuf *p, const ip_addr_t *addr, u16_t por
 287:lwIP/src/core/dns.c **** static void dns_check_entries(void);
 288:lwIP/src/core/dns.c **** static void dns_call_found(u8_t idx, ip_addr_t *addr);
 289:lwIP/src/core/dns.c **** static u16_t dns_compare_name(const char *query, struct pbuf* p, u16_t start_offset);
 290:lwIP/src/core/dns.c **** 
 291:lwIP/src/core/dns.c **** /*-----------------------------------------------------------------------------
 292:lwIP/src/core/dns.c ****  * Globals
 293:lwIP/src/core/dns.c ****  *----------------------------------------------------------------------------*/
 294:lwIP/src/core/dns.c **** 
 295:lwIP/src/core/dns.c **** /* DNS variables */
 296:lwIP/src/core/dns.c **** static struct udp_pcb        *dns_pcbs[DNS_MAX_SOURCE_PORTS];
 297:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & LWIP_DNS_SECURE_RAND_SRC_PORT) != 0)
 298:lwIP/src/core/dns.c **** static u8_t                   dns_last_pcb_idx;
 299:lwIP/src/core/dns.c **** #endif
 300:lwIP/src/core/dns.c **** static u8_t                   dns_seqno;
 301:lwIP/src/core/dns.c **** static struct dns_table_entry dns_table[DNS_TABLE_SIZE];
 302:lwIP/src/core/dns.c **** static struct dns_req_entry   dns_requests[DNS_MAX_REQUESTS];
 303:lwIP/src/core/dns.c **** static ip_addr_t              dns_servers[DNS_MAX_SERVERS];
 304:lwIP/src/core/dns.c **** 
 305:lwIP/src/core/dns.c **** #if LWIP_IPV4
 306:lwIP/src/core/dns.c **** const ip_addr_t dns_mquery_v4group = DNS_MQUERY_IPV4_GROUP_INIT;
 307:lwIP/src/core/dns.c **** #endif /* LWIP_IPV4 */
 308:lwIP/src/core/dns.c **** #if LWIP_IPV6
 309:lwIP/src/core/dns.c **** const ip_addr_t dns_mquery_v6group = DNS_MQUERY_IPV6_GROUP_INIT;
 310:lwIP/src/core/dns.c **** #endif /* LWIP_IPV6 */
 311:lwIP/src/core/dns.c **** 
 312:lwIP/src/core/dns.c **** /**
 313:lwIP/src/core/dns.c ****  * Initialize the resolver: set up the UDP pcb and configure the default server
 314:lwIP/src/core/dns.c ****  * (if DNS_SERVER_ADDRESS is set).
ARM GAS  /tmp/ccJm3wen.s 			page 7


 315:lwIP/src/core/dns.c ****  */
 316:lwIP/src/core/dns.c **** void
 317:lwIP/src/core/dns.c **** dns_init(void)
 318:lwIP/src/core/dns.c **** {
 319:lwIP/src/core/dns.c **** #ifdef DNS_SERVER_ADDRESS
 320:lwIP/src/core/dns.c ****   /* initialize default DNS server address */
 321:lwIP/src/core/dns.c ****   ip_addr_t dnsserver;
 322:lwIP/src/core/dns.c ****   DNS_SERVER_ADDRESS(&dnsserver);
 323:lwIP/src/core/dns.c ****   dns_setserver(0, &dnsserver);
 324:lwIP/src/core/dns.c **** #endif /* DNS_SERVER_ADDRESS */
 325:lwIP/src/core/dns.c **** 
 326:lwIP/src/core/dns.c ****   LWIP_ASSERT("sanity check SIZEOF_DNS_QUERY",
 327:lwIP/src/core/dns.c ****               sizeof(struct dns_query) == SIZEOF_DNS_QUERY);
 328:lwIP/src/core/dns.c ****   LWIP_ASSERT("sanity check SIZEOF_DNS_ANSWER",
 329:lwIP/src/core/dns.c ****               sizeof(struct dns_answer) <= SIZEOF_DNS_ANSWER_ASSERT);
 330:lwIP/src/core/dns.c **** 
 331:lwIP/src/core/dns.c ****   LWIP_DEBUGF(DNS_DEBUG, ("dns_init: initializing\n"));
 332:lwIP/src/core/dns.c **** 
 333:lwIP/src/core/dns.c ****   /* if dns client not yet initialized... */
 334:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & LWIP_DNS_SECURE_RAND_SRC_PORT) == 0)
 335:lwIP/src/core/dns.c ****   if (dns_pcbs[0] == NULL) {
 336:lwIP/src/core/dns.c ****     dns_pcbs[0] = udp_new_ip_type(IPADDR_TYPE_ANY);
 337:lwIP/src/core/dns.c ****     LWIP_ASSERT("dns_pcbs[0] != NULL", dns_pcbs[0] != NULL);
 338:lwIP/src/core/dns.c **** 
 339:lwIP/src/core/dns.c ****     /* initialize DNS table not needed (initialized to zero since it is a
 340:lwIP/src/core/dns.c ****      * global variable) */
 341:lwIP/src/core/dns.c ****     LWIP_ASSERT("For implicit initialization to work, DNS_STATE_UNUSED needs to be 0",
 342:lwIP/src/core/dns.c ****                 DNS_STATE_UNUSED == 0);
 343:lwIP/src/core/dns.c **** 
 344:lwIP/src/core/dns.c ****     /* initialize DNS client */
 345:lwIP/src/core/dns.c ****     udp_bind(dns_pcbs[0], IP_ANY_TYPE, 0);
 346:lwIP/src/core/dns.c ****     udp_recv(dns_pcbs[0], dns_recv, NULL);
 347:lwIP/src/core/dns.c ****   }
 348:lwIP/src/core/dns.c **** #endif
 349:lwIP/src/core/dns.c **** 
 350:lwIP/src/core/dns.c **** #if DNS_LOCAL_HOSTLIST
 351:lwIP/src/core/dns.c ****   dns_init_local();
 352:lwIP/src/core/dns.c **** #endif
 353:lwIP/src/core/dns.c **** }
 354:lwIP/src/core/dns.c **** 
 355:lwIP/src/core/dns.c **** /**
 356:lwIP/src/core/dns.c ****  * @ingroup dns
 357:lwIP/src/core/dns.c ****  * Initialize one of the DNS servers.
 358:lwIP/src/core/dns.c ****  *
 359:lwIP/src/core/dns.c ****  * @param numdns the index of the DNS server to set must be < DNS_MAX_SERVERS
 360:lwIP/src/core/dns.c ****  * @param dnsserver IP address of the DNS server to set
 361:lwIP/src/core/dns.c ****  */
 362:lwIP/src/core/dns.c **** void
 363:lwIP/src/core/dns.c **** dns_setserver(u8_t numdns, const ip_addr_t *dnsserver)
 364:lwIP/src/core/dns.c **** {
 365:lwIP/src/core/dns.c ****   if (numdns < DNS_MAX_SERVERS) {
 366:lwIP/src/core/dns.c ****     if (dnsserver != NULL) {
 367:lwIP/src/core/dns.c ****       dns_servers[numdns] = (*dnsserver);
 368:lwIP/src/core/dns.c ****     } else {
 369:lwIP/src/core/dns.c ****       dns_servers[numdns] = *IP_ADDR_ANY;
 370:lwIP/src/core/dns.c ****     }
 371:lwIP/src/core/dns.c ****   }
ARM GAS  /tmp/ccJm3wen.s 			page 8


 372:lwIP/src/core/dns.c **** }
 373:lwIP/src/core/dns.c **** 
 374:lwIP/src/core/dns.c **** /**
 375:lwIP/src/core/dns.c ****  * @ingroup dns
 376:lwIP/src/core/dns.c ****  * Obtain one of the currently configured DNS server.
 377:lwIP/src/core/dns.c ****  *
 378:lwIP/src/core/dns.c ****  * @param numdns the index of the DNS server
 379:lwIP/src/core/dns.c ****  * @return IP address of the indexed DNS server or "ip_addr_any" if the DNS
 380:lwIP/src/core/dns.c ****  *         server has not been configured.
 381:lwIP/src/core/dns.c ****  */
 382:lwIP/src/core/dns.c **** const ip_addr_t *
 383:lwIP/src/core/dns.c **** dns_getserver(u8_t numdns)
 384:lwIP/src/core/dns.c **** {
 385:lwIP/src/core/dns.c ****   if (numdns < DNS_MAX_SERVERS) {
 386:lwIP/src/core/dns.c ****     return &dns_servers[numdns];
 387:lwIP/src/core/dns.c ****   } else {
 388:lwIP/src/core/dns.c ****     return IP_ADDR_ANY;
 389:lwIP/src/core/dns.c ****   }
 390:lwIP/src/core/dns.c **** }
 391:lwIP/src/core/dns.c **** 
 392:lwIP/src/core/dns.c **** /**
 393:lwIP/src/core/dns.c ****  * The DNS resolver client timer - handle retries and timeouts and should
 394:lwIP/src/core/dns.c ****  * be called every DNS_TMR_INTERVAL milliseconds (every second by default).
 395:lwIP/src/core/dns.c ****  */
 396:lwIP/src/core/dns.c **** void
 397:lwIP/src/core/dns.c **** dns_tmr(void)
 398:lwIP/src/core/dns.c **** {
 399:lwIP/src/core/dns.c ****   LWIP_DEBUGF(DNS_DEBUG, ("dns_tmr: dns_check_entries\n"));
 400:lwIP/src/core/dns.c ****   dns_check_entries();
 401:lwIP/src/core/dns.c **** }
 402:lwIP/src/core/dns.c **** 
 403:lwIP/src/core/dns.c **** #if DNS_LOCAL_HOSTLIST
 404:lwIP/src/core/dns.c **** static void
 405:lwIP/src/core/dns.c **** dns_init_local(void)
 406:lwIP/src/core/dns.c **** {
 407:lwIP/src/core/dns.c **** #if DNS_LOCAL_HOSTLIST_IS_DYNAMIC && defined(DNS_LOCAL_HOSTLIST_INIT)
 408:lwIP/src/core/dns.c ****   size_t i;
 409:lwIP/src/core/dns.c ****   struct local_hostlist_entry *entry;
 410:lwIP/src/core/dns.c ****   /* Dynamic: copy entries from DNS_LOCAL_HOSTLIST_INIT to list */
 411:lwIP/src/core/dns.c ****   struct local_hostlist_entry local_hostlist_init[] = DNS_LOCAL_HOSTLIST_INIT;
 412:lwIP/src/core/dns.c ****   size_t namelen;
 413:lwIP/src/core/dns.c ****   for (i = 0; i < LWIP_ARRAYSIZE(local_hostlist_init); i++) {
 414:lwIP/src/core/dns.c ****     struct local_hostlist_entry *init_entry = &local_hostlist_init[i];
 415:lwIP/src/core/dns.c ****     LWIP_ASSERT("invalid host name (NULL)", init_entry->name != NULL);
 416:lwIP/src/core/dns.c ****     namelen = strlen(init_entry->name);
 417:lwIP/src/core/dns.c ****     LWIP_ASSERT("namelen <= DNS_LOCAL_HOSTLIST_MAX_NAMELEN", namelen <= DNS_LOCAL_HOSTLIST_MAX_NAME
 418:lwIP/src/core/dns.c ****     entry = (struct local_hostlist_entry *)memp_malloc(MEMP_LOCALHOSTLIST);
 419:lwIP/src/core/dns.c ****     LWIP_ASSERT("mem-error in dns_init_local", entry != NULL);
 420:lwIP/src/core/dns.c ****     if (entry != NULL) {
 421:lwIP/src/core/dns.c ****       char *entry_name = (char *)entry + sizeof(struct local_hostlist_entry);
 422:lwIP/src/core/dns.c ****       MEMCPY(entry_name, init_entry->name, namelen);
 423:lwIP/src/core/dns.c ****       entry_name[namelen] = 0;
 424:lwIP/src/core/dns.c ****       entry->name = entry_name;
 425:lwIP/src/core/dns.c ****       entry->addr = init_entry->addr;
 426:lwIP/src/core/dns.c ****       entry->next = local_hostlist_dynamic;
 427:lwIP/src/core/dns.c ****       local_hostlist_dynamic = entry;
 428:lwIP/src/core/dns.c ****     }
ARM GAS  /tmp/ccJm3wen.s 			page 9


 429:lwIP/src/core/dns.c ****   }
 430:lwIP/src/core/dns.c **** #endif /* DNS_LOCAL_HOSTLIST_IS_DYNAMIC && defined(DNS_LOCAL_HOSTLIST_INIT) */
 431:lwIP/src/core/dns.c ****   {
 432:lwIP/src/core/dns.c ****     /* start a DNS server with the locally available list */
 433:lwIP/src/core/dns.c ****     err_t err = ERR_MEM;
 434:lwIP/src/core/dns.c ****     struct udp_pcb *pcb = udp_new_ip_type(IPADDR_TYPE_ANY);
 435:lwIP/src/core/dns.c **** 
 436:lwIP/src/core/dns.c ****     if (pcb != NULL) {
 437:lwIP/src/core/dns.c ****       err = udp_bind(pcb, IP_ANY_TYPE, DNS_SERVER_PORT);
 438:lwIP/src/core/dns.c ****       if (ERR_OK == err) {
 439:lwIP/src/core/dns.c ****         udp_recv(pcb, dns_server_recv, NULL);
 440:lwIP/src/core/dns.c ****       } else {
 441:lwIP/src/core/dns.c ****         udp_remove(pcb);
 442:lwIP/src/core/dns.c ****       }
 443:lwIP/src/core/dns.c ****     }
 444:lwIP/src/core/dns.c ****   }
 445:lwIP/src/core/dns.c **** }
 446:lwIP/src/core/dns.c **** 
 447:lwIP/src/core/dns.c **** /**
 448:lwIP/src/core/dns.c ****  * @ingroup dns
 449:lwIP/src/core/dns.c ****  * Iterate the local host-list for a hostname.
 450:lwIP/src/core/dns.c ****  *
 451:lwIP/src/core/dns.c ****  * @param iterator_fn a function that is called for every entry in the local host-list
 452:lwIP/src/core/dns.c ****  * @param iterator_arg 3rd argument passed to iterator_fn
 453:lwIP/src/core/dns.c ****  * @return the number of entries in the local host-list
 454:lwIP/src/core/dns.c ****  */
 455:lwIP/src/core/dns.c **** size_t
 456:lwIP/src/core/dns.c **** dns_local_iterate(dns_found_callback iterator_fn, void *iterator_arg)
 457:lwIP/src/core/dns.c **** {
 458:lwIP/src/core/dns.c ****   size_t i;
 459:lwIP/src/core/dns.c **** #if DNS_LOCAL_HOSTLIST_IS_DYNAMIC
 460:lwIP/src/core/dns.c ****   struct local_hostlist_entry *entry = local_hostlist_dynamic;
 461:lwIP/src/core/dns.c ****   i = 0;
 462:lwIP/src/core/dns.c ****   while (entry != NULL) {
 463:lwIP/src/core/dns.c ****     if (iterator_fn != NULL) {
 464:lwIP/src/core/dns.c ****       iterator_fn(entry->name, &entry->addr, iterator_arg);
 465:lwIP/src/core/dns.c ****     }
 466:lwIP/src/core/dns.c ****     i++;
 467:lwIP/src/core/dns.c ****     entry = entry->next;
 468:lwIP/src/core/dns.c ****   }
 469:lwIP/src/core/dns.c **** #else /* DNS_LOCAL_HOSTLIST_IS_DYNAMIC */
 470:lwIP/src/core/dns.c ****   for (i = 0; i < LWIP_ARRAYSIZE(local_hostlist_static); i++) {
 471:lwIP/src/core/dns.c ****     if (iterator_fn != NULL) {
 472:lwIP/src/core/dns.c ****       iterator_fn(local_hostlist_static[i].name, &local_hostlist_static[i].addr, iterator_arg);
 473:lwIP/src/core/dns.c ****     }
 474:lwIP/src/core/dns.c ****   }
 475:lwIP/src/core/dns.c **** #endif /* DNS_LOCAL_HOSTLIST_IS_DYNAMIC */
 476:lwIP/src/core/dns.c ****   return i;
 477:lwIP/src/core/dns.c **** }
 478:lwIP/src/core/dns.c **** 
 479:lwIP/src/core/dns.c **** /**
 480:lwIP/src/core/dns.c ****  * @ingroup dns
 481:lwIP/src/core/dns.c ****  * Scans the local host-list for a hostname.
 482:lwIP/src/core/dns.c ****  *
 483:lwIP/src/core/dns.c ****  * @param hostname Hostname to look for in the local host-list
 484:lwIP/src/core/dns.c ****  * @param addr the first IP address for the hostname in the local host-list or
 485:lwIP/src/core/dns.c ****  *         IPADDR_NONE if not found.
ARM GAS  /tmp/ccJm3wen.s 			page 10


 486:lwIP/src/core/dns.c ****  * @param dns_addrtype - LWIP_DNS_ADDRTYPE_IPV4_IPV6: try to resolve IPv4 (ATTENTION: no fallback h
 487:lwIP/src/core/dns.c ****  *                     - LWIP_DNS_ADDRTYPE_IPV6_IPV4: try to resolve IPv6 (ATTENTION: no fallback h
 488:lwIP/src/core/dns.c ****  *                     - LWIP_DNS_ADDRTYPE_IPV4: try to resolve IPv4 only
 489:lwIP/src/core/dns.c ****  *                     - LWIP_DNS_ADDRTYPE_IPV6: try to resolve IPv6 only
 490:lwIP/src/core/dns.c ****  * @return ERR_OK if found, ERR_ARG if not found
 491:lwIP/src/core/dns.c ****  */
 492:lwIP/src/core/dns.c **** err_t
 493:lwIP/src/core/dns.c **** dns_local_lookup(const char *hostname, ip_addr_t *addr, u8_t dns_addrtype)
 494:lwIP/src/core/dns.c **** {
 495:lwIP/src/core/dns.c ****   LWIP_UNUSED_ARG(dns_addrtype);
 496:lwIP/src/core/dns.c ****   return dns_lookup_local(hostname, addr LWIP_DNS_ADDRTYPE_ARG(dns_addrtype));
 497:lwIP/src/core/dns.c **** }
 498:lwIP/src/core/dns.c **** 
 499:lwIP/src/core/dns.c **** /* Internal implementation for dns_local_lookup and dns_lookup */
 500:lwIP/src/core/dns.c **** static err_t
 501:lwIP/src/core/dns.c **** dns_lookup_local(const char *hostname, ip_addr_t *addr LWIP_DNS_ADDRTYPE_ARG(u8_t dns_addrtype))
 502:lwIP/src/core/dns.c **** {
 503:lwIP/src/core/dns.c **** #if DNS_LOCAL_HOSTLIST_IS_DYNAMIC
 504:lwIP/src/core/dns.c ****   struct local_hostlist_entry *entry = local_hostlist_dynamic;
 505:lwIP/src/core/dns.c ****   while (entry != NULL) {
 506:lwIP/src/core/dns.c ****     if ((lwip_stricmp(entry->name, hostname) == 0) &&
 507:lwIP/src/core/dns.c ****         LWIP_DNS_ADDRTYPE_MATCH_IP(dns_addrtype, entry->addr)) {
 508:lwIP/src/core/dns.c ****       if (addr) {
 509:lwIP/src/core/dns.c ****         ip_addr_copy(*addr, entry->addr);
 510:lwIP/src/core/dns.c ****       }
 511:lwIP/src/core/dns.c ****       return ERR_OK;
 512:lwIP/src/core/dns.c ****     }
 513:lwIP/src/core/dns.c ****     entry = entry->next;
 514:lwIP/src/core/dns.c ****   }
 515:lwIP/src/core/dns.c **** #else /* DNS_LOCAL_HOSTLIST_IS_DYNAMIC */
 516:lwIP/src/core/dns.c ****   size_t i;
 517:lwIP/src/core/dns.c ****   for (i = 0; i < LWIP_ARRAYSIZE(local_hostlist_static); i++) {
 518:lwIP/src/core/dns.c ****     if ((lwip_stricmp(local_hostlist_static[i].name, hostname) == 0) &&
 519:lwIP/src/core/dns.c ****         LWIP_DNS_ADDRTYPE_MATCH_IP(dns_addrtype, local_hostlist_static[i].addr)) {
 520:lwIP/src/core/dns.c ****       if (addr) {
 521:lwIP/src/core/dns.c ****         ip_addr_copy(*addr, local_hostlist_static[i].addr);
 522:lwIP/src/core/dns.c ****       }
 523:lwIP/src/core/dns.c ****       return ERR_OK;
 524:lwIP/src/core/dns.c ****     }
 525:lwIP/src/core/dns.c ****   }
 526:lwIP/src/core/dns.c **** #endif /* DNS_LOCAL_HOSTLIST_IS_DYNAMIC */
 527:lwIP/src/core/dns.c ****   return ERR_ARG;
 528:lwIP/src/core/dns.c **** }
 529:lwIP/src/core/dns.c **** 
 530:lwIP/src/core/dns.c **** #if DNS_LOCAL_HOSTLIST_IS_DYNAMIC
 531:lwIP/src/core/dns.c **** /**
 532:lwIP/src/core/dns.c ****  * @ingroup dns
 533:lwIP/src/core/dns.c ****  * Remove all entries from the local host-list for a specific hostname
 534:lwIP/src/core/dns.c ****  * and/or IP address
 535:lwIP/src/core/dns.c ****  *
 536:lwIP/src/core/dns.c ****  * @param hostname hostname for which entries shall be removed from the local
 537:lwIP/src/core/dns.c ****  *                 host-list
 538:lwIP/src/core/dns.c ****  * @param addr address for which entries shall be removed from the local host-list
 539:lwIP/src/core/dns.c ****  * @return the number of removed entries
 540:lwIP/src/core/dns.c ****  */
 541:lwIP/src/core/dns.c **** int
 542:lwIP/src/core/dns.c **** dns_local_removehost(const char *hostname, const ip_addr_t *addr)
ARM GAS  /tmp/ccJm3wen.s 			page 11


 543:lwIP/src/core/dns.c **** {
 544:lwIP/src/core/dns.c ****   int removed = 0;
 545:lwIP/src/core/dns.c ****   struct local_hostlist_entry *entry = local_hostlist_dynamic;
 546:lwIP/src/core/dns.c ****   struct local_hostlist_entry *last_entry = NULL;
 547:lwIP/src/core/dns.c ****   while (entry != NULL) {
 548:lwIP/src/core/dns.c ****     if (((hostname == NULL) || !lwip_stricmp(entry->name, hostname)) &&
 549:lwIP/src/core/dns.c ****         ((addr == NULL) || ip_addr_cmp(&entry->addr, addr))) {
 550:lwIP/src/core/dns.c ****       struct local_hostlist_entry *free_entry;
 551:lwIP/src/core/dns.c ****       if (last_entry != NULL) {
 552:lwIP/src/core/dns.c ****         last_entry->next = entry->next;
 553:lwIP/src/core/dns.c ****       } else {
 554:lwIP/src/core/dns.c ****         local_hostlist_dynamic = entry->next;
 555:lwIP/src/core/dns.c ****       }
 556:lwIP/src/core/dns.c ****       free_entry = entry;
 557:lwIP/src/core/dns.c ****       entry = entry->next;
 558:lwIP/src/core/dns.c ****       memp_free(MEMP_LOCALHOSTLIST, free_entry);
 559:lwIP/src/core/dns.c ****       removed++;
 560:lwIP/src/core/dns.c ****     } else {
 561:lwIP/src/core/dns.c ****       last_entry = entry;
 562:lwIP/src/core/dns.c ****       entry = entry->next;
 563:lwIP/src/core/dns.c ****     }
 564:lwIP/src/core/dns.c ****   }
 565:lwIP/src/core/dns.c ****   return removed;
 566:lwIP/src/core/dns.c **** }
 567:lwIP/src/core/dns.c **** 
 568:lwIP/src/core/dns.c **** /**
 569:lwIP/src/core/dns.c ****  * @ingroup dns
 570:lwIP/src/core/dns.c ****  * Add a hostname/IP address pair to the local host-list.
 571:lwIP/src/core/dns.c ****  * Duplicates are not checked.
 572:lwIP/src/core/dns.c ****  *
 573:lwIP/src/core/dns.c ****  * @param hostname hostname of the new entry
 574:lwIP/src/core/dns.c ****  * @param addr IP address of the new entry
 575:lwIP/src/core/dns.c ****  * @return ERR_OK if succeeded or ERR_MEM on memory error
 576:lwIP/src/core/dns.c ****  */
 577:lwIP/src/core/dns.c **** err_t
 578:lwIP/src/core/dns.c **** dns_local_addhost(const char *hostname, const ip_addr_t *addr)
 579:lwIP/src/core/dns.c **** {
 580:lwIP/src/core/dns.c ****   struct local_hostlist_entry *entry;
 581:lwIP/src/core/dns.c ****   size_t namelen;
 582:lwIP/src/core/dns.c ****   char *entry_name;
 583:lwIP/src/core/dns.c ****   LWIP_ASSERT("invalid host name (NULL)", hostname != NULL);
 584:lwIP/src/core/dns.c ****   namelen = strlen(hostname);
 585:lwIP/src/core/dns.c ****   LWIP_ASSERT("namelen <= DNS_LOCAL_HOSTLIST_MAX_NAMELEN", namelen <= DNS_LOCAL_HOSTLIST_MAX_NAMELE
 586:lwIP/src/core/dns.c ****   entry = (struct local_hostlist_entry *)memp_malloc(MEMP_LOCALHOSTLIST);
 587:lwIP/src/core/dns.c ****   if (entry == NULL) {
 588:lwIP/src/core/dns.c ****     return ERR_MEM;
 589:lwIP/src/core/dns.c ****   }
 590:lwIP/src/core/dns.c ****   entry_name = (char *)entry + sizeof(struct local_hostlist_entry);
 591:lwIP/src/core/dns.c ****   MEMCPY(entry_name, hostname, namelen);
 592:lwIP/src/core/dns.c ****   entry_name[namelen] = 0;
 593:lwIP/src/core/dns.c ****   entry->name = entry_name;
 594:lwIP/src/core/dns.c ****   ip_addr_copy(entry->addr, *addr);
 595:lwIP/src/core/dns.c ****   entry->next = local_hostlist_dynamic;
 596:lwIP/src/core/dns.c ****   local_hostlist_dynamic = entry;
 597:lwIP/src/core/dns.c ****   return ERR_OK;
 598:lwIP/src/core/dns.c **** }
 599:lwIP/src/core/dns.c **** #endif /* DNS_LOCAL_HOSTLIST_IS_DYNAMIC*/
ARM GAS  /tmp/ccJm3wen.s 			page 12


 600:lwIP/src/core/dns.c **** 
 601:lwIP/src/core/dns.c **** /**
 602:lwIP/src/core/dns.c ****  * Receive input function for DNS query packets arriving for the dns server UDP pcb.
 603:lwIP/src/core/dns.c ****  */
 604:lwIP/src/core/dns.c **** static void
 605:lwIP/src/core/dns.c **** dns_server_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, const ip_addr_t *addr, u16_t port)
 606:lwIP/src/core/dns.c **** {
 607:lwIP/src/core/dns.c ****   struct pbuf *q;
 608:lwIP/src/core/dns.c **** #if LWIP_IPV6
 609:lwIP/src/core/dns.c ****   int ipsize = sizeof(ip6_addr_t);
 610:lwIP/src/core/dns.c **** #else
 611:lwIP/src/core/dns.c ****   int ipsize = sizeof(ip4_addr_t);
 612:lwIP/src/core/dns.c **** #endif
 613:lwIP/src/core/dns.c **** 
 614:lwIP/src/core/dns.c ****   LWIP_UNUSED_ARG(arg);
 615:lwIP/src/core/dns.c **** 
 616:lwIP/src/core/dns.c ****   /* is the dns message big enough? */
 617:lwIP/src/core/dns.c ****   if (p->tot_len < (SIZEOF_DNS_HDR + SIZEOF_DNS_QUERY)) {
 618:lwIP/src/core/dns.c ****     LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: pbuf too small\n"));
 619:lwIP/src/core/dns.c ****     /* free pbuf and return */
 620:lwIP/src/core/dns.c ****     goto memerr;
 621:lwIP/src/core/dns.c ****   }
 622:lwIP/src/core/dns.c **** 
 623:lwIP/src/core/dns.c ****   q = pbuf_alloc(PBUF_TRANSPORT, p->tot_len + 2 + sizeof(struct dns_answer) + ipsize, PBUF_RAM);
 624:lwIP/src/core/dns.c **** 
 625:lwIP/src/core/dns.c ****   /* copy dns payload inside static buffer for processing */
 626:lwIP/src/core/dns.c ****   if ((q != NULL) && (ERR_OK == pbuf_copy(q, p))) {
 627:lwIP/src/core/dns.c ****     struct dns_hdr *hdr = (void*)q->payload;
 628:lwIP/src/core/dns.c **** 
 629:lwIP/src/core/dns.c ****     /* check header */
 630:lwIP/src/core/dns.c ****     if (((hdr->flags1 & DNS_FLAG1_RESPONSE) == 0) &&
 631:lwIP/src/core/dns.c ****         (hdr->numquestions == PP_HTONS(1))) {
 632:lwIP/src/core/dns.c ****       u16_t res_idx = 0xFFFF;
 633:lwIP/src/core/dns.c ****       struct local_hostlist_entry *entry;
 634:lwIP/src/core/dns.c **** 
 635:lwIP/src/core/dns.c ****       /* try to find the hostname in the local list */
 636:lwIP/src/core/dns.c **** #if DNS_LOCAL_HOSTLIST_IS_DYNAMIC
 637:lwIP/src/core/dns.c ****       for (entry = local_hostlist_dynamic; entry != NULL; entry = entry->next) {
 638:lwIP/src/core/dns.c **** #else /* DNS_LOCAL_HOSTLIST_IS_DYNAMIC */
 639:lwIP/src/core/dns.c ****       u16_t i;
 640:lwIP/src/core/dns.c ****       for (i = 0; i < LWIP_ARRAYSIZE(local_hostlist_static); i++) {
 641:lwIP/src/core/dns.c ****         entry = &local_hostlist_static[i];
 642:lwIP/src/core/dns.c **** #endif /* DNS_LOCAL_HOSTLIST_IS_DYNAMIC */
 643:lwIP/src/core/dns.c ****         res_idx = dns_compare_name(entry->name, p, SIZEOF_DNS_HDR);
 644:lwIP/src/core/dns.c ****         if (res_idx < 0xFFFF) {
 645:lwIP/src/core/dns.c ****           break;
 646:lwIP/src/core/dns.c ****         }
 647:lwIP/src/core/dns.c ****       }
 648:lwIP/src/core/dns.c **** 
 649:lwIP/src/core/dns.c ****       /* if hostname was found in local list */
 650:lwIP/src/core/dns.c ****       if (res_idx != 0xFFFF) {
 651:lwIP/src/core/dns.c ****         u16_t len = p->tot_len, ip_len;
 652:lwIP/src/core/dns.c ****         u16_t nameref;
 653:lwIP/src/core/dns.c ****         struct dns_answer ans;
 654:lwIP/src/core/dns.c ****         union {
 655:lwIP/src/core/dns.c **** #if LWIP_IPV4
 656:lwIP/src/core/dns.c ****           ip4_addr_p_t ip4;
ARM GAS  /tmp/ccJm3wen.s 			page 13


 657:lwIP/src/core/dns.c **** #endif
 658:lwIP/src/core/dns.c **** #if LWIP_IPV6
 659:lwIP/src/core/dns.c ****           ip6_addr_p_t ip6;
 660:lwIP/src/core/dns.c **** #endif
 661:lwIP/src/core/dns.c ****         } ipaddr;
 662:lwIP/src/core/dns.c **** 
 663:lwIP/src/core/dns.c ****         /* change header to response */
 664:lwIP/src/core/dns.c ****         hdr->flags1 |= DNS_FLAG1_RESPONSE;
 665:lwIP/src/core/dns.c ****         hdr->numanswers = PP_HTONS(1);
 666:lwIP/src/core/dns.c **** 
 667:lwIP/src/core/dns.c ****         /* append answer to response */
 668:lwIP/src/core/dns.c ****         nameref = PP_HTONS(0xC00C);
 669:lwIP/src/core/dns.c ****         ans.cls = PP_HTONS(DNS_RRCLASS_IN);
 670:lwIP/src/core/dns.c ****         ans.ttl = PP_HTONL(DNS_SERVER_TTL);
 671:lwIP/src/core/dns.c **** 
 672:lwIP/src/core/dns.c **** #if LWIP_IPV4
 673:lwIP/src/core/dns.c ****         if (IP_IS_V4(entry->addr)) {
 674:lwIP/src/core/dns.c ****           ip_len = sizeof(ip4_addr_t);
 675:lwIP/src/core/dns.c ****           ans.type = PP_HTONS(DNS_RRTYPE_A);
 676:lwIP/src/core/dns.c ****           ans.len  = PP_HTONS(sizeof(ip4_addr_t));
 677:lwIP/src/core/dns.c ****           ip4_addr_copy(ipaddr.ip4, ip_2_ip4(entry->addr));
 678:lwIP/src/core/dns.c ****         }
 679:lwIP/src/core/dns.c **** #endif
 680:lwIP/src/core/dns.c **** #if LWIP_IPV6
 681:lwIP/src/core/dns.c ****         if (IP_IS_V6(entry->addr)) {
 682:lwIP/src/core/dns.c ****           ip_len = sizeof(ip6_addr_t);
 683:lwIP/src/core/dns.c ****           ans.type = PP_HTONS(DNS_RRTYPE_AAAA);
 684:lwIP/src/core/dns.c ****           ans.len  = PP_HTONS(sizeof(ip6_addr_t));
 685:lwIP/src/core/dns.c ****           ip6_addr_copy(ipaddr.ip4, ip_2_ip6(entry->addr));
 686:lwIP/src/core/dns.c ****         }
 687:lwIP/src/core/dns.c **** #endif
 688:lwIP/src/core/dns.c ****         pbuf_take_at(q, &nameref, sizeof(nameref), len);
 689:lwIP/src/core/dns.c ****         len += sizeof(nameref);
 690:lwIP/src/core/dns.c ****         pbuf_take_at(q, &ans, sizeof(ans), len);
 691:lwIP/src/core/dns.c ****         len += SIZEOF_DNS_ANSWER;
 692:lwIP/src/core/dns.c ****         pbuf_take_at(q, &ipaddr, ip_len, len);
 693:lwIP/src/core/dns.c **** 
 694:lwIP/src/core/dns.c ****         /* send dns response */
 695:lwIP/src/core/dns.c ****         udp_sendto(pcb, q, addr, port);
 696:lwIP/src/core/dns.c ****       }
 697:lwIP/src/core/dns.c **** 
 698:lwIP/src/core/dns.c ****       pbuf_free(q);
 699:lwIP/src/core/dns.c ****     }
 700:lwIP/src/core/dns.c ****   }
 701:lwIP/src/core/dns.c **** 
 702:lwIP/src/core/dns.c **** memerr:
 703:lwIP/src/core/dns.c ****   /* deallocate memory and return */
 704:lwIP/src/core/dns.c ****   pbuf_free(p);
 705:lwIP/src/core/dns.c ****   return;
 706:lwIP/src/core/dns.c **** }
 707:lwIP/src/core/dns.c **** 
 708:lwIP/src/core/dns.c **** #endif /* DNS_LOCAL_HOSTLIST */
 709:lwIP/src/core/dns.c **** 
 710:lwIP/src/core/dns.c **** /**
 711:lwIP/src/core/dns.c ****  * @ingroup dns
 712:lwIP/src/core/dns.c ****  * Look up a hostname in the array of known hostnames.
 713:lwIP/src/core/dns.c ****  *
ARM GAS  /tmp/ccJm3wen.s 			page 14


 714:lwIP/src/core/dns.c ****  * @note This function only looks in the internal array of known
 715:lwIP/src/core/dns.c ****  * hostnames, it does not send out a query for the hostname if none
 716:lwIP/src/core/dns.c ****  * was found. The function dns_enqueue() can be used to send a query
 717:lwIP/src/core/dns.c ****  * for a hostname.
 718:lwIP/src/core/dns.c ****  *
 719:lwIP/src/core/dns.c ****  * @param name the hostname to look up
 720:lwIP/src/core/dns.c ****  * @param addr the hostname's IP address, as u32_t (instead of ip_addr_t to
 721:lwIP/src/core/dns.c ****  *         better check for failure: != IPADDR_NONE) or IPADDR_NONE if the hostname
 722:lwIP/src/core/dns.c ****  *         was not found in the cached dns_table.
 723:lwIP/src/core/dns.c ****  * @return ERR_OK if found, ERR_ARG if not found
 724:lwIP/src/core/dns.c ****  */
 725:lwIP/src/core/dns.c **** static err_t
 726:lwIP/src/core/dns.c **** dns_lookup(const char *name, ip_addr_t *addr LWIP_DNS_ADDRTYPE_ARG(u8_t dns_addrtype))
 727:lwIP/src/core/dns.c **** {
 728:lwIP/src/core/dns.c ****   u8_t i;
 729:lwIP/src/core/dns.c **** #if DNS_LOCAL_HOSTLIST
 730:lwIP/src/core/dns.c ****   if (dns_lookup_local(name, addr LWIP_DNS_ADDRTYPE_ARG(dns_addrtype)) == ERR_OK) {
 731:lwIP/src/core/dns.c ****     return ERR_OK;
 732:lwIP/src/core/dns.c ****   }
 733:lwIP/src/core/dns.c **** #endif /* DNS_LOCAL_HOSTLIST */
 734:lwIP/src/core/dns.c **** #ifdef DNS_LOOKUP_LOCAL_EXTERN
 735:lwIP/src/core/dns.c ****   if (DNS_LOOKUP_LOCAL_EXTERN(name, addr, LWIP_DNS_ADDRTYPE_ARG_OR_ZERO(dns_addrtype)) == ERR_OK) {
 736:lwIP/src/core/dns.c ****     return ERR_OK;
 737:lwIP/src/core/dns.c ****   }
 738:lwIP/src/core/dns.c **** #endif /* DNS_LOOKUP_LOCAL_EXTERN */
 739:lwIP/src/core/dns.c **** 
 740:lwIP/src/core/dns.c ****   /* Walk through name list, return entry if found. If not, return NULL. */
 741:lwIP/src/core/dns.c ****   for (i = 0; i < DNS_TABLE_SIZE; ++i) {
 742:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_DONE) &&
 743:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0) &&
 744:lwIP/src/core/dns.c ****         LWIP_DNS_ADDRTYPE_MATCH_IP(dns_addrtype, dns_table[i].ipaddr)) {
 745:lwIP/src/core/dns.c ****       LWIP_DEBUGF(DNS_DEBUG, ("dns_lookup: \"%s\": found = ", name));
 746:lwIP/src/core/dns.c ****       ip_addr_debug_print_val(DNS_DEBUG, dns_table[i].ipaddr);
 747:lwIP/src/core/dns.c ****       LWIP_DEBUGF(DNS_DEBUG, ("\n"));
 748:lwIP/src/core/dns.c ****       if (addr) {
 749:lwIP/src/core/dns.c ****         ip_addr_copy(*addr, dns_table[i].ipaddr);
 750:lwIP/src/core/dns.c ****       }
 751:lwIP/src/core/dns.c ****       return ERR_OK;
 752:lwIP/src/core/dns.c ****     }
 753:lwIP/src/core/dns.c ****   }
 754:lwIP/src/core/dns.c **** 
 755:lwIP/src/core/dns.c ****   return ERR_ARG;
 756:lwIP/src/core/dns.c **** }
 757:lwIP/src/core/dns.c **** 
 758:lwIP/src/core/dns.c **** /**
 759:lwIP/src/core/dns.c ****  * Compare the "dotted" name "query" with the encoded name "response"
 760:lwIP/src/core/dns.c ****  * to make sure an answer from the DNS server matches the current dns_table
 761:lwIP/src/core/dns.c ****  * entry (otherwise, answers might arrive late for hostname not on the list
 762:lwIP/src/core/dns.c ****  * any more).
 763:lwIP/src/core/dns.c ****  *
 764:lwIP/src/core/dns.c ****  * For now, this function compares case-insensitive to cope with all kinds of
 765:lwIP/src/core/dns.c ****  * servers. This also means that "dns 0x20 bit encoding" must be checked
 766:lwIP/src/core/dns.c ****  * externally, if we want to implement it.
 767:lwIP/src/core/dns.c ****  * Currently, the request is sent exactly as passed in by he user request.
 768:lwIP/src/core/dns.c ****  *
 769:lwIP/src/core/dns.c ****  * @param query hostname (not encoded) from the dns_table
 770:lwIP/src/core/dns.c ****  * @param p pbuf containing the encoded hostname in the DNS response
ARM GAS  /tmp/ccJm3wen.s 			page 15


 771:lwIP/src/core/dns.c ****  * @param start_offset offset into p where the name starts
 772:lwIP/src/core/dns.c ****  * @return 0xFFFF: names differ, other: names equal -> offset behind name
 773:lwIP/src/core/dns.c ****  */
 774:lwIP/src/core/dns.c **** static u16_t
 775:lwIP/src/core/dns.c **** dns_compare_name(const char *query, struct pbuf *p, u16_t start_offset)
 776:lwIP/src/core/dns.c **** {
 777:lwIP/src/core/dns.c ****   int n;
 778:lwIP/src/core/dns.c ****   u16_t response_offset = start_offset;
 779:lwIP/src/core/dns.c **** 
 780:lwIP/src/core/dns.c ****   do {
 781:lwIP/src/core/dns.c ****     n = pbuf_try_get_at(p, response_offset);
 782:lwIP/src/core/dns.c ****     if ((n < 0) || (response_offset == 0xFFFF)) {
 783:lwIP/src/core/dns.c ****       /* error or overflow */
 784:lwIP/src/core/dns.c ****       return 0xFFFF;
 785:lwIP/src/core/dns.c ****     }
 786:lwIP/src/core/dns.c ****     response_offset++;
 787:lwIP/src/core/dns.c ****     /** @see RFC 1035 - 4.1.4. Message compression */
 788:lwIP/src/core/dns.c ****     if ((n & 0xc0) == 0xc0) {
 789:lwIP/src/core/dns.c ****       /* Compressed name: cannot be equal since we don't send them */
 790:lwIP/src/core/dns.c ****       return 0xFFFF;
 791:lwIP/src/core/dns.c ****     } else {
 792:lwIP/src/core/dns.c ****       /* Not compressed name */
 793:lwIP/src/core/dns.c ****       while (n > 0) {
 794:lwIP/src/core/dns.c ****         int c = pbuf_try_get_at(p, response_offset);
 795:lwIP/src/core/dns.c ****         if (c < 0) {
 796:lwIP/src/core/dns.c ****           return 0xFFFF;
 797:lwIP/src/core/dns.c ****         }
 798:lwIP/src/core/dns.c ****         if (lwip_tolower((*query)) != lwip_tolower((u8_t)c)) {
 799:lwIP/src/core/dns.c ****           return 0xFFFF;
 800:lwIP/src/core/dns.c ****         }
 801:lwIP/src/core/dns.c ****         if (response_offset == 0xFFFF) {
 802:lwIP/src/core/dns.c ****           /* would overflow */
 803:lwIP/src/core/dns.c ****           return 0xFFFF;
 804:lwIP/src/core/dns.c ****         }
 805:lwIP/src/core/dns.c ****         response_offset++;
 806:lwIP/src/core/dns.c ****         ++query;
 807:lwIP/src/core/dns.c ****         --n;
 808:lwIP/src/core/dns.c ****       }
 809:lwIP/src/core/dns.c ****       ++query;
 810:lwIP/src/core/dns.c ****     }
 811:lwIP/src/core/dns.c ****     n = pbuf_try_get_at(p, response_offset);
 812:lwIP/src/core/dns.c ****     if (n < 0) {
 813:lwIP/src/core/dns.c ****       return 0xFFFF;
 814:lwIP/src/core/dns.c ****     }
 815:lwIP/src/core/dns.c ****   } while (n != 0);
 816:lwIP/src/core/dns.c **** 
 817:lwIP/src/core/dns.c ****   if (response_offset == 0xFFFF) {
 818:lwIP/src/core/dns.c ****     /* would overflow */
 819:lwIP/src/core/dns.c ****     return 0xFFFF;
 820:lwIP/src/core/dns.c ****   }
 821:lwIP/src/core/dns.c ****   return (u16_t)(response_offset + 1);
 822:lwIP/src/core/dns.c **** }
 823:lwIP/src/core/dns.c **** 
 824:lwIP/src/core/dns.c **** /**
 825:lwIP/src/core/dns.c ****  * Walk through a compact encoded DNS name and return the end of the name.
 826:lwIP/src/core/dns.c ****  *
 827:lwIP/src/core/dns.c ****  * @param p pbuf containing the name
ARM GAS  /tmp/ccJm3wen.s 			page 16


 828:lwIP/src/core/dns.c ****  * @param query_idx start index into p pointing to encoded DNS name in the DNS server response
 829:lwIP/src/core/dns.c ****  * @return index to end of the name
 830:lwIP/src/core/dns.c ****  */
 831:lwIP/src/core/dns.c **** static u16_t
 832:lwIP/src/core/dns.c **** dns_skip_name(struct pbuf *p, u16_t query_idx)
 833:lwIP/src/core/dns.c **** {
 834:lwIP/src/core/dns.c ****   int n;
 835:lwIP/src/core/dns.c ****   u16_t offset = query_idx;
 836:lwIP/src/core/dns.c **** 
 837:lwIP/src/core/dns.c ****   do {
 838:lwIP/src/core/dns.c ****     n = pbuf_try_get_at(p, offset++);
 839:lwIP/src/core/dns.c ****     if ((n < 0) || (offset == 0)) {
 840:lwIP/src/core/dns.c ****       return 0xFFFF;
 841:lwIP/src/core/dns.c ****     }
 842:lwIP/src/core/dns.c ****     /** @see RFC 1035 - 4.1.4. Message compression */
 843:lwIP/src/core/dns.c ****     if ((n & 0xc0) == 0xc0) {
 844:lwIP/src/core/dns.c ****       /* Compressed name: since we only want to skip it (not check it), stop here */
 845:lwIP/src/core/dns.c ****       break;
 846:lwIP/src/core/dns.c ****     } else {
 847:lwIP/src/core/dns.c ****       /* Not compressed name */
 848:lwIP/src/core/dns.c ****       if (offset + n >= p->tot_len) {
 849:lwIP/src/core/dns.c ****         return 0xFFFF;
 850:lwIP/src/core/dns.c ****       }
 851:lwIP/src/core/dns.c ****       offset = (u16_t)(offset + n);
 852:lwIP/src/core/dns.c ****     }
 853:lwIP/src/core/dns.c ****     n = pbuf_try_get_at(p, offset);
 854:lwIP/src/core/dns.c ****     if (n < 0) {
 855:lwIP/src/core/dns.c ****       return 0xFFFF;
 856:lwIP/src/core/dns.c ****     }
 857:lwIP/src/core/dns.c ****   } while (n != 0);
 858:lwIP/src/core/dns.c **** 
 859:lwIP/src/core/dns.c ****   if (offset == 0xFFFF) {
 860:lwIP/src/core/dns.c ****     return 0xFFFF;
 861:lwIP/src/core/dns.c ****   }
 862:lwIP/src/core/dns.c ****   return (u16_t)(offset + 1);
 863:lwIP/src/core/dns.c **** }
 864:lwIP/src/core/dns.c **** 
 865:lwIP/src/core/dns.c **** /**
 866:lwIP/src/core/dns.c ****  * Send a DNS query packet.
 867:lwIP/src/core/dns.c ****  *
 868:lwIP/src/core/dns.c ****  * @param idx the DNS table entry index for which to send a request
 869:lwIP/src/core/dns.c ****  * @return ERR_OK if packet is sent; an err_t indicating the problem otherwise
 870:lwIP/src/core/dns.c ****  */
 871:lwIP/src/core/dns.c **** static err_t
 872:lwIP/src/core/dns.c **** dns_send(u8_t idx)
 873:lwIP/src/core/dns.c **** {
 874:lwIP/src/core/dns.c ****   err_t err;
 875:lwIP/src/core/dns.c ****   struct dns_hdr hdr;
 876:lwIP/src/core/dns.c ****   struct dns_query qry;
 877:lwIP/src/core/dns.c ****   struct pbuf *p;
 878:lwIP/src/core/dns.c ****   u16_t query_idx, copy_len;
 879:lwIP/src/core/dns.c ****   const char *hostname, *hostname_part;
 880:lwIP/src/core/dns.c ****   u8_t n;
 881:lwIP/src/core/dns.c ****   u8_t pcb_idx;
 882:lwIP/src/core/dns.c ****   struct dns_table_entry *entry = &dns_table[idx];
 883:lwIP/src/core/dns.c **** 
 884:lwIP/src/core/dns.c ****   LWIP_DEBUGF(DNS_DEBUG, ("dns_send: dns_servers[%"U16_F"] \"%s\": request\n",
ARM GAS  /tmp/ccJm3wen.s 			page 17


 885:lwIP/src/core/dns.c ****                           (u16_t)(entry->server_idx), entry->name));
 886:lwIP/src/core/dns.c ****   LWIP_ASSERT("dns server out of array", entry->server_idx < DNS_MAX_SERVERS);
 887:lwIP/src/core/dns.c ****   if (ip_addr_isany_val(dns_servers[entry->server_idx])
 888:lwIP/src/core/dns.c **** #if LWIP_DNS_SUPPORT_MDNS_QUERIES
 889:lwIP/src/core/dns.c ****       && !entry->is_mdns
 890:lwIP/src/core/dns.c **** #endif
 891:lwIP/src/core/dns.c ****      ) {
 892:lwIP/src/core/dns.c ****     /* DNS server not valid anymore, e.g. PPP netif has been shut down */
 893:lwIP/src/core/dns.c ****     /* call specified callback function if provided */
 894:lwIP/src/core/dns.c ****     dns_call_found(idx, NULL);
 895:lwIP/src/core/dns.c ****     /* flush this entry */
 896:lwIP/src/core/dns.c ****     entry->state = DNS_STATE_UNUSED;
 897:lwIP/src/core/dns.c ****     return ERR_OK;
 898:lwIP/src/core/dns.c ****   }
 899:lwIP/src/core/dns.c **** 
 900:lwIP/src/core/dns.c ****   /* if here, we have either a new query or a retry on a previous query to process */
 901:lwIP/src/core/dns.c ****   p = pbuf_alloc(PBUF_TRANSPORT, (u16_t)(SIZEOF_DNS_HDR + strlen(entry->name) + 2 +
 902:lwIP/src/core/dns.c ****                                          SIZEOF_DNS_QUERY), PBUF_RAM);
 903:lwIP/src/core/dns.c ****   if (p != NULL) {
 904:lwIP/src/core/dns.c ****     const ip_addr_t *dst;
 905:lwIP/src/core/dns.c ****     u16_t dst_port;
 906:lwIP/src/core/dns.c ****     /* fill dns header */
 907:lwIP/src/core/dns.c ****     memset(&hdr, 0, SIZEOF_DNS_HDR);
 908:lwIP/src/core/dns.c ****     hdr.id = lwip_htons(entry->txid);
 909:lwIP/src/core/dns.c ****     hdr.flags1 = DNS_FLAG1_RD;
 910:lwIP/src/core/dns.c ****     hdr.numquestions = PP_HTONS(1);
 911:lwIP/src/core/dns.c ****     pbuf_take(p, &hdr, SIZEOF_DNS_HDR);
 912:lwIP/src/core/dns.c ****     hostname = entry->name;
 913:lwIP/src/core/dns.c ****     --hostname;
 914:lwIP/src/core/dns.c **** 
 915:lwIP/src/core/dns.c ****     /* convert hostname into suitable query format. */
 916:lwIP/src/core/dns.c ****     query_idx = SIZEOF_DNS_HDR;
 917:lwIP/src/core/dns.c ****     do {
 918:lwIP/src/core/dns.c ****       ++hostname;
 919:lwIP/src/core/dns.c ****       hostname_part = hostname;
 920:lwIP/src/core/dns.c ****       for (n = 0; *hostname != '.' && *hostname != 0; ++hostname) {
 921:lwIP/src/core/dns.c ****         ++n;
 922:lwIP/src/core/dns.c ****       }
 923:lwIP/src/core/dns.c ****       copy_len = (u16_t)(hostname - hostname_part);
 924:lwIP/src/core/dns.c ****       if (query_idx + n + 1 > 0xFFFF) {
 925:lwIP/src/core/dns.c ****         /* u16_t overflow */
 926:lwIP/src/core/dns.c ****         goto overflow_return;
 927:lwIP/src/core/dns.c ****       }
 928:lwIP/src/core/dns.c ****       pbuf_put_at(p, query_idx, n);
 929:lwIP/src/core/dns.c ****       pbuf_take_at(p, hostname_part, copy_len, (u16_t)(query_idx + 1));
 930:lwIP/src/core/dns.c ****       query_idx = (u16_t)(query_idx + n + 1);
 931:lwIP/src/core/dns.c ****     } while (*hostname != 0);
 932:lwIP/src/core/dns.c ****     pbuf_put_at(p, query_idx, 0);
 933:lwIP/src/core/dns.c ****     query_idx++;
 934:lwIP/src/core/dns.c **** 
 935:lwIP/src/core/dns.c ****     /* fill dns query */
 936:lwIP/src/core/dns.c ****     if (LWIP_DNS_ADDRTYPE_IS_IPV6(entry->reqaddrtype)) {
 937:lwIP/src/core/dns.c ****       qry.type = PP_HTONS(DNS_RRTYPE_AAAA);
 938:lwIP/src/core/dns.c ****     } else {
 939:lwIP/src/core/dns.c ****       qry.type = PP_HTONS(DNS_RRTYPE_A);
 940:lwIP/src/core/dns.c ****     }
 941:lwIP/src/core/dns.c ****     qry.cls = PP_HTONS(DNS_RRCLASS_IN);
ARM GAS  /tmp/ccJm3wen.s 			page 18


 942:lwIP/src/core/dns.c ****     pbuf_take_at(p, &qry, SIZEOF_DNS_QUERY, query_idx);
 943:lwIP/src/core/dns.c **** 
 944:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & LWIP_DNS_SECURE_RAND_SRC_PORT) != 0)
 945:lwIP/src/core/dns.c ****     pcb_idx = entry->pcb_idx;
 946:lwIP/src/core/dns.c **** #else
 947:lwIP/src/core/dns.c ****     pcb_idx = 0;
 948:lwIP/src/core/dns.c **** #endif
 949:lwIP/src/core/dns.c ****     /* send dns packet */
 950:lwIP/src/core/dns.c ****     LWIP_DEBUGF(DNS_DEBUG, ("sending DNS request ID %d for name \"%s\" to server %d\r\n",
 951:lwIP/src/core/dns.c ****                             entry->txid, entry->name, entry->server_idx));
 952:lwIP/src/core/dns.c **** #if LWIP_DNS_SUPPORT_MDNS_QUERIES
 953:lwIP/src/core/dns.c ****     if (entry->is_mdns) {
 954:lwIP/src/core/dns.c ****       dst_port = DNS_MQUERY_PORT;
 955:lwIP/src/core/dns.c **** #if LWIP_IPV6
 956:lwIP/src/core/dns.c ****       if (LWIP_DNS_ADDRTYPE_IS_IPV6(entry->reqaddrtype)) {
 957:lwIP/src/core/dns.c ****         dst = &dns_mquery_v6group;
 958:lwIP/src/core/dns.c ****       }
 959:lwIP/src/core/dns.c **** #endif
 960:lwIP/src/core/dns.c **** #if LWIP_IPV4 && LWIP_IPV6
 961:lwIP/src/core/dns.c ****       else
 962:lwIP/src/core/dns.c **** #endif
 963:lwIP/src/core/dns.c **** #if LWIP_IPV4
 964:lwIP/src/core/dns.c ****       {
 965:lwIP/src/core/dns.c ****         dst = &dns_mquery_v4group;
 966:lwIP/src/core/dns.c ****       }
 967:lwIP/src/core/dns.c **** #endif
 968:lwIP/src/core/dns.c ****     } else
 969:lwIP/src/core/dns.c **** #endif /* LWIP_DNS_SUPPORT_MDNS_QUERIES */
 970:lwIP/src/core/dns.c ****     {
 971:lwIP/src/core/dns.c ****       dst_port = DNS_SERVER_PORT;
 972:lwIP/src/core/dns.c ****       dst = &dns_servers[entry->server_idx];
 973:lwIP/src/core/dns.c ****     }
 974:lwIP/src/core/dns.c ****     err = udp_sendto(dns_pcbs[pcb_idx], p, dst, dst_port);
 975:lwIP/src/core/dns.c **** 
 976:lwIP/src/core/dns.c ****     /* free pbuf */
 977:lwIP/src/core/dns.c ****     pbuf_free(p);
 978:lwIP/src/core/dns.c ****   } else {
 979:lwIP/src/core/dns.c ****     err = ERR_MEM;
 980:lwIP/src/core/dns.c ****   }
 981:lwIP/src/core/dns.c **** 
 982:lwIP/src/core/dns.c ****   return err;
 983:lwIP/src/core/dns.c **** overflow_return:
 984:lwIP/src/core/dns.c ****   pbuf_free(p);
 985:lwIP/src/core/dns.c ****   return ERR_VAL;
 986:lwIP/src/core/dns.c **** }
 987:lwIP/src/core/dns.c **** 
 988:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & LWIP_DNS_SECURE_RAND_SRC_PORT) != 0)
 989:lwIP/src/core/dns.c **** static struct udp_pcb *
 990:lwIP/src/core/dns.c **** dns_alloc_random_port(void)
 991:lwIP/src/core/dns.c **** {
 992:lwIP/src/core/dns.c ****   err_t err;
 993:lwIP/src/core/dns.c ****   struct udp_pcb *pcb;
 994:lwIP/src/core/dns.c **** 
 995:lwIP/src/core/dns.c ****   pcb = udp_new_ip_type(IPADDR_TYPE_ANY);
 996:lwIP/src/core/dns.c ****   if (pcb == NULL) {
 997:lwIP/src/core/dns.c ****     /* out of memory, have to reuse an existing pcb */
 998:lwIP/src/core/dns.c ****     return NULL;
ARM GAS  /tmp/ccJm3wen.s 			page 19


 999:lwIP/src/core/dns.c ****   }
1000:lwIP/src/core/dns.c ****   do {
1001:lwIP/src/core/dns.c ****     u16_t port = (u16_t)DNS_RAND_TXID();
1002:lwIP/src/core/dns.c ****     if (DNS_PORT_ALLOWED(port)) {
1003:lwIP/src/core/dns.c ****       err = udp_bind(pcb, IP_ANY_TYPE, port);
1004:lwIP/src/core/dns.c ****     } else {
1005:lwIP/src/core/dns.c ****       /* this port is not allowed, try again */
1006:lwIP/src/core/dns.c ****       err = ERR_USE;
1007:lwIP/src/core/dns.c ****     }
1008:lwIP/src/core/dns.c ****   } while (err == ERR_USE);
1009:lwIP/src/core/dns.c ****   if (err != ERR_OK) {
1010:lwIP/src/core/dns.c ****     udp_remove(pcb);
1011:lwIP/src/core/dns.c ****     return NULL;
1012:lwIP/src/core/dns.c ****   }
1013:lwIP/src/core/dns.c ****   udp_recv(pcb, dns_recv, NULL);
1014:lwIP/src/core/dns.c ****   return pcb;
1015:lwIP/src/core/dns.c **** }
1016:lwIP/src/core/dns.c **** 
1017:lwIP/src/core/dns.c **** /**
1018:lwIP/src/core/dns.c ****  * dns_alloc_pcb() - allocates a new pcb (or reuses an existing one) to be used
1019:lwIP/src/core/dns.c ****  * for sending a request
1020:lwIP/src/core/dns.c ****  *
1021:lwIP/src/core/dns.c ****  * @return an index into dns_pcbs
1022:lwIP/src/core/dns.c ****  */
1023:lwIP/src/core/dns.c **** static u8_t
1024:lwIP/src/core/dns.c **** dns_alloc_pcb(void)
1025:lwIP/src/core/dns.c **** {
1026:lwIP/src/core/dns.c ****   u8_t i;
1027:lwIP/src/core/dns.c ****   u8_t idx;
1028:lwIP/src/core/dns.c **** 
1029:lwIP/src/core/dns.c ****   for (i = 0; i < DNS_MAX_SOURCE_PORTS; i++) {
1030:lwIP/src/core/dns.c ****     if (dns_pcbs[i] == NULL) {
1031:lwIP/src/core/dns.c ****       break;
1032:lwIP/src/core/dns.c ****     }
1033:lwIP/src/core/dns.c ****   }
1034:lwIP/src/core/dns.c ****   if (i < DNS_MAX_SOURCE_PORTS) {
1035:lwIP/src/core/dns.c ****     dns_pcbs[i] = dns_alloc_random_port();
1036:lwIP/src/core/dns.c ****     if (dns_pcbs[i] != NULL) {
1037:lwIP/src/core/dns.c ****       /* succeeded */
1038:lwIP/src/core/dns.c ****       dns_last_pcb_idx = i;
1039:lwIP/src/core/dns.c ****       return i;
1040:lwIP/src/core/dns.c ****     }
1041:lwIP/src/core/dns.c ****   }
1042:lwIP/src/core/dns.c ****   /* if we come here, creating a new UDP pcb failed, so we have to use
1043:lwIP/src/core/dns.c ****      an already existing one (so overflow is no issue) */
1044:lwIP/src/core/dns.c ****   for (i = 0, idx = (u8_t)(dns_last_pcb_idx + 1); i < DNS_MAX_SOURCE_PORTS; i++, idx++) {
1045:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
1046:lwIP/src/core/dns.c ****       idx = 0;
1047:lwIP/src/core/dns.c ****     }
1048:lwIP/src/core/dns.c ****     if (dns_pcbs[idx] != NULL) {
1049:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
1050:lwIP/src/core/dns.c ****       return idx;
1051:lwIP/src/core/dns.c ****     }
1052:lwIP/src/core/dns.c ****   }
1053:lwIP/src/core/dns.c ****   return DNS_MAX_SOURCE_PORTS;
1054:lwIP/src/core/dns.c **** }
1055:lwIP/src/core/dns.c **** #endif /* ((LWIP_DNS_SECURE & LWIP_DNS_SECURE_RAND_SRC_PORT) != 0) */
ARM GAS  /tmp/ccJm3wen.s 			page 20


1056:lwIP/src/core/dns.c **** 
1057:lwIP/src/core/dns.c **** /**
1058:lwIP/src/core/dns.c ****  * dns_call_found() - call the found callback and check if there are duplicate
1059:lwIP/src/core/dns.c ****  * entries for the given hostname. If there are any, their found callback will
1060:lwIP/src/core/dns.c ****  * be called and they will be removed.
1061:lwIP/src/core/dns.c ****  *
1062:lwIP/src/core/dns.c ****  * @param idx dns table index of the entry that is resolved or removed
1063:lwIP/src/core/dns.c ****  * @param addr IP address for the hostname (or NULL on error or memory shortage)
1064:lwIP/src/core/dns.c ****  */
1065:lwIP/src/core/dns.c **** static void
1066:lwIP/src/core/dns.c **** dns_call_found(u8_t idx, ip_addr_t *addr)
1067:lwIP/src/core/dns.c **** {
  30              		.loc 1 1067 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1068:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & (LWIP_DNS_SECURE_NO_MULTIPLE_OUTSTANDING | LWIP_DNS_SECURE_RAND_SRC_PORT)) 
1069:lwIP/src/core/dns.c ****   u8_t i;
  34              		.loc 1 1069 3 view .LVU1
1070:lwIP/src/core/dns.c **** #endif
1071:lwIP/src/core/dns.c **** 
1072:lwIP/src/core/dns.c **** #if LWIP_IPV4 && LWIP_IPV6
1073:lwIP/src/core/dns.c ****   if (addr != NULL) {
1074:lwIP/src/core/dns.c ****     /* check that address type matches the request and adapt the table entry */
1075:lwIP/src/core/dns.c ****     if (IP_IS_V6_VAL(*addr)) {
1076:lwIP/src/core/dns.c ****       LWIP_ASSERT("invalid response", LWIP_DNS_ADDRTYPE_IS_IPV6(dns_table[idx].reqaddrtype));
1077:lwIP/src/core/dns.c ****       dns_table[idx].reqaddrtype = LWIP_DNS_ADDRTYPE_IPV6;
1078:lwIP/src/core/dns.c ****     } else {
1079:lwIP/src/core/dns.c ****       LWIP_ASSERT("invalid response", !LWIP_DNS_ADDRTYPE_IS_IPV6(dns_table[idx].reqaddrtype));
1080:lwIP/src/core/dns.c ****       dns_table[idx].reqaddrtype = LWIP_DNS_ADDRTYPE_IPV4;
1081:lwIP/src/core/dns.c ****     }
1082:lwIP/src/core/dns.c ****   }
1083:lwIP/src/core/dns.c **** #endif /* LWIP_IPV4 && LWIP_IPV6 */
1084:lwIP/src/core/dns.c **** 
1085:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & LWIP_DNS_SECURE_NO_MULTIPLE_OUTSTANDING) != 0)
1086:lwIP/src/core/dns.c ****   for (i = 0; i < DNS_MAX_REQUESTS; i++) {
  35              		.loc 1 1086 3 view .LVU2
  36              		.loc 1 1086 15 view .LVU3
1067:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & (LWIP_DNS_SECURE_NO_MULTIPLE_OUTSTANDING | LWIP_DNS_SECURE_RAND_SRC_PORT)) 
  37              		.loc 1 1067 1 is_stmt 0 view .LVU4
  38 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 32
  41              		.cfi_offset 3, -32
  42              		.cfi_offset 4, -28
  43              		.cfi_offset 5, -24
  44              		.cfi_offset 6, -20
  45              		.cfi_offset 7, -16
  46              		.cfi_offset 8, -12
  47              		.cfi_offset 9, -8
  48              		.cfi_offset 14, -4
1067:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & (LWIP_DNS_SECURE_NO_MULTIPLE_OUTSTANDING | LWIP_DNS_SECURE_RAND_SRC_PORT)) 
  49              		.loc 1 1067 1 view .LVU5
  50 0004 0446     		mov	r4, r0
1087:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
1088:lwIP/src/core/dns.c ****       (*dns_requests[i].found)(dns_table[idx].name, addr, dns_requests[i].arg);
  51              		.loc 1 1088 46 view .LVU6
ARM GAS  /tmp/ccJm3wen.s 			page 21


  52 0006 3F4E     		ldr	r6, .L49
1087:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
  53              		.loc 1 1087 24 view .LVU7
  54 0008 3F4D     		ldr	r5, .L49+4
  55              		.loc 1 1088 46 view .LVU8
  56 000a 00EB0010 		add	r0, r0, r0, lsl #4
  57              	.LVL1:
1067:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & (LWIP_DNS_SECURE_NO_MULTIPLE_OUTSTANDING | LWIP_DNS_SECURE_RAND_SRC_PORT)) 
  58              		.loc 1 1067 1 view .LVU9
  59 000e 8946     		mov	r9, r1
  60              		.loc 1 1088 46 view .LVU10
  61 0010 2701     		lsls	r7, r4, #4
  62 0012 06EB0010 		add	r0, r6, r0, lsl #4
1087:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
  63              		.loc 1 1087 24 view .LVU11
  64 0016 2B68     		ldr	r3, [r5]
  65              		.loc 1 1088 46 view .LVU12
  66 0018 00F11008 		add	r8, r0, #16
1087:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
  67              		.loc 1 1087 5 is_stmt 1 view .LVU13
1087:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
  68              		.loc 1 1087 8 is_stmt 0 view .LVU14
  69 001c 13B1     		cbz	r3, .L2
1087:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
  70              		.loc 1 1087 31 view .LVU15
  71 001e 2A7A     		ldrb	r2, [r5, #8]	@ zero_extendqisi2
  72 0020 A242     		cmp	r2, r4
  73 0022 51D0     		beq	.L41
  74              	.LVL2:
  75              	.L2:
1086:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
  76              		.loc 1 1086 37 is_stmt 1 view .LVU16
1086:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
  77              		.loc 1 1086 15 view .LVU17
1087:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
  78              		.loc 1 1087 5 view .LVU18
1087:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
  79              		.loc 1 1087 24 is_stmt 0 view .LVU19
  80 0024 EB68     		ldr	r3, [r5, #12]
1087:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
  81              		.loc 1 1087 8 view .LVU20
  82 0026 13B1     		cbz	r3, .L3
1087:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
  83              		.loc 1 1087 31 view .LVU21
  84 0028 2A7D     		ldrb	r2, [r5, #20]	@ zero_extendqisi2
  85 002a A242     		cmp	r2, r4
  86 002c 45D0     		beq	.L42
  87              	.L3:
1086:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
  88              		.loc 1 1086 37 is_stmt 1 view .LVU22
  89              	.LVL3:
1086:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
  90              		.loc 1 1086 15 view .LVU23
1087:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
  91              		.loc 1 1087 5 view .LVU24
1087:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
  92              		.loc 1 1087 24 is_stmt 0 view .LVU25
ARM GAS  /tmp/ccJm3wen.s 			page 22


  93 002e AB69     		ldr	r3, [r5, #24]
1087:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
  94              		.loc 1 1087 8 view .LVU26
  95 0030 1BB1     		cbz	r3, .L4
1087:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
  96              		.loc 1 1087 31 view .LVU27
  97 0032 95F82020 		ldrb	r2, [r5, #32]	@ zero_extendqisi2
  98 0036 A242     		cmp	r2, r4
  99 0038 38D0     		beq	.L43
 100              	.L4:
1086:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
 101              		.loc 1 1086 37 is_stmt 1 view .LVU28
 102              	.LVL4:
1086:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
 103              		.loc 1 1086 15 view .LVU29
1087:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
 104              		.loc 1 1087 5 view .LVU30
1087:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
 105              		.loc 1 1087 24 is_stmt 0 view .LVU31
 106 003a 6B6A     		ldr	r3, [r5, #36]
1087:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
 107              		.loc 1 1087 8 view .LVU32
 108 003c 1BB1     		cbz	r3, .L5
1087:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
 109              		.loc 1 1087 31 discriminator 1 view .LVU33
 110 003e 95F82C20 		ldrb	r2, [r5, #44]	@ zero_extendqisi2
 111 0042 A242     		cmp	r2, r4
 112 0044 2BD0     		beq	.L44
 113              	.L5:
1086:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
 114              		.loc 1 1086 37 is_stmt 1 discriminator 2 view .LVU34
 115              	.LVL5:
1086:lwIP/src/core/dns.c ****     if (dns_requests[i].found && (dns_requests[i].dns_table_idx == idx)) {
 116              		.loc 1 1086 15 discriminator 2 view .LVU35
 117 0046 3B19     		adds	r3, r7, r4
 118 0048 06EB0313 		add	r3, r6, r3, lsl #4
 119 004c DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 120              	.LVL6:
1089:lwIP/src/core/dns.c ****       /* flush this entry */
1090:lwIP/src/core/dns.c ****       dns_requests[i].found = NULL;
1091:lwIP/src/core/dns.c ****     }
1092:lwIP/src/core/dns.c ****   }
1093:lwIP/src/core/dns.c **** #else
1094:lwIP/src/core/dns.c ****   if (dns_requests[idx].found) {
1095:lwIP/src/core/dns.c ****     (*dns_requests[idx].found)(dns_table[idx].name, addr, dns_requests[idx].arg);
1096:lwIP/src/core/dns.c ****   }
1097:lwIP/src/core/dns.c ****   dns_requests[idx].found = NULL;
1098:lwIP/src/core/dns.c **** #endif
1099:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & LWIP_DNS_SECURE_RAND_SRC_PORT) != 0)
1100:lwIP/src/core/dns.c ****   /* close the pcb used unless other request are using it */
1101:lwIP/src/core/dns.c ****   for (i = 0; i < DNS_MAX_REQUESTS; i++) {
1102:lwIP/src/core/dns.c ****     if (i == idx) {
 121              		.loc 1 1102 5 discriminator 2 view .LVU36
 122              		.loc 1 1102 8 is_stmt 0 discriminator 2 view .LVU37
 123 004e 24B1     		cbz	r4, .L6
1103:lwIP/src/core/dns.c ****       continue; /* only check other requests */
1104:lwIP/src/core/dns.c ****     }
ARM GAS  /tmp/ccJm3wen.s 			page 23


1105:lwIP/src/core/dns.c ****     if (dns_table[i].state == DNS_STATE_ASKING) {
 124              		.loc 1 1105 5 is_stmt 1 view .LVU38
 125              		.loc 1 1105 8 is_stmt 0 view .LVU39
 126 0050 B27A     		ldrb	r2, [r6, #10]	@ zero_extendqisi2
 127 0052 022A     		cmp	r2, #2
 128 0054 3ED0     		beq	.L45
 129              	.L7:
1101:lwIP/src/core/dns.c ****     if (i == idx) {
 130              		.loc 1 1101 37 is_stmt 1 view .LVU40
 131              	.LVL7:
1101:lwIP/src/core/dns.c ****     if (i == idx) {
 132              		.loc 1 1101 15 view .LVU41
1102:lwIP/src/core/dns.c ****       continue; /* only check other requests */
 133              		.loc 1 1102 5 view .LVU42
1102:lwIP/src/core/dns.c ****       continue; /* only check other requests */
 134              		.loc 1 1102 8 is_stmt 0 view .LVU43
 135 0056 012C     		cmp	r4, #1
 136 0058 05D0     		beq	.L9
 137              	.LVL8:
 138              	.L6:
 139              		.loc 1 1105 5 is_stmt 1 view .LVU44
 140              		.loc 1 1105 8 is_stmt 0 view .LVU45
 141 005a 96F81A21 		ldrb	r2, [r6, #282]	@ zero_extendqisi2
 142 005e 022A     		cmp	r2, #2
 143 0060 41D0     		beq	.L46
 144              	.L10:
1101:lwIP/src/core/dns.c ****     if (i == idx) {
 145              		.loc 1 1101 37 is_stmt 1 view .LVU46
 146              	.LVL9:
1101:lwIP/src/core/dns.c ****     if (i == idx) {
 147              		.loc 1 1101 15 view .LVU47
1102:lwIP/src/core/dns.c ****       continue; /* only check other requests */
 148              		.loc 1 1102 5 view .LVU48
1102:lwIP/src/core/dns.c ****       continue; /* only check other requests */
 149              		.loc 1 1102 8 is_stmt 0 view .LVU49
 150 0062 022C     		cmp	r4, #2
 151 0064 05D0     		beq	.L11
 152              	.LVL10:
 153              	.L9:
 154              		.loc 1 1105 5 is_stmt 1 view .LVU50
 155              		.loc 1 1105 8 is_stmt 0 view .LVU51
 156 0066 96F82A22 		ldrb	r2, [r6, #554]	@ zero_extendqisi2
 157 006a 022A     		cmp	r2, #2
 158 006c 40D0     		beq	.L47
 159              	.L12:
1101:lwIP/src/core/dns.c ****     if (i == idx) {
 160              		.loc 1 1101 37 is_stmt 1 view .LVU52
 161              	.LVL11:
1101:lwIP/src/core/dns.c ****     if (i == idx) {
 162              		.loc 1 1101 15 view .LVU53
1102:lwIP/src/core/dns.c ****       continue; /* only check other requests */
 163              		.loc 1 1102 5 view .LVU54
1102:lwIP/src/core/dns.c ****       continue; /* only check other requests */
 164              		.loc 1 1102 8 is_stmt 0 view .LVU55
 165 006e 032C     		cmp	r4, #3
 166 0070 03D0     		beq	.L13
 167              	.LVL12:
ARM GAS  /tmp/ccJm3wen.s 			page 24


 168              	.L11:
 169              		.loc 1 1105 5 is_stmt 1 view .LVU56
 170              		.loc 1 1105 8 is_stmt 0 view .LVU57
 171 0072 96F83A23 		ldrb	r2, [r6, #826]	@ zero_extendqisi2
 172 0076 022A     		cmp	r2, #2
 173 0078 3FD0     		beq	.L48
 174              	.L13:
1101:lwIP/src/core/dns.c ****     if (i == idx) {
 175              		.loc 1 1101 37 is_stmt 1 discriminator 2 view .LVU58
 176              	.LVL13:
1101:lwIP/src/core/dns.c ****     if (i == idx) {
 177              		.loc 1 1101 15 discriminator 2 view .LVU59
1106:lwIP/src/core/dns.c ****       if (dns_table[i].pcb_idx == dns_table[idx].pcb_idx) {
1107:lwIP/src/core/dns.c ****         /* another request is still using the same pcb */
1108:lwIP/src/core/dns.c ****         dns_table[idx].pcb_idx = DNS_MAX_SOURCE_PORTS;
1109:lwIP/src/core/dns.c ****         break;
1110:lwIP/src/core/dns.c ****       }
1111:lwIP/src/core/dns.c ****     }
1112:lwIP/src/core/dns.c ****   }
1113:lwIP/src/core/dns.c ****   if (dns_table[idx].pcb_idx < DNS_MAX_SOURCE_PORTS) {
 178              		.loc 1 1113 3 discriminator 2 view .LVU60
 179              		.loc 1 1113 6 is_stmt 0 discriminator 2 view .LVU61
 180 007a 032B     		cmp	r3, #3
 181 007c 0DD8     		bhi	.L1
1114:lwIP/src/core/dns.c ****     /* if we come here, the pcb is not used any more and can be removed */
1115:lwIP/src/core/dns.c ****     udp_remove(dns_pcbs[dns_table[idx].pcb_idx]);
 182              		.loc 1 1115 5 is_stmt 1 view .LVU62
1116:lwIP/src/core/dns.c ****     dns_pcbs[dns_table[idx].pcb_idx] = NULL;
 183              		.loc 1 1116 28 is_stmt 0 view .LVU63
 184 007e 3C44     		add	r4, r4, r7
1115:lwIP/src/core/dns.c ****     dns_pcbs[dns_table[idx].pcb_idx] = NULL;
 185              		.loc 1 1115 5 view .LVU64
 186 0080 224D     		ldr	r5, .L49+8
 187              		.loc 1 1116 28 view .LVU65
 188 0082 06EB0416 		add	r6, r6, r4, lsl #4
1115:lwIP/src/core/dns.c ****     dns_pcbs[dns_table[idx].pcb_idx] = NULL;
 189              		.loc 1 1115 5 view .LVU66
 190 0086 55F82300 		ldr	r0, [r5, r3, lsl #2]
 191 008a FFF7FEFF 		bl	udp_remove
 192              	.LVL14:
 193              		.loc 1 1116 5 is_stmt 1 view .LVU67
1117:lwIP/src/core/dns.c ****     dns_table[idx].pcb_idx = DNS_MAX_SOURCE_PORTS;
 194              		.loc 1 1117 28 is_stmt 0 view .LVU68
 195 008e 0421     		movs	r1, #4
1116:lwIP/src/core/dns.c ****     dns_pcbs[dns_table[idx].pcb_idx] = NULL;
 196              		.loc 1 1116 28 view .LVU69
 197 0090 F37B     		ldrb	r3, [r6, #15]	@ zero_extendqisi2
1116:lwIP/src/core/dns.c ****     dns_pcbs[dns_table[idx].pcb_idx] = NULL;
 198              		.loc 1 1116 38 view .LVU70
 199 0092 0022     		movs	r2, #0
 200              		.loc 1 1117 28 view .LVU71
 201 0094 F173     		strb	r1, [r6, #15]
1116:lwIP/src/core/dns.c ****     dns_pcbs[dns_table[idx].pcb_idx] = NULL;
 202              		.loc 1 1116 38 view .LVU72
 203 0096 45F82320 		str	r2, [r5, r3, lsl #2]
 204              		.loc 1 1117 5 is_stmt 1 view .LVU73
 205              	.LVL15:
ARM GAS  /tmp/ccJm3wen.s 			page 25


 206              	.L1:
1118:lwIP/src/core/dns.c ****   }
1119:lwIP/src/core/dns.c **** #endif
1120:lwIP/src/core/dns.c **** }
 207              		.loc 1 1120 1 is_stmt 0 view .LVU74
 208 009a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 209              	.LVL16:
 210              	.L44:
1088:lwIP/src/core/dns.c ****       /* flush this entry */
 211              		.loc 1 1088 7 is_stmt 1 view .LVU75
1088:lwIP/src/core/dns.c ****       /* flush this entry */
 212              		.loc 1 1088 8 is_stmt 0 view .LVU76
 213 009e 4946     		mov	r1, r9
 214 00a0 4046     		mov	r0, r8
 215 00a2 AA6A     		ldr	r2, [r5, #40]
 216 00a4 9847     		blx	r3
 217              	.LVL17:
1090:lwIP/src/core/dns.c ****     }
 218              		.loc 1 1090 7 is_stmt 1 view .LVU77
1090:lwIP/src/core/dns.c ****     }
 219              		.loc 1 1090 29 is_stmt 0 view .LVU78
 220 00a6 0023     		movs	r3, #0
 221 00a8 6B62     		str	r3, [r5, #36]
 222 00aa CCE7     		b	.L5
 223              	.LVL18:
 224              	.L43:
1088:lwIP/src/core/dns.c ****       /* flush this entry */
 225              		.loc 1 1088 7 is_stmt 1 view .LVU79
1088:lwIP/src/core/dns.c ****       /* flush this entry */
 226              		.loc 1 1088 8 is_stmt 0 view .LVU80
 227 00ac EA69     		ldr	r2, [r5, #28]
 228 00ae 4946     		mov	r1, r9
 229 00b0 4046     		mov	r0, r8
 230 00b2 9847     		blx	r3
 231              	.LVL19:
1090:lwIP/src/core/dns.c ****     }
 232              		.loc 1 1090 7 is_stmt 1 view .LVU81
1090:lwIP/src/core/dns.c ****     }
 233              		.loc 1 1090 29 is_stmt 0 view .LVU82
 234 00b4 0023     		movs	r3, #0
 235 00b6 AB61     		str	r3, [r5, #24]
 236 00b8 BFE7     		b	.L4
 237              	.LVL20:
 238              	.L42:
1088:lwIP/src/core/dns.c ****       /* flush this entry */
 239              		.loc 1 1088 7 is_stmt 1 view .LVU83
1088:lwIP/src/core/dns.c ****       /* flush this entry */
 240              		.loc 1 1088 8 is_stmt 0 view .LVU84
 241 00ba 2A69     		ldr	r2, [r5, #16]
 242 00bc 4946     		mov	r1, r9
 243 00be 4046     		mov	r0, r8
 244 00c0 9847     		blx	r3
 245              	.LVL21:
1090:lwIP/src/core/dns.c ****     }
 246              		.loc 1 1090 7 is_stmt 1 view .LVU85
1090:lwIP/src/core/dns.c ****     }
 247              		.loc 1 1090 29 is_stmt 0 view .LVU86
ARM GAS  /tmp/ccJm3wen.s 			page 26


 248 00c2 0023     		movs	r3, #0
 249 00c4 EB60     		str	r3, [r5, #12]
 250 00c6 B2E7     		b	.L3
 251              	.LVL22:
 252              	.L41:
1088:lwIP/src/core/dns.c ****       /* flush this entry */
 253              		.loc 1 1088 7 is_stmt 1 view .LVU87
1088:lwIP/src/core/dns.c ****       /* flush this entry */
 254              		.loc 1 1088 8 is_stmt 0 view .LVU88
 255 00c8 6A68     		ldr	r2, [r5, #4]
 256 00ca 4046     		mov	r0, r8
 257 00cc 9847     		blx	r3
 258              	.LVL23:
1090:lwIP/src/core/dns.c ****     }
 259              		.loc 1 1090 7 is_stmt 1 view .LVU89
1090:lwIP/src/core/dns.c ****     }
 260              		.loc 1 1090 29 is_stmt 0 view .LVU90
 261 00ce 0023     		movs	r3, #0
 262 00d0 2B60     		str	r3, [r5]
 263 00d2 A7E7     		b	.L2
 264              	.L45:
1106:lwIP/src/core/dns.c ****         /* another request is still using the same pcb */
 265              		.loc 1 1106 7 is_stmt 1 view .LVU91
1106:lwIP/src/core/dns.c ****         /* another request is still using the same pcb */
 266              		.loc 1 1106 10 is_stmt 0 view .LVU92
 267 00d4 F27B     		ldrb	r2, [r6, #15]	@ zero_extendqisi2
 268 00d6 9A42     		cmp	r2, r3
 269 00d8 BDD1     		bne	.L7
 270              	.LVL24:
 271              	.L8:
1108:lwIP/src/core/dns.c ****         break;
 272              		.loc 1 1108 9 is_stmt 1 view .LVU93
1108:lwIP/src/core/dns.c ****         break;
 273              		.loc 1 1108 32 is_stmt 0 view .LVU94
 274 00da 3C44     		add	r4, r4, r7
 275 00dc 0423     		movs	r3, #4
 276 00de 06EB0416 		add	r6, r6, r4, lsl #4
 277 00e2 F373     		strb	r3, [r6, #15]
1109:lwIP/src/core/dns.c ****       }
 278              		.loc 1 1109 9 is_stmt 1 view .LVU95
1113:lwIP/src/core/dns.c ****     /* if we come here, the pcb is not used any more and can be removed */
 279              		.loc 1 1113 3 view .LVU96
 280 00e4 D9E7     		b	.L1
 281              	.LVL25:
 282              	.L46:
1106:lwIP/src/core/dns.c ****         /* another request is still using the same pcb */
 283              		.loc 1 1106 7 view .LVU97
1106:lwIP/src/core/dns.c ****         /* another request is still using the same pcb */
 284              		.loc 1 1106 10 is_stmt 0 view .LVU98
 285 00e6 96F81F21 		ldrb	r2, [r6, #287]	@ zero_extendqisi2
 286 00ea 9A42     		cmp	r2, r3
 287 00ec B9D1     		bne	.L10
 288 00ee F4E7     		b	.L8
 289              	.LVL26:
 290              	.L47:
1106:lwIP/src/core/dns.c ****         /* another request is still using the same pcb */
 291              		.loc 1 1106 7 is_stmt 1 view .LVU99
ARM GAS  /tmp/ccJm3wen.s 			page 27


1106:lwIP/src/core/dns.c ****         /* another request is still using the same pcb */
 292              		.loc 1 1106 10 is_stmt 0 view .LVU100
 293 00f0 96F82F22 		ldrb	r2, [r6, #559]	@ zero_extendqisi2
 294 00f4 9A42     		cmp	r2, r3
 295 00f6 BAD1     		bne	.L12
 296 00f8 EFE7     		b	.L8
 297              	.LVL27:
 298              	.L48:
1106:lwIP/src/core/dns.c ****         /* another request is still using the same pcb */
 299              		.loc 1 1106 7 is_stmt 1 view .LVU101
1106:lwIP/src/core/dns.c ****         /* another request is still using the same pcb */
 300              		.loc 1 1106 10 is_stmt 0 view .LVU102
 301 00fa 96F83F23 		ldrb	r2, [r6, #831]	@ zero_extendqisi2
 302 00fe 9A42     		cmp	r2, r3
 303 0100 BBD1     		bne	.L13
 304 0102 EAE7     		b	.L8
 305              	.L50:
 306              		.align	2
 307              	.L49:
 308 0104 00000000 		.word	.LANCHOR0
 309 0108 00000000 		.word	.LANCHOR1
 310 010c 00000000 		.word	.LANCHOR2
 311              		.cfi_endproc
 312              	.LFE120:
 314              		.section	.rodata.dns_send.str1.4,"aMS",%progbits,1
 315              		.align	2
 316              	.LC0:
 317 0000 646E7320 		.ascii	"dns server out of array\000"
 317      73657276 
 317      6572206F 
 317      7574206F 
 317      66206172 
 318              		.section	.text.dns_send,"ax",%progbits
 319              		.align	1
 320              		.p2align 2,,3
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 324              		.fpu fpv4-sp-d16
 326              	dns_send:
 327              	.LVL28:
 328              	.LFB117:
 873:lwIP/src/core/dns.c ****   err_t err;
 329              		.loc 1 873 1 is_stmt 1 view -0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 24
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 874:lwIP/src/core/dns.c ****   struct dns_hdr hdr;
 333              		.loc 1 874 3 view .LVU104
 875:lwIP/src/core/dns.c ****   struct dns_query qry;
 334              		.loc 1 875 3 view .LVU105
 876:lwIP/src/core/dns.c ****   struct pbuf *p;
 335              		.loc 1 876 3 view .LVU106
 877:lwIP/src/core/dns.c ****   u16_t query_idx, copy_len;
 336              		.loc 1 877 3 view .LVU107
 878:lwIP/src/core/dns.c ****   const char *hostname, *hostname_part;
 337              		.loc 1 878 3 view .LVU108
ARM GAS  /tmp/ccJm3wen.s 			page 28


 879:lwIP/src/core/dns.c ****   u8_t n;
 338              		.loc 1 879 3 view .LVU109
 880:lwIP/src/core/dns.c ****   u8_t pcb_idx;
 339              		.loc 1 880 3 view .LVU110
 881:lwIP/src/core/dns.c ****   struct dns_table_entry *entry = &dns_table[idx];
 340              		.loc 1 881 3 view .LVU111
 882:lwIP/src/core/dns.c **** 
 341              		.loc 1 882 3 view .LVU112
 873:lwIP/src/core/dns.c ****   err_t err;
 342              		.loc 1 873 1 is_stmt 0 view .LVU113
 343 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 344              	.LCFI1:
 345              		.cfi_def_cfa_offset 36
 346              		.cfi_offset 4, -36
 347              		.cfi_offset 5, -32
 348              		.cfi_offset 6, -28
 349              		.cfi_offset 7, -24
 350              		.cfi_offset 8, -20
 351              		.cfi_offset 9, -16
 352              		.cfi_offset 10, -12
 353              		.cfi_offset 11, -8
 354              		.cfi_offset 14, -4
 886:lwIP/src/core/dns.c ****   if (ip_addr_isany_val(dns_servers[entry->server_idx])
 355              		.loc 1 886 3 view .LVU114
 356 0004 00EB0013 		add	r3, r0, r0, lsl #4
 357 0008 DFF87491 		ldr	r9, .L80+8
 358              	.LVL29:
 885:lwIP/src/core/dns.c ****   LWIP_ASSERT("dns server out of array", entry->server_idx < DNS_MAX_SERVERS);
 359              		.loc 1 885 68 is_stmt 1 view .LVU115
 886:lwIP/src/core/dns.c ****   if (ip_addr_isany_val(dns_servers[entry->server_idx])
 360              		.loc 1 886 3 view .LVU116
 886:lwIP/src/core/dns.c ****   if (ip_addr_isany_val(dns_servers[entry->server_idx])
 361              		.loc 1 886 3 view .LVU117
 362 000c 0201     		lsls	r2, r0, #4
 873:lwIP/src/core/dns.c ****   err_t err;
 363              		.loc 1 873 1 is_stmt 0 view .LVU118
 364 000e 87B0     		sub	sp, sp, #28
 365              	.LCFI2:
 366              		.cfi_def_cfa_offset 64
 886:lwIP/src/core/dns.c ****   if (ip_addr_isany_val(dns_servers[entry->server_idx])
 367              		.loc 1 886 3 view .LVU119
 368 0010 09EB0315 		add	r5, r9, r3, lsl #4
 369 0014 0092     		str	r2, [sp]
 370 0016 EA7A     		ldrb	r2, [r5, #11]	@ zero_extendqisi2
 371 0018 012A     		cmp	r2, #1
 372 001a 00F29C80 		bhi	.L76
 886:lwIP/src/core/dns.c ****   if (ip_addr_isany_val(dns_servers[entry->server_idx])
 373              		.loc 1 886 3 is_stmt 1 discriminator 2 view .LVU120
 887:lwIP/src/core/dns.c **** #if LWIP_DNS_SUPPORT_MDNS_QUERIES
 374              		.loc 1 887 3 discriminator 2 view .LVU121
 887:lwIP/src/core/dns.c **** #if LWIP_DNS_SUPPORT_MDNS_QUERIES
 375              		.loc 1 887 7 is_stmt 0 discriminator 2 view .LVU122
 376 001e DFF864B1 		ldr	fp, .L80+12
 887:lwIP/src/core/dns.c **** #if LWIP_DNS_SUPPORT_MDNS_QUERIES
 377              		.loc 1 887 6 discriminator 2 view .LVU123
 378 0022 5BF82260 		ldr	r6, [fp, r2, lsl #2]
 379 0026 002E     		cmp	r6, #0
ARM GAS  /tmp/ccJm3wen.s 			page 29


 380 0028 00F09980 		beq	.L77
 901:lwIP/src/core/dns.c ****                                          SIZEOF_DNS_QUERY), PBUF_RAM);
 381              		.loc 1 901 3 is_stmt 1 view .LVU124
 382 002c 1B01     		lsls	r3, r3, #4
 383 002e 8246     		mov	r10, r0
 901:lwIP/src/core/dns.c ****                                          SIZEOF_DNS_QUERY), PBUF_RAM);
 384              		.loc 1 901 71 is_stmt 0 view .LVU125
 385 0030 1033     		adds	r3, r3, #16
 386 0032 09EB0304 		add	r4, r9, r3
 901:lwIP/src/core/dns.c ****                                          SIZEOF_DNS_QUERY), PBUF_RAM);
 387              		.loc 1 901 59 view .LVU126
 388 0036 2046     		mov	r0, r4
 389              	.LVL30:
 901:lwIP/src/core/dns.c ****                                          SIZEOF_DNS_QUERY), PBUF_RAM);
 390              		.loc 1 901 59 view .LVU127
 391 0038 FFF7FEFF 		bl	strlen
 392              	.LVL31:
 393 003c 0146     		mov	r1, r0
 901:lwIP/src/core/dns.c ****                                          SIZEOF_DNS_QUERY), PBUF_RAM);
 394              		.loc 1 901 7 view .LVU128
 395 003e 4FF42072 		mov	r2, #640
 396 0042 3620     		movs	r0, #54
 397 0044 1231     		adds	r1, r1, #18
 398 0046 89B2     		uxth	r1, r1
 399 0048 FFF7FEFF 		bl	pbuf_alloc
 400              	.LVL32:
 903:lwIP/src/core/dns.c ****     const ip_addr_t *dst;
 401              		.loc 1 903 3 is_stmt 1 view .LVU129
 903:lwIP/src/core/dns.c ****     const ip_addr_t *dst;
 402              		.loc 1 903 6 is_stmt 0 view .LVU130
 403 004c 0646     		mov	r6, r0
 404 004e 0028     		cmp	r0, #0
 405 0050 00F08E80 		beq	.L61
 406              	.LBB42:
 904:lwIP/src/core/dns.c ****     u16_t dst_port;
 407              		.loc 1 904 5 is_stmt 1 view .LVU131
 905:lwIP/src/core/dns.c ****     /* fill dns header */
 408              		.loc 1 905 5 view .LVU132
 907:lwIP/src/core/dns.c ****     hdr.id = lwip_htons(entry->txid);
 409              		.loc 1 907 5 view .LVU133
 410              	.LBB43:
 411              	.LBB44:
 412              		.file 2 "STM32_XPD/CMSIS/Include/cmsis_gcc.h"
   1:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /*
   8:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  *
  10:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  *
  12:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
ARM GAS  /tmp/ccJm3wen.s 			page 30


  15:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  *
  16:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  *
  18:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
  24:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
  25:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
  28:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
  34:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  38:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
  39:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  43:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  46:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  49:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  55:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  58:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  61:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  64:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  67:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  70:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccJm3wen.s 			page 31


  72:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  78:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  86:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
  94:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 102:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 110:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 113:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 116:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 117:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 118:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   @{
 122:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 123:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 124:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 125:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccJm3wen.s 			page 32


 129:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 131:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 133:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 134:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 135:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 136:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 140:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 142:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 144:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 145:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 146:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 147:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 151:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 153:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 155:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 158:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 159:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 160:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 162:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 166:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 168:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 170:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 173:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 174:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 175:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 176:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 177:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 181:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 183:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 185:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccJm3wen.s 			page 33


 186:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 187:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 189:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 193:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 195:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 197:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 198:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 199:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 200:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 201:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 205:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 207:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 209:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 212:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 213:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 214:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 215:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 219:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 221:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 223:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 226:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 227:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 228:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 229:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 233:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 235:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 237:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 240:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 241:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 242:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccJm3wen.s 			page 34


 243:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 247:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 249:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 251:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 254:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 255:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 256:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 258:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 262:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 264:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 266:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 269:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 270:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 271:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 272:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 273:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 277:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 279:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 281:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 282:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 283:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 285:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 289:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 291:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 293:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 294:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 295:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 296:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 297:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
ARM GAS  /tmp/ccJm3wen.s 			page 35


 300:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 301:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 303:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 305:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 308:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 309:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 310:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 312:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 316:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 318:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 320:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 323:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 324:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 325:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 326:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 327:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 331:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 333:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 335:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 336:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 337:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 339:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 343:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 345:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 347:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 348:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 349:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 350:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 352:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 356:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
ARM GAS  /tmp/ccJm3wen.s 			page 36


 357:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 358:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 360:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 363:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 364:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 365:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 366:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 370:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 372:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 374:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 375:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 376:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 377:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 378:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 382:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 384:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 386:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 389:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 390:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 391:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 393:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 397:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 399:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 401:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 404:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 405:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 406:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 407:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 408:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 412:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccJm3wen.s 			page 37


 414:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 416:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 417:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 418:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 420:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 424:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 426:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 428:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 429:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 430:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 431:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 435:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 439:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 441:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 443:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 444:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 445:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 446:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 450:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 452:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 454:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 455:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 456:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 457:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 461:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 463:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 465:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 468:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 469:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 470:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  /tmp/ccJm3wen.s 			page 38


 471:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 472:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 476:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 478:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 480:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 483:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 484:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 485:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 486:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 487:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 491:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 493:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 495:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 496:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 497:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 499:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 503:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 505:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 507:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 508:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 509:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 510:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 511:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 516:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 518:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 520:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 521:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 522:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 523:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 527:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
ARM GAS  /tmp/ccJm3wen.s 			page 39


 528:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 529:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 531:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 534:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 535:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 536:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 538:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 542:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 544:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 546:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 549:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 550:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 551:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 552:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 553:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 557:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 559:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 561:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 562:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 563:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 565:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 569:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 571:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 573:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 574:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 575:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 579:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 580:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 583:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 584:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
ARM GAS  /tmp/ccJm3wen.s 			page 40


 585:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   
 589:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 592:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 594:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 599:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 603:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 604:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 605:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 607:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 611:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 614:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 616:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 620:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 624:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 625:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 626:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 627:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 628:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 629:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   
 634:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 637:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 639:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
ARM GAS  /tmp/ccJm3wen.s 			page 41


 642:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 644:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 646:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 647:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 648:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 649:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 651:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 655:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 658:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 660:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 664:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 666:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 667:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 668:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 669:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 670:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 671:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 676:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 679:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 681:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 686:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 690:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 691:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 692:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 693:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 695:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccJm3wen.s 			page 42


 699:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 702:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 704:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 708:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 712:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 713:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 714:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 715:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 716:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 717:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 722:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 725:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 727:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 732:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 734:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 735:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 736:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 737:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 739:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 743:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 746:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 748:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 752:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 754:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 755:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccJm3wen.s 			page 43


 756:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 757:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 760:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 761:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 762:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 766:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 768:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 776:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 778:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 781:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 782:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 784:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 785:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 786:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 787:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 788:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 792:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 794:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 802:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 804:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 805:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 807:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 808:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 809:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 810:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 812:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccJm3wen.s 			page 44


 813:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   @{
 817:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** */
 818:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 819:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 827:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 831:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 832:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 833:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 836:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 838:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 839:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 842:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 844:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 845:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 846:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 850:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 852:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 853:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 854:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 857:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 859:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 860:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 861:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 866:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 868:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccJm3wen.s 			page 45


 870:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 871:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 872:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 873:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 877:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 879:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 881:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 882:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 883:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 884:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 888:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 890:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 892:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 893:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 894:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 895:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 902:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 905:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 907:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #endif
 910:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 911:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 912:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 913:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 914:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 919:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 921:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 923:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** }
 926:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccJm3wen.s 			page 46


 927:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** 
 928:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** /**
 929:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****  */
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 936:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:STM32_XPD/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 413              		.loc 2 937 19 is_stmt 0 view .LVU134
 414 0054 2A89     		ldrh	r2, [r5, #8]
 415              	.LBE44:
 416              	.LBE43:
 907:lwIP/src/core/dns.c ****     hdr.id = lwip_htons(entry->txid);
 417              		.loc 1 907 5 view .LVU135
 418 0056 0023     		movs	r3, #0
 916:lwIP/src/core/dns.c ****     do {
 419              		.loc 1 916 15 view .LVU136
 420 0058 0C27     		movs	r7, #12
 909:lwIP/src/core/dns.c ****     hdr.numquestions = PP_HTONS(1);
 421              		.loc 1 909 16 view .LVU137
 422 005a 4FF0010C 		mov	ip, #1
 423              	.LBB47:
 424              	.LBB45:
 425              		.loc 2 937 19 view .LVU138
 426 005e 52BA     		rev16	r2, r2
 427              	.LBE45:
 428              	.LBE47:
 910:lwIP/src/core/dns.c ****     pbuf_take(p, &hdr, SIZEOF_DNS_HDR);
 429              		.loc 1 910 22 view .LVU139
 430 0060 4FF48075 		mov	r5, #256
 907:lwIP/src/core/dns.c ****     hdr.id = lwip_htons(entry->txid);
 431              		.loc 1 907 5 view .LVU140
 432 0064 0393     		str	r3, [sp, #12]
 911:lwIP/src/core/dns.c ****     hostname = entry->name;
 433              		.loc 1 911 5 view .LVU141
 434 0066 0DEB0701 		add	r1, sp, r7
 908:lwIP/src/core/dns.c ****     hdr.flags1 = DNS_FLAG1_RD;
 435              		.loc 1 908 12 view .LVU142
 436 006a ADF80C20 		strh	r2, [sp, #12]	@ movhi
 911:lwIP/src/core/dns.c ****     hostname = entry->name;
 437              		.loc 1 911 5 view .LVU143
 438 006e 3A46     		mov	r2, r7
 913:lwIP/src/core/dns.c **** 
 439              		.loc 1 913 5 view .LVU144
 440 0070 013C     		subs	r4, r4, #1
 909:lwIP/src/core/dns.c ****     hdr.numquestions = PP_HTONS(1);
 441              		.loc 1 909 16 view .LVU145
 442 0072 8DF80EC0 		strb	ip, [sp, #14]
 907:lwIP/src/core/dns.c ****     hdr.id = lwip_htons(entry->txid);
 443              		.loc 1 907 5 view .LVU146
 444 0076 CDE90433 		strd	r3, r3, [sp, #16]
 908:lwIP/src/core/dns.c ****     hdr.flags1 = DNS_FLAG1_RD;
 445              		.loc 1 908 5 is_stmt 1 view .LVU147
 446              	.LVL33:
ARM GAS  /tmp/ccJm3wen.s 			page 47


 447              	.LBB48:
 448              	.LBI43:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 449              		.loc 2 934 30 view .LVU148
 450              	.LBB46:
 451              		.loc 2 937 3 view .LVU149
 452              		.loc 2 937 3 is_stmt 0 view .LVU150
 453              	.LBE46:
 454              	.LBE48:
 909:lwIP/src/core/dns.c ****     hdr.numquestions = PP_HTONS(1);
 455              		.loc 1 909 5 is_stmt 1 view .LVU151
 910:lwIP/src/core/dns.c ****     pbuf_take(p, &hdr, SIZEOF_DNS_HDR);
 456              		.loc 1 910 5 view .LVU152
 910:lwIP/src/core/dns.c ****     pbuf_take(p, &hdr, SIZEOF_DNS_HDR);
 457              		.loc 1 910 22 is_stmt 0 view .LVU153
 458 007a ADF81050 		strh	r5, [sp, #16]	@ movhi
 911:lwIP/src/core/dns.c ****     hostname = entry->name;
 459              		.loc 1 911 5 is_stmt 1 view .LVU154
 460 007e FFF7FEFF 		bl	pbuf_take
 461              	.LVL34:
 912:lwIP/src/core/dns.c ****     --hostname;
 462              		.loc 1 912 5 view .LVU155
 913:lwIP/src/core/dns.c **** 
 463              		.loc 1 913 5 view .LVU156
 916:lwIP/src/core/dns.c ****     do {
 464              		.loc 1 916 5 view .LVU157
 465              	.L60:
 917:lwIP/src/core/dns.c ****       ++hostname;
 466              		.loc 1 917 5 view .LVU158
 918:lwIP/src/core/dns.c ****       hostname_part = hostname;
 467              		.loc 1 918 7 view .LVU159
 920:lwIP/src/core/dns.c ****         ++n;
 468              		.loc 1 920 19 is_stmt 0 view .LVU160
 469 0082 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 918:lwIP/src/core/dns.c ****       hostname_part = hostname;
 470              		.loc 1 918 7 view .LVU161
 471 0084 04F10108 		add	r8, r4, #1
 472              	.LVL35:
 919:lwIP/src/core/dns.c ****       for (n = 0; *hostname != '.' && *hostname != 0; ++hostname) {
 473              		.loc 1 919 7 is_stmt 1 view .LVU162
 920:lwIP/src/core/dns.c ****         ++n;
 474              		.loc 1 920 7 view .LVU163
 920:lwIP/src/core/dns.c ****         ++n;
 475              		.loc 1 920 19 view .LVU164
 920:lwIP/src/core/dns.c ****         ++n;
 476              		.loc 1 920 7 is_stmt 0 view .LVU165
 477 0088 2E2B     		cmp	r3, #46
 478 008a 52D0     		beq	.L62
 479 008c 002B     		cmp	r3, #0
 480 008e 50D0     		beq	.L62
 918:lwIP/src/core/dns.c ****       hostname_part = hostname;
 481              		.loc 1 918 7 view .LVU166
 482 0090 4446     		mov	r4, r8
 483 0092 C8F10101 		rsb	r1, r8, #1
 484 0096 00E0     		b	.L57
 485              	.LVL36:
 486              	.L78:
ARM GAS  /tmp/ccJm3wen.s 			page 48


 920:lwIP/src/core/dns.c ****         ++n;
 487              		.loc 1 920 7 discriminator 3 view .LVU167
 488 0098 2AB1     		cbz	r2, .L63
 489              	.LVL37:
 490              	.L57:
 921:lwIP/src/core/dns.c ****       }
 491              		.loc 1 921 9 is_stmt 1 discriminator 3 view .LVU168
 492 009a 6318     		adds	r3, r4, r1
 920:lwIP/src/core/dns.c ****         ++n;
 493              		.loc 1 920 19 is_stmt 0 discriminator 3 view .LVU169
 494 009c 14F8012F 		ldrb	r2, [r4, #1]!	@ zero_extendqisi2
 495              	.LVL38:
 920:lwIP/src/core/dns.c ****         ++n;
 496              		.loc 1 920 7 discriminator 3 view .LVU170
 497 00a0 2E2A     		cmp	r2, #46
 498 00a2 DDB2     		uxtb	r5, r3
 499              	.LVL39:
 920:lwIP/src/core/dns.c ****         ++n;
 500              		.loc 1 920 55 is_stmt 1 discriminator 3 view .LVU171
 920:lwIP/src/core/dns.c ****         ++n;
 501              		.loc 1 920 19 discriminator 3 view .LVU172
 920:lwIP/src/core/dns.c ****         ++n;
 502              		.loc 1 920 7 is_stmt 0 discriminator 3 view .LVU173
 503 00a4 F8D1     		bne	.L78
 504              	.L63:
 505 00a6 2A46     		mov	r2, r5
 924:lwIP/src/core/dns.c ****         /* u16_t overflow */
 506              		.loc 1 924 10 view .LVU174
 507 00a8 4FF6FE71 		movw	r1, #65534
 508 00ac A4EB0803 		sub	r3, r4, r8
 924:lwIP/src/core/dns.c ****         /* u16_t overflow */
 509              		.loc 1 924 21 view .LVU175
 510 00b0 3A44     		add	r2, r2, r7
 511 00b2 9BB2     		uxth	r3, r3
 923:lwIP/src/core/dns.c ****       if (query_idx + n + 1 > 0xFFFF) {
 512              		.loc 1 923 7 is_stmt 1 view .LVU176
 513              	.LVL40:
 924:lwIP/src/core/dns.c ****         /* u16_t overflow */
 514              		.loc 1 924 7 view .LVU177
 924:lwIP/src/core/dns.c ****         /* u16_t overflow */
 515              		.loc 1 924 10 is_stmt 0 view .LVU178
 516 00b4 8A42     		cmp	r2, r1
 517 00b6 45DC     		bgt	.L79
 518              	.LVL41:
 519              	.L59:
 928:lwIP/src/core/dns.c ****       pbuf_take_at(p, hostname_part, copy_len, (u16_t)(query_idx + 1));
 520              		.loc 1 928 7 is_stmt 1 view .LVU179
 521 00b8 2A46     		mov	r2, r5
 522 00ba 3946     		mov	r1, r7
 523 00bc 3046     		mov	r0, r6
 930:lwIP/src/core/dns.c ****     } while (*hostname != 0);
 524              		.loc 1 930 37 is_stmt 0 view .LVU180
 525 00be 3D44     		add	r5, r5, r7
 526 00c0 0193     		str	r3, [sp, #4]
 928:lwIP/src/core/dns.c ****       pbuf_take_at(p, hostname_part, copy_len, (u16_t)(query_idx + 1));
 527              		.loc 1 928 7 view .LVU181
 528 00c2 FFF7FEFF 		bl	pbuf_put_at
ARM GAS  /tmp/ccJm3wen.s 			page 49


 529              	.LVL42:
 929:lwIP/src/core/dns.c ****       query_idx = (u16_t)(query_idx + n + 1);
 530              		.loc 1 929 7 is_stmt 1 view .LVU182
 531 00c6 781C     		adds	r0, r7, #1
 532 00c8 019B     		ldr	r3, [sp, #4]
 930:lwIP/src/core/dns.c ****     } while (*hostname != 0);
 533              		.loc 1 930 37 is_stmt 0 view .LVU183
 534 00ca ADB2     		uxth	r5, r5
 929:lwIP/src/core/dns.c ****       query_idx = (u16_t)(query_idx + n + 1);
 535              		.loc 1 929 7 view .LVU184
 536 00cc 4146     		mov	r1, r8
 537 00ce 1A46     		mov	r2, r3
 538 00d0 83B2     		uxth	r3, r0
 539 00d2 3046     		mov	r0, r6
 930:lwIP/src/core/dns.c ****     } while (*hostname != 0);
 540              		.loc 1 930 17 view .LVU185
 541 00d4 6F1C     		adds	r7, r5, #1
 542              	.LVL43:
 929:lwIP/src/core/dns.c ****       query_idx = (u16_t)(query_idx + n + 1);
 543              		.loc 1 929 7 view .LVU186
 544 00d6 FFF7FEFF 		bl	pbuf_take_at
 545              	.LVL44:
 930:lwIP/src/core/dns.c ****     } while (*hostname != 0);
 546              		.loc 1 930 7 is_stmt 1 view .LVU187
 931:lwIP/src/core/dns.c ****     pbuf_put_at(p, query_idx, 0);
 547              		.loc 1 931 5 is_stmt 0 view .LVU188
 548 00da 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 930:lwIP/src/core/dns.c ****     } while (*hostname != 0);
 549              		.loc 1 930 17 view .LVU189
 550 00dc BFB2     		uxth	r7, r7
 551              	.LVL45:
 931:lwIP/src/core/dns.c ****     pbuf_put_at(p, query_idx, 0);
 552              		.loc 1 931 13 is_stmt 1 view .LVU190
 931:lwIP/src/core/dns.c ****     pbuf_put_at(p, query_idx, 0);
 553              		.loc 1 931 5 is_stmt 0 view .LVU191
 554 00de 002A     		cmp	r2, #0
 555 00e0 CFD1     		bne	.L60
 932:lwIP/src/core/dns.c ****     query_idx++;
 556              		.loc 1 932 5 is_stmt 1 view .LVU192
 557 00e2 3946     		mov	r1, r7
 558 00e4 3046     		mov	r0, r6
 559 00e6 FFF7FEFF 		bl	pbuf_put_at
 560              	.LVL46:
 933:lwIP/src/core/dns.c **** 
 561              		.loc 1 933 5 view .LVU193
 936:lwIP/src/core/dns.c ****       qry.type = PP_HTONS(DNS_RRTYPE_AAAA);
 562              		.loc 1 936 5 view .LVU194
 939:lwIP/src/core/dns.c ****     }
 563              		.loc 1 939 7 view .LVU195
 941:lwIP/src/core/dns.c ****     pbuf_take_at(p, &qry, SIZEOF_DNS_QUERY, query_idx);
 564              		.loc 1 941 5 view .LVU196
 933:lwIP/src/core/dns.c **** 
 565              		.loc 1 933 14 is_stmt 0 view .LVU197
 566 00ea AB1C     		adds	r3, r5, #2
 939:lwIP/src/core/dns.c ****     }
 567              		.loc 1 939 16 view .LVU198
 568 00ec 4FF00124 		mov	r4, #16777472
ARM GAS  /tmp/ccJm3wen.s 			page 50


 942:lwIP/src/core/dns.c **** 
 569              		.loc 1 942 5 view .LVU199
 570 00f0 02A9     		add	r1, sp, #8
 571 00f2 0422     		movs	r2, #4
 572 00f4 9BB2     		uxth	r3, r3
 573 00f6 3046     		mov	r0, r6
 939:lwIP/src/core/dns.c ****     }
 574              		.loc 1 939 16 view .LVU200
 575 00f8 0294     		str	r4, [sp, #8]
 942:lwIP/src/core/dns.c **** 
 576              		.loc 1 942 5 is_stmt 1 view .LVU201
 577 00fa FFF7FEFF 		bl	pbuf_take_at
 578              	.LVL47:
 945:lwIP/src/core/dns.c **** #else
 579              		.loc 1 945 5 view .LVU202
 951:lwIP/src/core/dns.c **** #if LWIP_DNS_SUPPORT_MDNS_QUERIES
 580              		.loc 1 951 74 view .LVU203
 971:lwIP/src/core/dns.c ****       dst = &dns_servers[entry->server_idx];
 581              		.loc 1 971 7 view .LVU204
 972:lwIP/src/core/dns.c ****     }
 582              		.loc 1 972 7 view .LVU205
 974:lwIP/src/core/dns.c **** 
 583              		.loc 1 974 5 view .LVU206
 972:lwIP/src/core/dns.c ****     }
 584              		.loc 1 972 31 is_stmt 0 view .LVU207
 585 00fe 009B     		ldr	r3, [sp]
 974:lwIP/src/core/dns.c **** 
 586              		.loc 1 974 11 view .LVU208
 587 0100 1D48     		ldr	r0, .L80
 588 0102 3146     		mov	r1, r6
 972:lwIP/src/core/dns.c ****     }
 589              		.loc 1 972 31 view .LVU209
 590 0104 5344     		add	r3, r3, r10
 591 0106 9A46     		mov	r10, r3
 592              	.LVL48:
 974:lwIP/src/core/dns.c **** 
 593              		.loc 1 974 11 view .LVU210
 594 0108 3523     		movs	r3, #53
 972:lwIP/src/core/dns.c ****     }
 595              		.loc 1 972 31 view .LVU211
 596 010a 09EB0A19 		add	r9, r9, r10, lsl #4
 974:lwIP/src/core/dns.c **** 
 597              		.loc 1 974 11 view .LVU212
 598 010e 99F80F40 		ldrb	r4, [r9, #15]	@ zero_extendqisi2
 972:lwIP/src/core/dns.c ****     }
 599              		.loc 1 972 11 view .LVU213
 600 0112 99F80B20 		ldrb	r2, [r9, #11]	@ zero_extendqisi2
 974:lwIP/src/core/dns.c **** 
 601              		.loc 1 974 11 view .LVU214
 602 0116 50F82400 		ldr	r0, [r0, r4, lsl #2]
 603 011a 0BEB8202 		add	r2, fp, r2, lsl #2
 604 011e FFF7FEFF 		bl	udp_sendto
 605              	.LVL49:
 974:lwIP/src/core/dns.c **** 
 606              		.loc 1 974 11 view .LVU215
 607 0122 0446     		mov	r4, r0
 977:lwIP/src/core/dns.c ****   } else {
ARM GAS  /tmp/ccJm3wen.s 			page 51


 608              		.loc 1 977 5 view .LVU216
 609 0124 3046     		mov	r0, r6
 610              	.LVL50:
 977:lwIP/src/core/dns.c ****   } else {
 611              		.loc 1 977 5 is_stmt 1 view .LVU217
 612 0126 FFF7FEFF 		bl	pbuf_free
 613              	.LVL51:
 977:lwIP/src/core/dns.c ****   } else {
 614              		.loc 1 977 5 is_stmt 0 view .LVU218
 615              	.LBE42:
 986:lwIP/src/core/dns.c **** 
 616              		.loc 1 986 1 view .LVU219
 617 012a 2046     		mov	r0, r4
 618 012c 07B0     		add	sp, sp, #28
 619              	.LCFI3:
 620              		.cfi_remember_state
 621              		.cfi_def_cfa_offset 36
 622              		@ sp needed
 623 012e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 624              	.LVL52:
 625              	.L62:
 626              	.LCFI4:
 627              		.cfi_restore_state
 628              	.LBB49:
 920:lwIP/src/core/dns.c ****         ++n;
 629              		.loc 1 920 7 view .LVU220
 630 0132 0023     		movs	r3, #0
 924:lwIP/src/core/dns.c ****         /* u16_t overflow */
 631              		.loc 1 924 10 view .LVU221
 632 0134 4FF6FE71 		movw	r1, #65534
 918:lwIP/src/core/dns.c ****       hostname_part = hostname;
 633              		.loc 1 918 7 view .LVU222
 634 0138 4446     		mov	r4, r8
 920:lwIP/src/core/dns.c ****         ++n;
 635              		.loc 1 920 7 view .LVU223
 636 013a 1A46     		mov	r2, r3
 920:lwIP/src/core/dns.c ****         ++n;
 637              		.loc 1 920 14 view .LVU224
 638 013c 1D46     		mov	r5, r3
 923:lwIP/src/core/dns.c ****       if (query_idx + n + 1 > 0xFFFF) {
 639              		.loc 1 923 7 is_stmt 1 view .LVU225
 640              	.LVL53:
 924:lwIP/src/core/dns.c ****         /* u16_t overflow */
 641              		.loc 1 924 7 view .LVU226
 924:lwIP/src/core/dns.c ****         /* u16_t overflow */
 642              		.loc 1 924 21 is_stmt 0 view .LVU227
 643 013e 3A44     		add	r2, r2, r7
 924:lwIP/src/core/dns.c ****         /* u16_t overflow */
 644              		.loc 1 924 10 view .LVU228
 645 0140 8A42     		cmp	r2, r1
 646 0142 B9DD     		ble	.L59
 647              	.LVL54:
 648              	.L79:
 926:lwIP/src/core/dns.c ****       }
 649              		.loc 1 926 9 is_stmt 1 view .LVU229
 650              	.LDL1:
 651              	.LBE49:
ARM GAS  /tmp/ccJm3wen.s 			page 52


 984:lwIP/src/core/dns.c ****   return ERR_VAL;
 652              		.loc 1 984 3 view .LVU230
 985:lwIP/src/core/dns.c **** }
 653              		.loc 1 985 10 is_stmt 0 view .LVU231
 654 0144 6FF00504 		mvn	r4, #5
 984:lwIP/src/core/dns.c ****   return ERR_VAL;
 655              		.loc 1 984 3 view .LVU232
 656 0148 3046     		mov	r0, r6
 657 014a FFF7FEFF 		bl	pbuf_free
 658              	.LVL55:
 985:lwIP/src/core/dns.c **** }
 659              		.loc 1 985 3 is_stmt 1 view .LVU233
 986:lwIP/src/core/dns.c **** 
 660              		.loc 1 986 1 is_stmt 0 view .LVU234
 661 014e 2046     		mov	r0, r4
 662 0150 07B0     		add	sp, sp, #28
 663              	.LCFI5:
 664              		.cfi_remember_state
 665              		.cfi_def_cfa_offset 36
 666              		@ sp needed
 667 0152 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 668              	.LVL56:
 669              	.L76:
 670              	.LCFI6:
 671              		.cfi_restore_state
 886:lwIP/src/core/dns.c ****   if (ip_addr_isany_val(dns_servers[entry->server_idx])
 672              		.loc 1 886 3 is_stmt 1 discriminator 1 view .LVU235
 673 0156 0948     		ldr	r0, .L80+4
 674              	.LVL57:
 886:lwIP/src/core/dns.c ****   if (ip_addr_isany_val(dns_servers[entry->server_idx])
 675              		.loc 1 886 3 is_stmt 0 discriminator 1 view .LVU236
 676 0158 FFF7FEFF 		bl	printf
 677              	.LVL58:
 678              	.L53:
 886:lwIP/src/core/dns.c ****   if (ip_addr_isany_val(dns_servers[entry->server_idx])
 679              		.loc 1 886 3 is_stmt 1 discriminator 1 view .LVU237
 886:lwIP/src/core/dns.c ****   if (ip_addr_isany_val(dns_servers[entry->server_idx])
 680              		.loc 1 886 3 discriminator 1 view .LVU238
 886:lwIP/src/core/dns.c ****   if (ip_addr_isany_val(dns_servers[entry->server_idx])
 681              		.loc 1 886 3 discriminator 1 view .LVU239
 886:lwIP/src/core/dns.c ****   if (ip_addr_isany_val(dns_servers[entry->server_idx])
 682              		.loc 1 886 3 discriminator 1 view .LVU240
 886:lwIP/src/core/dns.c ****   if (ip_addr_isany_val(dns_servers[entry->server_idx])
 683              		.loc 1 886 3 discriminator 1 view .LVU241
 886:lwIP/src/core/dns.c ****   if (ip_addr_isany_val(dns_servers[entry->server_idx])
 684              		.loc 1 886 3 discriminator 1 view .LVU242
 685 015c FEE7     		b	.L53
 686              	.LVL59:
 687              	.L77:
 894:lwIP/src/core/dns.c ****     /* flush this entry */
 688              		.loc 1 894 5 view .LVU243
 897:lwIP/src/core/dns.c ****   }
 689              		.loc 1 897 12 is_stmt 0 view .LVU244
 690 015e 3446     		mov	r4, r6
 894:lwIP/src/core/dns.c ****     /* flush this entry */
 691              		.loc 1 894 5 view .LVU245
 692 0160 3146     		mov	r1, r6
ARM GAS  /tmp/ccJm3wen.s 			page 53


 693 0162 FFF7FEFF 		bl	dns_call_found
 694              	.LVL60:
 896:lwIP/src/core/dns.c ****     return ERR_OK;
 695              		.loc 1 896 5 is_stmt 1 view .LVU246
 896:lwIP/src/core/dns.c ****     return ERR_OK;
 696              		.loc 1 896 18 is_stmt 0 view .LVU247
 697 0166 AE72     		strb	r6, [r5, #10]
 897:lwIP/src/core/dns.c ****   }
 698              		.loc 1 897 5 is_stmt 1 view .LVU248
 699              	.L55:
 986:lwIP/src/core/dns.c **** 
 700              		.loc 1 986 1 is_stmt 0 view .LVU249
 701 0168 2046     		mov	r0, r4
 702 016a 07B0     		add	sp, sp, #28
 703              	.LCFI7:
 704              		.cfi_remember_state
 705              		.cfi_def_cfa_offset 36
 706              		@ sp needed
 707 016c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 708              	.LVL61:
 709              	.L61:
 710              	.LCFI8:
 711              		.cfi_restore_state
 979:lwIP/src/core/dns.c ****   }
 712              		.loc 1 979 9 view .LVU250
 713 0170 4FF0FF34 		mov	r4, #-1
 714 0174 F8E7     		b	.L55
 715              	.L81:
 716 0176 00BF     		.align	2
 717              	.L80:
 718 0178 00000000 		.word	.LANCHOR2
 719 017c 00000000 		.word	.LC0
 720 0180 00000000 		.word	.LANCHOR0
 721 0184 00000000 		.word	.LANCHOR3
 722              		.cfi_endproc
 723              	.LFE117:
 725              		.section	.text.dns_compare_name.constprop.0,"ax",%progbits
 726              		.align	1
 727              		.p2align 2,,3
 728              		.syntax unified
 729              		.thumb
 730              		.thumb_func
 731              		.fpu fpv4-sp-d16
 733              	dns_compare_name.constprop.0:
 734              	.LVL62:
 735              	.LFB132:
 775:lwIP/src/core/dns.c **** {
 736              		.loc 1 775 1 is_stmt 1 view -0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 775:lwIP/src/core/dns.c **** {
 740              		.loc 1 775 1 is_stmt 0 view .LVU252
 741 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 742              	.LCFI9:
 743              		.cfi_def_cfa_offset 32
 744              		.cfi_offset 4, -32
ARM GAS  /tmp/ccJm3wen.s 			page 54


 745              		.cfi_offset 5, -28
 746              		.cfi_offset 6, -24
 747              		.cfi_offset 7, -20
 748              		.cfi_offset 8, -16
 749              		.cfi_offset 9, -12
 750              		.cfi_offset 10, -8
 751              		.cfi_offset 14, -4
 778:lwIP/src/core/dns.c **** 
 752              		.loc 1 778 9 view .LVU253
 753 0004 4FF00C09 		mov	r9, #12
 782:lwIP/src/core/dns.c ****       /* error or overflow */
 754              		.loc 1 782 37 view .LVU254
 755 0008 4FF6FF77 		movw	r7, #65535
 775:lwIP/src/core/dns.c **** {
 756              		.loc 1 775 1 view .LVU255
 757 000c 8246     		mov	r10, r0
 758 000e 0E46     		mov	r6, r1
 759              	.LBB50:
 760              	.LBB51:
 798:lwIP/src/core/dns.c ****           return 0xFFFF;
 761              		.loc 1 798 13 view .LVU256
 762 0010 254C     		ldr	r4, .L102
 763              	.LVL63:
 764              	.L91:
 798:lwIP/src/core/dns.c ****           return 0xFFFF;
 765              		.loc 1 798 13 view .LVU257
 766              	.LBE51:
 767              	.LBE50:
 780:lwIP/src/core/dns.c ****     n = pbuf_try_get_at(p, response_offset);
 768              		.loc 1 780 3 is_stmt 1 view .LVU258
 781:lwIP/src/core/dns.c ****     if ((n < 0) || (response_offset == 0xFFFF)) {
 769              		.loc 1 781 5 view .LVU259
 781:lwIP/src/core/dns.c ****     if ((n < 0) || (response_offset == 0xFFFF)) {
 770              		.loc 1 781 9 is_stmt 0 view .LVU260
 771 0012 4946     		mov	r1, r9
 772 0014 3046     		mov	r0, r6
 773 0016 FFF7FEFF 		bl	pbuf_try_get_at
 774              	.LVL64:
 782:lwIP/src/core/dns.c ****       /* error or overflow */
 775              		.loc 1 782 5 is_stmt 1 view .LVU261
 782:lwIP/src/core/dns.c ****       /* error or overflow */
 776              		.loc 1 782 8 is_stmt 0 view .LVU262
 777 001a 0028     		cmp	r0, #0
 782:lwIP/src/core/dns.c ****       /* error or overflow */
 778              		.loc 1 782 8 view .LVU263
 779 001c 2EDB     		blt	.L86
 780 001e B945     		cmp	r9, r7
 781 0020 2CD0     		beq	.L86
 786:lwIP/src/core/dns.c ****     /** @see RFC 1035 - 4.1.4. Message compression */
 782              		.loc 1 786 5 is_stmt 1 view .LVU264
 788:lwIP/src/core/dns.c ****       /* Compressed name: cannot be equal since we don't send them */
 783              		.loc 1 788 12 is_stmt 0 view .LVU265
 784 0022 00F0C003 		and	r3, r0, #192
 786:lwIP/src/core/dns.c ****     /** @see RFC 1035 - 4.1.4. Message compression */
 785              		.loc 1 786 20 view .LVU266
 786 0026 09F10109 		add	r9, r9, #1
 787              	.LVL65:
ARM GAS  /tmp/ccJm3wen.s 			page 55


 788:lwIP/src/core/dns.c ****       /* Compressed name: cannot be equal since we don't send them */
 788              		.loc 1 788 8 view .LVU267
 789 002a C02B     		cmp	r3, #192
 786:lwIP/src/core/dns.c ****     /** @see RFC 1035 - 4.1.4. Message compression */
 790              		.loc 1 786 20 view .LVU268
 791 002c 1FFA89F9 		uxth	r9, r9
 792              	.LVL66:
 788:lwIP/src/core/dns.c ****       /* Compressed name: cannot be equal since we don't send them */
 793              		.loc 1 788 5 is_stmt 1 view .LVU269
 788:lwIP/src/core/dns.c ****       /* Compressed name: cannot be equal since we don't send them */
 794              		.loc 1 788 8 is_stmt 0 view .LVU270
 795 0030 24D0     		beq	.L86
 793:lwIP/src/core/dns.c ****         int c = pbuf_try_get_at(p, response_offset);
 796              		.loc 1 793 13 is_stmt 1 view .LVU271
 797 0032 38B3     		cbz	r0, .L87
 798 0034 D046     		mov	r8, r10
 799 0036 0AEB0005 		add	r5, r10, r0
 800 003a 16E0     		b	.L90
 801              	.LVL67:
 802              	.L101:
 803              	.LBB60:
 804              	.LBB52:
 798:lwIP/src/core/dns.c ****           return 0xFFFF;
 805              		.loc 1 798 13 is_stmt 0 view .LVU272
 806 003c 18F8012B 		ldrb	r2, [r8], #1	@ zero_extendqisi2
 807              	.LVL68:
 798:lwIP/src/core/dns.c ****           return 0xFFFF;
 808              		.loc 1 798 13 is_stmt 1 view .LVU273
 809 0040 A15C     		ldrb	r1, [r4, r2]	@ zero_extendqisi2
 810              	.LBE52:
 806:lwIP/src/core/dns.c ****         --n;
 811              		.loc 1 806 9 is_stmt 0 view .LVU274
 812 0042 C246     		mov	r10, r8
 813              	.LVL69:
 814              	.LBB53:
 798:lwIP/src/core/dns.c ****           return 0xFFFF;
 815              		.loc 1 798 13 view .LVU275
 816 0044 01F00301 		and	r1, r1, #3
 817 0048 0129     		cmp	r1, #1
 818              	.LBE53:
 819              	.LBB54:
 798:lwIP/src/core/dns.c ****           return 0xFFFF;
 820              		.loc 1 798 39 view .LVU276
 821 004a E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 822 004c 01F00301 		and	r1, r1, #3
 823              	.LBE54:
 824              	.LBB55:
 798:lwIP/src/core/dns.c ****           return 0xFFFF;
 825              		.loc 1 798 13 view .LVU277
 826 0050 08BF     		it	eq
 827 0052 2032     		addeq	r2, r2, #32
 828              	.LVL70:
 798:lwIP/src/core/dns.c ****           return 0xFFFF;
 829              		.loc 1 798 13 view .LVU278
 830              	.LBE55:
 831              	.LBB56:
 798:lwIP/src/core/dns.c ****           return 0xFFFF;
ARM GAS  /tmp/ccJm3wen.s 			page 56


 832              		.loc 1 798 39 view .LVU279
 833 0054 0129     		cmp	r1, #1
 834 0056 08BF     		it	eq
 835 0058 2033     		addeq	r3, r3, #32
 836              	.LBE56:
 801:lwIP/src/core/dns.c ****           /* would overflow */
 837              		.loc 1 801 12 view .LVU280
 838 005a B945     		cmp	r9, r7
 805:lwIP/src/core/dns.c ****         ++query;
 839              		.loc 1 805 24 view .LVU281
 840 005c 1FFA8CF9 		uxth	r9, ip
 841              	.LVL71:
 806:lwIP/src/core/dns.c ****         --n;
 842              		.loc 1 806 9 is_stmt 1 view .LVU282
 807:lwIP/src/core/dns.c ****       }
 843              		.loc 1 807 9 view .LVU283
 807:lwIP/src/core/dns.c ****       }
 844              		.loc 1 807 9 is_stmt 0 view .LVU284
 845              	.LBE60:
 793:lwIP/src/core/dns.c ****         int c = pbuf_try_get_at(p, response_offset);
 846              		.loc 1 793 13 is_stmt 1 view .LVU285
 847              	.LBB61:
 801:lwIP/src/core/dns.c ****           /* would overflow */
 848              		.loc 1 801 12 is_stmt 0 view .LVU286
 849 0060 0CD0     		beq	.L86
 801:lwIP/src/core/dns.c ****           /* would overflow */
 850              		.loc 1 801 12 view .LVU287
 851 0062 9A42     		cmp	r2, r3
 852 0064 0AD1     		bne	.L86
 853              	.LBE61:
 793:lwIP/src/core/dns.c ****         int c = pbuf_try_get_at(p, response_offset);
 854              		.loc 1 793 13 view .LVU288
 855 0066 4545     		cmp	r5, r8
 856 0068 0CD0     		beq	.L87
 857              	.LVL72:
 858              	.L90:
 859              	.LBB62:
 794:lwIP/src/core/dns.c ****         if (c < 0) {
 860              		.loc 1 794 9 is_stmt 1 view .LVU289
 794:lwIP/src/core/dns.c ****         if (c < 0) {
 861              		.loc 1 794 17 is_stmt 0 view .LVU290
 862 006a 4946     		mov	r1, r9
 863 006c 3046     		mov	r0, r6
 864 006e FFF7FEFF 		bl	pbuf_try_get_at
 865              	.LVL73:
 798:lwIP/src/core/dns.c ****           return 0xFFFF;
 866              		.loc 1 798 9 is_stmt 1 view .LVU291
 867              	.LBB57:
 798:lwIP/src/core/dns.c ****           return 0xFFFF;
 868              		.loc 1 798 13 view .LVU292
 869              	.LBE57:
 870              	.LBB58:
 798:lwIP/src/core/dns.c ****           return 0xFFFF;
 871              		.loc 1 798 39 view .LVU293
 872              	.LBE58:
 801:lwIP/src/core/dns.c ****           /* would overflow */
 873              		.loc 1 801 9 view .LVU294
ARM GAS  /tmp/ccJm3wen.s 			page 57


 805:lwIP/src/core/dns.c ****         ++query;
 874              		.loc 1 805 9 view .LVU295
 795:lwIP/src/core/dns.c ****           return 0xFFFF;
 875              		.loc 1 795 9 view .LVU296
 795:lwIP/src/core/dns.c ****           return 0xFFFF;
 876              		.loc 1 795 12 is_stmt 0 view .LVU297
 877 0072 0028     		cmp	r0, #0
 878              	.LVL74:
 879              	.LBB59:
 798:lwIP/src/core/dns.c ****           return 0xFFFF;
 880              		.loc 1 798 39 is_stmt 1 view .LVU298
 881              	.LBE59:
 805:lwIP/src/core/dns.c ****         ++query;
 882              		.loc 1 805 24 is_stmt 0 view .LVU299
 883 0074 09F1010C 		add	ip, r9, #1
 884 0078 C3B2     		uxtb	r3, r0
 795:lwIP/src/core/dns.c ****           return 0xFFFF;
 885              		.loc 1 795 12 view .LVU300
 886 007a DFDA     		bge	.L101
 887              	.LVL75:
 888              	.L86:
 795:lwIP/src/core/dns.c ****           return 0xFFFF;
 889              		.loc 1 795 12 view .LVU301
 890              	.LBE62:
 784:lwIP/src/core/dns.c ****     }
 891              		.loc 1 784 14 view .LVU302
 892 007c 4FF6FF70 		movw	r0, #65535
 893              	.L85:
 822:lwIP/src/core/dns.c **** 
 894              		.loc 1 822 1 view .LVU303
 895 0080 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 896              	.LVL76:
 897              	.L87:
 809:lwIP/src/core/dns.c ****     }
 898              		.loc 1 809 7 is_stmt 1 view .LVU304
 811:lwIP/src/core/dns.c ****     if (n < 0) {
 899              		.loc 1 811 9 is_stmt 0 view .LVU305
 900 0084 4946     		mov	r1, r9
 901 0086 3046     		mov	r0, r6
 902 0088 FFF7FEFF 		bl	pbuf_try_get_at
 903              	.LVL77:
 812:lwIP/src/core/dns.c ****       return 0xFFFF;
 904              		.loc 1 812 8 view .LVU306
 905 008c 0028     		cmp	r0, #0
 809:lwIP/src/core/dns.c ****     }
 906              		.loc 1 809 7 view .LVU307
 907 008e 0AF1010A 		add	r10, r10, #1
 908              	.LVL78:
 811:lwIP/src/core/dns.c ****     if (n < 0) {
 909              		.loc 1 811 5 is_stmt 1 view .LVU308
 812:lwIP/src/core/dns.c ****       return 0xFFFF;
 910              		.loc 1 812 5 view .LVU309
 812:lwIP/src/core/dns.c ****       return 0xFFFF;
 911              		.loc 1 812 8 is_stmt 0 view .LVU310
 912 0092 F3DB     		blt	.L86
 815:lwIP/src/core/dns.c **** 
 913              		.loc 1 815 11 is_stmt 1 view .LVU311
ARM GAS  /tmp/ccJm3wen.s 			page 58


 815:lwIP/src/core/dns.c **** 
 914              		.loc 1 815 3 is_stmt 0 view .LVU312
 915 0094 BDD1     		bne	.L91
 817:lwIP/src/core/dns.c ****     /* would overflow */
 916              		.loc 1 817 3 is_stmt 1 view .LVU313
 817:lwIP/src/core/dns.c ****     /* would overflow */
 917              		.loc 1 817 6 is_stmt 0 view .LVU314
 918 0096 4FF6FF73 		movw	r3, #65535
 919 009a 9945     		cmp	r9, r3
 920 009c EED0     		beq	.L86
 821:lwIP/src/core/dns.c **** }
 921              		.loc 1 821 3 is_stmt 1 view .LVU315
 821:lwIP/src/core/dns.c **** }
 922              		.loc 1 821 10 is_stmt 0 view .LVU316
 923 009e 09F10100 		add	r0, r9, #1
 924              	.LVL79:
 821:lwIP/src/core/dns.c **** }
 925              		.loc 1 821 10 view .LVU317
 926 00a2 80B2     		uxth	r0, r0
 927 00a4 ECE7     		b	.L85
 928              	.L103:
 929 00a6 00BF     		.align	2
 930              	.L102:
 931 00a8 01000000 		.word	_ctype_+1
 932              		.cfi_endproc
 933              	.LFE132:
 935              		.section	.text.dns_server_recv,"ax",%progbits
 936              		.align	1
 937              		.p2align 2,,3
 938              		.syntax unified
 939              		.thumb
 940              		.thumb_func
 941              		.fpu fpv4-sp-d16
 943              	dns_server_recv:
 944              	.LVL80:
 945              	.LFB113:
 606:lwIP/src/core/dns.c ****   struct pbuf *q;
 946              		.loc 1 606 1 is_stmt 1 view -0
 947              		.cfi_startproc
 948              		@ args = 4, pretend = 0, frame = 24
 949              		@ frame_needed = 0, uses_anonymous_args = 0
 607:lwIP/src/core/dns.c **** #if LWIP_IPV6
 950              		.loc 1 607 3 view .LVU319
 611:lwIP/src/core/dns.c **** #endif
 951              		.loc 1 611 3 view .LVU320
 614:lwIP/src/core/dns.c **** 
 952              		.loc 1 614 3 view .LVU321
 617:lwIP/src/core/dns.c ****     LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: pbuf too small\n"));
 953              		.loc 1 617 3 view .LVU322
 606:lwIP/src/core/dns.c ****   struct pbuf *q;
 954              		.loc 1 606 1 is_stmt 0 view .LVU323
 955 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 956              	.LCFI10:
 957              		.cfi_def_cfa_offset 36
 958              		.cfi_offset 4, -36
 959              		.cfi_offset 5, -32
 960              		.cfi_offset 6, -28
ARM GAS  /tmp/ccJm3wen.s 			page 59


 961              		.cfi_offset 7, -24
 962              		.cfi_offset 8, -20
 963              		.cfi_offset 9, -16
 964              		.cfi_offset 10, -12
 965              		.cfi_offset 11, -8
 966              		.cfi_offset 14, -4
 967 0004 1446     		mov	r4, r2
 617:lwIP/src/core/dns.c ****     LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: pbuf too small\n"));
 968              		.loc 1 617 8 view .LVU324
 969 0006 1289     		ldrh	r2, [r2, #8]
 970              	.LVL81:
 606:lwIP/src/core/dns.c ****   struct pbuf *q;
 971              		.loc 1 606 1 view .LVU325
 972 0008 87B0     		sub	sp, sp, #28
 973              	.LCFI11:
 974              		.cfi_def_cfa_offset 64
 617:lwIP/src/core/dns.c ****     LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: pbuf too small\n"));
 975              		.loc 1 617 6 view .LVU326
 976 000a 0F2A     		cmp	r2, #15
 606:lwIP/src/core/dns.c ****   struct pbuf *q;
 977              		.loc 1 606 1 view .LVU327
 978 000c BDF84070 		ldrh	r7, [sp, #64]
 617:lwIP/src/core/dns.c ****     LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: pbuf too small\n"));
 979              		.loc 1 617 6 view .LVU328
 980 0010 05D8     		bhi	.L115
 981              	.LVL82:
 982              	.L106:
 704:lwIP/src/core/dns.c ****   return;
 983              		.loc 1 704 3 is_stmt 1 view .LVU329
 984 0012 2046     		mov	r0, r4
 985 0014 FFF7FEFF 		bl	pbuf_free
 986              	.LVL83:
 705:lwIP/src/core/dns.c **** }
 987              		.loc 1 705 3 view .LVU330
 706:lwIP/src/core/dns.c **** 
 988              		.loc 1 706 1 is_stmt 0 view .LVU331
 989 0018 07B0     		add	sp, sp, #28
 990              	.LCFI12:
 991              		.cfi_remember_state
 992              		.cfi_def_cfa_offset 36
 993              		@ sp needed
 994 001a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 995              	.LVL84:
 996              	.L115:
 997              	.LCFI13:
 998              		.cfi_restore_state
 623:lwIP/src/core/dns.c **** 
 999              		.loc 1 623 3 is_stmt 1 view .LVU332
 1000 001e 8846     		mov	r8, r1
 623:lwIP/src/core/dns.c **** 
 1001              		.loc 1 623 7 is_stmt 0 view .LVU333
 1002 0020 02F11201 		add	r1, r2, #18
 1003              	.LVL85:
 623:lwIP/src/core/dns.c **** 
 1004              		.loc 1 623 7 view .LVU334
 1005 0024 3620     		movs	r0, #54
 1006              	.LVL86:
ARM GAS  /tmp/ccJm3wen.s 			page 60


 623:lwIP/src/core/dns.c **** 
 1007              		.loc 1 623 7 view .LVU335
 1008 0026 4FF42072 		mov	r2, #640
 1009 002a 89B2     		uxth	r1, r1
 1010 002c 1E46     		mov	r6, r3
 1011 002e FFF7FEFF 		bl	pbuf_alloc
 1012              	.LVL87:
 626:lwIP/src/core/dns.c ****     struct dns_hdr *hdr = (void*)q->payload;
 1013              		.loc 1 626 3 is_stmt 1 view .LVU336
 626:lwIP/src/core/dns.c ****     struct dns_hdr *hdr = (void*)q->payload;
 1014              		.loc 1 626 6 is_stmt 0 view .LVU337
 1015 0032 0546     		mov	r5, r0
 1016 0034 0028     		cmp	r0, #0
 1017 0036 ECD0     		beq	.L106
 626:lwIP/src/core/dns.c ****     struct dns_hdr *hdr = (void*)q->payload;
 1018              		.loc 1 626 33 discriminator 1 view .LVU338
 1019 0038 2146     		mov	r1, r4
 1020 003a FFF7FEFF 		bl	pbuf_copy
 1021              	.LVL88:
 626:lwIP/src/core/dns.c ****     struct dns_hdr *hdr = (void*)q->payload;
 1022              		.loc 1 626 19 discriminator 1 view .LVU339
 1023 003e 8146     		mov	r9, r0
 1024 0040 0028     		cmp	r0, #0
 1025 0042 E6D1     		bne	.L106
 1026              	.LBB63:
 627:lwIP/src/core/dns.c **** 
 1027              		.loc 1 627 5 is_stmt 1 view .LVU340
 627:lwIP/src/core/dns.c **** 
 1028              		.loc 1 627 21 is_stmt 0 view .LVU341
 1029 0044 D5F804A0 		ldr	r10, [r5, #4]
 1030              	.LVL89:
 630:lwIP/src/core/dns.c ****         (hdr->numquestions == PP_HTONS(1))) {
 1031              		.loc 1 630 5 is_stmt 1 view .LVU342
 630:lwIP/src/core/dns.c ****         (hdr->numquestions == PP_HTONS(1))) {
 1032              		.loc 1 630 8 is_stmt 0 view .LVU343
 1033 0048 9AF90230 		ldrsb	r3, [r10, #2]
 1034 004c 002B     		cmp	r3, #0
 1035 004e E0DB     		blt	.L106
 630:lwIP/src/core/dns.c ****         (hdr->numquestions == PP_HTONS(1))) {
 1036              		.loc 1 630 51 discriminator 1 view .LVU344
 1037 0050 BAF80430 		ldrh	r3, [r10, #4]	@ unaligned
 1038 0054 B3F5807F 		cmp	r3, #256
 1039 0058 DBD1     		bne	.L106
 1040              	.LVL90:
 1041              	.LBB64:
 640:lwIP/src/core/dns.c ****         entry = &local_hostlist_static[i];
 1042              		.loc 1 640 19 is_stmt 1 discriminator 1 view .LVU345
 641:lwIP/src/core/dns.c **** #endif /* DNS_LOCAL_HOSTLIST_IS_DYNAMIC */
 1043              		.loc 1 641 9 discriminator 1 view .LVU346
 643:lwIP/src/core/dns.c ****         if (res_idx < 0xFFFF) {
 1044              		.loc 1 643 9 discriminator 1 view .LVU347
 643:lwIP/src/core/dns.c ****         if (res_idx < 0xFFFF) {
 1045              		.loc 1 643 19 is_stmt 0 discriminator 1 view .LVU348
 1046 005a 244B     		ldr	r3, .L116
 1047 005c 2146     		mov	r1, r4
 1048 005e 1868     		ldr	r0, [r3]
 1049 0060 FFF7FEFF 		bl	dns_compare_name.constprop.0
ARM GAS  /tmp/ccJm3wen.s 			page 61


 1050              	.LVL91:
 644:lwIP/src/core/dns.c ****           break;
 1051              		.loc 1 644 9 is_stmt 1 discriminator 1 view .LVU349
 644:lwIP/src/core/dns.c ****           break;
 1052              		.loc 1 644 12 is_stmt 0 discriminator 1 view .LVU350
 1053 0064 4FF6FF72 		movw	r2, #65535
 1054 0068 204B     		ldr	r3, .L116
 1055 006a 9042     		cmp	r0, r2
 1056 006c 3AD0     		beq	.L109
 650:lwIP/src/core/dns.c ****         u16_t len = p->tot_len, ip_len;
 1057              		.loc 1 650 7 is_stmt 1 view .LVU351
 1058              	.LBB65:
 651:lwIP/src/core/dns.c ****         u16_t nameref;
 1059              		.loc 1 651 9 view .LVU352
 664:lwIP/src/core/dns.c ****         hdr->numanswers = PP_HTONS(1);
 1060              		.loc 1 664 21 is_stmt 0 view .LVU353
 1061 006e 9AF80220 		ldrb	r2, [r10, #2]	@ zero_extendqisi2
 665:lwIP/src/core/dns.c **** 
 1062              		.loc 1 665 25 view .LVU354
 1063 0072 0121     		movs	r1, #1
 651:lwIP/src/core/dns.c ****         u16_t nameref;
 1064              		.loc 1 651 15 view .LVU355
 1065 0074 B4F808B0 		ldrh	fp, [r4, #8]
 1066              	.LVL92:
 652:lwIP/src/core/dns.c ****         struct dns_answer ans;
 1067              		.loc 1 652 9 is_stmt 1 view .LVU356
 653:lwIP/src/core/dns.c ****         union {
 1068              		.loc 1 653 9 view .LVU357
 654:lwIP/src/core/dns.c **** #if LWIP_IPV4
 1069              		.loc 1 654 9 view .LVU358
 664:lwIP/src/core/dns.c ****         hdr->numanswers = PP_HTONS(1);
 1070              		.loc 1 664 9 view .LVU359
 675:lwIP/src/core/dns.c ****           ans.len  = PP_HTONS(sizeof(ip4_addr_t));
 1071              		.loc 1 675 20 is_stmt 0 view .LVU360
 1072 0078 4FF00120 		mov	r0, #16777472
 1073              	.LVL93:
 664:lwIP/src/core/dns.c ****         hdr->numanswers = PP_HTONS(1);
 1074              		.loc 1 664 21 view .LVU361
 1075 007c 62F07F02 		orn	r2, r2, #127
 665:lwIP/src/core/dns.c **** 
 1076              		.loc 1 665 25 view .LVU362
 1077 0080 8AF80710 		strb	r1, [r10, #7]
 670:lwIP/src/core/dns.c **** 
 1078              		.loc 1 670 17 view .LVU363
 1079 0084 4FF0F051 		mov	r1, #503316480
 668:lwIP/src/core/dns.c ****         ans.cls = PP_HTONS(DNS_RRCLASS_IN);
 1080              		.loc 1 668 17 view .LVU364
 1081 0088 4FF44C6E 		mov	lr, #3264
 664:lwIP/src/core/dns.c ****         hdr->numanswers = PP_HTONS(1);
 1082              		.loc 1 664 21 view .LVU365
 1083 008c 8AF80220 		strb	r2, [r10, #2]
 665:lwIP/src/core/dns.c **** 
 1084              		.loc 1 665 9 is_stmt 1 view .LVU366
 668:lwIP/src/core/dns.c ****         ans.cls = PP_HTONS(DNS_RRCLASS_IN);
 1085              		.loc 1 668 9 view .LVU367
 676:lwIP/src/core/dns.c ****           ip4_addr_copy(ipaddr.ip4, ip_2_ip4(entry->addr));
 1086              		.loc 1 676 20 is_stmt 0 view .LVU368
ARM GAS  /tmp/ccJm3wen.s 			page 62


 1087 0090 4FF4806C 		mov	ip, #1024
 677:lwIP/src/core/dns.c ****         }
 1088              		.loc 1 677 11 view .LVU369
 1089 0094 5A68     		ldr	r2, [r3, #4]
 688:lwIP/src/core/dns.c ****         len += sizeof(nameref);
 1090              		.loc 1 688 9 view .LVU370
 1091 0096 5B46     		mov	r3, fp
 665:lwIP/src/core/dns.c **** 
 1092              		.loc 1 665 25 view .LVU371
 1093 0098 8AF80690 		strb	r9, [r10, #6]
 677:lwIP/src/core/dns.c ****         }
 1094              		.loc 1 677 11 view .LVU372
 1095 009c 0292     		str	r2, [sp, #8]
 688:lwIP/src/core/dns.c ****         len += sizeof(nameref);
 1096              		.loc 1 688 9 view .LVU373
 1097 009e 0222     		movs	r2, #2
 670:lwIP/src/core/dns.c **** 
 1098              		.loc 1 670 17 view .LVU374
 1099 00a0 0491     		str	r1, [sp, #16]
 688:lwIP/src/core/dns.c ****         len += sizeof(nameref);
 1100              		.loc 1 688 9 view .LVU375
 1101 00a2 0DF10601 		add	r1, sp, #6
 675:lwIP/src/core/dns.c ****           ans.len  = PP_HTONS(sizeof(ip4_addr_t));
 1102              		.loc 1 675 20 view .LVU376
 1103 00a6 0390     		str	r0, [sp, #12]
 688:lwIP/src/core/dns.c ****         len += sizeof(nameref);
 1104              		.loc 1 688 9 view .LVU377
 1105 00a8 2846     		mov	r0, r5
 668:lwIP/src/core/dns.c ****         ans.cls = PP_HTONS(DNS_RRCLASS_IN);
 1106              		.loc 1 668 17 view .LVU378
 1107 00aa ADF806E0 		strh	lr, [sp, #6]	@ movhi
 669:lwIP/src/core/dns.c ****         ans.ttl = PP_HTONL(DNS_SERVER_TTL);
 1108              		.loc 1 669 9 is_stmt 1 view .LVU379
 670:lwIP/src/core/dns.c **** 
 1109              		.loc 1 670 9 view .LVU380
 673:lwIP/src/core/dns.c ****           ip_len = sizeof(ip4_addr_t);
 1110              		.loc 1 673 9 view .LVU381
 674:lwIP/src/core/dns.c ****           ans.type = PP_HTONS(DNS_RRTYPE_A);
 1111              		.loc 1 674 11 view .LVU382
 1112              	.LVL94:
 675:lwIP/src/core/dns.c ****           ans.len  = PP_HTONS(sizeof(ip4_addr_t));
 1113              		.loc 1 675 11 view .LVU383
 676:lwIP/src/core/dns.c ****           ip4_addr_copy(ipaddr.ip4, ip_2_ip4(entry->addr));
 1114              		.loc 1 676 11 view .LVU384
 676:lwIP/src/core/dns.c ****           ip4_addr_copy(ipaddr.ip4, ip_2_ip4(entry->addr));
 1115              		.loc 1 676 20 is_stmt 0 view .LVU385
 1116 00ae ADF814C0 		strh	ip, [sp, #20]	@ movhi
 677:lwIP/src/core/dns.c ****         }
 1117              		.loc 1 677 11 is_stmt 1 view .LVU386
 688:lwIP/src/core/dns.c ****         len += sizeof(nameref);
 1118              		.loc 1 688 9 view .LVU387
 1119 00b2 FFF7FEFF 		bl	pbuf_take_at
 1120              	.LVL95:
 689:lwIP/src/core/dns.c ****         pbuf_take_at(q, &ans, sizeof(ans), len);
 1121              		.loc 1 689 9 view .LVU388
 690:lwIP/src/core/dns.c ****         len += SIZEOF_DNS_ANSWER;
 1122              		.loc 1 690 9 view .LVU389
ARM GAS  /tmp/ccJm3wen.s 			page 63


 1123 00b6 0C22     		movs	r2, #12
 689:lwIP/src/core/dns.c ****         pbuf_take_at(q, &ans, sizeof(ans), len);
 1124              		.loc 1 689 13 is_stmt 0 view .LVU390
 1125 00b8 0BF10203 		add	r3, fp, #2
 690:lwIP/src/core/dns.c ****         len += SIZEOF_DNS_ANSWER;
 1126              		.loc 1 690 9 view .LVU391
 1127 00bc 2846     		mov	r0, r5
 1128 00be 0DEB0201 		add	r1, sp, r2
 1129 00c2 9BB2     		uxth	r3, r3
 1130 00c4 FFF7FEFF 		bl	pbuf_take_at
 1131              	.LVL96:
 691:lwIP/src/core/dns.c ****         pbuf_take_at(q, &ipaddr, ip_len, len);
 1132              		.loc 1 691 9 is_stmt 1 view .LVU392
 692:lwIP/src/core/dns.c **** 
 1133              		.loc 1 692 9 view .LVU393
 691:lwIP/src/core/dns.c ****         pbuf_take_at(q, &ipaddr, ip_len, len);
 1134              		.loc 1 691 13 is_stmt 0 view .LVU394
 1135 00c8 0BF10C03 		add	r3, fp, #12
 692:lwIP/src/core/dns.c **** 
 1136              		.loc 1 692 9 view .LVU395
 1137 00cc 0422     		movs	r2, #4
 1138 00ce 02A9     		add	r1, sp, #8
 1139 00d0 9BB2     		uxth	r3, r3
 1140 00d2 2846     		mov	r0, r5
 1141 00d4 FFF7FEFF 		bl	pbuf_take_at
 1142              	.LVL97:
 695:lwIP/src/core/dns.c ****       }
 1143              		.loc 1 695 9 is_stmt 1 view .LVU396
 1144 00d8 3B46     		mov	r3, r7
 1145 00da 3246     		mov	r2, r6
 1146 00dc 2946     		mov	r1, r5
 1147 00de 4046     		mov	r0, r8
 1148 00e0 FFF7FEFF 		bl	udp_sendto
 1149              	.LVL98:
 1150              	.L109:
 695:lwIP/src/core/dns.c ****       }
 1151              		.loc 1 695 9 is_stmt 0 view .LVU397
 1152              	.LBE65:
 698:lwIP/src/core/dns.c ****     }
 1153              		.loc 1 698 7 is_stmt 1 view .LVU398
 1154 00e4 2846     		mov	r0, r5
 1155 00e6 FFF7FEFF 		bl	pbuf_free
 1156              	.LVL99:
 1157 00ea 92E7     		b	.L106
 1158              	.L117:
 1159              		.align	2
 1160              	.L116:
 1161 00ec 00000000 		.word	.LANCHOR4
 1162              	.LBE64:
 1163              	.LBE63:
 1164              		.cfi_endproc
 1165              	.LFE113:
 1167              		.section	.rodata.dns_check_entry.str1.4,"aMS",%progbits,1
 1168              		.align	2
 1169              	.LC1:
 1170 0000 61727261 		.ascii	"array index out of bounds\000"
 1170      7920696E 
ARM GAS  /tmp/ccJm3wen.s 			page 64


 1170      64657820 
 1170      6F757420 
 1170      6F662062 
 1171 001a 0000     		.align	2
 1172              	.LC2:
 1173 001c 756E6B6E 		.ascii	"unknown dns_table entry state:\000"
 1173      6F776E20 
 1173      646E735F 
 1173      7461626C 
 1173      6520656E 
 1174              		.section	.text.dns_check_entry,"ax",%progbits
 1175              		.align	1
 1176              		.p2align 2,,3
 1177              		.syntax unified
 1178              		.thumb
 1179              		.thumb_func
 1180              		.fpu fpv4-sp-d16
 1182              	dns_check_entry:
 1183              	.LVL100:
 1184              	.LFB123:
1121:lwIP/src/core/dns.c **** 
1122:lwIP/src/core/dns.c **** /* Create a query transmission ID that is unique for all outstanding queries */
1123:lwIP/src/core/dns.c **** static u16_t
1124:lwIP/src/core/dns.c **** dns_create_txid(void)
1125:lwIP/src/core/dns.c **** {
1126:lwIP/src/core/dns.c ****   u16_t txid;
1127:lwIP/src/core/dns.c ****   u8_t i;
1128:lwIP/src/core/dns.c **** 
1129:lwIP/src/core/dns.c **** again:
1130:lwIP/src/core/dns.c ****   txid = (u16_t)DNS_RAND_TXID();
1131:lwIP/src/core/dns.c **** 
1132:lwIP/src/core/dns.c ****   /* check whether the ID is unique */
1133:lwIP/src/core/dns.c ****   for (i = 0; i < DNS_TABLE_SIZE; i++) {
1134:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
1135:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
1136:lwIP/src/core/dns.c ****       /* ID already used by another pending query */
1137:lwIP/src/core/dns.c ****       goto again;
1138:lwIP/src/core/dns.c ****     }
1139:lwIP/src/core/dns.c ****   }
1140:lwIP/src/core/dns.c **** 
1141:lwIP/src/core/dns.c ****   return txid;
1142:lwIP/src/core/dns.c **** }
1143:lwIP/src/core/dns.c **** 
1144:lwIP/src/core/dns.c **** /**
1145:lwIP/src/core/dns.c ****  * Check whether there are other backup DNS servers available to try
1146:lwIP/src/core/dns.c ****  */
1147:lwIP/src/core/dns.c **** static u8_t
1148:lwIP/src/core/dns.c **** dns_backupserver_available(struct dns_table_entry *pentry)
1149:lwIP/src/core/dns.c **** {
1150:lwIP/src/core/dns.c ****   u8_t ret = 0;
1151:lwIP/src/core/dns.c **** 
1152:lwIP/src/core/dns.c ****   if (pentry) {
1153:lwIP/src/core/dns.c ****     if ((pentry->server_idx + 1 < DNS_MAX_SERVERS) && !ip_addr_isany_val(dns_servers[pentry->server
1154:lwIP/src/core/dns.c ****       ret = 1;
1155:lwIP/src/core/dns.c ****     }
1156:lwIP/src/core/dns.c ****   }
1157:lwIP/src/core/dns.c **** 
ARM GAS  /tmp/ccJm3wen.s 			page 65


1158:lwIP/src/core/dns.c ****   return ret;
1159:lwIP/src/core/dns.c **** }
1160:lwIP/src/core/dns.c **** 
1161:lwIP/src/core/dns.c **** /**
1162:lwIP/src/core/dns.c ****  * dns_check_entry() - see if entry has not yet been queried and, if so, sends out a query.
1163:lwIP/src/core/dns.c ****  * Check an entry in the dns_table:
1164:lwIP/src/core/dns.c ****  * - send out query for new entries
1165:lwIP/src/core/dns.c ****  * - retry old pending entries on timeout (also with different servers)
1166:lwIP/src/core/dns.c ****  * - remove completed entries from the table if their TTL has expired
1167:lwIP/src/core/dns.c ****  *
1168:lwIP/src/core/dns.c ****  * @param i index of the dns_table entry to check
1169:lwIP/src/core/dns.c ****  */
1170:lwIP/src/core/dns.c **** static void
1171:lwIP/src/core/dns.c **** dns_check_entry(u8_t i)
1172:lwIP/src/core/dns.c **** {
 1185              		.loc 1 1172 1 view -0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 0
 1188              		@ frame_needed = 0, uses_anonymous_args = 0
1173:lwIP/src/core/dns.c ****   err_t err;
 1189              		.loc 1 1173 3 view .LVU400
1174:lwIP/src/core/dns.c ****   struct dns_table_entry *entry = &dns_table[i];
 1190              		.loc 1 1174 3 view .LVU401
1175:lwIP/src/core/dns.c **** 
1176:lwIP/src/core/dns.c ****   LWIP_ASSERT("array index out of bounds", i < DNS_TABLE_SIZE);
 1191              		.loc 1 1176 3 view .LVU402
 1192              		.loc 1 1176 3 view .LVU403
 1193 0000 0328     		cmp	r0, #3
1172:lwIP/src/core/dns.c ****   err_t err;
 1194              		.loc 1 1172 1 is_stmt 0 view .LVU404
 1195 0002 70B5     		push	{r4, r5, r6, lr}
 1196              	.LCFI14:
 1197              		.cfi_def_cfa_offset 16
 1198              		.cfi_offset 4, -16
 1199              		.cfi_offset 5, -12
 1200              		.cfi_offset 6, -8
 1201              		.cfi_offset 14, -4
 1202              		.loc 1 1176 3 view .LVU405
 1203 0004 1AD8     		bhi	.L148
 1204              		.loc 1 1176 3 is_stmt 1 discriminator 2 view .LVU406
1177:lwIP/src/core/dns.c **** 
1178:lwIP/src/core/dns.c ****   switch (entry->state) {
 1205              		.loc 1 1178 3 discriminator 2 view .LVU407
 1206              		.loc 1 1178 16 is_stmt 0 discriminator 2 view .LVU408
 1207 0006 3D4D     		ldr	r5, .L154
 1208 0008 00EB0013 		add	r3, r0, r0, lsl #4
 1209 000c 0446     		mov	r4, r0
 1210 000e 0601     		lsls	r6, r0, #4
 1211 0010 05EB0313 		add	r3, r5, r3, lsl #4
 1212 0014 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1213 0016 032B     		cmp	r3, #3
 1214 0018 6CD8     		bhi	.L121
 1215 001a DFE803F0 		tbb	[pc, r3]
 1216              	.L123:
 1217 001e 0E       		.byte	(.L118-.L123)/2
 1218 001f 17       		.byte	(.L143-.L123)/2
 1219 0020 35       		.byte	(.L124-.L123)/2
ARM GAS  /tmp/ccJm3wen.s 			page 66


 1220 0021 02       		.byte	(.L122-.L123)/2
 1221              		.p2align 1
 1222              	.L122:
1179:lwIP/src/core/dns.c ****     case DNS_STATE_NEW:
1180:lwIP/src/core/dns.c ****       /* initialize new entry */
1181:lwIP/src/core/dns.c ****       entry->txid = dns_create_txid();
1182:lwIP/src/core/dns.c ****       entry->state = DNS_STATE_ASKING;
1183:lwIP/src/core/dns.c ****       entry->server_idx = 0;
1184:lwIP/src/core/dns.c ****       entry->tmr = 1;
1185:lwIP/src/core/dns.c ****       entry->retries = 0;
1186:lwIP/src/core/dns.c **** 
1187:lwIP/src/core/dns.c ****       /* send DNS packet for this entry */
1188:lwIP/src/core/dns.c ****       err = dns_send(i);
1189:lwIP/src/core/dns.c ****       if (err != ERR_OK) {
1190:lwIP/src/core/dns.c ****         LWIP_DEBUGF(DNS_DEBUG | LWIP_DBG_LEVEL_WARNING,
1191:lwIP/src/core/dns.c ****                     ("dns_send returned error: %s\n", lwip_strerr(err)));
1192:lwIP/src/core/dns.c ****       }
1193:lwIP/src/core/dns.c ****       break;
1194:lwIP/src/core/dns.c ****     case DNS_STATE_ASKING:
1195:lwIP/src/core/dns.c ****       if (--entry->tmr == 0) {
1196:lwIP/src/core/dns.c ****         if (++entry->retries == DNS_MAX_RETRIES) {
1197:lwIP/src/core/dns.c ****           if (dns_backupserver_available(entry)
1198:lwIP/src/core/dns.c **** #if LWIP_DNS_SUPPORT_MDNS_QUERIES
1199:lwIP/src/core/dns.c ****               && !entry->is_mdns
1200:lwIP/src/core/dns.c **** #endif /* LWIP_DNS_SUPPORT_MDNS_QUERIES */
1201:lwIP/src/core/dns.c ****              ) {
1202:lwIP/src/core/dns.c ****             /* change of server */
1203:lwIP/src/core/dns.c ****             entry->server_idx++;
1204:lwIP/src/core/dns.c ****             entry->tmr = 1;
1205:lwIP/src/core/dns.c ****             entry->retries = 0;
1206:lwIP/src/core/dns.c ****           } else {
1207:lwIP/src/core/dns.c ****             LWIP_DEBUGF(DNS_DEBUG, ("dns_check_entry: \"%s\": timeout\n", entry->name));
1208:lwIP/src/core/dns.c ****             /* call specified callback function if provided */
1209:lwIP/src/core/dns.c ****             dns_call_found(i, NULL);
1210:lwIP/src/core/dns.c ****             /* flush this entry */
1211:lwIP/src/core/dns.c ****             entry->state = DNS_STATE_UNUSED;
1212:lwIP/src/core/dns.c ****             break;
1213:lwIP/src/core/dns.c ****           }
1214:lwIP/src/core/dns.c ****         } else {
1215:lwIP/src/core/dns.c ****           /* wait longer for the next retry */
1216:lwIP/src/core/dns.c ****           entry->tmr = entry->retries;
1217:lwIP/src/core/dns.c ****         }
1218:lwIP/src/core/dns.c **** 
1219:lwIP/src/core/dns.c ****         /* send DNS packet for this entry */
1220:lwIP/src/core/dns.c ****         err = dns_send(i);
1221:lwIP/src/core/dns.c ****         if (err != ERR_OK) {
1222:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG | LWIP_DBG_LEVEL_WARNING,
1223:lwIP/src/core/dns.c ****                       ("dns_send returned error: %s\n", lwip_strerr(err)));
1224:lwIP/src/core/dns.c ****         }
1225:lwIP/src/core/dns.c ****       }
1226:lwIP/src/core/dns.c ****       break;
1227:lwIP/src/core/dns.c ****     case DNS_STATE_DONE:
1228:lwIP/src/core/dns.c ****       /* if the time to live is nul */
1229:lwIP/src/core/dns.c ****       if ((entry->ttl == 0) || (--entry->ttl == 0)) {
 1223              		.loc 1 1229 7 is_stmt 1 view .LVU409
 1224              		.loc 1 1229 17 is_stmt 0 view .LVU410
 1225 0022 3218     		adds	r2, r6, r0
ARM GAS  /tmp/ccJm3wen.s 			page 67


 1226 0024 1201     		lsls	r2, r2, #4
 1227 0026 AB58     		ldr	r3, [r5, r2]
 1228              		.loc 1 1229 10 view .LVU411
 1229 0028 13B1     		cbz	r3, .L136
 1230              		.loc 1 1229 33 discriminator 1 view .LVU412
 1231 002a 013B     		subs	r3, r3, #1
 1232              		.loc 1 1229 29 discriminator 1 view .LVU413
 1233 002c AB50     		str	r3, [r5, r2]
 1234 002e 23B9     		cbnz	r3, .L118
 1235              	.L136:
1230:lwIP/src/core/dns.c ****         LWIP_DEBUGF(DNS_DEBUG, ("dns_check_entry: \"%s\": flush\n", entry->name));
 1236              		.loc 1 1230 82 is_stmt 1 view .LVU414
1231:lwIP/src/core/dns.c ****         /* flush this entry, there cannot be any related pending entries in this state */
1232:lwIP/src/core/dns.c ****         entry->state = DNS_STATE_UNUSED;
 1237              		.loc 1 1232 9 view .LVU415
 1238              		.loc 1 1232 22 is_stmt 0 view .LVU416
 1239 0030 3444     		add	r4, r4, r6
 1240 0032 0023     		movs	r3, #0
 1241 0034 05EB0415 		add	r5, r5, r4, lsl #4
 1242 0038 AB72     		strb	r3, [r5, #10]
 1243              	.L118:
1233:lwIP/src/core/dns.c ****       }
1234:lwIP/src/core/dns.c ****       break;
1235:lwIP/src/core/dns.c ****     case DNS_STATE_UNUSED:
1236:lwIP/src/core/dns.c ****       /* nothing to do */
1237:lwIP/src/core/dns.c ****       break;
1238:lwIP/src/core/dns.c ****     default:
1239:lwIP/src/core/dns.c ****       LWIP_ASSERT("unknown dns_table entry state:", 0);
1240:lwIP/src/core/dns.c ****       break;
1241:lwIP/src/core/dns.c ****   }
1242:lwIP/src/core/dns.c **** }
 1244              		.loc 1 1242 1 view .LVU417
 1245 003a 70BD     		pop	{r4, r5, r6, pc}
 1246              	.L148:
1176:lwIP/src/core/dns.c **** 
 1247              		.loc 1 1176 3 is_stmt 1 discriminator 1 view .LVU418
 1248 003c 3048     		ldr	r0, .L154+4
 1249              	.LVL101:
1176:lwIP/src/core/dns.c **** 
 1250              		.loc 1 1176 3 is_stmt 0 discriminator 1 view .LVU419
 1251 003e FFF7FEFF 		bl	printf
 1252              	.LVL102:
 1253              	.L120:
1176:lwIP/src/core/dns.c **** 
 1254              		.loc 1 1176 3 is_stmt 1 discriminator 1 view .LVU420
1176:lwIP/src/core/dns.c **** 
 1255              		.loc 1 1176 3 discriminator 1 view .LVU421
1176:lwIP/src/core/dns.c **** 
 1256              		.loc 1 1176 3 discriminator 1 view .LVU422
1176:lwIP/src/core/dns.c **** 
 1257              		.loc 1 1176 3 discriminator 1 view .LVU423
1176:lwIP/src/core/dns.c **** 
 1258              		.loc 1 1176 3 discriminator 1 view .LVU424
1176:lwIP/src/core/dns.c **** 
 1259              		.loc 1 1176 3 discriminator 1 view .LVU425
 1260 0042 FEE7     		b	.L120
 1261              	.LVL103:
ARM GAS  /tmp/ccJm3wen.s 			page 68


 1262              	.L152:
 1263              	.LBB74:
 1264              	.LBB75:
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 1265              		.loc 1 1134 50 is_stmt 0 view .LVU426
 1266 0044 B5F83823 		ldrh	r2, [r5, #824]
 1267 0048 9A42     		cmp	r2, r3
 1268 004a 11D1     		bne	.L130
 1269              	.LVL104:
 1270              	.L143:
1126:lwIP/src/core/dns.c ****   u8_t i;
 1271              		.loc 1 1126 3 is_stmt 1 view .LVU427
1127:lwIP/src/core/dns.c **** 
 1272              		.loc 1 1127 3 view .LVU428
1130:lwIP/src/core/dns.c **** 
 1273              		.loc 1 1130 3 view .LVU429
1130:lwIP/src/core/dns.c **** 
 1274              		.loc 1 1130 17 is_stmt 0 view .LVU430
 1275 004c FFF7FEFF 		bl	rand
 1276              	.LVL105:
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 1277              		.loc 1 1133 35 is_stmt 1 view .LVU431
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 1278              		.loc 1 1133 15 view .LVU432
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 1279              		.loc 1 1134 5 view .LVU433
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 1280              		.loc 1 1133 35 view .LVU434
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 1281              		.loc 1 1133 15 view .LVU435
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 1282              		.loc 1 1134 5 view .LVU436
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 1283              		.loc 1 1133 35 view .LVU437
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 1284              		.loc 1 1133 15 view .LVU438
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 1285              		.loc 1 1134 5 view .LVU439
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 1286              		.loc 1 1134 8 is_stmt 0 view .LVU440
 1287 0050 AA7A     		ldrb	r2, [r5, #10]	@ zero_extendqisi2
1130:lwIP/src/core/dns.c **** 
 1288              		.loc 1 1130 8 view .LVU441
 1289 0052 83B2     		uxth	r3, r0
 1290              	.LVL106:
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 1291              		.loc 1 1133 3 is_stmt 1 view .LVU442
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 1292              		.loc 1 1133 15 view .LVU443
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 1293              		.loc 1 1134 5 view .LVU444
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 1294              		.loc 1 1134 8 is_stmt 0 view .LVU445
 1295 0054 022A     		cmp	r2, #2
 1296 0056 2CD0     		beq	.L149
 1297              	.L127:
 1298 0058 95F81A21 		ldrb	r2, [r5, #282]	@ zero_extendqisi2
ARM GAS  /tmp/ccJm3wen.s 			page 69


 1299 005c 022A     		cmp	r2, #2
 1300 005e 3AD0     		beq	.L150
 1301              	.L128:
 1302 0060 95F82A22 		ldrb	r2, [r5, #554]	@ zero_extendqisi2
 1303 0064 022A     		cmp	r2, #2
 1304 0066 31D0     		beq	.L151
 1305              	.L129:
 1306 0068 95F83A23 		ldrb	r2, [r5, #826]	@ zero_extendqisi2
 1307 006c 022A     		cmp	r2, #2
 1308 006e E9D0     		beq	.L152
 1309              	.L130:
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 1310              		.loc 1 1133 35 is_stmt 1 view .LVU446
 1311              	.LVL107:
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 1312              		.loc 1 1133 15 view .LVU447
1141:lwIP/src/core/dns.c **** }
 1313              		.loc 1 1141 3 view .LVU448
1141:lwIP/src/core/dns.c **** }
 1314              		.loc 1 1141 3 is_stmt 0 view .LVU449
 1315              	.LBE75:
 1316              	.LBE74:
1181:lwIP/src/core/dns.c ****       entry->state = DNS_STATE_ASKING;
 1317              		.loc 1 1181 19 view .LVU450
 1318 0070 2644     		add	r6, r6, r4
1182:lwIP/src/core/dns.c ****       entry->server_idx = 0;
 1319              		.loc 1 1182 20 view .LVU451
 1320 0072 244A     		ldr	r2, .L154+8
1188:lwIP/src/core/dns.c ****       if (err != ERR_OK) {
 1321              		.loc 1 1188 13 view .LVU452
 1322 0074 2046     		mov	r0, r4
1181:lwIP/src/core/dns.c ****       entry->state = DNS_STATE_ASKING;
 1323              		.loc 1 1181 19 view .LVU453
 1324 0076 05EB0611 		add	r1, r5, r6, lsl #4
 1325              		.loc 1 1242 1 view .LVU454
 1326 007a BDE87040 		pop	{r4, r5, r6, lr}
 1327              	.LCFI15:
 1328              		.cfi_remember_state
 1329              		.cfi_restore 14
 1330              		.cfi_restore 6
 1331              		.cfi_restore 5
 1332              		.cfi_restore 4
 1333              		.cfi_def_cfa_offset 0
1181:lwIP/src/core/dns.c ****       entry->state = DNS_STATE_ASKING;
 1334              		.loc 1 1181 19 view .LVU455
 1335 007e 0B81     		strh	r3, [r1, #8]	@ movhi
1182:lwIP/src/core/dns.c ****       entry->server_idx = 0;
 1336              		.loc 1 1182 7 is_stmt 1 view .LVU456
1183:lwIP/src/core/dns.c ****       entry->tmr = 1;
 1337              		.loc 1 1183 7 view .LVU457
1184:lwIP/src/core/dns.c ****       entry->retries = 0;
 1338              		.loc 1 1184 7 view .LVU458
1185:lwIP/src/core/dns.c **** 
 1339              		.loc 1 1185 7 view .LVU459
1182:lwIP/src/core/dns.c ****       entry->server_idx = 0;
 1340              		.loc 1 1182 20 is_stmt 0 view .LVU460
 1341 0080 C1F80A20 		str	r2, [r1, #10]	@ unaligned
ARM GAS  /tmp/ccJm3wen.s 			page 70


1188:lwIP/src/core/dns.c ****       if (err != ERR_OK) {
 1342              		.loc 1 1188 7 is_stmt 1 view .LVU461
1188:lwIP/src/core/dns.c ****       if (err != ERR_OK) {
 1343              		.loc 1 1188 13 is_stmt 0 view .LVU462
 1344 0084 FFF7FEBF 		b	dns_send
 1345              	.LVL108:
 1346              	.L124:
 1347              	.LCFI16:
 1348              		.cfi_restore_state
1195:lwIP/src/core/dns.c ****         if (++entry->retries == DNS_MAX_RETRIES) {
 1349              		.loc 1 1195 7 is_stmt 1 view .LVU463
1195:lwIP/src/core/dns.c ****         if (++entry->retries == DNS_MAX_RETRIES) {
 1350              		.loc 1 1195 18 is_stmt 0 view .LVU464
 1351 0088 3318     		adds	r3, r6, r0
 1352 008a 05EB0313 		add	r3, r5, r3, lsl #4
1195:lwIP/src/core/dns.c ****         if (++entry->retries == DNS_MAX_RETRIES) {
 1353              		.loc 1 1195 11 view .LVU465
 1354 008e 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 1355 0090 013A     		subs	r2, r2, #1
 1356 0092 D2B2     		uxtb	r2, r2
1195:lwIP/src/core/dns.c ****         if (++entry->retries == DNS_MAX_RETRIES) {
 1357              		.loc 1 1195 10 view .LVU466
 1358 0094 1A73     		strb	r2, [r3, #12]
 1359 0096 002A     		cmp	r2, #0
 1360 0098 CFD1     		bne	.L118
1196:lwIP/src/core/dns.c ****           if (dns_backupserver_available(entry)
 1361              		.loc 1 1196 9 is_stmt 1 view .LVU467
1196:lwIP/src/core/dns.c ****           if (dns_backupserver_available(entry)
 1362              		.loc 1 1196 13 is_stmt 0 view .LVU468
 1363 009a 5A7B     		ldrb	r2, [r3, #13]	@ zero_extendqisi2
 1364 009c 0132     		adds	r2, r2, #1
 1365 009e D2B2     		uxtb	r2, r2
1196:lwIP/src/core/dns.c ****           if (dns_backupserver_available(entry)
 1366              		.loc 1 1196 12 view .LVU469
 1367 00a0 042A     		cmp	r2, #4
 1368 00a2 5A73     		strb	r2, [r3, #13]
 1369 00a4 09D0     		beq	.L153
1216:lwIP/src/core/dns.c ****         }
 1370              		.loc 1 1216 11 is_stmt 1 view .LVU470
1216:lwIP/src/core/dns.c ****         }
 1371              		.loc 1 1216 22 is_stmt 0 view .LVU471
 1372 00a6 1A73     		strb	r2, [r3, #12]
 1373              	.L134:
1220:lwIP/src/core/dns.c ****         if (err != ERR_OK) {
 1374              		.loc 1 1220 9 is_stmt 1 view .LVU472
1220:lwIP/src/core/dns.c ****         if (err != ERR_OK) {
 1375              		.loc 1 1220 15 is_stmt 0 view .LVU473
 1376 00a8 2046     		mov	r0, r4
 1377              	.LVL109:
 1378              		.loc 1 1242 1 view .LVU474
 1379 00aa BDE87040 		pop	{r4, r5, r6, lr}
 1380              	.LCFI17:
 1381              		.cfi_remember_state
 1382              		.cfi_restore 14
 1383              		.cfi_restore 6
 1384              		.cfi_restore 5
 1385              		.cfi_restore 4
ARM GAS  /tmp/ccJm3wen.s 			page 71


 1386              		.cfi_def_cfa_offset 0
1220:lwIP/src/core/dns.c ****         if (err != ERR_OK) {
 1387              		.loc 1 1220 15 view .LVU475
 1388 00ae FFF7FEBF 		b	dns_send
 1389              	.LVL110:
 1390              	.L149:
 1391              	.LCFI18:
 1392              		.cfi_restore_state
 1393              	.LBB78:
 1394              	.LBB76:
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 1395              		.loc 1 1134 50 view .LVU476
 1396 00b2 2A89     		ldrh	r2, [r5, #8]
 1397 00b4 9A42     		cmp	r2, r3
 1398 00b6 CFD1     		bne	.L127
 1399 00b8 C8E7     		b	.L143
 1400              	.LVL111:
 1401              	.L153:
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 1402              		.loc 1 1134 50 view .LVU477
 1403              	.LBE76:
 1404              	.LBE78:
1197:lwIP/src/core/dns.c **** #if LWIP_DNS_SUPPORT_MDNS_QUERIES
 1405              		.loc 1 1197 11 is_stmt 1 view .LVU478
 1406              	.LBB79:
 1407              	.LBI79:
1148:lwIP/src/core/dns.c **** {
 1408              		.loc 1 1148 1 view .LVU479
 1409              	.LBB80:
1150:lwIP/src/core/dns.c **** 
 1410              		.loc 1 1150 3 view .LVU480
1152:lwIP/src/core/dns.c ****     if ((pentry->server_idx + 1 < DNS_MAX_SERVERS) && !ip_addr_isany_val(dns_servers[pentry->server
 1411              		.loc 1 1152 3 view .LVU481
1153:lwIP/src/core/dns.c ****       ret = 1;
 1412              		.loc 1 1153 5 view .LVU482
1153:lwIP/src/core/dns.c ****       ret = 1;
 1413              		.loc 1 1153 8 is_stmt 0 view .LVU483
 1414 00ba DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 1415 00bc 82B9     		cbnz	r2, .L133
 1416              	.LBB81:
 1417              	.LBI81:
1148:lwIP/src/core/dns.c **** {
 1418              		.loc 1 1148 1 is_stmt 1 view .LVU484
 1419              	.LVL112:
 1420              	.LBB82:
1153:lwIP/src/core/dns.c ****       ret = 1;
 1421              		.loc 1 1153 56 is_stmt 0 view .LVU485
 1422 00be 124A     		ldr	r2, .L154+12
1153:lwIP/src/core/dns.c ****       ret = 1;
 1423              		.loc 1 1153 52 view .LVU486
 1424 00c0 5268     		ldr	r2, [r2, #4]
 1425 00c2 6AB1     		cbz	r2, .L133
1154:lwIP/src/core/dns.c ****     }
 1426              		.loc 1 1154 7 is_stmt 1 view .LVU487
 1427              	.LVL113:
1158:lwIP/src/core/dns.c **** }
 1428              		.loc 1 1158 3 view .LVU488
ARM GAS  /tmp/ccJm3wen.s 			page 72


1158:lwIP/src/core/dns.c **** }
 1429              		.loc 1 1158 3 is_stmt 0 view .LVU489
 1430              	.LBE82:
 1431              	.LBE81:
1158:lwIP/src/core/dns.c **** }
 1432              		.loc 1 1158 3 is_stmt 1 view .LVU490
1158:lwIP/src/core/dns.c **** }
 1433              		.loc 1 1158 3 is_stmt 0 view .LVU491
 1434              	.LBE80:
 1435              	.LBE79:
1203:lwIP/src/core/dns.c ****             entry->tmr = 1;
 1436              		.loc 1 1203 13 is_stmt 1 view .LVU492
1204:lwIP/src/core/dns.c ****             entry->retries = 0;
 1437              		.loc 1 1204 13 view .LVU493
1205:lwIP/src/core/dns.c ****           } else {
 1438              		.loc 1 1205 13 view .LVU494
1203:lwIP/src/core/dns.c ****             entry->tmr = 1;
 1439              		.loc 1 1203 30 is_stmt 0 view .LVU495
 1440 00c4 0122     		movs	r2, #1
 1441 00c6 DA72     		strb	r2, [r3, #11]
1204:lwIP/src/core/dns.c ****             entry->retries = 0;
 1442              		.loc 1 1204 24 view .LVU496
 1443 00c8 9A81     		strh	r2, [r3, #12]	@ movhi
 1444 00ca EDE7     		b	.L134
 1445              	.LVL114:
 1446              	.L151:
 1447              	.LBB83:
 1448              	.LBB77:
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 1449              		.loc 1 1134 50 view .LVU497
 1450 00cc B5F82822 		ldrh	r2, [r5, #552]
 1451 00d0 9A42     		cmp	r2, r3
 1452 00d2 C9D1     		bne	.L129
 1453 00d4 BAE7     		b	.L143
 1454              	.L150:
 1455 00d6 B5F81821 		ldrh	r2, [r5, #280]
 1456 00da 9A42     		cmp	r2, r3
 1457 00dc C0D1     		bne	.L128
 1458 00de B5E7     		b	.L143
 1459              	.LVL115:
 1460              	.L133:
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 1461              		.loc 1 1134 50 view .LVU498
 1462              	.LBE77:
 1463              	.LBE83:
1207:lwIP/src/core/dns.c ****             /* call specified callback function if provided */
 1464              		.loc 1 1207 88 is_stmt 1 view .LVU499
1209:lwIP/src/core/dns.c ****             /* flush this entry */
 1465              		.loc 1 1209 13 view .LVU500
 1466 00e0 2046     		mov	r0, r4
 1467              	.LVL116:
1211:lwIP/src/core/dns.c ****             break;
 1468              		.loc 1 1211 26 is_stmt 0 view .LVU501
 1469 00e2 3444     		add	r4, r4, r6
1209:lwIP/src/core/dns.c ****             /* flush this entry */
 1470              		.loc 1 1209 13 view .LVU502
 1471 00e4 0021     		movs	r1, #0
ARM GAS  /tmp/ccJm3wen.s 			page 73


 1472 00e6 FFF7FEFF 		bl	dns_call_found
 1473              	.LVL117:
1211:lwIP/src/core/dns.c ****             break;
 1474              		.loc 1 1211 13 is_stmt 1 view .LVU503
1211:lwIP/src/core/dns.c ****             break;
 1475              		.loc 1 1211 26 is_stmt 0 view .LVU504
 1476 00ea 0023     		movs	r3, #0
 1477 00ec 05EB0415 		add	r5, r5, r4, lsl #4
 1478 00f0 AB72     		strb	r3, [r5, #10]
1212:lwIP/src/core/dns.c ****           }
 1479              		.loc 1 1212 13 is_stmt 1 view .LVU505
 1480              		.loc 1 1242 1 is_stmt 0 view .LVU506
 1481 00f2 70BD     		pop	{r4, r5, r6, pc}
 1482              	.LVL118:
 1483              	.L121:
1239:lwIP/src/core/dns.c ****       break;
 1484              		.loc 1 1239 7 is_stmt 1 discriminator 1 view .LVU507
1239:lwIP/src/core/dns.c ****       break;
 1485              		.loc 1 1239 7 discriminator 1 view .LVU508
1239:lwIP/src/core/dns.c ****       break;
 1486              		.loc 1 1239 7 discriminator 1 view .LVU509
 1487 00f4 0548     		ldr	r0, .L154+16
 1488              	.LVL119:
1239:lwIP/src/core/dns.c ****       break;
 1489              		.loc 1 1239 7 is_stmt 0 discriminator 1 view .LVU510
 1490 00f6 FFF7FEFF 		bl	printf
 1491              	.LVL120:
 1492              	.L138:
1239:lwIP/src/core/dns.c ****       break;
 1493              		.loc 1 1239 7 is_stmt 1 discriminator 2 view .LVU511
1239:lwIP/src/core/dns.c ****       break;
 1494              		.loc 1 1239 7 discriminator 2 view .LVU512
1239:lwIP/src/core/dns.c ****       break;
 1495              		.loc 1 1239 7 discriminator 2 view .LVU513
1239:lwIP/src/core/dns.c ****       break;
 1496              		.loc 1 1239 7 discriminator 2 view .LVU514
1239:lwIP/src/core/dns.c ****       break;
 1497              		.loc 1 1239 7 discriminator 2 view .LVU515
1239:lwIP/src/core/dns.c ****       break;
 1498              		.loc 1 1239 7 discriminator 2 view .LVU516
 1499 00fa FEE7     		b	.L138
 1500              	.L155:
 1501              		.align	2
 1502              	.L154:
 1503 00fc 00000000 		.word	.LANCHOR0
 1504 0100 00000000 		.word	.LC1
 1505 0104 02000100 		.word	65538
 1506 0108 00000000 		.word	.LANCHOR3
 1507 010c 1C000000 		.word	.LC2
 1508              		.cfi_endproc
 1509              	.LFE123:
 1511              		.section	.text.dns_recv,"ax",%progbits
 1512              		.align	1
 1513              		.p2align 2,,3
 1514              		.syntax unified
 1515              		.thumb
 1516              		.thumb_func
ARM GAS  /tmp/ccJm3wen.s 			page 74


 1517              		.fpu fpv4-sp-d16
 1519              	dns_recv:
 1520              	.LVL121:
 1521              	.LFB126:
1243:lwIP/src/core/dns.c **** 
1244:lwIP/src/core/dns.c **** /**
1245:lwIP/src/core/dns.c ****  * Call dns_check_entry for each entry in dns_table - check all entries.
1246:lwIP/src/core/dns.c ****  */
1247:lwIP/src/core/dns.c **** static void
1248:lwIP/src/core/dns.c **** dns_check_entries(void)
1249:lwIP/src/core/dns.c **** {
1250:lwIP/src/core/dns.c ****   u8_t i;
1251:lwIP/src/core/dns.c **** 
1252:lwIP/src/core/dns.c ****   for (i = 0; i < DNS_TABLE_SIZE; ++i) {
1253:lwIP/src/core/dns.c ****     dns_check_entry(i);
1254:lwIP/src/core/dns.c ****   }
1255:lwIP/src/core/dns.c **** }
1256:lwIP/src/core/dns.c **** 
1257:lwIP/src/core/dns.c **** /**
1258:lwIP/src/core/dns.c ****  * Save TTL and call dns_call_found for correct response.
1259:lwIP/src/core/dns.c ****  */
1260:lwIP/src/core/dns.c **** static void
1261:lwIP/src/core/dns.c **** dns_correct_response(u8_t idx, u32_t ttl)
1262:lwIP/src/core/dns.c **** {
1263:lwIP/src/core/dns.c ****   struct dns_table_entry *entry = &dns_table[idx];
1264:lwIP/src/core/dns.c **** 
1265:lwIP/src/core/dns.c ****   entry->state = DNS_STATE_DONE;
1266:lwIP/src/core/dns.c **** 
1267:lwIP/src/core/dns.c ****   LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": response = ", entry->name));
1268:lwIP/src/core/dns.c ****   ip_addr_debug_print_val(DNS_DEBUG, entry->ipaddr);
1269:lwIP/src/core/dns.c ****   LWIP_DEBUGF(DNS_DEBUG, ("\n"));
1270:lwIP/src/core/dns.c **** 
1271:lwIP/src/core/dns.c ****   /* read the answer resource record's TTL, and maximize it if needed */
1272:lwIP/src/core/dns.c ****   entry->ttl = ttl;
1273:lwIP/src/core/dns.c ****   if (entry->ttl > DNS_MAX_TTL) {
1274:lwIP/src/core/dns.c ****     entry->ttl = DNS_MAX_TTL;
1275:lwIP/src/core/dns.c ****   }
1276:lwIP/src/core/dns.c ****   dns_call_found(idx, &entry->ipaddr);
1277:lwIP/src/core/dns.c **** 
1278:lwIP/src/core/dns.c ****   if (entry->ttl == 0) {
1279:lwIP/src/core/dns.c ****     /* RFC 883, page 29: "Zero values are
1280:lwIP/src/core/dns.c ****        interpreted to mean that the RR can only be used for the
1281:lwIP/src/core/dns.c ****        transaction in progress, and should not be cached."
1282:lwIP/src/core/dns.c ****        -> flush this entry now */
1283:lwIP/src/core/dns.c ****     /* entry reused during callback? */
1284:lwIP/src/core/dns.c ****     if (entry->state == DNS_STATE_DONE) {
1285:lwIP/src/core/dns.c ****       entry->state = DNS_STATE_UNUSED;
1286:lwIP/src/core/dns.c ****     }
1287:lwIP/src/core/dns.c ****   }
1288:lwIP/src/core/dns.c **** }
1289:lwIP/src/core/dns.c **** 
1290:lwIP/src/core/dns.c **** /**
1291:lwIP/src/core/dns.c ****  * Receive input function for DNS response packets arriving for the dns UDP pcb.
1292:lwIP/src/core/dns.c ****  */
1293:lwIP/src/core/dns.c **** static void
1294:lwIP/src/core/dns.c **** dns_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, const ip_addr_t *addr, u16_t port)
1295:lwIP/src/core/dns.c **** {
ARM GAS  /tmp/ccJm3wen.s 			page 75


 1522              		.loc 1 1295 1 view -0
 1523              		.cfi_startproc
 1524              		@ args = 4, pretend = 0, frame = 40
 1525              		@ frame_needed = 0, uses_anonymous_args = 0
1296:lwIP/src/core/dns.c ****   u8_t i;
 1526              		.loc 1 1296 3 view .LVU518
1297:lwIP/src/core/dns.c ****   u16_t txid;
 1527              		.loc 1 1297 3 view .LVU519
1298:lwIP/src/core/dns.c ****   u16_t res_idx;
 1528              		.loc 1 1298 3 view .LVU520
1299:lwIP/src/core/dns.c ****   struct dns_hdr hdr;
 1529              		.loc 1 1299 3 view .LVU521
1300:lwIP/src/core/dns.c ****   struct dns_answer ans;
 1530              		.loc 1 1300 3 view .LVU522
1301:lwIP/src/core/dns.c ****   struct dns_query qry;
 1531              		.loc 1 1301 3 view .LVU523
1302:lwIP/src/core/dns.c ****   u16_t nquestions, nanswers;
 1532              		.loc 1 1302 3 view .LVU524
1303:lwIP/src/core/dns.c **** 
1304:lwIP/src/core/dns.c ****   LWIP_UNUSED_ARG(arg);
 1533              		.loc 1 1304 3 view .LVU525
1305:lwIP/src/core/dns.c ****   LWIP_UNUSED_ARG(pcb);
 1534              		.loc 1 1305 3 view .LVU526
1306:lwIP/src/core/dns.c ****   LWIP_UNUSED_ARG(port);
 1535              		.loc 1 1306 3 view .LVU527
1307:lwIP/src/core/dns.c **** 
1308:lwIP/src/core/dns.c ****   /* is the dns message big enough ? */
1309:lwIP/src/core/dns.c ****   if (p->tot_len < (SIZEOF_DNS_HDR + SIZEOF_DNS_QUERY)) {
 1536              		.loc 1 1309 3 view .LVU528
1295:lwIP/src/core/dns.c ****   u8_t i;
 1537              		.loc 1 1295 1 is_stmt 0 view .LVU529
 1538 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1539              	.LCFI19:
 1540              		.cfi_def_cfa_offset 36
 1541              		.cfi_offset 4, -36
 1542              		.cfi_offset 5, -32
 1543              		.cfi_offset 6, -28
 1544              		.cfi_offset 7, -24
 1545              		.cfi_offset 8, -20
 1546              		.cfi_offset 9, -16
 1547              		.cfi_offset 10, -12
 1548              		.cfi_offset 11, -8
 1549              		.cfi_offset 14, -4
 1550 0004 1446     		mov	r4, r2
 1551              		.loc 1 1309 6 view .LVU530
 1552 0006 1289     		ldrh	r2, [r2, #8]
 1553              	.LVL122:
1295:lwIP/src/core/dns.c ****   u8_t i;
 1554              		.loc 1 1295 1 view .LVU531
 1555 0008 8BB0     		sub	sp, sp, #44
 1556              	.LCFI20:
 1557              		.cfi_def_cfa_offset 80
 1558              		.loc 1 1309 6 view .LVU532
 1559 000a 0F2A     		cmp	r2, #15
 1560 000c 05D8     		bhi	.L200
 1561              	.LVL123:
 1562              	.L158:
ARM GAS  /tmp/ccJm3wen.s 			page 76


1310:lwIP/src/core/dns.c ****     LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: pbuf too small\n"));
1311:lwIP/src/core/dns.c ****     /* free pbuf and return */
1312:lwIP/src/core/dns.c ****     goto ignore_packet;
1313:lwIP/src/core/dns.c ****   }
1314:lwIP/src/core/dns.c **** 
1315:lwIP/src/core/dns.c ****   /* copy dns payload inside static buffer for processing */
1316:lwIP/src/core/dns.c ****   if (pbuf_copy_partial(p, &hdr, SIZEOF_DNS_HDR, 0) == SIZEOF_DNS_HDR) {
1317:lwIP/src/core/dns.c ****     /* Match the ID in the DNS header with the name table. */
1318:lwIP/src/core/dns.c ****     txid = lwip_htons(hdr.id);
1319:lwIP/src/core/dns.c ****     for (i = 0; i < DNS_TABLE_SIZE; i++) {
1320:lwIP/src/core/dns.c ****       struct dns_table_entry *entry = &dns_table[i];
1321:lwIP/src/core/dns.c ****       if ((entry->state == DNS_STATE_ASKING) &&
1322:lwIP/src/core/dns.c ****           (entry->txid == txid)) {
1323:lwIP/src/core/dns.c **** 
1324:lwIP/src/core/dns.c ****         /* We only care about the question(s) and the answers. The authrr
1325:lwIP/src/core/dns.c ****            and the extrarr are simply discarded. */
1326:lwIP/src/core/dns.c ****         nquestions = lwip_htons(hdr.numquestions);
1327:lwIP/src/core/dns.c ****         nanswers   = lwip_htons(hdr.numanswers);
1328:lwIP/src/core/dns.c **** 
1329:lwIP/src/core/dns.c ****         /* Check for correct response. */
1330:lwIP/src/core/dns.c ****         if ((hdr.flags1 & DNS_FLAG1_RESPONSE) == 0) {
1331:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": not a response\n", entry->name));
1332:lwIP/src/core/dns.c ****           goto ignore_packet; /* ignore this packet */
1333:lwIP/src/core/dns.c ****         }
1334:lwIP/src/core/dns.c ****         if (nquestions != 1) {
1335:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": response not match to query\n", entry->name));
1336:lwIP/src/core/dns.c ****           goto ignore_packet; /* ignore this packet */
1337:lwIP/src/core/dns.c ****         }
1338:lwIP/src/core/dns.c **** 
1339:lwIP/src/core/dns.c **** #if LWIP_DNS_SUPPORT_MDNS_QUERIES
1340:lwIP/src/core/dns.c ****         if (!entry->is_mdns)
1341:lwIP/src/core/dns.c **** #endif /* LWIP_DNS_SUPPORT_MDNS_QUERIES */
1342:lwIP/src/core/dns.c ****         {
1343:lwIP/src/core/dns.c ****           /* Check whether response comes from the same network address to which the
1344:lwIP/src/core/dns.c ****              question was sent. (RFC 5452) */
1345:lwIP/src/core/dns.c ****           if (!ip_addr_cmp(addr, &dns_servers[entry->server_idx])) {
1346:lwIP/src/core/dns.c ****             goto ignore_packet; /* ignore this packet */
1347:lwIP/src/core/dns.c ****           }
1348:lwIP/src/core/dns.c ****         }
1349:lwIP/src/core/dns.c **** 
1350:lwIP/src/core/dns.c ****         /* Check if the name in the "question" part match with the name in the entry and
1351:lwIP/src/core/dns.c ****            skip it if equal. */
1352:lwIP/src/core/dns.c ****         res_idx = dns_compare_name(entry->name, p, SIZEOF_DNS_HDR);
1353:lwIP/src/core/dns.c ****         if (res_idx == 0xFFFF) {
1354:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": response not match to query\n", entry->name));
1355:lwIP/src/core/dns.c ****           goto ignore_packet; /* ignore this packet */
1356:lwIP/src/core/dns.c ****         }
1357:lwIP/src/core/dns.c **** 
1358:lwIP/src/core/dns.c ****         /* check if "question" part matches the request */
1359:lwIP/src/core/dns.c ****         if (pbuf_copy_partial(p, &qry, SIZEOF_DNS_QUERY, res_idx) != SIZEOF_DNS_QUERY) {
1360:lwIP/src/core/dns.c ****           goto ignore_packet; /* ignore this packet */
1361:lwIP/src/core/dns.c ****         }
1362:lwIP/src/core/dns.c ****         if ((qry.cls != PP_HTONS(DNS_RRCLASS_IN)) ||
1363:lwIP/src/core/dns.c ****             (LWIP_DNS_ADDRTYPE_IS_IPV6(entry->reqaddrtype) && (qry.type != PP_HTONS(DNS_RRTYPE_AAAA
1364:lwIP/src/core/dns.c ****             (!LWIP_DNS_ADDRTYPE_IS_IPV6(entry->reqaddrtype) && (qry.type != PP_HTONS(DNS_RRTYPE_A))
1365:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": response not match to query\n", entry->name));
1366:lwIP/src/core/dns.c ****           goto ignore_packet; /* ignore this packet */
ARM GAS  /tmp/ccJm3wen.s 			page 77


1367:lwIP/src/core/dns.c ****         }
1368:lwIP/src/core/dns.c ****         /* skip the rest of the "question" part */
1369:lwIP/src/core/dns.c ****         if (res_idx + SIZEOF_DNS_QUERY > 0xFFFF) {
1370:lwIP/src/core/dns.c ****           goto ignore_packet;
1371:lwIP/src/core/dns.c ****         }
1372:lwIP/src/core/dns.c ****         res_idx = (u16_t)(res_idx + SIZEOF_DNS_QUERY);
1373:lwIP/src/core/dns.c **** 
1374:lwIP/src/core/dns.c ****         /* Check for error. If so, call callback to inform. */
1375:lwIP/src/core/dns.c ****         if (hdr.flags2 & DNS_FLAG2_ERR_MASK) {
1376:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": error in flags\n", entry->name));
1377:lwIP/src/core/dns.c **** 
1378:lwIP/src/core/dns.c ****           /* if there is another backup DNS server to try
1379:lwIP/src/core/dns.c ****            * then don't stop the DNS request
1380:lwIP/src/core/dns.c ****            */
1381:lwIP/src/core/dns.c ****           if (dns_backupserver_available(entry)) {
1382:lwIP/src/core/dns.c ****             /* avoid retrying the same server */
1383:lwIP/src/core/dns.c ****             entry->retries = DNS_MAX_RETRIES-1;
1384:lwIP/src/core/dns.c ****             entry->tmr     = 1;
1385:lwIP/src/core/dns.c **** 
1386:lwIP/src/core/dns.c ****             /* contact next available server for this entry */
1387:lwIP/src/core/dns.c ****             dns_check_entry(i);
1388:lwIP/src/core/dns.c **** 
1389:lwIP/src/core/dns.c ****             goto ignore_packet;
1390:lwIP/src/core/dns.c ****           }
1391:lwIP/src/core/dns.c ****         } else {
1392:lwIP/src/core/dns.c ****           while ((nanswers > 0) && (res_idx < p->tot_len)) {
1393:lwIP/src/core/dns.c ****             /* skip answer resource record's host name */
1394:lwIP/src/core/dns.c ****             res_idx = dns_skip_name(p, res_idx);
1395:lwIP/src/core/dns.c ****             if (res_idx == 0xFFFF) {
1396:lwIP/src/core/dns.c ****               goto ignore_packet; /* ignore this packet */
1397:lwIP/src/core/dns.c ****             }
1398:lwIP/src/core/dns.c **** 
1399:lwIP/src/core/dns.c ****             /* Check for IP address type and Internet class. Others are discarded. */
1400:lwIP/src/core/dns.c ****             if (pbuf_copy_partial(p, &ans, SIZEOF_DNS_ANSWER, res_idx) != SIZEOF_DNS_ANSWER) {
1401:lwIP/src/core/dns.c ****               goto ignore_packet; /* ignore this packet */
1402:lwIP/src/core/dns.c ****             }
1403:lwIP/src/core/dns.c ****             if (res_idx + SIZEOF_DNS_ANSWER > 0xFFFF) {
1404:lwIP/src/core/dns.c ****               goto ignore_packet;
1405:lwIP/src/core/dns.c ****             }
1406:lwIP/src/core/dns.c ****             res_idx = (u16_t)(res_idx + SIZEOF_DNS_ANSWER);
1407:lwIP/src/core/dns.c **** 
1408:lwIP/src/core/dns.c ****             if (ans.cls == PP_HTONS(DNS_RRCLASS_IN)) {
1409:lwIP/src/core/dns.c **** #if LWIP_IPV4
1410:lwIP/src/core/dns.c ****               if ((ans.type == PP_HTONS(DNS_RRTYPE_A)) && (ans.len == PP_HTONS(sizeof(ip4_addr_t)))
1411:lwIP/src/core/dns.c **** #if LWIP_IPV4 && LWIP_IPV6
1412:lwIP/src/core/dns.c ****                 if (!LWIP_DNS_ADDRTYPE_IS_IPV6(entry->reqaddrtype))
1413:lwIP/src/core/dns.c **** #endif /* LWIP_IPV4 && LWIP_IPV6 */
1414:lwIP/src/core/dns.c ****                 {
1415:lwIP/src/core/dns.c ****                   ip4_addr_t ip4addr;
1416:lwIP/src/core/dns.c ****                   /* read the IP address after answer resource record's header */
1417:lwIP/src/core/dns.c ****                   if (pbuf_copy_partial(p, &ip4addr, sizeof(ip4_addr_t), res_idx) != sizeof(ip4_add
1418:lwIP/src/core/dns.c ****                     goto ignore_packet; /* ignore this packet */
1419:lwIP/src/core/dns.c ****                   }
1420:lwIP/src/core/dns.c ****                   ip_addr_copy_from_ip4(dns_table[i].ipaddr, ip4addr);
1421:lwIP/src/core/dns.c ****                   pbuf_free(p);
1422:lwIP/src/core/dns.c ****                   /* handle correct response */
1423:lwIP/src/core/dns.c ****                   dns_correct_response(i, lwip_ntohl(ans.ttl));
ARM GAS  /tmp/ccJm3wen.s 			page 78


1424:lwIP/src/core/dns.c ****                   return;
1425:lwIP/src/core/dns.c ****                 }
1426:lwIP/src/core/dns.c ****               }
1427:lwIP/src/core/dns.c **** #endif /* LWIP_IPV4 */
1428:lwIP/src/core/dns.c **** #if LWIP_IPV6
1429:lwIP/src/core/dns.c ****               if ((ans.type == PP_HTONS(DNS_RRTYPE_AAAA)) && (ans.len == PP_HTONS(sizeof(ip6_addr_p
1430:lwIP/src/core/dns.c **** #if LWIP_IPV4 && LWIP_IPV6
1431:lwIP/src/core/dns.c ****                 if (LWIP_DNS_ADDRTYPE_IS_IPV6(entry->reqaddrtype))
1432:lwIP/src/core/dns.c **** #endif /* LWIP_IPV4 && LWIP_IPV6 */
1433:lwIP/src/core/dns.c ****                 {
1434:lwIP/src/core/dns.c ****                   ip6_addr_p_t ip6addr;
1435:lwIP/src/core/dns.c ****                   /* read the IP address after answer resource record's header */
1436:lwIP/src/core/dns.c ****                   if (pbuf_copy_partial(p, &ip6addr, sizeof(ip6_addr_p_t), res_idx) != sizeof(ip6_a
1437:lwIP/src/core/dns.c ****                     goto ignore_packet; /* ignore this packet */
1438:lwIP/src/core/dns.c ****                   }
1439:lwIP/src/core/dns.c ****                   /* @todo: scope ip6addr? Might be required for link-local addresses at least? */
1440:lwIP/src/core/dns.c ****                   ip_addr_copy_from_ip6_packed(dns_table[i].ipaddr, ip6addr);
1441:lwIP/src/core/dns.c ****                   pbuf_free(p);
1442:lwIP/src/core/dns.c ****                   /* handle correct response */
1443:lwIP/src/core/dns.c ****                   dns_correct_response(i, lwip_ntohl(ans.ttl));
1444:lwIP/src/core/dns.c ****                   return;
1445:lwIP/src/core/dns.c ****                 }
1446:lwIP/src/core/dns.c ****               }
1447:lwIP/src/core/dns.c **** #endif /* LWIP_IPV6 */
1448:lwIP/src/core/dns.c ****             }
1449:lwIP/src/core/dns.c ****             /* skip this answer */
1450:lwIP/src/core/dns.c ****             if ((int)(res_idx + lwip_htons(ans.len)) > 0xFFFF) {
1451:lwIP/src/core/dns.c ****               goto ignore_packet; /* ignore this packet */
1452:lwIP/src/core/dns.c ****             }
1453:lwIP/src/core/dns.c ****             res_idx = (u16_t)(res_idx + lwip_htons(ans.len));
1454:lwIP/src/core/dns.c ****             --nanswers;
1455:lwIP/src/core/dns.c ****           }
1456:lwIP/src/core/dns.c **** #if LWIP_IPV4 && LWIP_IPV6
1457:lwIP/src/core/dns.c ****           if ((entry->reqaddrtype == LWIP_DNS_ADDRTYPE_IPV4_IPV6) ||
1458:lwIP/src/core/dns.c ****               (entry->reqaddrtype == LWIP_DNS_ADDRTYPE_IPV6_IPV4)) {
1459:lwIP/src/core/dns.c ****             if (entry->reqaddrtype == LWIP_DNS_ADDRTYPE_IPV4_IPV6) {
1460:lwIP/src/core/dns.c ****               /* IPv4 failed, try IPv6 */
1461:lwIP/src/core/dns.c ****               dns_table[i].reqaddrtype = LWIP_DNS_ADDRTYPE_IPV6;
1462:lwIP/src/core/dns.c ****             } else {
1463:lwIP/src/core/dns.c ****               /* IPv6 failed, try IPv4 */
1464:lwIP/src/core/dns.c ****               dns_table[i].reqaddrtype = LWIP_DNS_ADDRTYPE_IPV4;
1465:lwIP/src/core/dns.c ****             }
1466:lwIP/src/core/dns.c ****             pbuf_free(p);
1467:lwIP/src/core/dns.c ****             dns_table[i].state = DNS_STATE_NEW;
1468:lwIP/src/core/dns.c ****             dns_check_entry(i);
1469:lwIP/src/core/dns.c ****             return;
1470:lwIP/src/core/dns.c ****           }
1471:lwIP/src/core/dns.c **** #endif /* LWIP_IPV4 && LWIP_IPV6 */
1472:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": error in response\n", entry->name));
1473:lwIP/src/core/dns.c ****         }
1474:lwIP/src/core/dns.c ****         /* call callback to indicate error, clean up memory and return */
1475:lwIP/src/core/dns.c ****         pbuf_free(p);
1476:lwIP/src/core/dns.c ****         dns_call_found(i, NULL);
1477:lwIP/src/core/dns.c ****         dns_table[i].state = DNS_STATE_UNUSED;
1478:lwIP/src/core/dns.c ****         return;
1479:lwIP/src/core/dns.c ****       }
1480:lwIP/src/core/dns.c ****     }
ARM GAS  /tmp/ccJm3wen.s 			page 79


1481:lwIP/src/core/dns.c ****   }
1482:lwIP/src/core/dns.c **** 
1483:lwIP/src/core/dns.c **** ignore_packet:
1484:lwIP/src/core/dns.c ****   /* deallocate memory and return */
1485:lwIP/src/core/dns.c ****   pbuf_free(p);
 1563              		.loc 1 1485 3 is_stmt 1 view .LVU533
 1564 000e 2046     		mov	r0, r4
 1565 0010 FFF7FEFF 		bl	pbuf_free
 1566              	.LVL124:
1486:lwIP/src/core/dns.c ****   return;
 1567              		.loc 1 1486 3 view .LVU534
 1568              	.L156:
1487:lwIP/src/core/dns.c **** }
 1569              		.loc 1 1487 1 is_stmt 0 view .LVU535
 1570 0014 0BB0     		add	sp, sp, #44
 1571              	.LCFI21:
 1572              		.cfi_remember_state
 1573              		.cfi_def_cfa_offset 36
 1574              		@ sp needed
 1575 0016 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1576              	.LVL125:
 1577              	.L200:
 1578              	.LCFI22:
 1579              		.cfi_restore_state
1316:lwIP/src/core/dns.c ****     /* Match the ID in the DNS header with the name table. */
 1580              		.loc 1 1316 3 is_stmt 1 view .LVU536
 1581 001a 1D46     		mov	r5, r3
1316:lwIP/src/core/dns.c ****     /* Match the ID in the DNS header with the name table. */
 1582              		.loc 1 1316 7 is_stmt 0 view .LVU537
 1583 001c 0C22     		movs	r2, #12
 1584 001e 0023     		movs	r3, #0
 1585              	.LVL126:
1316:lwIP/src/core/dns.c ****     /* Match the ID in the DNS header with the name table. */
 1586              		.loc 1 1316 7 view .LVU538
 1587 0020 04A9     		add	r1, sp, #16
 1588              	.LVL127:
1316:lwIP/src/core/dns.c ****     /* Match the ID in the DNS header with the name table. */
 1589              		.loc 1 1316 7 view .LVU539
 1590 0022 2046     		mov	r0, r4
 1591              	.LVL128:
1316:lwIP/src/core/dns.c ****     /* Match the ID in the DNS header with the name table. */
 1592              		.loc 1 1316 7 view .LVU540
 1593 0024 FFF7FEFF 		bl	pbuf_copy_partial
 1594              	.LVL129:
1316:lwIP/src/core/dns.c ****     /* Match the ID in the DNS header with the name table. */
 1595              		.loc 1 1316 6 view .LVU541
 1596 0028 0C28     		cmp	r0, #12
 1597 002a F0D1     		bne	.L158
1318:lwIP/src/core/dns.c ****     for (i = 0; i < DNS_TABLE_SIZE; i++) {
 1598              		.loc 1 1318 5 is_stmt 1 view .LVU542
 1599              	.LVL130:
 1600              	.LBB104:
 1601              	.LBI104:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 1602              		.loc 2 934 30 view .LVU543
 1603              	.LBB105:
 1604              		.loc 2 937 3 view .LVU544
ARM GAS  /tmp/ccJm3wen.s 			page 80


 1605              	.LBE105:
 1606              	.LBE104:
 1607              	.LBB109:
1321:lwIP/src/core/dns.c ****           (entry->txid == txid)) {
 1608              		.loc 1 1321 17 is_stmt 0 view .LVU545
 1609 002c 954E     		ldr	r6, .L206
 1610              	.LBE109:
 1611              	.LBB141:
 1612              	.LBB106:
 1613              		.loc 2 937 19 view .LVU546
 1614 002e BDF81030 		ldrh	r3, [sp, #16]
 1615              	.LBE106:
 1616              	.LBE141:
 1617              	.LBB142:
1321:lwIP/src/core/dns.c ****           (entry->txid == txid)) {
 1618              		.loc 1 1321 10 view .LVU547
 1619 0032 B27A     		ldrb	r2, [r6, #10]	@ zero_extendqisi2
 1620              	.LBE142:
 1621              	.LBB143:
 1622              	.LBB107:
 1623              		.loc 2 937 19 view .LVU548
 1624 0034 5BBA     		rev16	r3, r3
 1625              	.LBE107:
 1626              	.LBE143:
 1627              	.LBB144:
1321:lwIP/src/core/dns.c ****           (entry->txid == txid)) {
 1628              		.loc 1 1321 10 view .LVU549
 1629 0036 022A     		cmp	r2, #2
 1630              	.LBE144:
 1631              	.LBB145:
 1632              	.LBB108:
 1633              		.loc 2 937 19 view .LVU550
 1634 0038 9BB2     		uxth	r3, r3
 1635              	.LVL131:
 1636              		.loc 2 937 19 view .LVU551
 1637              	.LBE108:
 1638              	.LBE145:
1319:lwIP/src/core/dns.c ****       struct dns_table_entry *entry = &dns_table[i];
 1639              		.loc 1 1319 5 is_stmt 1 view .LVU552
1319:lwIP/src/core/dns.c ****       struct dns_table_entry *entry = &dns_table[i];
 1640              		.loc 1 1319 17 view .LVU553
 1641              	.LBB146:
1320:lwIP/src/core/dns.c ****       if ((entry->state == DNS_STATE_ASKING) &&
 1642              		.loc 1 1320 7 view .LVU554
1321:lwIP/src/core/dns.c ****           (entry->txid == txid)) {
 1643              		.loc 1 1321 7 view .LVU555
1321:lwIP/src/core/dns.c ****           (entry->txid == txid)) {
 1644              		.loc 1 1321 10 is_stmt 0 view .LVU556
 1645 003a 14D0     		beq	.L201
 1646              	.L160:
 1647              	.LBE146:
1319:lwIP/src/core/dns.c ****       struct dns_table_entry *entry = &dns_table[i];
 1648              		.loc 1 1319 37 is_stmt 1 view .LVU557
 1649              	.LVL132:
1319:lwIP/src/core/dns.c ****       struct dns_table_entry *entry = &dns_table[i];
 1650              		.loc 1 1319 17 view .LVU558
 1651              	.LBB147:
ARM GAS  /tmp/ccJm3wen.s 			page 81


1320:lwIP/src/core/dns.c ****       if ((entry->state == DNS_STATE_ASKING) &&
 1652              		.loc 1 1320 7 view .LVU559
1321:lwIP/src/core/dns.c ****           (entry->txid == txid)) {
 1653              		.loc 1 1321 7 view .LVU560
1321:lwIP/src/core/dns.c ****           (entry->txid == txid)) {
 1654              		.loc 1 1321 10 is_stmt 0 view .LVU561
 1655 003c 96F81A21 		ldrb	r2, [r6, #282]	@ zero_extendqisi2
 1656 0040 022A     		cmp	r2, #2
 1657 0042 00F0B480 		beq	.L202
 1658              	.L162:
 1659              	.LBE147:
1319:lwIP/src/core/dns.c ****       struct dns_table_entry *entry = &dns_table[i];
 1660              		.loc 1 1319 37 is_stmt 1 view .LVU562
 1661              	.LVL133:
1319:lwIP/src/core/dns.c ****       struct dns_table_entry *entry = &dns_table[i];
 1662              		.loc 1 1319 17 view .LVU563
 1663              	.LBB148:
1320:lwIP/src/core/dns.c ****       if ((entry->state == DNS_STATE_ASKING) &&
 1664              		.loc 1 1320 7 view .LVU564
1321:lwIP/src/core/dns.c ****           (entry->txid == txid)) {
 1665              		.loc 1 1321 7 view .LVU565
1321:lwIP/src/core/dns.c ****           (entry->txid == txid)) {
 1666              		.loc 1 1321 17 is_stmt 0 view .LVU566
 1667 0046 96F82A72 		ldrb	r7, [r6, #554]	@ zero_extendqisi2
1321:lwIP/src/core/dns.c ****           (entry->txid == txid)) {
 1668              		.loc 1 1321 10 view .LVU567
 1669 004a 022F     		cmp	r7, #2
 1670 004c 00F0B780 		beq	.L203
 1671              	.L163:
 1672              	.LBE148:
1319:lwIP/src/core/dns.c ****       struct dns_table_entry *entry = &dns_table[i];
 1673              		.loc 1 1319 37 is_stmt 1 view .LVU568
 1674              	.LVL134:
1319:lwIP/src/core/dns.c ****       struct dns_table_entry *entry = &dns_table[i];
 1675              		.loc 1 1319 17 view .LVU569
 1676              	.LBB149:
1320:lwIP/src/core/dns.c ****       if ((entry->state == DNS_STATE_ASKING) &&
 1677              		.loc 1 1320 7 view .LVU570
1321:lwIP/src/core/dns.c ****           (entry->txid == txid)) {
 1678              		.loc 1 1321 7 view .LVU571
1321:lwIP/src/core/dns.c ****           (entry->txid == txid)) {
 1679              		.loc 1 1321 10 is_stmt 0 view .LVU572
 1680 0050 96F83A23 		ldrb	r2, [r6, #826]	@ zero_extendqisi2
 1681 0054 022A     		cmp	r2, #2
 1682 0056 DAD1     		bne	.L158
1321:lwIP/src/core/dns.c ****           (entry->txid == txid)) {
 1683              		.loc 1 1321 46 discriminator 1 view .LVU573
 1684 0058 B6F83823 		ldrh	r2, [r6, #824]
 1685 005c 9A42     		cmp	r2, r3
 1686 005e D6D1     		bne	.L158
 1687              	.LBE149:
1319:lwIP/src/core/dns.c ****       struct dns_table_entry *entry = &dns_table[i];
 1688              		.loc 1 1319 38 view .LVU574
 1689 0060 0327     		movs	r7, #3
 1690              	.LBB150:
1320:lwIP/src/core/dns.c ****       if ((entry->state == DNS_STATE_ASKING) &&
 1691              		.loc 1 1320 49 view .LVU575
ARM GAS  /tmp/ccJm3wen.s 			page 82


 1692 0062 B846     		mov	r8, r7
 1693 0064 04E0     		b	.L161
 1694              	.LVL135:
 1695              	.L201:
1321:lwIP/src/core/dns.c ****           (entry->txid == txid)) {
 1696              		.loc 1 1321 46 view .LVU576
 1697 0066 3289     		ldrh	r2, [r6, #8]
 1698 0068 9A42     		cmp	r2, r3
 1699 006a E7D1     		bne	.L160
 1700              	.LBE150:
1319:lwIP/src/core/dns.c ****       struct dns_table_entry *entry = &dns_table[i];
 1701              		.loc 1 1319 12 view .LVU577
 1702 006c 0027     		movs	r7, #0
 1703              	.LBB151:
1320:lwIP/src/core/dns.c ****       if ((entry->state == DNS_STATE_ASKING) &&
 1704              		.loc 1 1320 49 view .LVU578
 1705 006e B846     		mov	r8, r7
 1706              	.LVL136:
 1707              	.L161:
1326:lwIP/src/core/dns.c ****         nanswers   = lwip_htons(hdr.numanswers);
 1708              		.loc 1 1326 9 is_stmt 1 view .LVU579
 1709              	.LBB110:
 1710              	.LBI110:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 1711              		.loc 2 934 30 view .LVU580
 1712              	.LBB111:
 1713              		.loc 2 937 3 view .LVU581
 1714              		.loc 2 937 19 is_stmt 0 view .LVU582
 1715 0070 BDF81430 		ldrh	r3, [sp, #20]
 1716              	.LVL137:
 1717              		.loc 2 937 19 view .LVU583
 1718              	.LBE111:
 1719              	.LBE110:
1330:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": not a response\n", entry->name));
 1720              		.loc 1 1330 12 view .LVU584
 1721 0074 9DF81220 		ldrb	r2, [sp, #18]	@ zero_extendqisi2
 1722              	.LBB114:
 1723              	.LBB112:
 1724              		.loc 2 937 19 view .LVU585
 1725 0078 5BBA     		rev16	r3, r3
 1726              	.LBE112:
 1727              	.LBE114:
1334:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": response not match to query\n", entry->name));
 1728              		.loc 1 1334 12 view .LVU586
 1729 007a D209     		lsrs	r2, r2, #7
 1730              	.LBB115:
 1731              	.LBB113:
 1732              		.loc 2 937 19 view .LVU587
 1733 007c 9BB2     		uxth	r3, r3
 1734              	.LVL138:
 1735              		.loc 2 937 19 view .LVU588
 1736              	.LBE113:
 1737              	.LBE115:
1327:lwIP/src/core/dns.c **** 
 1738              		.loc 1 1327 9 is_stmt 1 view .LVU589
 1739              	.LBB116:
 1740              	.LBI116:
ARM GAS  /tmp/ccJm3wen.s 			page 83


 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 1741              		.loc 2 934 30 view .LVU590
 1742              	.LBB117:
 1743              		.loc 2 937 3 view .LVU591
 1744              		.loc 2 937 3 is_stmt 0 view .LVU592
 1745              	.LBE117:
 1746              	.LBE116:
1330:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": not a response\n", entry->name));
 1747              		.loc 1 1330 9 is_stmt 1 view .LVU593
1334:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": response not match to query\n", entry->name));
 1748              		.loc 1 1334 9 view .LVU594
1334:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": response not match to query\n", entry->name));
 1749              		.loc 1 1334 12 is_stmt 0 view .LVU595
 1750 007e C6D0     		beq	.L158
 1751 0080 012B     		cmp	r3, #1
 1752 0082 C4D1     		bne	.L158
1345:lwIP/src/core/dns.c ****             goto ignore_packet; /* ignore this packet */
 1753              		.loc 1 1345 11 is_stmt 1 view .LVU596
1345:lwIP/src/core/dns.c ****             goto ignore_packet; /* ignore this packet */
 1754              		.loc 1 1345 16 is_stmt 0 view .LVU597
 1755 0084 08EB0813 		add	r3, r8, r8, lsl #4
 1756              	.LVL139:
1345:lwIP/src/core/dns.c ****             goto ignore_packet; /* ignore this packet */
 1757              		.loc 1 1345 16 view .LVU598
 1758 0088 DFF80092 		ldr	r9, .L206+8
1345:lwIP/src/core/dns.c ****             goto ignore_packet; /* ignore this packet */
 1759              		.loc 1 1345 14 view .LVU599
 1760 008c 2968     		ldr	r1, [r5]
1345:lwIP/src/core/dns.c ****             goto ignore_packet; /* ignore this packet */
 1761              		.loc 1 1345 16 view .LVU600
 1762 008e 06EB0312 		add	r2, r6, r3, lsl #4
 1763 0092 1B01     		lsls	r3, r3, #4
 1764 0094 D27A     		ldrb	r2, [r2, #11]	@ zero_extendqisi2
1345:lwIP/src/core/dns.c ****             goto ignore_packet; /* ignore this packet */
 1765              		.loc 1 1345 14 view .LVU601
 1766 0096 59F82220 		ldr	r2, [r9, r2, lsl #2]
 1767 009a 9142     		cmp	r1, r2
 1768 009c B7D1     		bne	.L158
1352:lwIP/src/core/dns.c ****         if (res_idx == 0xFFFF) {
 1769              		.loc 1 1352 41 view .LVU602
 1770 009e 03F11000 		add	r0, r3, #16
1353:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": response not match to query\n", entry->name));
 1771              		.loc 1 1353 12 view .LVU603
 1772 00a2 4FF6FF7B 		movw	fp, #65535
1352:lwIP/src/core/dns.c ****         if (res_idx == 0xFFFF) {
 1773              		.loc 1 1352 19 view .LVU604
 1774 00a6 2146     		mov	r1, r4
 1775 00a8 0093     		str	r3, [sp]
 1776 00aa 3044     		add	r0, r0, r6
1327:lwIP/src/core/dns.c **** 
 1777              		.loc 1 1327 22 view .LVU605
 1778 00ac BDF81650 		ldrh	r5, [sp, #22]
 1779              	.LVL140:
1352:lwIP/src/core/dns.c ****         if (res_idx == 0xFFFF) {
 1780              		.loc 1 1352 9 is_stmt 1 view .LVU606
1352:lwIP/src/core/dns.c ****         if (res_idx == 0xFFFF) {
 1781              		.loc 1 1352 19 is_stmt 0 view .LVU607
ARM GAS  /tmp/ccJm3wen.s 			page 84


 1782 00b0 FFF7FEFF 		bl	dns_compare_name.constprop.0
 1783              	.LVL141:
1353:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": response not match to query\n", entry->name));
 1784              		.loc 1 1353 12 view .LVU608
 1785 00b4 5845     		cmp	r0, fp
1352:lwIP/src/core/dns.c ****         if (res_idx == 0xFFFF) {
 1786              		.loc 1 1352 19 view .LVU609
 1787 00b6 0346     		mov	r3, r0
 1788              	.LVL142:
1353:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": response not match to query\n", entry->name));
 1789              		.loc 1 1353 9 is_stmt 1 view .LVU610
1353:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": response not match to query\n", entry->name));
 1790              		.loc 1 1353 12 is_stmt 0 view .LVU611
 1791 00b8 A9D0     		beq	.L158
1359:lwIP/src/core/dns.c ****           goto ignore_packet; /* ignore this packet */
 1792              		.loc 1 1359 9 is_stmt 1 view .LVU612
1359:lwIP/src/core/dns.c ****           goto ignore_packet; /* ignore this packet */
 1793              		.loc 1 1359 13 is_stmt 0 view .LVU613
 1794 00ba 0190     		str	r0, [sp, #4]
 1795 00bc 0422     		movs	r2, #4
 1796 00be 02A9     		add	r1, sp, #8
 1797 00c0 2046     		mov	r0, r4
 1798              	.LVL143:
1359:lwIP/src/core/dns.c ****           goto ignore_packet; /* ignore this packet */
 1799              		.loc 1 1359 13 view .LVU614
 1800 00c2 FFF7FEFF 		bl	pbuf_copy_partial
 1801              	.LVL144:
1359:lwIP/src/core/dns.c ****           goto ignore_packet; /* ignore this packet */
 1802              		.loc 1 1359 12 view .LVU615
 1803 00c6 0428     		cmp	r0, #4
 1804 00c8 A1D1     		bne	.L158
1362:lwIP/src/core/dns.c ****             (LWIP_DNS_ADDRTYPE_IS_IPV6(entry->reqaddrtype) && (qry.type != PP_HTONS(DNS_RRTYPE_AAAA
 1805              		.loc 1 1362 9 is_stmt 1 view .LVU616
1362:lwIP/src/core/dns.c ****             (LWIP_DNS_ADDRTYPE_IS_IPV6(entry->reqaddrtype) && (qry.type != PP_HTONS(DNS_RRTYPE_AAAA
 1806              		.loc 1 1362 12 is_stmt 0 view .LVU617
 1807 00ca BDF80A20 		ldrh	r2, [sp, #10]
 1808 00ce B2F5807F 		cmp	r2, #256
 1809 00d2 9CD1     		bne	.L158
1369:lwIP/src/core/dns.c ****           goto ignore_packet;
 1810              		.loc 1 1369 9 is_stmt 1 view .LVU618
1363:lwIP/src/core/dns.c ****             (!LWIP_DNS_ADDRTYPE_IS_IPV6(entry->reqaddrtype) && (qry.type != PP_HTONS(DNS_RRTYPE_A))
 1811              		.loc 1 1363 104 is_stmt 0 view .LVU619
 1812 00d4 BDF80820 		ldrh	r2, [sp, #8]
1369:lwIP/src/core/dns.c ****           goto ignore_packet;
 1813              		.loc 1 1369 12 view .LVU620
 1814 00d8 B2F5807F 		cmp	r2, #256
 1815 00dc 97D1     		bne	.L158
 1816 00de 4FF6FB72 		movw	r2, #65531
 1817 00e2 019B     		ldr	r3, [sp, #4]
 1818 00e4 9342     		cmp	r3, r2
 1819 00e6 92D8     		bhi	.L158
1372:lwIP/src/core/dns.c **** 
 1820              		.loc 1 1372 9 is_stmt 1 view .LVU621
 1821              	.LVL145:
1375:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": error in flags\n", entry->name));
 1822              		.loc 1 1375 9 view .LVU622
1375:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_recv: \"%s\": error in flags\n", entry->name));
ARM GAS  /tmp/ccJm3wen.s 			page 85


 1823              		.loc 1 1375 12 is_stmt 0 view .LVU623
 1824 00e8 9DF81320 		ldrb	r2, [sp, #19]	@ zero_extendqisi2
 1825 00ec 1207     		lsls	r2, r2, #28
 1826 00ee 40F0B380 		bne	.L164
 1827              	.LBB120:
 1828              	.LBB118:
 1829              		.loc 2 937 19 view .LVU624
 1830 00f2 6DBA     		rev16	r5, r5
 1831              	.LBE118:
 1832              	.LBE120:
1372:lwIP/src/core/dns.c **** 
 1833              		.loc 1 1372 17 view .LVU625
 1834 00f4 0433     		adds	r3, r3, #4
 1835              	.LVL146:
 1836              	.LBB121:
 1837              	.LBB119:
 1838              		.loc 2 937 19 view .LVU626
 1839 00f6 1FFA85F9 		uxth	r9, r5
 1840              	.LBE119:
 1841              	.LBE121:
1372:lwIP/src/core/dns.c **** 
 1842              		.loc 1 1372 17 view .LVU627
 1843 00fa 9DB2     		uxth	r5, r3
 1844              	.LVL147:
 1845              	.L165:
1392:lwIP/src/core/dns.c ****             /* skip answer resource record's host name */
 1846              		.loc 1 1392 17 is_stmt 1 view .LVU628
 1847 00fc B9F1000F 		cmp	r9, #0
 1848 0100 00F09C80 		beq	.L168
1392:lwIP/src/core/dns.c ****             /* skip answer resource record's host name */
 1849              		.loc 1 1392 33 is_stmt 0 discriminator 1 view .LVU629
 1850 0104 2389     		ldrh	r3, [r4, #8]
 1851 0106 AB42     		cmp	r3, r5
 1852 0108 0AD8     		bhi	.L170
 1853 010a 97E0     		b	.L168
 1854              	.LVL148:
 1855              	.L204:
 1856              	.LBB122:
 1857              	.LBB123:
 848:lwIP/src/core/dns.c ****         return 0xFFFF;
 1858              		.loc 1 848 26 view .LVU630
 1859 010c 2289     		ldrh	r2, [r4, #8]
 848:lwIP/src/core/dns.c ****         return 0xFFFF;
 1860              		.loc 1 848 10 view .LVU631
 1861 010e 9342     		cmp	r3, r2
 1862 0110 BFF67DAF 		bge	.L158
 853:lwIP/src/core/dns.c ****     if (n < 0) {
 1863              		.loc 1 853 9 view .LVU632
 1864 0114 FFF7FEFF 		bl	pbuf_try_get_at
 1865              	.LVL149:
 857:lwIP/src/core/dns.c **** 
 1866              		.loc 1 857 11 is_stmt 1 view .LVU633
 854:lwIP/src/core/dns.c ****       return 0xFFFF;
 1867              		.loc 1 854 5 view .LVU634
 854:lwIP/src/core/dns.c ****       return 0xFFFF;
 1868              		.loc 1 854 8 is_stmt 0 view .LVU635
 1869 0118 0028     		cmp	r0, #0
ARM GAS  /tmp/ccJm3wen.s 			page 86


 1870 011a FFF678AF 		blt	.L158
 857:lwIP/src/core/dns.c **** 
 1871              		.loc 1 857 3 view .LVU636
 1872 011e 18D0     		beq	.L169
 1873              	.LVL150:
 1874              	.L170:
 837:lwIP/src/core/dns.c ****     n = pbuf_try_get_at(p, offset++);
 1875              		.loc 1 837 3 is_stmt 1 view .LVU637
 838:lwIP/src/core/dns.c ****     if ((n < 0) || (offset == 0)) {
 1876              		.loc 1 838 5 view .LVU638
 838:lwIP/src/core/dns.c ****     if ((n < 0) || (offset == 0)) {
 1877              		.loc 1 838 9 is_stmt 0 view .LVU639
 1878 0120 2946     		mov	r1, r5
 1879 0122 2046     		mov	r0, r4
 1880 0124 FFF7FEFF 		bl	pbuf_try_get_at
 1881              	.LVL151:
 1882 0128 05F1010A 		add	r10, r5, #1
 1883 012c 0346     		mov	r3, r0
 853:lwIP/src/core/dns.c ****     if (n < 0) {
 1884              		.loc 1 853 9 view .LVU640
 1885 012e 2046     		mov	r0, r4
 838:lwIP/src/core/dns.c ****     if ((n < 0) || (offset == 0)) {
 1886              		.loc 1 838 9 view .LVU641
 1887 0130 1FFA8AFA 		uxth	r10, r10
 1888              	.LVL152:
 843:lwIP/src/core/dns.c ****       /* Compressed name: since we only want to skip it (not check it), stop here */
 1889              		.loc 1 843 5 is_stmt 1 view .LVU642
 848:lwIP/src/core/dns.c ****         return 0xFFFF;
 1890              		.loc 1 848 7 view .LVU643
 851:lwIP/src/core/dns.c ****     }
 1891              		.loc 1 851 7 view .LVU644
 839:lwIP/src/core/dns.c ****       return 0xFFFF;
 1892              		.loc 1 839 5 view .LVU645
 839:lwIP/src/core/dns.c ****       return 0xFFFF;
 1893              		.loc 1 839 8 is_stmt 0 view .LVU646
 1894 0134 002B     		cmp	r3, #0
 843:lwIP/src/core/dns.c ****       /* Compressed name: since we only want to skip it (not check it), stop here */
 1895              		.loc 1 843 12 view .LVU647
 1896 0136 03F0C002 		and	r2, r3, #192
 848:lwIP/src/core/dns.c ****         return 0xFFFF;
 1897              		.loc 1 848 18 view .LVU648
 1898 013a 5344     		add	r3, r3, r10
 1899              	.LVL153:
 839:lwIP/src/core/dns.c ****       return 0xFFFF;
 1900              		.loc 1 839 8 view .LVU649
 1901 013c FFF667AF 		blt	.L158
 1902              	.LVL154:
 851:lwIP/src/core/dns.c ****     }
 1903              		.loc 1 851 14 view .LVU650
 1904 0140 9DB2     		uxth	r5, r3
 1905              	.LVL155:
 853:lwIP/src/core/dns.c ****     if (n < 0) {
 1906              		.loc 1 853 5 is_stmt 1 view .LVU651
 839:lwIP/src/core/dns.c ****       return 0xFFFF;
 1907              		.loc 1 839 8 is_stmt 0 view .LVU652
 1908 0142 BAF1000F 		cmp	r10, #0
 1909 0146 3FF462AF 		beq	.L158
ARM GAS  /tmp/ccJm3wen.s 			page 87


 843:lwIP/src/core/dns.c ****       /* Compressed name: since we only want to skip it (not check it), stop here */
 1910              		.loc 1 843 8 view .LVU653
 1911 014a C02A     		cmp	r2, #192
 853:lwIP/src/core/dns.c ****     if (n < 0) {
 1912              		.loc 1 853 9 view .LVU654
 1913 014c 2946     		mov	r1, r5
 843:lwIP/src/core/dns.c ****       /* Compressed name: since we only want to skip it (not check it), stop here */
 1914              		.loc 1 843 8 view .LVU655
 1915 014e DDD1     		bne	.L204
 838:lwIP/src/core/dns.c ****     if ((n < 0) || (offset == 0)) {
 1916              		.loc 1 838 9 view .LVU656
 1917 0150 5546     		mov	r5, r10
 1918              	.LVL156:
 1919              	.L169:
 859:lwIP/src/core/dns.c ****     return 0xFFFF;
 1920              		.loc 1 859 3 is_stmt 1 view .LVU657
 859:lwIP/src/core/dns.c ****     return 0xFFFF;
 1921              		.loc 1 859 6 is_stmt 0 view .LVU658
 1922 0152 5D45     		cmp	r5, fp
 1923 0154 3FF45BAF 		beq	.L158
 862:lwIP/src/core/dns.c **** }
 1924              		.loc 1 862 3 is_stmt 1 view .LVU659
 862:lwIP/src/core/dns.c **** }
 1925              		.loc 1 862 10 is_stmt 0 view .LVU660
 1926 0158 05F1010A 		add	r10, r5, #1
 1927 015c 1FFA8AFA 		uxth	r10, r10
 1928              	.LVL157:
 862:lwIP/src/core/dns.c **** }
 1929              		.loc 1 862 10 view .LVU661
 1930              	.LBE123:
 1931              	.LBE122:
1395:lwIP/src/core/dns.c ****               goto ignore_packet; /* ignore this packet */
 1932              		.loc 1 1395 13 is_stmt 1 view .LVU662
1395:lwIP/src/core/dns.c ****               goto ignore_packet; /* ignore this packet */
 1933              		.loc 1 1395 16 is_stmt 0 view .LVU663
 1934 0160 DA45     		cmp	r10, fp
 1935 0162 3FF454AF 		beq	.L158
1400:lwIP/src/core/dns.c ****               goto ignore_packet; /* ignore this packet */
 1936              		.loc 1 1400 13 is_stmt 1 view .LVU664
1400:lwIP/src/core/dns.c ****               goto ignore_packet; /* ignore this packet */
 1937              		.loc 1 1400 17 is_stmt 0 view .LVU665
 1938 0166 5346     		mov	r3, r10
 1939 0168 0A22     		movs	r2, #10
 1940 016a 07A9     		add	r1, sp, #28
 1941 016c 2046     		mov	r0, r4
 1942 016e FFF7FEFF 		bl	pbuf_copy_partial
 1943              	.LVL158:
1403:lwIP/src/core/dns.c ****               goto ignore_packet;
 1944              		.loc 1 1403 13 is_stmt 1 view .LVU666
1403:lwIP/src/core/dns.c ****               goto ignore_packet;
 1945              		.loc 1 1403 16 is_stmt 0 view .LVU667
 1946 0172 0A28     		cmp	r0, #10
 1947 0174 7FF44BAF 		bne	.L158
 1948 0178 4FF6F573 		movw	r3, #65525
 1949 017c 9A45     		cmp	r10, r3
 1950 017e 3FF646AF 		bhi	.L158
1406:lwIP/src/core/dns.c **** 
ARM GAS  /tmp/ccJm3wen.s 			page 88


 1951              		.loc 1 1406 13 is_stmt 1 view .LVU668
1408:lwIP/src/core/dns.c **** #if LWIP_IPV4
 1952              		.loc 1 1408 16 is_stmt 0 view .LVU669
 1953 0182 BDF81E10 		ldrh	r1, [sp, #30]
1406:lwIP/src/core/dns.c **** 
 1954              		.loc 1 1406 21 view .LVU670
 1955 0186 0B35     		adds	r5, r5, #11
 1956 0188 BDF82420 		ldrh	r2, [sp, #36]
1408:lwIP/src/core/dns.c **** #if LWIP_IPV4
 1957              		.loc 1 1408 16 view .LVU671
 1958 018c B1F5807F 		cmp	r1, #256
1406:lwIP/src/core/dns.c **** 
 1959              		.loc 1 1406 21 view .LVU672
 1960 0190 ABB2     		uxth	r3, r5
 1961              	.LVL159:
1408:lwIP/src/core/dns.c **** #if LWIP_IPV4
 1962              		.loc 1 1408 13 is_stmt 1 view .LVU673
1408:lwIP/src/core/dns.c **** #if LWIP_IPV4
 1963              		.loc 1 1408 16 is_stmt 0 view .LVU674
 1964 0192 1BD0     		beq	.L205
 1965              	.L171:
1450:lwIP/src/core/dns.c ****               goto ignore_packet; /* ignore this packet */
 1966              		.loc 1 1450 13 is_stmt 1 view .LVU675
 1967              	.LVL160:
 1968              	.LBB124:
 1969              	.LBI124:
 934:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 1970              		.loc 2 934 30 view .LVU676
 1971              	.LBB125:
 1972              		.loc 2 937 3 view .LVU677
 1973              		.loc 2 937 19 is_stmt 0 view .LVU678
 1974 0194 55BA     		rev16	r5, r2
 1975              	.LBE125:
 1976              	.LBE124:
1450:lwIP/src/core/dns.c ****               goto ignore_packet; /* ignore this packet */
 1977              		.loc 1 1450 17 view .LVU679
 1978 0196 13FA85F5 		uxtah	r5, r3, r5
1450:lwIP/src/core/dns.c ****               goto ignore_packet; /* ignore this packet */
 1979              		.loc 1 1450 16 view .LVU680
 1980 019a B5F5803F 		cmp	r5, #65536
 1981 019e BFF636AF 		bge	.L158
1453:lwIP/src/core/dns.c ****             --nanswers;
 1982              		.loc 1 1453 13 is_stmt 1 view .LVU681
 1983              	.LVL161:
1453:lwIP/src/core/dns.c ****             --nanswers;
 1984              		.loc 1 1453 13 is_stmt 0 view .LVU682
 1985              	.LBE151:
 1986              		.loc 2 937 3 is_stmt 1 view .LVU683
 1987              	.LBB152:
1454:lwIP/src/core/dns.c ****           }
 1988              		.loc 1 1454 13 is_stmt 0 view .LVU684
 1989 01a2 09F1FF39 		add	r9, r9, #-1
 1990              	.LVL162:
1453:lwIP/src/core/dns.c ****             --nanswers;
 1991              		.loc 1 1453 21 view .LVU685
 1992 01a6 ADB2     		uxth	r5, r5
 1993              	.LVL163:
ARM GAS  /tmp/ccJm3wen.s 			page 89


1454:lwIP/src/core/dns.c ****           }
 1994              		.loc 1 1454 13 is_stmt 1 view .LVU686
 1995 01a8 1FFA89F9 		uxth	r9, r9
 1996              	.LVL164:
1454:lwIP/src/core/dns.c ****           }
 1997              		.loc 1 1454 13 is_stmt 0 view .LVU687
 1998 01ac A6E7     		b	.L165
 1999              	.LVL165:
 2000              	.L202:
1321:lwIP/src/core/dns.c ****           (entry->txid == txid)) {
 2001              		.loc 1 1321 46 view .LVU688
 2002 01ae B6F81821 		ldrh	r2, [r6, #280]
 2003 01b2 9A42     		cmp	r2, r3
 2004 01b4 7FF447AF 		bne	.L162
 2005              	.LBE152:
1319:lwIP/src/core/dns.c ****       struct dns_table_entry *entry = &dns_table[i];
 2006              		.loc 1 1319 38 view .LVU689
 2007 01b8 0127     		movs	r7, #1
 2008              	.LBB153:
1320:lwIP/src/core/dns.c ****       if ((entry->state == DNS_STATE_ASKING) &&
 2009              		.loc 1 1320 49 view .LVU690
 2010 01ba B846     		mov	r8, r7
 2011 01bc 58E7     		b	.L161
 2012              	.LVL166:
 2013              	.L203:
1321:lwIP/src/core/dns.c ****           (entry->txid == txid)) {
 2014              		.loc 1 1321 46 view .LVU691
 2015 01be B6F82822 		ldrh	r2, [r6, #552]
 2016 01c2 9A42     		cmp	r2, r3
 2017 01c4 7FF444AF 		bne	.L163
1320:lwIP/src/core/dns.c ****       if ((entry->state == DNS_STATE_ASKING) &&
 2018              		.loc 1 1320 49 view .LVU692
 2019 01c8 B846     		mov	r8, r7
 2020 01ca 51E7     		b	.L161
 2021              	.LVL167:
 2022              	.L205:
1410:lwIP/src/core/dns.c **** #if LWIP_IPV4 && LWIP_IPV6
 2023              		.loc 1 1410 15 is_stmt 1 view .LVU693
1410:lwIP/src/core/dns.c **** #if LWIP_IPV4 && LWIP_IPV6
 2024              		.loc 1 1410 18 is_stmt 0 view .LVU694
 2025 01cc BDF81C10 		ldrh	r1, [sp, #28]
 2026 01d0 B1F5807F 		cmp	r1, #256
 2027 01d4 DED1     		bne	.L171
1410:lwIP/src/core/dns.c **** #if LWIP_IPV4 && LWIP_IPV6
 2028              		.loc 1 1410 56 discriminator 1 view .LVU695
 2029 01d6 B2F5806F 		cmp	r2, #1024
 2030 01da DBD1     		bne	.L171
 2031              	.LBB126:
1415:lwIP/src/core/dns.c ****                   /* read the IP address after answer resource record's header */
 2032              		.loc 1 1415 19 is_stmt 1 view .LVU696
1417:lwIP/src/core/dns.c ****                     goto ignore_packet; /* ignore this packet */
 2033              		.loc 1 1417 19 view .LVU697
1417:lwIP/src/core/dns.c ****                     goto ignore_packet; /* ignore this packet */
 2034              		.loc 1 1417 23 is_stmt 0 view .LVU698
 2035 01dc 0422     		movs	r2, #4
 2036 01de 03A9     		add	r1, sp, #12
 2037 01e0 2046     		mov	r0, r4
ARM GAS  /tmp/ccJm3wen.s 			page 90


 2038 01e2 FFF7FEFF 		bl	pbuf_copy_partial
 2039              	.LVL168:
1417:lwIP/src/core/dns.c ****                     goto ignore_packet; /* ignore this packet */
 2040              		.loc 1 1417 22 view .LVU699
 2041 01e6 0428     		cmp	r0, #4
 2042 01e8 7FF411AF 		bne	.L158
1420:lwIP/src/core/dns.c ****                   pbuf_free(p);
 2043              		.loc 1 1420 19 is_stmt 1 view .LVU700
 2044 01ec 4FF48872 		mov	r2, #272
 2045 01f0 039B     		ldr	r3, [sp, #12]
1421:lwIP/src/core/dns.c ****                   /* handle correct response */
 2046              		.loc 1 1421 19 is_stmt 0 view .LVU701
 2047 01f2 2046     		mov	r0, r4
 2048              	.LBB127:
 2049              	.LBB128:
1273:lwIP/src/core/dns.c ****     entry->ttl = DNS_MAX_TTL;
 2050              		.loc 1 1273 6 view .LVU702
 2051 01f4 244D     		ldr	r5, .L206+4
 2052              	.LVL169:
1273:lwIP/src/core/dns.c ****     entry->ttl = DNS_MAX_TTL;
 2053              		.loc 1 1273 6 view .LVU703
 2054              	.LBE128:
 2055              	.LBE127:
1420:lwIP/src/core/dns.c ****                   pbuf_free(p);
 2056              		.loc 1 1420 19 view .LVU704
 2057 01f6 02FB08F8 		mul	r8, r2, r8
 2058 01fa 06EB0804 		add	r4, r6, r8
 2059              	.LVL170:
1420:lwIP/src/core/dns.c ****                   pbuf_free(p);
 2060              		.loc 1 1420 19 view .LVU705
 2061 01fe 6360     		str	r3, [r4, #4]
1421:lwIP/src/core/dns.c ****                   /* handle correct response */
 2062              		.loc 1 1421 19 is_stmt 1 view .LVU706
 2063 0200 FFF7FEFF 		bl	pbuf_free
 2064              	.LVL171:
1423:lwIP/src/core/dns.c ****                   return;
 2065              		.loc 1 1423 19 view .LVU707
 2066              	.LBB131:
 2067              	.LBI131:
 900:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** {
 2068              		.loc 2 900 31 view .LVU708
 2069              	.LBB132:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 2070              		.loc 2 903 3 view .LVU709
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 2071              		.loc 2 903 10 is_stmt 0 view .LVU710
 2072 0204 089A     		ldr	r2, [sp, #32]
 2073              	.LBE132:
 2074              	.LBE131:
 2075              	.LBB134:
 2076              	.LBB129:
1276:lwIP/src/core/dns.c **** 
 2077              		.loc 1 1276 3 view .LVU711
 2078 0206 0099     		ldr	r1, [sp]
1265:lwIP/src/core/dns.c **** 
 2079              		.loc 1 1265 16 view .LVU712
 2080 0208 4FF0030C 		mov	ip, #3
ARM GAS  /tmp/ccJm3wen.s 			page 91


 2081              	.LBE129:
 2082              	.LBE134:
 2083              	.LBB135:
 2084              	.LBB133:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 2085              		.loc 2 903 10 view .LVU713
 2086 020c 12BA     		rev	r2, r2
 2087              	.LVL172:
 903:STM32_XPD/CMSIS/Include/cmsis_gcc.h **** #else
 2088              		.loc 2 903 10 view .LVU714
 2089              	.LBE133:
 2090              	.LBE135:
 2091              	.LBB136:
 2092              	.LBI127:
1261:lwIP/src/core/dns.c **** {
 2093              		.loc 1 1261 1 is_stmt 1 view .LVU715
 2094              	.LBB130:
1263:lwIP/src/core/dns.c **** 
 2095              		.loc 1 1263 3 view .LVU716
1265:lwIP/src/core/dns.c **** 
 2096              		.loc 1 1265 3 view .LVU717
1276:lwIP/src/core/dns.c **** 
 2097              		.loc 1 1276 3 is_stmt 0 view .LVU718
 2098 020e 3846     		mov	r0, r7
 2099 0210 0431     		adds	r1, r1, #4
1265:lwIP/src/core/dns.c **** 
 2100              		.loc 1 1265 16 view .LVU719
 2101 0212 84F80AC0 		strb	ip, [r4, #10]
1267:lwIP/src/core/dns.c ****   ip_addr_debug_print_val(DNS_DEBUG, entry->ipaddr);
 2102              		.loc 1 1267 73 is_stmt 1 view .LVU720
1268:lwIP/src/core/dns.c ****   LWIP_DEBUGF(DNS_DEBUG, ("\n"));
 2103              		.loc 1 1268 52 view .LVU721
1269:lwIP/src/core/dns.c **** 
 2104              		.loc 1 1269 33 view .LVU722
1272:lwIP/src/core/dns.c ****   if (entry->ttl > DNS_MAX_TTL) {
 2105              		.loc 1 1272 3 view .LVU723
1273:lwIP/src/core/dns.c ****     entry->ttl = DNS_MAX_TTL;
 2106              		.loc 1 1273 3 view .LVU724
1272:lwIP/src/core/dns.c ****   if (entry->ttl > DNS_MAX_TTL) {
 2107              		.loc 1 1272 14 is_stmt 0 view .LVU725
 2108 0216 AA42     		cmp	r2, r5
1276:lwIP/src/core/dns.c **** 
 2109              		.loc 1 1276 3 view .LVU726
 2110 0218 3144     		add	r1, r1, r6
1272:lwIP/src/core/dns.c ****   if (entry->ttl > DNS_MAX_TTL) {
 2111              		.loc 1 1272 14 view .LVU727
 2112 021a 28BF     		it	cs
 2113 021c 2A46     		movcs	r2, r5
 2114              	.LVL173:
1272:lwIP/src/core/dns.c ****   if (entry->ttl > DNS_MAX_TTL) {
 2115              		.loc 1 1272 14 view .LVU728
 2116 021e 46F80820 		str	r2, [r6, r8]
1276:lwIP/src/core/dns.c **** 
 2117              		.loc 1 1276 3 is_stmt 1 view .LVU729
 2118 0222 FFF7FEFF 		bl	dns_call_found
 2119              	.LVL174:
1278:lwIP/src/core/dns.c ****     /* RFC 883, page 29: "Zero values are
ARM GAS  /tmp/ccJm3wen.s 			page 92


 2120              		.loc 1 1278 3 view .LVU730
1278:lwIP/src/core/dns.c ****     /* RFC 883, page 29: "Zero values are
 2121              		.loc 1 1278 6 is_stmt 0 view .LVU731
 2122 0226 56F80830 		ldr	r3, [r6, r8]
 2123 022a 002B     		cmp	r3, #0
 2124 022c 7FF4F2AE 		bne	.L156
1284:lwIP/src/core/dns.c ****       entry->state = DNS_STATE_UNUSED;
 2125              		.loc 1 1284 5 is_stmt 1 view .LVU732
1284:lwIP/src/core/dns.c ****       entry->state = DNS_STATE_UNUSED;
 2126              		.loc 1 1284 8 is_stmt 0 view .LVU733
 2127 0230 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 2128 0232 032A     		cmp	r2, #3
 2129 0234 7FF4EEAE 		bne	.L156
1285:lwIP/src/core/dns.c ****     }
 2130              		.loc 1 1285 7 is_stmt 1 view .LVU734
1285:lwIP/src/core/dns.c ****     }
 2131              		.loc 1 1285 20 is_stmt 0 view .LVU735
 2132 0238 A372     		strb	r3, [r4, #10]
 2133              	.LVL175:
1285:lwIP/src/core/dns.c ****     }
 2134              		.loc 1 1285 20 view .LVU736
 2135              	.LBE130:
 2136              	.LBE136:
1424:lwIP/src/core/dns.c ****                 }
 2137              		.loc 1 1424 19 is_stmt 1 view .LVU737
 2138 023a EBE6     		b	.L156
 2139              	.LVL176:
 2140              	.L168:
1424:lwIP/src/core/dns.c ****                 }
 2141              		.loc 1 1424 19 is_stmt 0 view .LVU738
 2142              	.LBE126:
1472:lwIP/src/core/dns.c ****         }
 2143              		.loc 1 1472 89 is_stmt 1 view .LVU739
1475:lwIP/src/core/dns.c ****         dns_call_found(i, NULL);
 2144              		.loc 1 1475 9 view .LVU740
 2145 023c 2046     		mov	r0, r4
 2146 023e FFF7FEFF 		bl	pbuf_free
 2147              	.LVL177:
1476:lwIP/src/core/dns.c ****         dns_table[i].state = DNS_STATE_UNUSED;
 2148              		.loc 1 1476 9 view .LVU741
 2149 0242 3846     		mov	r0, r7
 2150 0244 0021     		movs	r1, #0
 2151 0246 FFF7FEFF 		bl	dns_call_found
 2152              	.LVL178:
1477:lwIP/src/core/dns.c ****         return;
 2153              		.loc 1 1477 9 view .LVU742
1477:lwIP/src/core/dns.c ****         return;
 2154              		.loc 1 1477 28 is_stmt 0 view .LVU743
 2155 024a 4FF48873 		mov	r3, #272
 2156 024e 0022     		movs	r2, #0
 2157 0250 03FB0866 		mla	r6, r3, r8, r6
 2158 0254 B272     		strb	r2, [r6, #10]
1478:lwIP/src/core/dns.c ****       }
 2159              		.loc 1 1478 9 is_stmt 1 view .LVU744
 2160 0256 DDE6     		b	.L156
 2161              	.LVL179:
 2162              	.L164:
ARM GAS  /tmp/ccJm3wen.s 			page 93


1376:lwIP/src/core/dns.c **** 
 2163              		.loc 1 1376 86 view .LVU745
1381:lwIP/src/core/dns.c ****             /* avoid retrying the same server */
 2164              		.loc 1 1381 11 view .LVU746
 2165              	.LBB137:
 2166              	.LBI137:
1148:lwIP/src/core/dns.c **** {
 2167              		.loc 1 1148 1 view .LVU747
 2168              	.LBB138:
1150:lwIP/src/core/dns.c **** 
 2169              		.loc 1 1150 3 view .LVU748
1152:lwIP/src/core/dns.c ****     if ((pentry->server_idx + 1 < DNS_MAX_SERVERS) && !ip_addr_isany_val(dns_servers[pentry->server
 2170              		.loc 1 1152 3 view .LVU749
1153:lwIP/src/core/dns.c ****       ret = 1;
 2171              		.loc 1 1153 5 view .LVU750
1153:lwIP/src/core/dns.c ****       ret = 1;
 2172              		.loc 1 1153 16 is_stmt 0 view .LVU751
 2173 0258 4FF48873 		mov	r3, #272
 2174              	.LVL180:
1153:lwIP/src/core/dns.c ****       ret = 1;
 2175              		.loc 1 1153 16 view .LVU752
 2176 025c 03FB0863 		mla	r3, r3, r8, r6
1153:lwIP/src/core/dns.c ****       ret = 1;
 2177              		.loc 1 1153 8 view .LVU753
 2178 0260 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 2179 0262 002B     		cmp	r3, #0
 2180 0264 EAD1     		bne	.L168
 2181              	.LBB139:
 2182              	.LBI139:
1148:lwIP/src/core/dns.c **** {
 2183              		.loc 1 1148 1 is_stmt 1 view .LVU754
 2184              	.LVL181:
 2185              	.LBB140:
1153:lwIP/src/core/dns.c ****       ret = 1;
 2186              		.loc 1 1153 52 is_stmt 0 view .LVU755
 2187 0266 D9F80430 		ldr	r3, [r9, #4]
 2188 026a 002B     		cmp	r3, #0
 2189 026c E6D0     		beq	.L168
1154:lwIP/src/core/dns.c ****     }
 2190              		.loc 1 1154 7 is_stmt 1 view .LVU756
 2191              	.LVL182:
1158:lwIP/src/core/dns.c **** }
 2192              		.loc 1 1158 3 view .LVU757
1158:lwIP/src/core/dns.c **** }
 2193              		.loc 1 1158 3 is_stmt 0 view .LVU758
 2194              	.LBE140:
 2195              	.LBE139:
1158:lwIP/src/core/dns.c **** }
 2196              		.loc 1 1158 3 is_stmt 1 view .LVU759
1158:lwIP/src/core/dns.c **** }
 2197              		.loc 1 1158 3 is_stmt 0 view .LVU760
 2198              	.LBE138:
 2199              	.LBE137:
1383:lwIP/src/core/dns.c ****             entry->tmr     = 1;
 2200              		.loc 1 1383 13 is_stmt 1 view .LVU761
1384:lwIP/src/core/dns.c **** 
 2201              		.loc 1 1384 13 view .LVU762
ARM GAS  /tmp/ccJm3wen.s 			page 94


1384:lwIP/src/core/dns.c **** 
 2202              		.loc 1 1384 28 is_stmt 0 view .LVU763
 2203 026e 4FF48873 		mov	r3, #272
 2204 0272 40F20132 		movw	r2, #769
1387:lwIP/src/core/dns.c **** 
 2205              		.loc 1 1387 13 view .LVU764
 2206 0276 3846     		mov	r0, r7
1384:lwIP/src/core/dns.c **** 
 2207              		.loc 1 1384 28 view .LVU765
 2208 0278 03FB0866 		mla	r6, r3, r8, r6
 2209 027c B281     		strh	r2, [r6, #12]	@ movhi
1387:lwIP/src/core/dns.c **** 
 2210              		.loc 1 1387 13 is_stmt 1 view .LVU766
 2211 027e FFF7FEFF 		bl	dns_check_entry
 2212              	.LVL183:
1389:lwIP/src/core/dns.c ****           }
 2213              		.loc 1 1389 13 view .LVU767
 2214 0282 C4E6     		b	.L158
 2215              	.L207:
 2216              		.align	2
 2217              	.L206:
 2218 0284 00000000 		.word	.LANCHOR0
 2219 0288 803A0900 		.word	604800
 2220 028c 00000000 		.word	.LANCHOR3
 2221              	.LBE153:
 2222              		.cfi_endproc
 2223              	.LFE126:
 2225              		.section	.text.dns_init,"ax",%progbits
 2226              		.align	1
 2227              		.p2align 2,,3
 2228              		.global	dns_init
 2229              		.syntax unified
 2230              		.thumb
 2231              		.thumb_func
 2232              		.fpu fpv4-sp-d16
 2234              	dns_init:
 2235              	.LFB105:
 318:lwIP/src/core/dns.c **** #ifdef DNS_SERVER_ADDRESS
 2236              		.loc 1 318 1 view -0
 2237              		.cfi_startproc
 2238              		@ args = 0, pretend = 0, frame = 0
 2239              		@ frame_needed = 0, uses_anonymous_args = 0
 326:lwIP/src/core/dns.c ****               sizeof(struct dns_query) == SIZEOF_DNS_QUERY);
 2240              		.loc 1 326 3 view .LVU769
 326:lwIP/src/core/dns.c ****               sizeof(struct dns_query) == SIZEOF_DNS_QUERY);
 2241              		.loc 1 326 3 view .LVU770
 326:lwIP/src/core/dns.c ****               sizeof(struct dns_query) == SIZEOF_DNS_QUERY);
 2242              		.loc 1 326 3 view .LVU771
 328:lwIP/src/core/dns.c ****               sizeof(struct dns_answer) <= SIZEOF_DNS_ANSWER_ASSERT);
 2243              		.loc 1 328 3 view .LVU772
 328:lwIP/src/core/dns.c ****               sizeof(struct dns_answer) <= SIZEOF_DNS_ANSWER_ASSERT);
 2244              		.loc 1 328 3 view .LVU773
 328:lwIP/src/core/dns.c ****               sizeof(struct dns_answer) <= SIZEOF_DNS_ANSWER_ASSERT);
 2245              		.loc 1 328 3 view .LVU774
 331:lwIP/src/core/dns.c **** 
 2246              		.loc 1 331 55 view .LVU775
 351:lwIP/src/core/dns.c **** #endif
ARM GAS  /tmp/ccJm3wen.s 			page 95


 2247              		.loc 1 351 3 view .LVU776
 2248              	.LBB157:
 2249              	.LBI157:
 405:lwIP/src/core/dns.c **** {
 2250              		.loc 1 405 1 view .LVU777
 2251              	.LBB158:
 433:lwIP/src/core/dns.c ****     struct udp_pcb *pcb = udp_new_ip_type(IPADDR_TYPE_ANY);
 2252              		.loc 1 433 5 view .LVU778
 2253              	.LVL184:
 434:lwIP/src/core/dns.c **** 
 2254              		.loc 1 434 5 view .LVU779
 2255              	.LBE158:
 2256              	.LBE157:
 318:lwIP/src/core/dns.c **** #ifdef DNS_SERVER_ADDRESS
 2257              		.loc 1 318 1 is_stmt 0 view .LVU780
 2258 0000 10B5     		push	{r4, lr}
 2259              	.LCFI23:
 2260              		.cfi_def_cfa_offset 8
 2261              		.cfi_offset 4, -8
 2262              		.cfi_offset 14, -4
 2263              	.LBB162:
 2264              	.LBB159:
 434:lwIP/src/core/dns.c **** 
 2265              		.loc 1 434 27 view .LVU781
 2266 0002 2E20     		movs	r0, #46
 2267 0004 FFF7FEFF 		bl	udp_new_ip_type
 2268              	.LVL185:
 436:lwIP/src/core/dns.c ****       err = udp_bind(pcb, IP_ANY_TYPE, DNS_SERVER_PORT);
 2269              		.loc 1 436 5 is_stmt 1 view .LVU782
 436:lwIP/src/core/dns.c ****       err = udp_bind(pcb, IP_ANY_TYPE, DNS_SERVER_PORT);
 2270              		.loc 1 436 8 is_stmt 0 view .LVU783
 2271 0008 88B1     		cbz	r0, .L208
 437:lwIP/src/core/dns.c ****       if (ERR_OK == err) {
 2272              		.loc 1 437 7 is_stmt 1 view .LVU784
 437:lwIP/src/core/dns.c ****       if (ERR_OK == err) {
 2273              		.loc 1 437 13 is_stmt 0 view .LVU785
 2274 000a 3522     		movs	r2, #53
 2275 000c 0849     		ldr	r1, .L212
 2276 000e 0446     		mov	r4, r0
 2277 0010 FFF7FEFF 		bl	udp_bind
 2278              	.LVL186:
 438:lwIP/src/core/dns.c ****         udp_recv(pcb, dns_server_recv, NULL);
 2279              		.loc 1 438 7 is_stmt 1 view .LVU786
 438:lwIP/src/core/dns.c ****         udp_recv(pcb, dns_server_recv, NULL);
 2280              		.loc 1 438 10 is_stmt 0 view .LVU787
 2281 0014 30B9     		cbnz	r0, .L210
 439:lwIP/src/core/dns.c ****       } else {
 2282              		.loc 1 439 9 is_stmt 1 view .LVU788
 2283 0016 0246     		mov	r2, r0
 2284 0018 0649     		ldr	r1, .L212+4
 2285 001a 2046     		mov	r0, r4
 2286              	.LVL187:
 439:lwIP/src/core/dns.c ****       } else {
 2287              		.loc 1 439 9 is_stmt 0 view .LVU789
 2288              	.LBE159:
 2289              	.LBE162:
 353:lwIP/src/core/dns.c **** 
ARM GAS  /tmp/ccJm3wen.s 			page 96


 2290              		.loc 1 353 1 view .LVU790
 2291 001c BDE81040 		pop	{r4, lr}
 2292              	.LCFI24:
 2293              		.cfi_remember_state
 2294              		.cfi_restore 14
 2295              		.cfi_restore 4
 2296              		.cfi_def_cfa_offset 0
 2297              	.LVL188:
 2298              	.LBB163:
 2299              	.LBB160:
 439:lwIP/src/core/dns.c ****       } else {
 2300              		.loc 1 439 9 view .LVU791
 2301 0020 FFF7FEBF 		b	udp_recv
 2302              	.LVL189:
 2303              	.L210:
 2304              	.LCFI25:
 2305              		.cfi_restore_state
 441:lwIP/src/core/dns.c ****       }
 2306              		.loc 1 441 9 is_stmt 1 view .LVU792
 2307 0024 2046     		mov	r0, r4
 2308              	.LVL190:
 441:lwIP/src/core/dns.c ****       }
 2309              		.loc 1 441 9 is_stmt 0 view .LVU793
 2310              	.LBE160:
 2311              	.LBE163:
 353:lwIP/src/core/dns.c **** 
 2312              		.loc 1 353 1 view .LVU794
 2313 0026 BDE81040 		pop	{r4, lr}
 2314              	.LCFI26:
 2315              		.cfi_remember_state
 2316              		.cfi_restore 14
 2317              		.cfi_restore 4
 2318              		.cfi_def_cfa_offset 0
 2319              	.LVL191:
 2320              	.LBB164:
 2321              	.LBB161:
 441:lwIP/src/core/dns.c ****       }
 2322              		.loc 1 441 9 view .LVU795
 2323 002a FFF7FEBF 		b	udp_remove
 2324              	.LVL192:
 2325              	.L208:
 2326              	.LCFI27:
 2327              		.cfi_restore_state
 441:lwIP/src/core/dns.c ****       }
 2328              		.loc 1 441 9 view .LVU796
 2329              	.LBE161:
 2330              	.LBE164:
 353:lwIP/src/core/dns.c **** 
 2331              		.loc 1 353 1 view .LVU797
 2332 002e 10BD     		pop	{r4, pc}
 2333              	.L213:
 2334              		.align	2
 2335              	.L212:
 2336 0030 00000000 		.word	ip_addr_any
 2337 0034 00000000 		.word	dns_server_recv
 2338              		.cfi_endproc
 2339              	.LFE105:
ARM GAS  /tmp/ccJm3wen.s 			page 97


 2341              		.section	.text.dns_setserver,"ax",%progbits
 2342              		.align	1
 2343              		.p2align 2,,3
 2344              		.global	dns_setserver
 2345              		.syntax unified
 2346              		.thumb
 2347              		.thumb_func
 2348              		.fpu fpv4-sp-d16
 2350              	dns_setserver:
 2351              	.LVL193:
 2352              	.LFB106:
 364:lwIP/src/core/dns.c ****   if (numdns < DNS_MAX_SERVERS) {
 2353              		.loc 1 364 1 is_stmt 1 view -0
 2354              		.cfi_startproc
 2355              		@ args = 0, pretend = 0, frame = 0
 2356              		@ frame_needed = 0, uses_anonymous_args = 0
 2357              		@ link register save eliminated.
 365:lwIP/src/core/dns.c ****     if (dnsserver != NULL) {
 2358              		.loc 1 365 3 view .LVU799
 365:lwIP/src/core/dns.c ****     if (dnsserver != NULL) {
 2359              		.loc 1 365 6 is_stmt 0 view .LVU800
 2360 0000 0128     		cmp	r0, #1
 2361 0002 00D9     		bls	.L217
 372:lwIP/src/core/dns.c **** 
 2362              		.loc 1 372 1 view .LVU801
 2363 0004 7047     		bx	lr
 2364              	.L217:
 366:lwIP/src/core/dns.c ****       dns_servers[numdns] = (*dnsserver);
 2365              		.loc 1 366 5 is_stmt 1 view .LVU802
 366:lwIP/src/core/dns.c ****       dns_servers[numdns] = (*dnsserver);
 2366              		.loc 1 366 8 is_stmt 0 view .LVU803
 2367 0006 21B1     		cbz	r1, .L216
 367:lwIP/src/core/dns.c ****     } else {
 2368              		.loc 1 367 7 is_stmt 1 view .LVU804
 367:lwIP/src/core/dns.c ****     } else {
 2369              		.loc 1 367 27 is_stmt 0 view .LVU805
 2370 0008 0A68     		ldr	r2, [r1]
 2371 000a 054B     		ldr	r3, .L218
 2372 000c 43F82020 		str	r2, [r3, r0, lsl #2]
 2373 0010 7047     		bx	lr
 2374              	.L216:
 369:lwIP/src/core/dns.c ****     }
 2375              		.loc 1 369 7 is_stmt 1 view .LVU806
 369:lwIP/src/core/dns.c ****     }
 2376              		.loc 1 369 27 is_stmt 0 view .LVU807
 2377 0012 044A     		ldr	r2, .L218+4
 2378 0014 024B     		ldr	r3, .L218
 2379 0016 1268     		ldr	r2, [r2]
 2380 0018 43F82020 		str	r2, [r3, r0, lsl #2]
 372:lwIP/src/core/dns.c **** 
 2381              		.loc 1 372 1 view .LVU808
 2382 001c 7047     		bx	lr
 2383              	.L219:
 2384 001e 00BF     		.align	2
 2385              	.L218:
 2386 0020 00000000 		.word	.LANCHOR3
 2387 0024 00000000 		.word	ip_addr_any
ARM GAS  /tmp/ccJm3wen.s 			page 98


 2388              		.cfi_endproc
 2389              	.LFE106:
 2391              		.section	.text.dns_getserver,"ax",%progbits
 2392              		.align	1
 2393              		.p2align 2,,3
 2394              		.global	dns_getserver
 2395              		.syntax unified
 2396              		.thumb
 2397              		.thumb_func
 2398              		.fpu fpv4-sp-d16
 2400              	dns_getserver:
 2401              	.LVL194:
 2402              	.LFB107:
 384:lwIP/src/core/dns.c ****   if (numdns < DNS_MAX_SERVERS) {
 2403              		.loc 1 384 1 is_stmt 1 view -0
 2404              		.cfi_startproc
 2405              		@ args = 0, pretend = 0, frame = 0
 2406              		@ frame_needed = 0, uses_anonymous_args = 0
 2407              		@ link register save eliminated.
 385:lwIP/src/core/dns.c ****     return &dns_servers[numdns];
 2408              		.loc 1 385 3 view .LVU810
 385:lwIP/src/core/dns.c ****     return &dns_servers[numdns];
 2409              		.loc 1 385 6 is_stmt 0 view .LVU811
 2410 0000 0128     		cmp	r0, #1
 2411 0002 01D9     		bls	.L223
 388:lwIP/src/core/dns.c ****   }
 2412              		.loc 1 388 12 view .LVU812
 2413 0004 0248     		ldr	r0, .L224
 2414              	.LVL195:
 390:lwIP/src/core/dns.c **** 
 2415              		.loc 1 390 1 view .LVU813
 2416 0006 7047     		bx	lr
 2417              	.LVL196:
 2418              	.L223:
 386:lwIP/src/core/dns.c ****   } else {
 2419              		.loc 1 386 5 is_stmt 1 view .LVU814
 386:lwIP/src/core/dns.c ****   } else {
 2420              		.loc 1 386 12 is_stmt 0 view .LVU815
 2421 0008 024B     		ldr	r3, .L224+4
 2422 000a 03EB8000 		add	r0, r3, r0, lsl #2
 2423              	.LVL197:
 386:lwIP/src/core/dns.c ****   } else {
 2424              		.loc 1 386 12 view .LVU816
 2425 000e 7047     		bx	lr
 2426              	.L225:
 2427              		.align	2
 2428              	.L224:
 2429 0010 00000000 		.word	ip_addr_any
 2430 0014 00000000 		.word	.LANCHOR3
 2431              		.cfi_endproc
 2432              	.LFE107:
 2434              		.section	.text.dns_tmr,"ax",%progbits
 2435              		.align	1
 2436              		.p2align 2,,3
 2437              		.global	dns_tmr
 2438              		.syntax unified
 2439              		.thumb
ARM GAS  /tmp/ccJm3wen.s 			page 99


 2440              		.thumb_func
 2441              		.fpu fpv4-sp-d16
 2443              	dns_tmr:
 2444              	.LFB108:
 398:lwIP/src/core/dns.c ****   LWIP_DEBUGF(DNS_DEBUG, ("dns_tmr: dns_check_entries\n"));
 2445              		.loc 1 398 1 is_stmt 1 view -0
 2446              		.cfi_startproc
 2447              		@ args = 0, pretend = 0, frame = 0
 2448              		@ frame_needed = 0, uses_anonymous_args = 0
 399:lwIP/src/core/dns.c ****   dns_check_entries();
 2449              		.loc 1 399 59 view .LVU818
 400:lwIP/src/core/dns.c **** }
 2450              		.loc 1 400 3 view .LVU819
 2451              	.LBB175:
 2452              	.LBI175:
1248:lwIP/src/core/dns.c **** {
 2453              		.loc 1 1248 1 view .LVU820
 2454              	.LBB176:
1250:lwIP/src/core/dns.c **** 
 2455              		.loc 1 1250 3 view .LVU821
1252:lwIP/src/core/dns.c ****     dns_check_entry(i);
 2456              		.loc 1 1252 3 view .LVU822
 2457              	.LVL198:
1252:lwIP/src/core/dns.c ****     dns_check_entry(i);
 2458              		.loc 1 1252 15 view .LVU823
 2459              	.LBE176:
 2460              	.LBE175:
 398:lwIP/src/core/dns.c ****   LWIP_DEBUGF(DNS_DEBUG, ("dns_tmr: dns_check_entries\n"));
 2461              		.loc 1 398 1 is_stmt 0 view .LVU824
 2462 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2463              	.LCFI28:
 2464              		.cfi_def_cfa_offset 32
 2465              		.cfi_offset 4, -32
 2466              		.cfi_offset 5, -28
 2467              		.cfi_offset 6, -24
 2468              		.cfi_offset 7, -20
 2469              		.cfi_offset 8, -16
 2470              		.cfi_offset 9, -12
 2471              		.cfi_offset 10, -8
 2472              		.cfi_offset 14, -4
 2473 0004 3C4E     		ldr	r6, .L262
 398:lwIP/src/core/dns.c ****   LWIP_DEBUGF(DNS_DEBUG, ("dns_tmr: dns_check_entries\n"));
 2474              		.loc 1 398 1 view .LVU825
 2475 0006 0024     		movs	r4, #0
 2476              	.LBB201:
 2477              	.LBB199:
 2478              	.LBB177:
 2479              	.LBB178:
1182:lwIP/src/core/dns.c ****       entry->server_idx = 0;
 2480              		.loc 1 1182 20 view .LVU826
 2481 0008 DFF8F480 		ldr	r8, .L262+8
 2482 000c 3546     		mov	r5, r6
1232:lwIP/src/core/dns.c ****       }
 2483              		.loc 1 1232 22 view .LVU827
 2484 000e A146     		mov	r9, r4
 2485              	.LBB179:
 2486              	.LBB180:
ARM GAS  /tmp/ccJm3wen.s 			page 100


 2487              	.LBB181:
 2488              	.LBB182:
1153:lwIP/src/core/dns.c ****       ret = 1;
 2489              		.loc 1 1153 56 view .LVU828
 2490 0010 DFF8F0A0 		ldr	r10, .L262+12
 2491              	.LVL199:
 2492              	.L245:
1153:lwIP/src/core/dns.c ****       ret = 1;
 2493              		.loc 1 1153 56 view .LVU829
 2494 0014 AB7A     		ldrb	r3, [r5, #10]	@ zero_extendqisi2
 2495 0016 E7B2     		uxtb	r7, r4
 2496              	.LVL200:
1153:lwIP/src/core/dns.c ****       ret = 1;
 2497              		.loc 1 1153 56 view .LVU830
 2498              	.LBE182:
 2499              	.LBE181:
 2500              	.LBE180:
 2501              	.LBE179:
 2502              	.LBE178:
 2503              	.LBE177:
1253:lwIP/src/core/dns.c ****   }
 2504              		.loc 1 1253 5 is_stmt 1 view .LVU831
 2505              	.LBB195:
 2506              	.LBI177:
1171:lwIP/src/core/dns.c **** {
 2507              		.loc 1 1171 1 view .LVU832
 2508              	.LBB191:
1173:lwIP/src/core/dns.c ****   struct dns_table_entry *entry = &dns_table[i];
 2509              		.loc 1 1173 3 view .LVU833
1174:lwIP/src/core/dns.c **** 
 2510              		.loc 1 1174 3 view .LVU834
1176:lwIP/src/core/dns.c **** 
 2511              		.loc 1 1176 3 view .LVU835
1176:lwIP/src/core/dns.c **** 
 2512              		.loc 1 1176 3 view .LVU836
1176:lwIP/src/core/dns.c **** 
 2513              		.loc 1 1176 3 view .LVU837
1178:lwIP/src/core/dns.c ****     case DNS_STATE_NEW:
 2514              		.loc 1 1178 3 view .LVU838
 2515 0018 032B     		cmp	r3, #3
 2516 001a 68D8     		bhi	.L227
 2517 001c DFE803F0 		tbb	[pc, r3]
 2518              	.L229:
 2519 0020 11       		.byte	(.L232-.L229)/2
 2520 0021 1C       		.byte	(.L250-.L229)/2
 2521 0022 02       		.byte	(.L230-.L229)/2
 2522 0023 3A       		.byte	(.L228-.L229)/2
 2523              		.p2align 1
 2524              	.L230:
1195:lwIP/src/core/dns.c ****         if (++entry->retries == DNS_MAX_RETRIES) {
 2525              		.loc 1 1195 7 view .LVU839
1195:lwIP/src/core/dns.c ****         if (++entry->retries == DNS_MAX_RETRIES) {
 2526              		.loc 1 1195 11 is_stmt 0 view .LVU840
 2527 0024 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
 2528 0026 013B     		subs	r3, r3, #1
 2529 0028 DBB2     		uxtb	r3, r3
1195:lwIP/src/core/dns.c ****         if (++entry->retries == DNS_MAX_RETRIES) {
ARM GAS  /tmp/ccJm3wen.s 			page 101


 2530              		.loc 1 1195 10 view .LVU841
 2531 002a 2B73     		strb	r3, [r5, #12]
 2532 002c 4BB9     		cbnz	r3, .L232
1196:lwIP/src/core/dns.c ****           if (dns_backupserver_available(entry)
 2533              		.loc 1 1196 9 is_stmt 1 view .LVU842
1196:lwIP/src/core/dns.c ****           if (dns_backupserver_available(entry)
 2534              		.loc 1 1196 13 is_stmt 0 view .LVU843
 2535 002e 6B7B     		ldrb	r3, [r5, #13]	@ zero_extendqisi2
 2536 0030 0133     		adds	r3, r3, #1
 2537 0032 DBB2     		uxtb	r3, r3
1196:lwIP/src/core/dns.c ****           if (dns_backupserver_available(entry)
 2538              		.loc 1 1196 12 view .LVU844
 2539 0034 042B     		cmp	r3, #4
 2540 0036 6B73     		strb	r3, [r5, #13]
 2541 0038 48D0     		beq	.L256
1216:lwIP/src/core/dns.c ****         }
 2542              		.loc 1 1216 11 is_stmt 1 view .LVU845
1216:lwIP/src/core/dns.c ****         }
 2543              		.loc 1 1216 22 is_stmt 0 view .LVU846
 2544 003a 2B73     		strb	r3, [r5, #12]
 2545              	.L240:
1220:lwIP/src/core/dns.c ****         if (err != ERR_OK) {
 2546              		.loc 1 1220 9 is_stmt 1 view .LVU847
1220:lwIP/src/core/dns.c ****         if (err != ERR_OK) {
 2547              		.loc 1 1220 15 is_stmt 0 view .LVU848
 2548 003c 3846     		mov	r0, r7
 2549 003e FFF7FEFF 		bl	dns_send
 2550              	.LVL201:
1221:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG | LWIP_DBG_LEVEL_WARNING,
 2551              		.loc 1 1221 9 is_stmt 1 view .LVU849
 2552              	.L232:
1221:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG | LWIP_DBG_LEVEL_WARNING,
 2553              		.loc 1 1221 9 is_stmt 0 view .LVU850
 2554              	.LBE191:
 2555              	.LBE195:
1252:lwIP/src/core/dns.c ****     dns_check_entry(i);
 2556              		.loc 1 1252 35 is_stmt 1 view .LVU851
1252:lwIP/src/core/dns.c ****     dns_check_entry(i);
 2557              		.loc 1 1252 15 view .LVU852
 2558 0042 0134     		adds	r4, r4, #1
 2559              	.LVL202:
1252:lwIP/src/core/dns.c ****     dns_check_entry(i);
 2560              		.loc 1 1252 15 is_stmt 0 view .LVU853
 2561 0044 05F58875 		add	r5, r5, #272
1252:lwIP/src/core/dns.c ****     dns_check_entry(i);
 2562              		.loc 1 1252 3 view .LVU854
 2563 0048 042C     		cmp	r4, #4
 2564 004a E3D1     		bne	.L245
 2565              	.LVL203:
 2566              	.L261:
1252:lwIP/src/core/dns.c ****     dns_check_entry(i);
 2567              		.loc 1 1252 3 view .LVU855
 2568              	.LBE199:
 2569              	.LBE201:
 401:lwIP/src/core/dns.c **** 
 2570              		.loc 1 401 1 view .LVU856
 2571 004c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
ARM GAS  /tmp/ccJm3wen.s 			page 102


 2572              	.LVL204:
 2573              	.L260:
 2574              	.LBB202:
 2575              	.LBB200:
 2576              	.LBB196:
 2577              	.LBB192:
 2578              	.LBB186:
 2579              	.LBB187:
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 2580              		.loc 1 1134 50 view .LVU857
 2581 0050 B6F83823 		ldrh	r2, [r6, #824]
 2582 0054 9A42     		cmp	r2, r3
 2583 0056 11D1     		bne	.L236
 2584              	.LVL205:
 2585              	.L250:
1126:lwIP/src/core/dns.c ****   u8_t i;
 2586              		.loc 1 1126 3 is_stmt 1 view .LVU858
1127:lwIP/src/core/dns.c **** 
 2587              		.loc 1 1127 3 view .LVU859
1130:lwIP/src/core/dns.c **** 
 2588              		.loc 1 1130 3 view .LVU860
1130:lwIP/src/core/dns.c **** 
 2589              		.loc 1 1130 17 is_stmt 0 view .LVU861
 2590 0058 FFF7FEFF 		bl	rand
 2591              	.LVL206:
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 2592              		.loc 1 1133 35 is_stmt 1 view .LVU862
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 2593              		.loc 1 1133 15 view .LVU863
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 2594              		.loc 1 1134 5 view .LVU864
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 2595              		.loc 1 1133 35 view .LVU865
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 2596              		.loc 1 1133 15 view .LVU866
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 2597              		.loc 1 1134 5 view .LVU867
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 2598              		.loc 1 1133 35 view .LVU868
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 2599              		.loc 1 1133 15 view .LVU869
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 2600              		.loc 1 1134 5 view .LVU870
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 2601              		.loc 1 1134 8 is_stmt 0 view .LVU871
 2602 005c B27A     		ldrb	r2, [r6, #10]	@ zero_extendqisi2
1130:lwIP/src/core/dns.c **** 
 2603              		.loc 1 1130 8 view .LVU872
 2604 005e 83B2     		uxth	r3, r0
 2605              	.LVL207:
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 2606              		.loc 1 1133 3 is_stmt 1 view .LVU873
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 2607              		.loc 1 1133 15 view .LVU874
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 2608              		.loc 1 1134 5 view .LVU875
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
ARM GAS  /tmp/ccJm3wen.s 			page 103


 2609              		.loc 1 1134 8 is_stmt 0 view .LVU876
 2610 0060 022A     		cmp	r2, #2
 2611 0062 25D0     		beq	.L257
 2612              	.L233:
 2613 0064 96F81A21 		ldrb	r2, [r6, #282]	@ zero_extendqisi2
 2614 0068 022A     		cmp	r2, #2
 2615 006a 25D0     		beq	.L258
 2616              	.L234:
 2617 006c 96F82A22 		ldrb	r2, [r6, #554]	@ zero_extendqisi2
 2618 0070 022A     		cmp	r2, #2
 2619 0072 26D0     		beq	.L259
 2620              	.L235:
 2621 0074 96F83A23 		ldrb	r2, [r6, #826]	@ zero_extendqisi2
 2622 0078 022A     		cmp	r2, #2
 2623 007a E9D0     		beq	.L260
 2624              	.L236:
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 2625              		.loc 1 1133 35 is_stmt 1 view .LVU877
 2626              	.LVL208:
1133:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 2627              		.loc 1 1133 15 view .LVU878
1141:lwIP/src/core/dns.c **** }
 2628              		.loc 1 1141 3 view .LVU879
1141:lwIP/src/core/dns.c **** }
 2629              		.loc 1 1141 3 is_stmt 0 view .LVU880
 2630 007c 0134     		adds	r4, r4, #1
 2631              	.LVL209:
1141:lwIP/src/core/dns.c **** }
 2632              		.loc 1 1141 3 view .LVU881
 2633              	.LBE187:
 2634              	.LBE186:
1181:lwIP/src/core/dns.c ****       entry->state = DNS_STATE_ASKING;
 2635              		.loc 1 1181 19 view .LVU882
 2636 007e 2B81     		strh	r3, [r5, #8]	@ movhi
1182:lwIP/src/core/dns.c ****       entry->server_idx = 0;
 2637              		.loc 1 1182 7 is_stmt 1 view .LVU883
1183:lwIP/src/core/dns.c ****       entry->tmr = 1;
 2638              		.loc 1 1183 7 view .LVU884
1184:lwIP/src/core/dns.c ****       entry->retries = 0;
 2639              		.loc 1 1184 7 view .LVU885
1185:lwIP/src/core/dns.c **** 
 2640              		.loc 1 1185 7 view .LVU886
1182:lwIP/src/core/dns.c ****       entry->server_idx = 0;
 2641              		.loc 1 1182 20 is_stmt 0 view .LVU887
 2642 0080 C5F80A80 		str	r8, [r5, #10]	@ unaligned
1188:lwIP/src/core/dns.c ****       if (err != ERR_OK) {
 2643              		.loc 1 1188 7 is_stmt 1 view .LVU888
1188:lwIP/src/core/dns.c ****       if (err != ERR_OK) {
 2644              		.loc 1 1188 13 is_stmt 0 view .LVU889
 2645 0084 3846     		mov	r0, r7
 2646 0086 FFF7FEFF 		bl	dns_send
 2647              	.LVL210:
1189:lwIP/src/core/dns.c ****         LWIP_DEBUGF(DNS_DEBUG | LWIP_DBG_LEVEL_WARNING,
 2648              		.loc 1 1189 7 is_stmt 1 view .LVU890
1191:lwIP/src/core/dns.c ****       }
 2649              		.loc 1 1191 73 view .LVU891
1193:lwIP/src/core/dns.c ****     case DNS_STATE_ASKING:
ARM GAS  /tmp/ccJm3wen.s 			page 104


 2650              		.loc 1 1193 7 view .LVU892
1193:lwIP/src/core/dns.c ****     case DNS_STATE_ASKING:
 2651              		.loc 1 1193 7 is_stmt 0 view .LVU893
 2652              	.LBE192:
 2653              	.LBE196:
1252:lwIP/src/core/dns.c ****     dns_check_entry(i);
 2654              		.loc 1 1252 35 is_stmt 1 view .LVU894
1252:lwIP/src/core/dns.c ****     dns_check_entry(i);
 2655              		.loc 1 1252 15 view .LVU895
1252:lwIP/src/core/dns.c ****     dns_check_entry(i);
 2656              		.loc 1 1252 3 is_stmt 0 view .LVU896
 2657 008a 042C     		cmp	r4, #4
 2658 008c 05F58875 		add	r5, r5, #272
 2659 0090 C0D1     		bne	.L245
 2660 0092 DBE7     		b	.L261
 2661              	.LVL211:
 2662              	.L228:
 2663              	.LBB197:
 2664              	.LBB193:
1229:lwIP/src/core/dns.c ****         LWIP_DEBUGF(DNS_DEBUG, ("dns_check_entry: \"%s\": flush\n", entry->name));
 2665              		.loc 1 1229 7 is_stmt 1 view .LVU897
1229:lwIP/src/core/dns.c ****         LWIP_DEBUGF(DNS_DEBUG, ("dns_check_entry: \"%s\": flush\n", entry->name));
 2666              		.loc 1 1229 17 is_stmt 0 view .LVU898
 2667 0094 2B68     		ldr	r3, [r5]
1229:lwIP/src/core/dns.c ****         LWIP_DEBUGF(DNS_DEBUG, ("dns_check_entry: \"%s\": flush\n", entry->name));
 2668              		.loc 1 1229 10 view .LVU899
 2669 0096 1BB1     		cbz	r3, .L242
1229:lwIP/src/core/dns.c ****         LWIP_DEBUGF(DNS_DEBUG, ("dns_check_entry: \"%s\": flush\n", entry->name));
 2670              		.loc 1 1229 33 view .LVU900
 2671 0098 013B     		subs	r3, r3, #1
1229:lwIP/src/core/dns.c ****         LWIP_DEBUGF(DNS_DEBUG, ("dns_check_entry: \"%s\": flush\n", entry->name));
 2672              		.loc 1 1229 29 view .LVU901
 2673 009a 2B60     		str	r3, [r5]
 2674 009c 002B     		cmp	r3, #0
 2675 009e D0D1     		bne	.L232
 2676              	.L242:
1230:lwIP/src/core/dns.c ****         /* flush this entry, there cannot be any related pending entries in this state */
 2677              		.loc 1 1230 82 is_stmt 1 view .LVU902
1232:lwIP/src/core/dns.c ****       }
 2678              		.loc 1 1232 9 view .LVU903
 2679 00a0 0134     		adds	r4, r4, #1
 2680              	.LVL212:
1232:lwIP/src/core/dns.c ****       }
 2681              		.loc 1 1232 22 is_stmt 0 view .LVU904
 2682 00a2 85F80A90 		strb	r9, [r5, #10]
 2683              	.LVL213:
1232:lwIP/src/core/dns.c ****       }
 2684              		.loc 1 1232 22 view .LVU905
 2685              	.LBE193:
 2686              	.LBE197:
1252:lwIP/src/core/dns.c ****     dns_check_entry(i);
 2687              		.loc 1 1252 35 is_stmt 1 view .LVU906
1252:lwIP/src/core/dns.c ****     dns_check_entry(i);
 2688              		.loc 1 1252 15 view .LVU907
 2689 00a6 05F58875 		add	r5, r5, #272
1252:lwIP/src/core/dns.c ****     dns_check_entry(i);
 2690              		.loc 1 1252 3 is_stmt 0 view .LVU908
ARM GAS  /tmp/ccJm3wen.s 			page 105


 2691 00aa 042C     		cmp	r4, #4
 2692 00ac B2D1     		bne	.L245
 2693 00ae CDE7     		b	.L261
 2694              	.LVL214:
 2695              	.L257:
 2696              	.LBB198:
 2697              	.LBB194:
 2698              	.LBB189:
 2699              	.LBB188:
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 2700              		.loc 1 1134 50 view .LVU909
 2701 00b0 3289     		ldrh	r2, [r6, #8]
 2702 00b2 9A42     		cmp	r2, r3
 2703 00b4 D6D1     		bne	.L233
 2704 00b6 CFE7     		b	.L250
 2705              	.L258:
 2706 00b8 B6F81821 		ldrh	r2, [r6, #280]
 2707 00bc 9A42     		cmp	r2, r3
 2708 00be D5D1     		bne	.L234
 2709 00c0 CAE7     		b	.L250
 2710              	.L259:
 2711 00c2 B6F82822 		ldrh	r2, [r6, #552]
 2712 00c6 9A42     		cmp	r2, r3
 2713 00c8 D4D1     		bne	.L235
 2714 00ca C5E7     		b	.L250
 2715              	.LVL215:
 2716              	.L256:
1134:lwIP/src/core/dns.c ****         (dns_table[i].txid == txid)) {
 2717              		.loc 1 1134 50 view .LVU910
 2718              	.LBE188:
 2719              	.LBE189:
1197:lwIP/src/core/dns.c **** #if LWIP_DNS_SUPPORT_MDNS_QUERIES
 2720              		.loc 1 1197 11 is_stmt 1 view .LVU911
 2721              	.LBB190:
 2722              	.LBI179:
1148:lwIP/src/core/dns.c **** {
 2723              		.loc 1 1148 1 view .LVU912
 2724              	.LBB185:
1150:lwIP/src/core/dns.c **** 
 2725              		.loc 1 1150 3 view .LVU913
1152:lwIP/src/core/dns.c ****     if ((pentry->server_idx + 1 < DNS_MAX_SERVERS) && !ip_addr_isany_val(dns_servers[pentry->server
 2726              		.loc 1 1152 3 view .LVU914
1153:lwIP/src/core/dns.c ****       ret = 1;
 2727              		.loc 1 1153 5 view .LVU915
1153:lwIP/src/core/dns.c ****       ret = 1;
 2728              		.loc 1 1153 8 is_stmt 0 view .LVU916
 2729 00cc EA7A     		ldrb	r2, [r5, #11]	@ zero_extendqisi2
 2730 00ce 3AB9     		cbnz	r2, .L239
 2731              	.LBB184:
 2732              	.LBI181:
1148:lwIP/src/core/dns.c **** {
 2733              		.loc 1 1148 1 is_stmt 1 view .LVU917
 2734              	.LVL216:
 2735              	.LBB183:
1153:lwIP/src/core/dns.c ****       ret = 1;
 2736              		.loc 1 1153 52 is_stmt 0 view .LVU918
 2737 00d0 DAF80430 		ldr	r3, [r10, #4]
ARM GAS  /tmp/ccJm3wen.s 			page 106


 2738 00d4 23B1     		cbz	r3, .L239
1154:lwIP/src/core/dns.c ****     }
 2739              		.loc 1 1154 7 is_stmt 1 view .LVU919
 2740              	.LVL217:
1158:lwIP/src/core/dns.c **** }
 2741              		.loc 1 1158 3 view .LVU920
1158:lwIP/src/core/dns.c **** }
 2742              		.loc 1 1158 3 is_stmt 0 view .LVU921
 2743              	.LBE183:
 2744              	.LBE184:
1158:lwIP/src/core/dns.c **** }
 2745              		.loc 1 1158 3 is_stmt 1 view .LVU922
1158:lwIP/src/core/dns.c **** }
 2746              		.loc 1 1158 3 is_stmt 0 view .LVU923
 2747              	.LBE185:
 2748              	.LBE190:
1203:lwIP/src/core/dns.c ****             entry->tmr = 1;
 2749              		.loc 1 1203 13 is_stmt 1 view .LVU924
1203:lwIP/src/core/dns.c ****             entry->tmr = 1;
 2750              		.loc 1 1203 30 is_stmt 0 view .LVU925
 2751 00d6 0123     		movs	r3, #1
1205:lwIP/src/core/dns.c ****           } else {
 2752              		.loc 1 1205 28 view .LVU926
 2753 00d8 6A73     		strb	r2, [r5, #13]
1203:lwIP/src/core/dns.c ****             entry->tmr = 1;
 2754              		.loc 1 1203 30 view .LVU927
 2755 00da EB72     		strb	r3, [r5, #11]
1204:lwIP/src/core/dns.c ****             entry->retries = 0;
 2756              		.loc 1 1204 13 is_stmt 1 view .LVU928
1204:lwIP/src/core/dns.c ****             entry->retries = 0;
 2757              		.loc 1 1204 24 is_stmt 0 view .LVU929
 2758 00dc 2B73     		strb	r3, [r5, #12]
1205:lwIP/src/core/dns.c ****           } else {
 2759              		.loc 1 1205 13 is_stmt 1 view .LVU930
 2760 00de ADE7     		b	.L240
 2761              	.LVL218:
 2762              	.L239:
1207:lwIP/src/core/dns.c ****             /* call specified callback function if provided */
 2763              		.loc 1 1207 88 view .LVU931
1209:lwIP/src/core/dns.c ****             /* flush this entry */
 2764              		.loc 1 1209 13 view .LVU932
 2765 00e0 3846     		mov	r0, r7
 2766 00e2 0021     		movs	r1, #0
 2767 00e4 FFF7FEFF 		bl	dns_call_found
 2768              	.LVL219:
1211:lwIP/src/core/dns.c ****             break;
 2769              		.loc 1 1211 13 view .LVU933
1211:lwIP/src/core/dns.c ****             break;
 2770              		.loc 1 1211 26 is_stmt 0 view .LVU934
 2771 00e8 85F80A90 		strb	r9, [r5, #10]
1212:lwIP/src/core/dns.c ****           }
 2772              		.loc 1 1212 13 is_stmt 1 view .LVU935
 2773 00ec A9E7     		b	.L232
 2774              	.L227:
1239:lwIP/src/core/dns.c ****       break;
 2775              		.loc 1 1239 7 view .LVU936
1239:lwIP/src/core/dns.c ****       break;
ARM GAS  /tmp/ccJm3wen.s 			page 107


 2776              		.loc 1 1239 7 view .LVU937
1239:lwIP/src/core/dns.c ****       break;
 2777              		.loc 1 1239 7 view .LVU938
 2778 00ee 0348     		ldr	r0, .L262+4
 2779 00f0 FFF7FEFF 		bl	printf
 2780              	.LVL220:
 2781              	.L244:
1239:lwIP/src/core/dns.c ****       break;
 2782              		.loc 1 1239 7 view .LVU939
1239:lwIP/src/core/dns.c ****       break;
 2783              		.loc 1 1239 7 view .LVU940
1239:lwIP/src/core/dns.c ****       break;
 2784              		.loc 1 1239 7 view .LVU941
1239:lwIP/src/core/dns.c ****       break;
 2785              		.loc 1 1239 7 view .LVU942
1239:lwIP/src/core/dns.c ****       break;
 2786              		.loc 1 1239 7 view .LVU943
1239:lwIP/src/core/dns.c ****       break;
 2787              		.loc 1 1239 7 view .LVU944
 2788 00f4 FEE7     		b	.L244
 2789              	.L263:
 2790 00f6 00BF     		.align	2
 2791              	.L262:
 2792 00f8 00000000 		.word	.LANCHOR0
 2793 00fc 1C000000 		.word	.LC2
 2794 0100 02000100 		.word	65538
 2795 0104 00000000 		.word	.LANCHOR3
 2796              	.LBE194:
 2797              	.LBE198:
 2798              	.LBE200:
 2799              	.LBE202:
 2800              		.cfi_endproc
 2801              	.LFE108:
 2803              		.section	.text.dns_local_iterate,"ax",%progbits
 2804              		.align	1
 2805              		.p2align 2,,3
 2806              		.global	dns_local_iterate
 2807              		.syntax unified
 2808              		.thumb
 2809              		.thumb_func
 2810              		.fpu fpv4-sp-d16
 2812              	dns_local_iterate:
 2813              	.LVL221:
 2814              	.LFB110:
 457:lwIP/src/core/dns.c ****   size_t i;
 2815              		.loc 1 457 1 view -0
 2816              		.cfi_startproc
 2817              		@ args = 0, pretend = 0, frame = 0
 2818              		@ frame_needed = 0, uses_anonymous_args = 0
 458:lwIP/src/core/dns.c **** #if DNS_LOCAL_HOSTLIST_IS_DYNAMIC
 2819              		.loc 1 458 3 view .LVU946
 470:lwIP/src/core/dns.c ****     if (iterator_fn != NULL) {
 2820              		.loc 1 470 3 view .LVU947
 470:lwIP/src/core/dns.c ****     if (iterator_fn != NULL) {
 2821              		.loc 1 470 15 view .LVU948
 471:lwIP/src/core/dns.c ****       iterator_fn(local_hostlist_static[i].name, &local_hostlist_static[i].addr, iterator_arg);
 2822              		.loc 1 471 5 view .LVU949
ARM GAS  /tmp/ccJm3wen.s 			page 108


 471:lwIP/src/core/dns.c ****       iterator_fn(local_hostlist_static[i].name, &local_hostlist_static[i].addr, iterator_arg);
 2823              		.loc 1 471 8 is_stmt 0 view .LVU950
 2824 0000 40B1     		cbz	r0, .L270
 472:lwIP/src/core/dns.c ****     }
 2825              		.loc 1 472 7 is_stmt 1 view .LVU951
 2826 0002 0A46     		mov	r2, r1
 2827 0004 0449     		ldr	r1, .L273
 2828              	.LVL222:
 457:lwIP/src/core/dns.c ****   size_t i;
 2829              		.loc 1 457 1 is_stmt 0 view .LVU952
 2830 0006 08B5     		push	{r3, lr}
 2831              	.LCFI29:
 2832              		.cfi_def_cfa_offset 8
 2833              		.cfi_offset 3, -8
 2834              		.cfi_offset 14, -4
 2835 0008 0346     		mov	r3, r0
 472:lwIP/src/core/dns.c ****     }
 2836              		.loc 1 472 7 view .LVU953
 2837 000a 51F8040B 		ldr	r0, [r1], #4
 2838              	.LVL223:
 472:lwIP/src/core/dns.c ****     }
 2839              		.loc 1 472 7 view .LVU954
 2840 000e 9847     		blx	r3
 2841              	.LVL224:
 470:lwIP/src/core/dns.c ****     if (iterator_fn != NULL) {
 2842              		.loc 1 470 15 is_stmt 1 view .LVU955
 476:lwIP/src/core/dns.c **** }
 2843              		.loc 1 476 3 view .LVU956
 477:lwIP/src/core/dns.c **** 
 2844              		.loc 1 477 1 is_stmt 0 view .LVU957
 2845 0010 0120     		movs	r0, #1
 2846 0012 08BD     		pop	{r3, pc}
 2847              	.LVL225:
 2848              	.L270:
 2849              	.LCFI30:
 2850              		.cfi_def_cfa_offset 0
 2851              		.cfi_restore 3
 2852              		.cfi_restore 14
 476:lwIP/src/core/dns.c **** }
 2853              		.loc 1 476 3 is_stmt 1 view .LVU958
 477:lwIP/src/core/dns.c **** 
 2854              		.loc 1 477 1 is_stmt 0 view .LVU959
 2855 0014 0120     		movs	r0, #1
 2856              	.LVL226:
 477:lwIP/src/core/dns.c **** 
 2857              		.loc 1 477 1 view .LVU960
 2858 0016 7047     		bx	lr
 2859              	.L274:
 2860              		.align	2
 2861              	.L273:
 2862 0018 00000000 		.word	.LANCHOR4
 2863              		.cfi_endproc
 2864              	.LFE110:
 2866              		.section	.text.dns_local_lookup,"ax",%progbits
 2867              		.align	1
 2868              		.p2align 2,,3
 2869              		.global	dns_local_lookup
ARM GAS  /tmp/ccJm3wen.s 			page 109


 2870              		.syntax unified
 2871              		.thumb
 2872              		.thumb_func
 2873              		.fpu fpv4-sp-d16
 2875              	dns_local_lookup:
 2876              	.LVL227:
 2877              	.LFB111:
 494:lwIP/src/core/dns.c ****   LWIP_UNUSED_ARG(dns_addrtype);
 2878              		.loc 1 494 1 is_stmt 1 view -0
 2879              		.cfi_startproc
 2880              		@ args = 0, pretend = 0, frame = 0
 2881              		@ frame_needed = 0, uses_anonymous_args = 0
 495:lwIP/src/core/dns.c ****   return dns_lookup_local(hostname, addr LWIP_DNS_ADDRTYPE_ARG(dns_addrtype));
 2882              		.loc 1 495 3 view .LVU962
 496:lwIP/src/core/dns.c **** }
 2883              		.loc 1 496 3 view .LVU963
 494:lwIP/src/core/dns.c ****   LWIP_UNUSED_ARG(dns_addrtype);
 2884              		.loc 1 494 1 is_stmt 0 view .LVU964
 2885 0000 38B5     		push	{r3, r4, r5, lr}
 2886              	.LCFI31:
 2887              		.cfi_def_cfa_offset 16
 2888              		.cfi_offset 3, -16
 2889              		.cfi_offset 4, -12
 2890              		.cfi_offset 5, -8
 2891              		.cfi_offset 14, -4
 494:lwIP/src/core/dns.c ****   LWIP_UNUSED_ARG(dns_addrtype);
 2892              		.loc 1 494 1 view .LVU965
 2893 0002 0246     		mov	r2, r0
 2894              	.LVL228:
 2895              	.LBB207:
 2896              	.LBB208:
 518:lwIP/src/core/dns.c ****         LWIP_DNS_ADDRTYPE_MATCH_IP(dns_addrtype, local_hostlist_static[i].addr)) {
 2897              		.loc 1 518 10 view .LVU966
 2898 0004 074D     		ldr	r5, .L280
 2899              	.LBE208:
 2900              	.LBE207:
 494:lwIP/src/core/dns.c ****   LWIP_UNUSED_ARG(dns_addrtype);
 2901              		.loc 1 494 1 view .LVU967
 2902 0006 0C46     		mov	r4, r1
 2903              	.LBB217:
 2904              	.LBB213:
 518:lwIP/src/core/dns.c ****         LWIP_DNS_ADDRTYPE_MATCH_IP(dns_addrtype, local_hostlist_static[i].addr)) {
 2905              		.loc 1 518 10 view .LVU968
 2906 0008 2868     		ldr	r0, [r5]
 2907              	.LVL229:
 518:lwIP/src/core/dns.c ****         LWIP_DNS_ADDRTYPE_MATCH_IP(dns_addrtype, local_hostlist_static[i].addr)) {
 2908              		.loc 1 518 10 view .LVU969
 2909 000a 1146     		mov	r1, r2
 2910              	.LVL230:
 518:lwIP/src/core/dns.c ****         LWIP_DNS_ADDRTYPE_MATCH_IP(dns_addrtype, local_hostlist_static[i].addr)) {
 2911              		.loc 1 518 10 view .LVU970
 2912              	.LBE213:
 2913              	.LBI207:
 501:lwIP/src/core/dns.c **** {
 2914              		.loc 1 501 1 is_stmt 1 view .LVU971
 2915              	.LBB214:
 516:lwIP/src/core/dns.c ****   for (i = 0; i < LWIP_ARRAYSIZE(local_hostlist_static); i++) {
ARM GAS  /tmp/ccJm3wen.s 			page 110


 2916              		.loc 1 516 3 view .LVU972
 517:lwIP/src/core/dns.c ****     if ((lwip_stricmp(local_hostlist_static[i].name, hostname) == 0) &&
 2917              		.loc 1 517 3 view .LVU973
 517:lwIP/src/core/dns.c ****     if ((lwip_stricmp(local_hostlist_static[i].name, hostname) == 0) &&
 2918              		.loc 1 517 15 view .LVU974
 518:lwIP/src/core/dns.c ****         LWIP_DNS_ADDRTYPE_MATCH_IP(dns_addrtype, local_hostlist_static[i].addr)) {
 2919              		.loc 1 518 5 view .LVU975
 518:lwIP/src/core/dns.c ****         LWIP_DNS_ADDRTYPE_MATCH_IP(dns_addrtype, local_hostlist_static[i].addr)) {
 2920              		.loc 1 518 10 is_stmt 0 view .LVU976
 2921 000c FFF7FEFF 		bl	lwip_stricmp
 2922              	.LVL231:
 518:lwIP/src/core/dns.c ****         LWIP_DNS_ADDRTYPE_MATCH_IP(dns_addrtype, local_hostlist_static[i].addr)) {
 2923              		.loc 1 518 8 view .LVU977
 2924 0010 18B9     		cbnz	r0, .L277
 2925              	.LVL232:
 2926              	.LBB209:
 2927              	.LBI209:
 501:lwIP/src/core/dns.c **** {
 2928              		.loc 1 501 1 is_stmt 1 view .LVU978
 2929              	.LBB210:
 520:lwIP/src/core/dns.c ****         ip_addr_copy(*addr, local_hostlist_static[i].addr);
 2930              		.loc 1 520 7 view .LVU979
 520:lwIP/src/core/dns.c ****         ip_addr_copy(*addr, local_hostlist_static[i].addr);
 2931              		.loc 1 520 10 is_stmt 0 view .LVU980
 2932 0012 2CB1     		cbz	r4, .L278
 521:lwIP/src/core/dns.c ****       }
 2933              		.loc 1 521 9 is_stmt 1 view .LVU981
 2934 0014 6B68     		ldr	r3, [r5, #4]
 2935 0016 2360     		str	r3, [r4]
 2936              	.LVL233:
 521:lwIP/src/core/dns.c ****       }
 2937              		.loc 1 521 9 is_stmt 0 view .LVU982
 2938              	.LBE210:
 2939              	.LBE209:
 2940              	.LBE214:
 2941              	.LBE217:
 497:lwIP/src/core/dns.c **** 
 2942              		.loc 1 497 1 view .LVU983
 2943 0018 38BD     		pop	{r3, r4, r5, pc}
 2944              	.LVL234:
 2945              	.L277:
 2946              	.LBB218:
 2947              	.LBB215:
 527:lwIP/src/core/dns.c **** }
 2948              		.loc 1 527 10 view .LVU984
 2949 001a 6FF00F00 		mvn	r0, #15
 2950              	.LVL235:
 527:lwIP/src/core/dns.c **** }
 2951              		.loc 1 527 10 view .LVU985
 2952              	.LBE215:
 2953              	.LBE218:
 497:lwIP/src/core/dns.c **** 
 2954              		.loc 1 497 1 view .LVU986
 2955 001e 38BD     		pop	{r3, r4, r5, pc}
 2956              	.LVL236:
 2957              	.L278:
 2958              	.LBB219:
ARM GAS  /tmp/ccJm3wen.s 			page 111


 2959              	.LBB216:
 2960              	.LBB212:
 2961              	.LBB211:
 497:lwIP/src/core/dns.c **** 
 2962              		.loc 1 497 1 view .LVU987
 2963 0020 2046     		mov	r0, r4
 2964              	.LVL237:
 497:lwIP/src/core/dns.c **** 
 2965              		.loc 1 497 1 view .LVU988
 2966              	.LBE211:
 2967              	.LBE212:
 2968              	.LBE216:
 2969              	.LBE219:
 2970 0022 38BD     		pop	{r3, r4, r5, pc}
 2971              	.LVL238:
 2972              	.L281:
 497:lwIP/src/core/dns.c **** 
 2973              		.loc 1 497 1 view .LVU989
 2974              		.align	2
 2975              	.L280:
 2976 0024 00000000 		.word	.LANCHOR4
 2977              		.cfi_endproc
 2978              	.LFE111:
 2980              		.section	.text.dns_gethostbyname_addrtype,"ax",%progbits
 2981              		.align	1
 2982              		.p2align 2,,3
 2983              		.global	dns_gethostbyname_addrtype
 2984              		.syntax unified
 2985              		.thumb
 2986              		.thumb_func
 2987              		.fpu fpv4-sp-d16
 2989              	dns_gethostbyname_addrtype:
 2990              	.LVL239:
 2991              	.LFB129:
1488:lwIP/src/core/dns.c **** 
1489:lwIP/src/core/dns.c **** /**
1490:lwIP/src/core/dns.c ****  * Queues a new hostname to resolve and sends out a DNS query for that hostname
1491:lwIP/src/core/dns.c ****  *
1492:lwIP/src/core/dns.c ****  * @param name the hostname that is to be queried
1493:lwIP/src/core/dns.c ****  * @param hostnamelen length of the hostname
1494:lwIP/src/core/dns.c ****  * @param found a callback function to be called on success, failure or timeout
1495:lwIP/src/core/dns.c ****  * @param callback_arg argument to pass to the callback function
1496:lwIP/src/core/dns.c ****  * @return err_t return code.
1497:lwIP/src/core/dns.c ****  */
1498:lwIP/src/core/dns.c **** static err_t
1499:lwIP/src/core/dns.c **** dns_enqueue(const char *name, size_t hostnamelen, dns_found_callback found,
1500:lwIP/src/core/dns.c ****             void *callback_arg LWIP_DNS_ADDRTYPE_ARG(u8_t dns_addrtype) LWIP_DNS_ISMDNS_ARG(u8_t is
1501:lwIP/src/core/dns.c **** {
1502:lwIP/src/core/dns.c ****   u8_t i;
1503:lwIP/src/core/dns.c ****   u8_t lseq, lseqi;
1504:lwIP/src/core/dns.c ****   struct dns_table_entry *entry = NULL;
1505:lwIP/src/core/dns.c ****   size_t namelen;
1506:lwIP/src/core/dns.c ****   struct dns_req_entry *req;
1507:lwIP/src/core/dns.c **** 
1508:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & LWIP_DNS_SECURE_NO_MULTIPLE_OUTSTANDING) != 0)
1509:lwIP/src/core/dns.c ****   u8_t r;
1510:lwIP/src/core/dns.c ****   /* check for duplicate entries */
ARM GAS  /tmp/ccJm3wen.s 			page 112


1511:lwIP/src/core/dns.c ****   for (i = 0; i < DNS_TABLE_SIZE; i++) {
1512:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
1513:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0)) {
1514:lwIP/src/core/dns.c **** #if LWIP_IPV4 && LWIP_IPV6
1515:lwIP/src/core/dns.c ****       if (dns_table[i].reqaddrtype != dns_addrtype) {
1516:lwIP/src/core/dns.c ****         /* requested address types don't match
1517:lwIP/src/core/dns.c ****            this can lead to 2 concurrent requests, but mixing the address types
1518:lwIP/src/core/dns.c ****            for the same host should not be that common */
1519:lwIP/src/core/dns.c ****         continue;
1520:lwIP/src/core/dns.c ****       }
1521:lwIP/src/core/dns.c **** #endif /* LWIP_IPV4 && LWIP_IPV6 */
1522:lwIP/src/core/dns.c ****       /* this is a duplicate entry, find a free request entry */
1523:lwIP/src/core/dns.c ****       for (r = 0; r < DNS_MAX_REQUESTS; r++) {
1524:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
1525:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
1526:lwIP/src/core/dns.c ****           dns_requests[r].arg = callback_arg;
1527:lwIP/src/core/dns.c ****           dns_requests[r].dns_table_idx = i;
1528:lwIP/src/core/dns.c ****           LWIP_DNS_SET_ADDRTYPE(dns_requests[r].reqaddrtype, dns_addrtype);
1529:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_enqueue: \"%s\": duplicate request\n", name));
1530:lwIP/src/core/dns.c ****           return ERR_INPROGRESS;
1531:lwIP/src/core/dns.c ****         }
1532:lwIP/src/core/dns.c ****       }
1533:lwIP/src/core/dns.c ****     }
1534:lwIP/src/core/dns.c ****   }
1535:lwIP/src/core/dns.c ****   /* no duplicate entries found */
1536:lwIP/src/core/dns.c **** #endif
1537:lwIP/src/core/dns.c **** 
1538:lwIP/src/core/dns.c ****   /* search an unused entry, or the oldest one */
1539:lwIP/src/core/dns.c ****   lseq = 0;
1540:lwIP/src/core/dns.c ****   lseqi = DNS_TABLE_SIZE;
1541:lwIP/src/core/dns.c ****   for (i = 0; i < DNS_TABLE_SIZE; ++i) {
1542:lwIP/src/core/dns.c ****     entry = &dns_table[i];
1543:lwIP/src/core/dns.c ****     /* is it an unused entry ? */
1544:lwIP/src/core/dns.c ****     if (entry->state == DNS_STATE_UNUSED) {
1545:lwIP/src/core/dns.c ****       break;
1546:lwIP/src/core/dns.c ****     }
1547:lwIP/src/core/dns.c ****     /* check if this is the oldest completed entry */
1548:lwIP/src/core/dns.c ****     if (entry->state == DNS_STATE_DONE) {
1549:lwIP/src/core/dns.c ****       u8_t age = (u8_t)(dns_seqno - entry->seqno);
1550:lwIP/src/core/dns.c ****       if (age > lseq) {
1551:lwIP/src/core/dns.c ****         lseq = age;
1552:lwIP/src/core/dns.c ****         lseqi = i;
1553:lwIP/src/core/dns.c ****       }
1554:lwIP/src/core/dns.c ****     }
1555:lwIP/src/core/dns.c ****   }
1556:lwIP/src/core/dns.c **** 
1557:lwIP/src/core/dns.c ****   /* if we don't have found an unused entry, use the oldest completed one */
1558:lwIP/src/core/dns.c ****   if (i == DNS_TABLE_SIZE) {
1559:lwIP/src/core/dns.c ****     if ((lseqi >= DNS_TABLE_SIZE) || (dns_table[lseqi].state != DNS_STATE_DONE)) {
1560:lwIP/src/core/dns.c ****       /* no entry can be used now, table is full */
1561:lwIP/src/core/dns.c ****       LWIP_DEBUGF(DNS_DEBUG, ("dns_enqueue: \"%s\": DNS entries table is full\n", name));
1562:lwIP/src/core/dns.c ****       return ERR_MEM;
1563:lwIP/src/core/dns.c ****     } else {
1564:lwIP/src/core/dns.c ****       /* use the oldest completed one */
1565:lwIP/src/core/dns.c ****       i = lseqi;
1566:lwIP/src/core/dns.c ****       entry = &dns_table[i];
1567:lwIP/src/core/dns.c ****     }
ARM GAS  /tmp/ccJm3wen.s 			page 113


1568:lwIP/src/core/dns.c ****   }
1569:lwIP/src/core/dns.c **** 
1570:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & LWIP_DNS_SECURE_NO_MULTIPLE_OUTSTANDING) != 0)
1571:lwIP/src/core/dns.c ****   /* find a free request entry */
1572:lwIP/src/core/dns.c ****   req = NULL;
1573:lwIP/src/core/dns.c ****   for (r = 0; r < DNS_MAX_REQUESTS; r++) {
1574:lwIP/src/core/dns.c ****     if (dns_requests[r].found == NULL) {
1575:lwIP/src/core/dns.c ****       req = &dns_requests[r];
1576:lwIP/src/core/dns.c ****       break;
1577:lwIP/src/core/dns.c ****     }
1578:lwIP/src/core/dns.c ****   }
1579:lwIP/src/core/dns.c ****   if (req == NULL) {
1580:lwIP/src/core/dns.c ****     /* no request entry can be used now, table is full */
1581:lwIP/src/core/dns.c ****     LWIP_DEBUGF(DNS_DEBUG, ("dns_enqueue: \"%s\": DNS request entries table is full\n", name));
1582:lwIP/src/core/dns.c ****     return ERR_MEM;
1583:lwIP/src/core/dns.c ****   }
1584:lwIP/src/core/dns.c ****   req->dns_table_idx = i;
1585:lwIP/src/core/dns.c **** #else
1586:lwIP/src/core/dns.c ****   /* in this configuration, the entry index is the same as the request index */
1587:lwIP/src/core/dns.c ****   req = &dns_requests[i];
1588:lwIP/src/core/dns.c **** #endif
1589:lwIP/src/core/dns.c **** 
1590:lwIP/src/core/dns.c ****   /* use this entry */
1591:lwIP/src/core/dns.c ****   LWIP_DEBUGF(DNS_DEBUG, ("dns_enqueue: \"%s\": use DNS entry %"U16_F"\n", name, (u16_t)(i)));
1592:lwIP/src/core/dns.c **** 
1593:lwIP/src/core/dns.c ****   /* fill the entry */
1594:lwIP/src/core/dns.c ****   entry->state = DNS_STATE_NEW;
1595:lwIP/src/core/dns.c ****   entry->seqno = dns_seqno;
1596:lwIP/src/core/dns.c ****   LWIP_DNS_SET_ADDRTYPE(entry->reqaddrtype, dns_addrtype);
1597:lwIP/src/core/dns.c ****   LWIP_DNS_SET_ADDRTYPE(req->reqaddrtype, dns_addrtype);
1598:lwIP/src/core/dns.c ****   req->found = found;
1599:lwIP/src/core/dns.c ****   req->arg   = callback_arg;
1600:lwIP/src/core/dns.c ****   namelen = LWIP_MIN(hostnamelen, DNS_MAX_NAME_LENGTH - 1);
1601:lwIP/src/core/dns.c ****   MEMCPY(entry->name, name, namelen);
1602:lwIP/src/core/dns.c ****   entry->name[namelen] = 0;
1603:lwIP/src/core/dns.c **** 
1604:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & LWIP_DNS_SECURE_RAND_SRC_PORT) != 0)
1605:lwIP/src/core/dns.c ****   entry->pcb_idx = dns_alloc_pcb();
1606:lwIP/src/core/dns.c ****   if (entry->pcb_idx >= DNS_MAX_SOURCE_PORTS) {
1607:lwIP/src/core/dns.c ****     /* failed to get a UDP pcb */
1608:lwIP/src/core/dns.c ****     LWIP_DEBUGF(DNS_DEBUG, ("dns_enqueue: \"%s\": failed to allocate a pcb\n", name));
1609:lwIP/src/core/dns.c ****     entry->state = DNS_STATE_UNUSED;
1610:lwIP/src/core/dns.c ****     req->found = NULL;
1611:lwIP/src/core/dns.c ****     return ERR_MEM;
1612:lwIP/src/core/dns.c ****   }
1613:lwIP/src/core/dns.c ****   LWIP_DEBUGF(DNS_DEBUG, ("dns_enqueue: \"%s\": use DNS pcb %"U16_F"\n", name, (u16_t)(entry->pcb_i
1614:lwIP/src/core/dns.c **** #endif
1615:lwIP/src/core/dns.c **** 
1616:lwIP/src/core/dns.c **** #if LWIP_DNS_SUPPORT_MDNS_QUERIES
1617:lwIP/src/core/dns.c ****   entry->is_mdns = is_mdns;
1618:lwIP/src/core/dns.c **** #endif
1619:lwIP/src/core/dns.c **** 
1620:lwIP/src/core/dns.c ****   dns_seqno++;
1621:lwIP/src/core/dns.c **** 
1622:lwIP/src/core/dns.c ****   /* force to send query without waiting timer */
1623:lwIP/src/core/dns.c ****   dns_check_entry(i);
1624:lwIP/src/core/dns.c **** 
ARM GAS  /tmp/ccJm3wen.s 			page 114


1625:lwIP/src/core/dns.c ****   /* dns query is enqueued */
1626:lwIP/src/core/dns.c ****   return ERR_INPROGRESS;
1627:lwIP/src/core/dns.c **** }
1628:lwIP/src/core/dns.c **** 
1629:lwIP/src/core/dns.c **** /**
1630:lwIP/src/core/dns.c ****  * @ingroup dns
1631:lwIP/src/core/dns.c ****  * Resolve a hostname (string) into an IP address.
1632:lwIP/src/core/dns.c ****  * NON-BLOCKING callback version for use with raw API!!!
1633:lwIP/src/core/dns.c ****  *
1634:lwIP/src/core/dns.c ****  * Returns immediately with one of err_t return codes:
1635:lwIP/src/core/dns.c ****  * - ERR_OK if hostname is a valid IP address string or the host
1636:lwIP/src/core/dns.c ****  *   name is already in the local names table.
1637:lwIP/src/core/dns.c ****  * - ERR_INPROGRESS enqueue a request to be sent to the DNS server
1638:lwIP/src/core/dns.c ****  *   for resolution if no errors are present.
1639:lwIP/src/core/dns.c ****  * - ERR_ARG: dns client not initialized or invalid hostname
1640:lwIP/src/core/dns.c ****  *
1641:lwIP/src/core/dns.c ****  * @param hostname the hostname that is to be queried
1642:lwIP/src/core/dns.c ****  * @param addr pointer to a ip_addr_t where to store the address if it is already
1643:lwIP/src/core/dns.c ****  *             cached in the dns_table (only valid if ERR_OK is returned!)
1644:lwIP/src/core/dns.c ****  * @param found a callback function to be called on success, failure or timeout (only if
1645:lwIP/src/core/dns.c ****  *              ERR_INPROGRESS is returned!)
1646:lwIP/src/core/dns.c ****  * @param callback_arg argument to pass to the callback function
1647:lwIP/src/core/dns.c ****  * @return a err_t return code.
1648:lwIP/src/core/dns.c ****  */
1649:lwIP/src/core/dns.c **** err_t
1650:lwIP/src/core/dns.c **** dns_gethostbyname(const char *hostname, ip_addr_t *addr, dns_found_callback found,
1651:lwIP/src/core/dns.c ****                   void *callback_arg)
1652:lwIP/src/core/dns.c **** {
1653:lwIP/src/core/dns.c ****   return dns_gethostbyname_addrtype(hostname, addr, found, callback_arg, LWIP_DNS_ADDRTYPE_DEFAULT)
1654:lwIP/src/core/dns.c **** }
1655:lwIP/src/core/dns.c **** 
1656:lwIP/src/core/dns.c **** /**
1657:lwIP/src/core/dns.c ****  * @ingroup dns
1658:lwIP/src/core/dns.c ****  * Like dns_gethostbyname, but returned address type can be controlled:
1659:lwIP/src/core/dns.c ****  * @param hostname the hostname that is to be queried
1660:lwIP/src/core/dns.c ****  * @param addr pointer to a ip_addr_t where to store the address if it is already
1661:lwIP/src/core/dns.c ****  *             cached in the dns_table (only valid if ERR_OK is returned!)
1662:lwIP/src/core/dns.c ****  * @param found a callback function to be called on success, failure or timeout (only if
1663:lwIP/src/core/dns.c ****  *              ERR_INPROGRESS is returned!)
1664:lwIP/src/core/dns.c ****  * @param callback_arg argument to pass to the callback function
1665:lwIP/src/core/dns.c ****  * @param dns_addrtype - LWIP_DNS_ADDRTYPE_IPV4_IPV6: try to resolve IPv4 first, try IPv6 if IPv4 f
1666:lwIP/src/core/dns.c ****  *                     - LWIP_DNS_ADDRTYPE_IPV6_IPV4: try to resolve IPv6 first, try IPv4 if IPv6 f
1667:lwIP/src/core/dns.c ****  *                     - LWIP_DNS_ADDRTYPE_IPV4: try to resolve IPv4 only
1668:lwIP/src/core/dns.c ****  *                     - LWIP_DNS_ADDRTYPE_IPV6: try to resolve IPv6 only
1669:lwIP/src/core/dns.c ****  */
1670:lwIP/src/core/dns.c **** err_t
1671:lwIP/src/core/dns.c **** dns_gethostbyname_addrtype(const char *hostname, ip_addr_t *addr, dns_found_callback found,
1672:lwIP/src/core/dns.c ****                            void *callback_arg, u8_t dns_addrtype)
1673:lwIP/src/core/dns.c **** {
 2992              		.loc 1 1673 1 is_stmt 1 view -0
 2993              		.cfi_startproc
 2994              		@ args = 4, pretend = 0, frame = 16
 2995              		@ frame_needed = 0, uses_anonymous_args = 0
1674:lwIP/src/core/dns.c ****   size_t hostnamelen;
 2996              		.loc 1 1674 3 view .LVU991
1675:lwIP/src/core/dns.c **** #if LWIP_DNS_SUPPORT_MDNS_QUERIES
1676:lwIP/src/core/dns.c ****   u8_t is_mdns;
ARM GAS  /tmp/ccJm3wen.s 			page 115


1677:lwIP/src/core/dns.c **** #endif
1678:lwIP/src/core/dns.c ****   /* not initialized or no valid server yet, or invalid addr pointer
1679:lwIP/src/core/dns.c ****    * or invalid hostname or invalid hostname length */
1680:lwIP/src/core/dns.c ****   if ((addr == NULL) ||
 2997              		.loc 1 1680 3 view .LVU992
 2998              		.loc 1 1680 6 is_stmt 0 view .LVU993
 2999 0000 0029     		cmp	r1, #0
 3000 0002 00F07882 		beq	.L390
1673:lwIP/src/core/dns.c ****   size_t hostnamelen;
 3001              		.loc 1 1673 1 view .LVU994
 3002 0006 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3003              	.LCFI32:
 3004              		.cfi_def_cfa_offset 36
 3005              		.cfi_offset 4, -36
 3006              		.cfi_offset 5, -32
 3007              		.cfi_offset 6, -28
 3008              		.cfi_offset 7, -24
 3009              		.cfi_offset 8, -20
 3010              		.cfi_offset 9, -16
 3011              		.cfi_offset 10, -12
 3012              		.cfi_offset 11, -8
 3013              		.cfi_offset 14, -4
 3014              		.loc 1 1680 6 view .LVU995
 3015 000a B0FA80F4 		clz	r4, r0
1673:lwIP/src/core/dns.c ****   size_t hostnamelen;
 3016              		.loc 1 1673 1 view .LVU996
 3017 000e 85B0     		sub	sp, sp, #20
 3018              	.LCFI33:
 3019              		.cfi_def_cfa_offset 56
 3020 0010 8346     		mov	fp, r0
 3021              		.loc 1 1680 6 view .LVU997
 3022 0012 6409     		lsrs	r4, r4, #5
 3023 0014 0028     		cmp	r0, #0
 3024 0016 00F0DC81 		beq	.L332
 3025 001a 1F46     		mov	r7, r3
1681:lwIP/src/core/dns.c ****       (!hostname) || (!hostname[0])) {
 3026              		.loc 1 1681 19 view .LVU998
 3027 001c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 3028              	.LVL240:
 3029              		.loc 1 1681 19 view .LVU999
 3030 001e 002B     		cmp	r3, #0
 3031 0020 00F0D781 		beq	.L332
 3032 0024 9146     		mov	r9, r2
 3033 0026 0E46     		mov	r6, r1
1682:lwIP/src/core/dns.c ****     return ERR_ARG;
1683:lwIP/src/core/dns.c ****   }
1684:lwIP/src/core/dns.c **** #if ((LWIP_DNS_SECURE & LWIP_DNS_SECURE_RAND_SRC_PORT) == 0)
1685:lwIP/src/core/dns.c ****   if (dns_pcbs[0] == NULL) {
1686:lwIP/src/core/dns.c ****     return ERR_ARG;
1687:lwIP/src/core/dns.c ****   }
1688:lwIP/src/core/dns.c **** #endif
1689:lwIP/src/core/dns.c ****   hostnamelen = strlen(hostname);
 3034              		.loc 1 1689 3 is_stmt 1 view .LVU1000
 3035              		.loc 1 1689 17 is_stmt 0 view .LVU1001
 3036 0028 FFF7FEFF 		bl	strlen
 3037              	.LVL241:
1690:lwIP/src/core/dns.c ****   if (hostnamelen >= DNS_MAX_NAME_LENGTH) {
ARM GAS  /tmp/ccJm3wen.s 			page 116


 3038              		.loc 1 1690 6 view .LVU1002
 3039 002c FF28     		cmp	r0, #255
1689:lwIP/src/core/dns.c ****   if (hostnamelen >= DNS_MAX_NAME_LENGTH) {
 3040              		.loc 1 1689 17 view .LVU1003
 3041 002e 8246     		mov	r10, r0
 3042              	.LVL242:
 3043              		.loc 1 1690 3 is_stmt 1 view .LVU1004
 3044              		.loc 1 1690 6 is_stmt 0 view .LVU1005
 3045 0030 00F2CF81 		bhi	.L332
1691:lwIP/src/core/dns.c ****     LWIP_DEBUGF(DNS_DEBUG, ("dns_gethostbyname: name too long to resolve"));
1692:lwIP/src/core/dns.c ****     return ERR_ARG;
1693:lwIP/src/core/dns.c ****   }
1694:lwIP/src/core/dns.c **** 
1695:lwIP/src/core/dns.c **** 
1696:lwIP/src/core/dns.c **** #if LWIP_HAVE_LOOPIF
1697:lwIP/src/core/dns.c ****   if (strcmp(hostname, "localhost") == 0) {
1698:lwIP/src/core/dns.c ****     ip_addr_set_loopback(LWIP_DNS_ADDRTYPE_IS_IPV6(dns_addrtype), addr);
1699:lwIP/src/core/dns.c ****     return ERR_OK;
1700:lwIP/src/core/dns.c ****   }
1701:lwIP/src/core/dns.c **** #endif /* LWIP_HAVE_LOOPIF */
1702:lwIP/src/core/dns.c **** 
1703:lwIP/src/core/dns.c ****   /* host name already in octet notation? set ip addr and return ERR_OK */
1704:lwIP/src/core/dns.c ****   if (ipaddr_aton(hostname, addr)) {
 3046              		.loc 1 1704 3 is_stmt 1 view .LVU1006
 3047              		.loc 1 1704 7 is_stmt 0 view .LVU1007
 3048 0034 3146     		mov	r1, r6
 3049 0036 5846     		mov	r0, fp
 3050              	.LVL243:
 3051              		.loc 1 1704 7 view .LVU1008
 3052 0038 FFF7FEFF 		bl	ip4addr_aton
 3053              	.LVL244:
 3054              		.loc 1 1704 6 view .LVU1009
 3055 003c 0546     		mov	r5, r0
 3056 003e 18B1     		cbz	r0, .L396
1705:lwIP/src/core/dns.c **** #if LWIP_IPV4 && LWIP_IPV6
1706:lwIP/src/core/dns.c ****     if ((IP_IS_V6(addr) && (dns_addrtype != LWIP_DNS_ADDRTYPE_IPV4)) ||
1707:lwIP/src/core/dns.c ****         (IP_IS_V4(addr) && (dns_addrtype != LWIP_DNS_ADDRTYPE_IPV6)))
1708:lwIP/src/core/dns.c **** #endif /* LWIP_IPV4 && LWIP_IPV6 */
1709:lwIP/src/core/dns.c ****     {
1710:lwIP/src/core/dns.c ****       return ERR_OK;
 3057              		.loc 1 1710 14 view .LVU1010
 3058 0040 2046     		mov	r0, r4
 3059              	.LVL245:
 3060              	.L386:
1711:lwIP/src/core/dns.c ****     }
1712:lwIP/src/core/dns.c ****   }
1713:lwIP/src/core/dns.c ****   /* already have this address cached? */
1714:lwIP/src/core/dns.c ****   if (dns_lookup(hostname, addr LWIP_DNS_ADDRTYPE_ARG(dns_addrtype)) == ERR_OK) {
1715:lwIP/src/core/dns.c ****     return ERR_OK;
1716:lwIP/src/core/dns.c ****   }
1717:lwIP/src/core/dns.c **** #if LWIP_IPV4 && LWIP_IPV6
1718:lwIP/src/core/dns.c ****   if ((dns_addrtype == LWIP_DNS_ADDRTYPE_IPV4_IPV6) || (dns_addrtype == LWIP_DNS_ADDRTYPE_IPV6_IPV4
1719:lwIP/src/core/dns.c ****     /* fallback to 2nd IP type and try again to lookup */
1720:lwIP/src/core/dns.c ****     u8_t fallback;
1721:lwIP/src/core/dns.c ****     if (dns_addrtype == LWIP_DNS_ADDRTYPE_IPV4_IPV6) {
1722:lwIP/src/core/dns.c ****       fallback = LWIP_DNS_ADDRTYPE_IPV6;
1723:lwIP/src/core/dns.c ****     } else {
ARM GAS  /tmp/ccJm3wen.s 			page 117


1724:lwIP/src/core/dns.c ****       fallback = LWIP_DNS_ADDRTYPE_IPV4;
1725:lwIP/src/core/dns.c ****     }
1726:lwIP/src/core/dns.c ****     if (dns_lookup(hostname, addr LWIP_DNS_ADDRTYPE_ARG(fallback)) == ERR_OK) {
1727:lwIP/src/core/dns.c ****       return ERR_OK;
1728:lwIP/src/core/dns.c ****     }
1729:lwIP/src/core/dns.c ****   }
1730:lwIP/src/core/dns.c **** #else /* LWIP_IPV4 && LWIP_IPV6 */
1731:lwIP/src/core/dns.c ****   LWIP_UNUSED_ARG(dns_addrtype);
1732:lwIP/src/core/dns.c **** #endif /* LWIP_IPV4 && LWIP_IPV6 */
1733:lwIP/src/core/dns.c **** 
1734:lwIP/src/core/dns.c **** #if LWIP_DNS_SUPPORT_MDNS_QUERIES
1735:lwIP/src/core/dns.c ****   if (strstr(hostname, ".local") == &hostname[hostnamelen] - 6) {
1736:lwIP/src/core/dns.c ****     is_mdns = 1;
1737:lwIP/src/core/dns.c ****   } else {
1738:lwIP/src/core/dns.c ****     is_mdns = 0;
1739:lwIP/src/core/dns.c ****   }
1740:lwIP/src/core/dns.c **** 
1741:lwIP/src/core/dns.c ****   if (!is_mdns)
1742:lwIP/src/core/dns.c **** #endif /* LWIP_DNS_SUPPORT_MDNS_QUERIES */
1743:lwIP/src/core/dns.c ****   {
1744:lwIP/src/core/dns.c ****     /* prevent calling found callback if no server is set, return error instead */
1745:lwIP/src/core/dns.c ****     if (ip_addr_isany_val(dns_servers[0])) {
1746:lwIP/src/core/dns.c ****       return ERR_VAL;
1747:lwIP/src/core/dns.c ****     }
1748:lwIP/src/core/dns.c ****   }
1749:lwIP/src/core/dns.c **** 
1750:lwIP/src/core/dns.c ****   /* queue query with specified callback */
1751:lwIP/src/core/dns.c ****   return dns_enqueue(hostname, hostnamelen, found, callback_arg LWIP_DNS_ADDRTYPE_ARG(dns_addrtype)
1752:lwIP/src/core/dns.c ****                      LWIP_DNS_ISMDNS_ARG(is_mdns));
1753:lwIP/src/core/dns.c **** }
 3061              		.loc 1 1753 1 view .LVU1011
 3062 0042 05B0     		add	sp, sp, #20
 3063              	.LCFI34:
 3064              		.cfi_remember_state
 3065              		.cfi_def_cfa_offset 36
 3066              		@ sp needed
 3067 0044 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3068              	.LVL246:
 3069              	.L396:
 3070              	.LCFI35:
 3071              		.cfi_restore_state
 3072              	.LBB234:
 3073              	.LBB235:
 3074              	.LBB236:
 3075              	.LBB237:
 517:lwIP/src/core/dns.c ****     if ((lwip_stricmp(local_hostlist_static[i].name, hostname) == 0) &&
 3076              		.loc 1 517 15 is_stmt 1 view .LVU1012
 518:lwIP/src/core/dns.c ****         LWIP_DNS_ADDRTYPE_MATCH_IP(dns_addrtype, local_hostlist_static[i].addr)) {
 3077              		.loc 1 518 5 view .LVU1013
 518:lwIP/src/core/dns.c ****         LWIP_DNS_ADDRTYPE_MATCH_IP(dns_addrtype, local_hostlist_static[i].addr)) {
 3078              		.loc 1 518 10 is_stmt 0 view .LVU1014
 3079 0048 BE4C     		ldr	r4, .L419
 3080 004a 5946     		mov	r1, fp
 3081 004c 2068     		ldr	r0, [r4]
 3082 004e FFF7FEFF 		bl	lwip_stricmp
 3083              	.LVL247:
 518:lwIP/src/core/dns.c ****         LWIP_DNS_ADDRTYPE_MATCH_IP(dns_addrtype, local_hostlist_static[i].addr)) {
ARM GAS  /tmp/ccJm3wen.s 			page 118


 3084              		.loc 1 518 8 view .LVU1015
 3085 0052 20B9     		cbnz	r0, .L397
 3086              	.LVL248:
 3087              	.L395:
 518:lwIP/src/core/dns.c ****         LWIP_DNS_ADDRTYPE_MATCH_IP(dns_addrtype, local_hostlist_static[i].addr)) {
 3088              		.loc 1 518 8 view .LVU1016
 3089              	.LBE237:
 3090              	.LBE236:
 749:lwIP/src/core/dns.c ****       }
 3091              		.loc 1 749 9 view .LVU1017
 3092 0054 6368     		ldr	r3, [r4, #4]
 3093 0056 3360     		str	r3, [r6]
 3094              	.LBE235:
 3095              	.LBE234:
 3096              		.loc 1 1753 1 view .LVU1018
 3097 0058 05B0     		add	sp, sp, #20
 3098              	.LCFI36:
 3099              		.cfi_remember_state
 3100              		.cfi_def_cfa_offset 36
 3101              		@ sp needed
 3102 005a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3103              	.LVL249:
 3104              	.L397:
 3105              	.LCFI37:
 3106              		.cfi_restore_state
 3107              	.LBB241:
 3108              	.LBB238:
 742:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0) &&
 3109              		.loc 1 742 5 is_stmt 1 view .LVU1019
 742:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0) &&
 3110              		.loc 1 742 22 is_stmt 0 view .LVU1020
 3111 005e BA4C     		ldr	r4, .L419+4
 742:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0) &&
 3112              		.loc 1 742 8 view .LVU1021
 3113 0060 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 3114 0062 032B     		cmp	r3, #3
 3115 0064 00F0DE81 		beq	.L398
 3116              	.L286:
 741:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_DONE) &&
 3117              		.loc 1 741 35 is_stmt 1 view .LVU1022
 3118              	.LVL250:
 741:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_DONE) &&
 3119              		.loc 1 741 15 view .LVU1023
 742:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0) &&
 3120              		.loc 1 742 5 view .LVU1024
 742:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0) &&
 3121              		.loc 1 742 8 is_stmt 0 view .LVU1025
 3122 0068 94F81A31 		ldrb	r3, [r4, #282]	@ zero_extendqisi2
 3123 006c 032B     		cmp	r3, #3
 3124 006e 00F0CE81 		beq	.L399
 3125              	.L288:
 741:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_DONE) &&
 3126              		.loc 1 741 35 is_stmt 1 view .LVU1026
 3127              	.LVL251:
 741:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_DONE) &&
 3128              		.loc 1 741 15 view .LVU1027
 742:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0) &&
ARM GAS  /tmp/ccJm3wen.s 			page 119


 3129              		.loc 1 742 5 view .LVU1028
 742:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0) &&
 3130              		.loc 1 742 8 is_stmt 0 view .LVU1029
 3131 0072 94F82A32 		ldrb	r3, [r4, #554]	@ zero_extendqisi2
 3132 0076 032B     		cmp	r3, #3
 3133 0078 00F0BE81 		beq	.L400
 3134              	.L289:
 741:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_DONE) &&
 3135              		.loc 1 741 35 is_stmt 1 view .LVU1030
 3136              	.LVL252:
 741:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_DONE) &&
 3137              		.loc 1 741 15 view .LVU1031
 742:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0) &&
 3138              		.loc 1 742 5 view .LVU1032
 742:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0) &&
 3139              		.loc 1 742 8 is_stmt 0 view .LVU1033
 3140 007c 94F83A83 		ldrb	r8, [r4, #826]	@ zero_extendqisi2
 3141 0080 B8F1030F 		cmp	r8, #3
 3142 0084 00F0A881 		beq	.L401
 3143              	.L290:
 741:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_DONE) &&
 3144              		.loc 1 741 35 is_stmt 1 view .LVU1034
 3145              	.LVL253:
 741:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_DONE) &&
 3146              		.loc 1 741 15 view .LVU1035
 741:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_DONE) &&
 3147              		.loc 1 741 15 is_stmt 0 view .LVU1036
 3148              	.LBE238:
 3149              	.LBE241:
1731:lwIP/src/core/dns.c **** #endif /* LWIP_IPV4 && LWIP_IPV6 */
 3150              		.loc 1 1731 3 is_stmt 1 view .LVU1037
1745:lwIP/src/core/dns.c ****       return ERR_VAL;
 3151              		.loc 1 1745 5 view .LVU1038
1745:lwIP/src/core/dns.c ****       return ERR_VAL;
 3152              		.loc 1 1745 9 is_stmt 0 view .LVU1039
 3153 0088 B04B     		ldr	r3, .L419+8
1745:lwIP/src/core/dns.c ****       return ERR_VAL;
 3154              		.loc 1 1745 8 view .LVU1040
 3155 008a 1B68     		ldr	r3, [r3]
 3156 008c 002B     		cmp	r3, #0
 3157 008e 00F01D82 		beq	.L336
 3158              	.LVL254:
 3159              	.LBB242:
 3160              	.LBB243:
1512:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0)) {
 3161              		.loc 1 1512 5 is_stmt 1 view .LVU1041
1512:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0)) {
 3162              		.loc 1 1512 8 is_stmt 0 view .LVU1042
 3163 0092 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 3164 0094 022B     		cmp	r3, #2
 3165 0096 73D0     		beq	.L402
 3166              	.LVL255:
 3167              	.L291:
1511:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 3168              		.loc 1 1511 35 is_stmt 1 view .LVU1043
1511:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 3169              		.loc 1 1511 15 view .LVU1044
ARM GAS  /tmp/ccJm3wen.s 			page 120


1512:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0)) {
 3170              		.loc 1 1512 5 view .LVU1045
1512:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0)) {
 3171              		.loc 1 1512 8 is_stmt 0 view .LVU1046
 3172 0098 94F81A31 		ldrb	r3, [r4, #282]	@ zero_extendqisi2
 3173 009c 022B     		cmp	r3, #2
 3174 009e 00F09980 		beq	.L403
 3175              	.L296:
1511:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 3176              		.loc 1 1511 35 is_stmt 1 view .LVU1047
 3177              	.LVL256:
1511:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 3178              		.loc 1 1511 15 view .LVU1048
1512:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0)) {
 3179              		.loc 1 1512 5 view .LVU1049
1512:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0)) {
 3180              		.loc 1 1512 22 is_stmt 0 view .LVU1050
 3181 00a2 94F82A62 		ldrb	r6, [r4, #554]	@ zero_extendqisi2
1512:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0)) {
 3182              		.loc 1 1512 8 view .LVU1051
 3183 00a6 022E     		cmp	r6, #2
 3184 00a8 00F0B580 		beq	.L404
 3185              	.L297:
1511:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 3186              		.loc 1 1511 35 is_stmt 1 view .LVU1052
 3187              	.LVL257:
1511:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 3188              		.loc 1 1511 15 view .LVU1053
1512:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0)) {
 3189              		.loc 1 1512 5 view .LVU1054
1512:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0)) {
 3190              		.loc 1 1512 8 is_stmt 0 view .LVU1055
 3191 00ac 94F83A33 		ldrb	r3, [r4, #826]	@ zero_extendqisi2
 3192 00b0 022B     		cmp	r3, #2
 3193 00b2 00F0CF80 		beq	.L405
 3194              	.L298:
1511:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 3195              		.loc 1 1511 35 is_stmt 1 view .LVU1056
 3196              	.LVL258:
1511:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 3197              		.loc 1 1511 15 view .LVU1057
 3198              	.LBB244:
1549:lwIP/src/core/dns.c ****       if (age > lseq) {
 3199              		.loc 1 1549 18 is_stmt 0 view .LVU1058
 3200 00b6 A64B     		ldr	r3, .L419+12
 3201              	.LBE244:
1544:lwIP/src/core/dns.c ****       break;
 3202              		.loc 1 1544 14 view .LVU1059
 3203 00b8 A67A     		ldrb	r6, [r4, #10]	@ zero_extendqisi2
 3204              	.LBB245:
1549:lwIP/src/core/dns.c ****       if (age > lseq) {
 3205              		.loc 1 1549 18 view .LVU1060
 3206 00ba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3207              	.LVL259:
1549:lwIP/src/core/dns.c ****       if (age > lseq) {
 3208              		.loc 1 1549 18 view .LVU1061
 3209              	.LBE245:
ARM GAS  /tmp/ccJm3wen.s 			page 121


1542:lwIP/src/core/dns.c ****     /* is it an unused entry ? */
 3210              		.loc 1 1542 5 is_stmt 1 view .LVU1062
1544:lwIP/src/core/dns.c ****       break;
 3211              		.loc 1 1544 5 view .LVU1063
1544:lwIP/src/core/dns.c ****       break;
 3212              		.loc 1 1544 8 is_stmt 0 view .LVU1064
 3213 00bc 002E     		cmp	r6, #0
 3214 00be 00F0BD81 		beq	.L393
1548:lwIP/src/core/dns.c ****       u8_t age = (u8_t)(dns_seqno - entry->seqno);
 3215              		.loc 1 1548 5 is_stmt 1 view .LVU1065
1548:lwIP/src/core/dns.c ****       u8_t age = (u8_t)(dns_seqno - entry->seqno);
 3216              		.loc 1 1548 8 is_stmt 0 view .LVU1066
 3217 00c2 032E     		cmp	r6, #3
 3218 00c4 3AD0     		beq	.L406
1540:lwIP/src/core/dns.c ****   for (i = 0; i < DNS_TABLE_SIZE; ++i) {
 3219              		.loc 1 1540 9 view .LVU1067
 3220 00c6 0426     		movs	r6, #4
1539:lwIP/src/core/dns.c ****   lseqi = DNS_TABLE_SIZE;
 3221              		.loc 1 1539 8 view .LVU1068
 3222 00c8 0023     		movs	r3, #0
 3223              	.L304:
 3224              	.LVL260:
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
 3225              		.loc 1 1541 35 is_stmt 1 view .LVU1069
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
 3226              		.loc 1 1541 15 view .LVU1070
1542:lwIP/src/core/dns.c ****     /* is it an unused entry ? */
 3227              		.loc 1 1542 5 view .LVU1071
1544:lwIP/src/core/dns.c ****       break;
 3228              		.loc 1 1544 5 view .LVU1072
1544:lwIP/src/core/dns.c ****       break;
 3229              		.loc 1 1544 14 is_stmt 0 view .LVU1073
 3230 00ca 94F81A11 		ldrb	r1, [r4, #282]	@ zero_extendqisi2
1544:lwIP/src/core/dns.c ****       break;
 3231              		.loc 1 1544 8 view .LVU1074
 3232 00ce 0029     		cmp	r1, #0
 3233 00d0 00F0BD81 		beq	.L348
1548:lwIP/src/core/dns.c ****       u8_t age = (u8_t)(dns_seqno - entry->seqno);
 3234              		.loc 1 1548 5 is_stmt 1 view .LVU1075
1548:lwIP/src/core/dns.c ****       u8_t age = (u8_t)(dns_seqno - entry->seqno);
 3235              		.loc 1 1548 8 is_stmt 0 view .LVU1076
 3236 00d4 0329     		cmp	r1, #3
 3237 00d6 39D0     		beq	.L407
 3238              	.LVL261:
 3239              	.L305:
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
 3240              		.loc 1 1541 35 is_stmt 1 view .LVU1077
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
 3241              		.loc 1 1541 15 view .LVU1078
1542:lwIP/src/core/dns.c ****     /* is it an unused entry ? */
 3242              		.loc 1 1542 5 view .LVU1079
1544:lwIP/src/core/dns.c ****       break;
 3243              		.loc 1 1544 5 view .LVU1080
1544:lwIP/src/core/dns.c ****       break;
 3244              		.loc 1 1544 14 is_stmt 0 view .LVU1081
 3245 00d8 94F82A12 		ldrb	r1, [r4, #554]	@ zero_extendqisi2
1544:lwIP/src/core/dns.c ****       break;
ARM GAS  /tmp/ccJm3wen.s 			page 122


 3246              		.loc 1 1544 8 view .LVU1082
 3247 00dc 0029     		cmp	r1, #0
 3248 00de 00F0AC81 		beq	.L349
1548:lwIP/src/core/dns.c ****       u8_t age = (u8_t)(dns_seqno - entry->seqno);
 3249              		.loc 1 1548 5 is_stmt 1 view .LVU1083
1548:lwIP/src/core/dns.c ****       u8_t age = (u8_t)(dns_seqno - entry->seqno);
 3250              		.loc 1 1548 8 is_stmt 0 view .LVU1084
 3251 00e2 0329     		cmp	r1, #3
 3252 00e4 3BD0     		beq	.L408
 3253              	.LVL262:
 3254              	.L306:
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
 3255              		.loc 1 1541 35 is_stmt 1 view .LVU1085
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
 3256              		.loc 1 1541 15 view .LVU1086
1542:lwIP/src/core/dns.c ****     /* is it an unused entry ? */
 3257              		.loc 1 1542 5 view .LVU1087
1544:lwIP/src/core/dns.c ****       break;
 3258              		.loc 1 1544 5 view .LVU1088
1544:lwIP/src/core/dns.c ****       break;
 3259              		.loc 1 1544 14 is_stmt 0 view .LVU1089
 3260 00e6 94F83A13 		ldrb	r1, [r4, #826]	@ zero_extendqisi2
1544:lwIP/src/core/dns.c ****       break;
 3261              		.loc 1 1544 8 view .LVU1090
 3262 00ea 0029     		cmp	r1, #0
 3263 00ec 00F0B281 		beq	.L409
1548:lwIP/src/core/dns.c ****       u8_t age = (u8_t)(dns_seqno - entry->seqno);
 3264              		.loc 1 1548 5 is_stmt 1 view .LVU1091
1548:lwIP/src/core/dns.c ****       u8_t age = (u8_t)(dns_seqno - entry->seqno);
 3265              		.loc 1 1548 8 is_stmt 0 view .LVU1092
 3266 00f0 0329     		cmp	r1, #3
 3267 00f2 3DD0     		beq	.L410
 3268              	.L309:
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
 3269              		.loc 1 1541 35 is_stmt 1 view .LVU1093
 3270              	.LVL263:
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
 3271              		.loc 1 1541 15 view .LVU1094
1558:lwIP/src/core/dns.c ****     if ((lseqi >= DNS_TABLE_SIZE) || (dns_table[lseqi].state != DNS_STATE_DONE)) {
 3272              		.loc 1 1558 3 view .LVU1095
1559:lwIP/src/core/dns.c ****       /* no entry can be used now, table is full */
 3273              		.loc 1 1559 5 view .LVU1096
1559:lwIP/src/core/dns.c ****       /* no entry can be used now, table is full */
 3274              		.loc 1 1559 8 is_stmt 0 view .LVU1097
 3275 00f4 042E     		cmp	r6, #4
 3276 00f6 1CD0     		beq	.L356
 3277              	.LVL264:
 3278              	.L310:
1559:lwIP/src/core/dns.c ****       /* no entry can be used now, table is full */
 3279              		.loc 1 1559 55 view .LVU1098
 3280 00f8 06EB0613 		add	r3, r6, r6, lsl #4
 3281 00fc 04EB0314 		add	r4, r4, r3, lsl #4
1559:lwIP/src/core/dns.c ****       /* no entry can be used now, table is full */
 3282              		.loc 1 1559 35 view .LVU1099
 3283 0100 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 3284 0102 032B     		cmp	r3, #3
 3285 0104 15D1     		bne	.L356
ARM GAS  /tmp/ccJm3wen.s 			page 123


 3286              	.LVL265:
 3287              	.L308:
1572:lwIP/src/core/dns.c ****   for (r = 0; r < DNS_MAX_REQUESTS; r++) {
 3288              		.loc 1 1572 3 is_stmt 1 view .LVU1100
1573:lwIP/src/core/dns.c ****     if (dns_requests[r].found == NULL) {
 3289              		.loc 1 1573 3 view .LVU1101
1573:lwIP/src/core/dns.c ****     if (dns_requests[r].found == NULL) {
 3290              		.loc 1 1573 15 view .LVU1102
1574:lwIP/src/core/dns.c ****       req = &dns_requests[r];
 3291              		.loc 1 1574 5 view .LVU1103
1574:lwIP/src/core/dns.c ****       req = &dns_requests[r];
 3292              		.loc 1 1574 24 is_stmt 0 view .LVU1104
 3293 0106 DFF86082 		ldr	r8, .L419+36
1574:lwIP/src/core/dns.c ****       req = &dns_requests[r];
 3294              		.loc 1 1574 8 view .LVU1105
 3295 010a D8F80030 		ldr	r3, [r8]
 3296 010e 002B     		cmp	r3, #0
 3297 0110 00F09B81 		beq	.L394
1573:lwIP/src/core/dns.c ****     if (dns_requests[r].found == NULL) {
 3298              		.loc 1 1573 37 is_stmt 1 view .LVU1106
 3299              	.LVL266:
1573:lwIP/src/core/dns.c ****     if (dns_requests[r].found == NULL) {
 3300              		.loc 1 1573 15 view .LVU1107
1574:lwIP/src/core/dns.c ****       req = &dns_requests[r];
 3301              		.loc 1 1574 5 view .LVU1108
1574:lwIP/src/core/dns.c ****       req = &dns_requests[r];
 3302              		.loc 1 1574 8 is_stmt 0 view .LVU1109
 3303 0114 D8F80C30 		ldr	r3, [r8, #12]
 3304 0118 002B     		cmp	r3, #0
 3305 011a 00F09E81 		beq	.L354
1573:lwIP/src/core/dns.c ****     if (dns_requests[r].found == NULL) {
 3306              		.loc 1 1573 37 is_stmt 1 view .LVU1110
 3307              	.LVL267:
1573:lwIP/src/core/dns.c ****     if (dns_requests[r].found == NULL) {
 3308              		.loc 1 1573 15 view .LVU1111
1574:lwIP/src/core/dns.c ****       req = &dns_requests[r];
 3309              		.loc 1 1574 5 view .LVU1112
1574:lwIP/src/core/dns.c ****       req = &dns_requests[r];
 3310              		.loc 1 1574 8 is_stmt 0 view .LVU1113
 3311 011e D8F81830 		ldr	r3, [r8, #24]
 3312 0122 002B     		cmp	r3, #0
 3313 0124 00F09081 		beq	.L355
1573:lwIP/src/core/dns.c ****     if (dns_requests[r].found == NULL) {
 3314              		.loc 1 1573 37 is_stmt 1 view .LVU1114
 3315              	.LVL268:
1573:lwIP/src/core/dns.c ****     if (dns_requests[r].found == NULL) {
 3316              		.loc 1 1573 15 view .LVU1115
1574:lwIP/src/core/dns.c ****       req = &dns_requests[r];
 3317              		.loc 1 1574 5 view .LVU1116
1574:lwIP/src/core/dns.c ****       req = &dns_requests[r];
 3318              		.loc 1 1574 8 is_stmt 0 view .LVU1117
 3319 0128 D8F82430 		ldr	r3, [r8, #36]
 3320 012c 002B     		cmp	r3, #0
 3321 012e 00F0B280 		beq	.L411
 3322              	.LVL269:
 3323              	.L356:
1562:lwIP/src/core/dns.c ****     } else {
ARM GAS  /tmp/ccJm3wen.s 			page 124


 3324              		.loc 1 1562 14 view .LVU1118
 3325 0132 4FF0FF30 		mov	r0, #-1
 3326              	.LBE243:
 3327              	.LBE242:
 3328              		.loc 1 1753 1 view .LVU1119
 3329 0136 05B0     		add	sp, sp, #20
 3330              	.LCFI38:
 3331              		.cfi_remember_state
 3332              		.cfi_def_cfa_offset 36
 3333              		@ sp needed
 3334 0138 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3335              	.LVL270:
 3336              	.L406:
 3337              	.LCFI39:
 3338              		.cfi_restore_state
 3339              	.LBB278:
 3340              	.LBB274:
 3341              	.LBB246:
1549:lwIP/src/core/dns.c ****       if (age > lseq) {
 3342              		.loc 1 1549 7 is_stmt 1 view .LVU1120
1549:lwIP/src/core/dns.c ****       if (age > lseq) {
 3343              		.loc 1 1549 12 is_stmt 0 view .LVU1121
 3344 013c A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 3345 013e D31A     		subs	r3, r2, r3
 3346              	.LVL271:
1550:lwIP/src/core/dns.c ****         lseq = age;
 3347              		.loc 1 1550 7 is_stmt 1 view .LVU1122
 3348              	.LBE246:
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
 3349              		.loc 1 1541 10 is_stmt 0 view .LVU1123
 3350 0140 13F0FF03 		ands	r3, r3, #255
 3351              	.LVL272:
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
 3352              		.loc 1 1541 10 view .LVU1124
 3353 0144 0CBF     		ite	eq
 3354 0146 0426     		moveq	r6, #4
 3355 0148 0026     		movne	r6, #0
 3356 014a BEE7     		b	.L304
 3357              	.LVL273:
 3358              	.L407:
 3359              	.LBB247:
1549:lwIP/src/core/dns.c ****       if (age > lseq) {
 3360              		.loc 1 1549 7 is_stmt 1 view .LVU1125
1549:lwIP/src/core/dns.c ****       if (age > lseq) {
 3361              		.loc 1 1549 12 is_stmt 0 view .LVU1126
 3362 014c 94F81E11 		ldrb	r1, [r4, #286]	@ zero_extendqisi2
 3363 0150 511A     		subs	r1, r2, r1
 3364 0152 C9B2     		uxtb	r1, r1
 3365              	.LVL274:
1550:lwIP/src/core/dns.c ****         lseq = age;
 3366              		.loc 1 1550 7 is_stmt 1 view .LVU1127
1550:lwIP/src/core/dns.c ****         lseq = age;
 3367              		.loc 1 1550 10 is_stmt 0 view .LVU1128
 3368 0154 8B42     		cmp	r3, r1
 3369 0156 BFD2     		bcs	.L305
 3370              	.LVL275:
1550:lwIP/src/core/dns.c ****         lseq = age;
ARM GAS  /tmp/ccJm3wen.s 			page 125


 3371              		.loc 1 1550 10 view .LVU1129
 3372 0158 0B46     		mov	r3, r1
 3373              	.LBE247:
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
 3374              		.loc 1 1541 35 view .LVU1130
 3375 015a 0126     		movs	r6, #1
 3376              	.LVL276:
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
 3377              		.loc 1 1541 35 view .LVU1131
 3378 015c BCE7     		b	.L305
 3379              	.LVL277:
 3380              	.L408:
 3381              	.LBB248:
1549:lwIP/src/core/dns.c ****       if (age > lseq) {
 3382              		.loc 1 1549 7 is_stmt 1 view .LVU1132
1549:lwIP/src/core/dns.c ****       if (age > lseq) {
 3383              		.loc 1 1549 12 is_stmt 0 view .LVU1133
 3384 015e 94F82E12 		ldrb	r1, [r4, #558]	@ zero_extendqisi2
 3385 0162 511A     		subs	r1, r2, r1
 3386 0164 C9B2     		uxtb	r1, r1
 3387              	.LVL278:
1550:lwIP/src/core/dns.c ****         lseq = age;
 3388              		.loc 1 1550 7 is_stmt 1 view .LVU1134
1550:lwIP/src/core/dns.c ****         lseq = age;
 3389              		.loc 1 1550 10 is_stmt 0 view .LVU1135
 3390 0166 8B42     		cmp	r3, r1
 3391 0168 BDD2     		bcs	.L306
 3392              	.LVL279:
1550:lwIP/src/core/dns.c ****         lseq = age;
 3393              		.loc 1 1550 10 view .LVU1136
 3394 016a 0B46     		mov	r3, r1
 3395              	.LBE248:
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
 3396              		.loc 1 1541 35 view .LVU1137
 3397 016c 0226     		movs	r6, #2
 3398              	.LVL280:
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
 3399              		.loc 1 1541 35 view .LVU1138
 3400 016e BAE7     		b	.L306
 3401              	.LVL281:
 3402              	.L410:
 3403              	.LBB249:
1549:lwIP/src/core/dns.c ****       if (age > lseq) {
 3404              		.loc 1 1549 7 is_stmt 1 view .LVU1139
1550:lwIP/src/core/dns.c ****         lseq = age;
 3405              		.loc 1 1550 7 view .LVU1140
1549:lwIP/src/core/dns.c ****       if (age > lseq) {
 3406              		.loc 1 1549 12 is_stmt 0 view .LVU1141
 3407 0170 94F83E03 		ldrb	r0, [r4, #830]	@ zero_extendqisi2
 3408 0174 101A     		subs	r0, r2, r0
1550:lwIP/src/core/dns.c ****         lseq = age;
 3409              		.loc 1 1550 10 view .LVU1142
 3410 0176 C0B2     		uxtb	r0, r0
 3411 0178 9842     		cmp	r0, r3
 3412 017a BBD9     		bls	.L309
 3413              	.LBE249:
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
ARM GAS  /tmp/ccJm3wen.s 			page 126


 3414              		.loc 1 1541 35 view .LVU1143
 3415 017c 0E46     		mov	r6, r1
 3416              	.LVL282:
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
 3417              		.loc 1 1541 35 view .LVU1144
 3418 017e BBE7     		b	.L310
 3419              	.LVL283:
 3420              	.L402:
1513:lwIP/src/core/dns.c **** #if LWIP_IPV4 && LWIP_IPV6
 3421              		.loc 1 1513 10 view .LVU1145
 3422 0180 4FF48072 		mov	r2, #256
 3423 0184 7349     		ldr	r1, .L419+16
 3424 0186 5846     		mov	r0, fp
 3425 0188 FFF7FEFF 		bl	lwip_strnicmp
 3426              	.LVL284:
1512:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0)) {
 3427              		.loc 1 1512 50 view .LVU1146
 3428 018c 0028     		cmp	r0, #0
 3429 018e 83D1     		bne	.L291
 3430              	.LVL285:
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3431              		.loc 1 1523 19 is_stmt 1 view .LVU1147
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3432              		.loc 1 1524 9 view .LVU1148
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3433              		.loc 1 1524 28 is_stmt 0 view .LVU1149
 3434 0190 DFF8D481 		ldr	r8, .L419+36
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3435              		.loc 1 1524 12 view .LVU1150
 3436 0194 D8F80060 		ldr	r6, [r8]
 3437              	.LVL286:
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3438              		.loc 1 1524 12 view .LVU1151
 3439 0198 7EB1     		cbz	r6, .L300
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3440              		.loc 1 1523 41 is_stmt 1 view .LVU1152
 3441              	.LVL287:
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3442              		.loc 1 1523 19 view .LVU1153
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3443              		.loc 1 1524 9 view .LVU1154
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3444              		.loc 1 1524 12 is_stmt 0 view .LVU1155
 3445 019a D8F80C60 		ldr	r6, [r8, #12]
 3446 019e 002E     		cmp	r6, #0
 3447 01a0 00F09C81 		beq	.L293
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3448              		.loc 1 1523 41 is_stmt 1 view .LVU1156
 3449              	.LVL288:
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3450              		.loc 1 1523 19 view .LVU1157
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3451              		.loc 1 1524 9 view .LVU1158
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3452              		.loc 1 1524 12 is_stmt 0 view .LVU1159
 3453 01a4 D8F81860 		ldr	r6, [r8, #24]
 3454 01a8 002E     		cmp	r6, #0
ARM GAS  /tmp/ccJm3wen.s 			page 127


 3455 01aa 00F09A81 		beq	.L294
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3456              		.loc 1 1523 41 is_stmt 1 view .LVU1160
 3457              	.LVL289:
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3458              		.loc 1 1523 19 view .LVU1161
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3459              		.loc 1 1524 9 view .LVU1162
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3460              		.loc 1 1524 12 is_stmt 0 view .LVU1163
 3461 01ae D8F82460 		ldr	r6, [r8, #36]
 3462 01b2 002E     		cmp	r6, #0
 3463 01b4 7FF470AF 		bne	.L291
 3464              	.LVL290:
 3465              	.L295:
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3466              		.loc 1 1524 28 view .LVU1164
 3467 01b8 0325     		movs	r5, #3
 3468              	.LVL291:
 3469              	.L300:
1525:lwIP/src/core/dns.c ****           dns_requests[r].arg = callback_arg;
 3470              		.loc 1 1525 11 is_stmt 1 view .LVU1165
1525:lwIP/src/core/dns.c ****           dns_requests[r].arg = callback_arg;
 3471              		.loc 1 1525 33 is_stmt 0 view .LVU1166
 3472 01ba 05EB4505 		add	r5, r5, r5, lsl #1
1530:lwIP/src/core/dns.c ****         }
 3473              		.loc 1 1530 18 view .LVU1167
 3474 01be 6FF00400 		mvn	r0, #4
1525:lwIP/src/core/dns.c ****           dns_requests[r].arg = callback_arg;
 3475              		.loc 1 1525 33 view .LVU1168
 3476 01c2 48F82590 		str	r9, [r8, r5, lsl #2]
1526:lwIP/src/core/dns.c ****           dns_requests[r].dns_table_idx = i;
 3477              		.loc 1 1526 11 is_stmt 1 view .LVU1169
1525:lwIP/src/core/dns.c ****           dns_requests[r].arg = callback_arg;
 3478              		.loc 1 1525 33 is_stmt 0 view .LVU1170
 3479 01c6 08EB8508 		add	r8, r8, r5, lsl #2
1526:lwIP/src/core/dns.c ****           dns_requests[r].dns_table_idx = i;
 3480              		.loc 1 1526 31 view .LVU1171
 3481 01ca C8F80470 		str	r7, [r8, #4]
1527:lwIP/src/core/dns.c ****           LWIP_DNS_SET_ADDRTYPE(dns_requests[r].reqaddrtype, dns_addrtype);
 3482              		.loc 1 1527 11 is_stmt 1 view .LVU1172
1527:lwIP/src/core/dns.c ****           LWIP_DNS_SET_ADDRTYPE(dns_requests[r].reqaddrtype, dns_addrtype);
 3483              		.loc 1 1527 41 is_stmt 0 view .LVU1173
 3484 01ce 88F80860 		strb	r6, [r8, #8]
1528:lwIP/src/core/dns.c ****           LWIP_DEBUGF(DNS_DEBUG, ("dns_enqueue: \"%s\": duplicate request\n", name));
 3485              		.loc 1 1528 75 is_stmt 1 view .LVU1174
1529:lwIP/src/core/dns.c ****           return ERR_INPROGRESS;
 3486              		.loc 1 1529 85 view .LVU1175
1530:lwIP/src/core/dns.c ****         }
 3487              		.loc 1 1530 11 view .LVU1176
1530:lwIP/src/core/dns.c ****         }
 3488              		.loc 1 1530 18 is_stmt 0 view .LVU1177
 3489 01d2 36E7     		b	.L386
 3490              	.LVL292:
 3491              	.L403:
1513:lwIP/src/core/dns.c **** #if LWIP_IPV4 && LWIP_IPV6
 3492              		.loc 1 1513 10 view .LVU1178
ARM GAS  /tmp/ccJm3wen.s 			page 128


 3493 01d4 4FF48072 		mov	r2, #256
 3494 01d8 5F49     		ldr	r1, .L419+20
 3495 01da 5846     		mov	r0, fp
 3496 01dc FFF7FEFF 		bl	lwip_strnicmp
 3497              	.LVL293:
1512:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0)) {
 3498              		.loc 1 1512 50 view .LVU1179
 3499 01e0 0028     		cmp	r0, #0
 3500 01e2 7FF45EAF 		bne	.L296
 3501              	.LVL294:
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3502              		.loc 1 1523 19 is_stmt 1 view .LVU1180
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3503              		.loc 1 1524 9 view .LVU1181
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3504              		.loc 1 1524 28 is_stmt 0 view .LVU1182
 3505 01e6 DFF88081 		ldr	r8, .L419+36
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3506              		.loc 1 1524 12 view .LVU1183
 3507 01ea D8F80030 		ldr	r3, [r8]
 3508 01ee 002B     		cmp	r3, #0
 3509 01f0 00F07B81 		beq	.L341
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3510              		.loc 1 1523 41 is_stmt 1 view .LVU1184
 3511              	.LVL295:
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3512              		.loc 1 1523 19 view .LVU1185
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3513              		.loc 1 1524 9 view .LVU1186
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3514              		.loc 1 1524 12 is_stmt 0 view .LVU1187
 3515 01f4 D8F80C30 		ldr	r3, [r8, #12]
 3516 01f8 002B     		cmp	r3, #0
 3517 01fa 00F06E81 		beq	.L342
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3518              		.loc 1 1523 41 is_stmt 1 view .LVU1188
 3519              	.LVL296:
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3520              		.loc 1 1523 19 view .LVU1189
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3521              		.loc 1 1524 9 view .LVU1190
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3522              		.loc 1 1524 12 is_stmt 0 view .LVU1191
 3523 01fe D8F81830 		ldr	r3, [r8, #24]
 3524 0202 002B     		cmp	r3, #0
 3525 0204 00F06C81 		beq	.L343
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3526              		.loc 1 1523 41 is_stmt 1 view .LVU1192
 3527              	.LVL297:
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3528              		.loc 1 1523 19 view .LVU1193
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3529              		.loc 1 1524 9 view .LVU1194
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3530              		.loc 1 1524 12 is_stmt 0 view .LVU1195
 3531 0208 D8F82430 		ldr	r3, [r8, #36]
 3532 020c 002B     		cmp	r3, #0
ARM GAS  /tmp/ccJm3wen.s 			page 129


 3533 020e 7FF448AF 		bne	.L296
1511:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 3534              		.loc 1 1511 36 view .LVU1196
 3535 0212 0126     		movs	r6, #1
 3536 0214 D0E7     		b	.L295
 3537              	.LVL298:
 3538              	.L404:
1513:lwIP/src/core/dns.c **** #if LWIP_IPV4 && LWIP_IPV6
 3539              		.loc 1 1513 10 view .LVU1197
 3540 0216 4FF48072 		mov	r2, #256
 3541 021a 5049     		ldr	r1, .L419+24
 3542 021c 5846     		mov	r0, fp
 3543 021e FFF7FEFF 		bl	lwip_strnicmp
 3544              	.LVL299:
1512:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0)) {
 3545              		.loc 1 1512 50 view .LVU1198
 3546 0222 0028     		cmp	r0, #0
 3547 0224 7FF442AF 		bne	.L297
 3548              	.LVL300:
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3549              		.loc 1 1523 19 is_stmt 1 view .LVU1199
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3550              		.loc 1 1524 9 view .LVU1200
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3551              		.loc 1 1524 28 is_stmt 0 view .LVU1201
 3552 0228 DFF83C81 		ldr	r8, .L419+36
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3553              		.loc 1 1524 12 view .LVU1202
 3554 022c D8F80030 		ldr	r3, [r8]
 3555 0230 002B     		cmp	r3, #0
 3556 0232 C2D0     		beq	.L300
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3557              		.loc 1 1523 41 is_stmt 1 view .LVU1203
 3558              	.LVL301:
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3559              		.loc 1 1523 19 view .LVU1204
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3560              		.loc 1 1524 9 view .LVU1205
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3561              		.loc 1 1524 12 is_stmt 0 view .LVU1206
 3562 0234 D8F80C30 		ldr	r3, [r8, #12]
 3563 0238 002B     		cmp	r3, #0
 3564 023a 00F04F81 		beq	.L293
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3565              		.loc 1 1523 41 is_stmt 1 view .LVU1207
 3566              	.LVL302:
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3567              		.loc 1 1523 19 view .LVU1208
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3568              		.loc 1 1524 9 view .LVU1209
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3569              		.loc 1 1524 12 is_stmt 0 view .LVU1210
 3570 023e D8F81830 		ldr	r3, [r8, #24]
 3571 0242 002B     		cmp	r3, #0
 3572 0244 00F04D81 		beq	.L294
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3573              		.loc 1 1523 41 is_stmt 1 view .LVU1211
ARM GAS  /tmp/ccJm3wen.s 			page 130


 3574              	.LVL303:
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3575              		.loc 1 1523 19 view .LVU1212
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3576              		.loc 1 1524 9 view .LVU1213
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3577              		.loc 1 1524 12 is_stmt 0 view .LVU1214
 3578 0248 D8F82430 		ldr	r3, [r8, #36]
 3579 024c 002B     		cmp	r3, #0
 3580 024e 7FF42DAF 		bne	.L297
 3581 0252 B1E7     		b	.L295
 3582              	.LVL304:
 3583              	.L405:
1513:lwIP/src/core/dns.c **** #if LWIP_IPV4 && LWIP_IPV6
 3584              		.loc 1 1513 10 view .LVU1215
 3585 0254 4FF48072 		mov	r2, #256
 3586 0258 4149     		ldr	r1, .L419+28
 3587 025a 5846     		mov	r0, fp
 3588 025c FFF7FEFF 		bl	lwip_strnicmp
 3589              	.LVL305:
1512:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0)) {
 3590              		.loc 1 1512 50 view .LVU1216
 3591 0260 0028     		cmp	r0, #0
 3592 0262 7FF428AF 		bne	.L298
 3593              	.LVL306:
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3594              		.loc 1 1523 19 is_stmt 1 view .LVU1217
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3595              		.loc 1 1524 9 view .LVU1218
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3596              		.loc 1 1524 28 is_stmt 0 view .LVU1219
 3597 0266 DFF80081 		ldr	r8, .L419+36
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3598              		.loc 1 1524 12 view .LVU1220
 3599 026a D8F80030 		ldr	r3, [r8]
 3600 026e 002B     		cmp	r3, #0
 3601 0270 00F03981 		beq	.L412
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3602              		.loc 1 1523 41 is_stmt 1 view .LVU1221
 3603              	.LVL307:
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3604              		.loc 1 1523 19 view .LVU1222
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3605              		.loc 1 1524 9 view .LVU1223
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3606              		.loc 1 1524 12 is_stmt 0 view .LVU1224
 3607 0274 D8F80C30 		ldr	r3, [r8, #12]
 3608 0278 002B     		cmp	r3, #0
 3609 027a 00F03881 		beq	.L413
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3610              		.loc 1 1523 41 is_stmt 1 view .LVU1225
 3611              	.LVL308:
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3612              		.loc 1 1523 19 view .LVU1226
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3613              		.loc 1 1524 9 view .LVU1227
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
ARM GAS  /tmp/ccJm3wen.s 			page 131


 3614              		.loc 1 1524 12 is_stmt 0 view .LVU1228
 3615 027e D8F81830 		ldr	r3, [r8, #24]
 3616 0282 002B     		cmp	r3, #0
 3617 0284 00F03581 		beq	.L414
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3618              		.loc 1 1523 41 is_stmt 1 view .LVU1229
 3619              	.LVL309:
1523:lwIP/src/core/dns.c ****         if (dns_requests[r].found == 0) {
 3620              		.loc 1 1523 19 view .LVU1230
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3621              		.loc 1 1524 9 view .LVU1231
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 3622              		.loc 1 1524 12 is_stmt 0 view .LVU1232
 3623 0288 D8F82430 		ldr	r3, [r8, #36]
 3624 028c 002B     		cmp	r3, #0
 3625 028e 7FF412AF 		bne	.L298
1511:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 3626              		.loc 1 1511 36 view .LVU1233
 3627 0292 0326     		movs	r6, #3
 3628 0294 90E7     		b	.L295
 3629              	.LVL310:
 3630              	.L411:
1574:lwIP/src/core/dns.c ****       req = &dns_requests[r];
 3631              		.loc 1 1574 24 view .LVU1234
 3632 0296 0323     		movs	r3, #3
 3633 0298 0193     		str	r3, [sp, #4]
 3634              	.LVL311:
 3635              	.L311:
1575:lwIP/src/core/dns.c ****       break;
 3636              		.loc 1 1575 7 is_stmt 1 view .LVU1235
1576:lwIP/src/core/dns.c ****     }
 3637              		.loc 1 1576 7 view .LVU1236
1579:lwIP/src/core/dns.c ****     /* no request entry can be used now, table is full */
 3638              		.loc 1 1579 3 view .LVU1237
1584:lwIP/src/core/dns.c **** #else
 3639              		.loc 1 1584 3 view .LVU1238
1584:lwIP/src/core/dns.c **** #else
 3640              		.loc 1 1584 22 is_stmt 0 view .LVU1239
 3641 029a 03EB4303 		add	r3, r3, r3, lsl #1
1601:lwIP/src/core/dns.c ****   entry->name[namelen] = 0;
 3642              		.loc 1 1601 3 view .LVU1240
 3643 029e 5946     		mov	r1, fp
1594:lwIP/src/core/dns.c ****   entry->seqno = dns_seqno;
 3644              		.loc 1 1594 16 view .LVU1241
 3645 02a0 4FF0010B 		mov	fp, #1
 3646              	.LVL312:
1595:lwIP/src/core/dns.c ****   LWIP_DNS_SET_ADDRTYPE(entry->reqaddrtype, dns_addrtype);
 3647              		.loc 1 1595 16 view .LVU1242
 3648 02a4 A273     		strb	r2, [r4, #14]
1598:lwIP/src/core/dns.c ****   req->arg   = callback_arg;
 3649              		.loc 1 1598 14 view .LVU1243
 3650 02a6 48F82390 		str	r9, [r8, r3, lsl #2]
1584:lwIP/src/core/dns.c **** #else
 3651              		.loc 1 1584 22 view .LVU1244
 3652 02aa 08EB8303 		add	r3, r8, r3, lsl #2
1601:lwIP/src/core/dns.c ****   entry->name[namelen] = 0;
 3653              		.loc 1 1601 3 view .LVU1245
ARM GAS  /tmp/ccJm3wen.s 			page 132


 3654 02ae 5246     		mov	r2, r10
 3655 02b0 04F11000 		add	r0, r4, #16
1584:lwIP/src/core/dns.c **** #else
 3656              		.loc 1 1584 22 view .LVU1246
 3657 02b4 1E72     		strb	r6, [r3, #8]
1591:lwIP/src/core/dns.c **** 
 3658              		.loc 1 1591 94 is_stmt 1 view .LVU1247
1594:lwIP/src/core/dns.c ****   entry->seqno = dns_seqno;
 3659              		.loc 1 1594 3 view .LVU1248
1602:lwIP/src/core/dns.c **** 
 3660              		.loc 1 1602 24 is_stmt 0 view .LVU1249
 3661 02b6 A244     		add	r10, r10, r4
 3662              	.LVL313:
1599:lwIP/src/core/dns.c ****   namelen = LWIP_MIN(hostnamelen, DNS_MAX_NAME_LENGTH - 1);
 3663              		.loc 1 1599 14 view .LVU1250
 3664 02b8 5F60     		str	r7, [r3, #4]
1594:lwIP/src/core/dns.c ****   entry->seqno = dns_seqno;
 3665              		.loc 1 1594 16 view .LVU1251
 3666 02ba 84F80AB0 		strb	fp, [r4, #10]
1595:lwIP/src/core/dns.c ****   LWIP_DNS_SET_ADDRTYPE(entry->reqaddrtype, dns_addrtype);
 3667              		.loc 1 1595 3 is_stmt 1 view .LVU1252
1596:lwIP/src/core/dns.c ****   LWIP_DNS_SET_ADDRTYPE(req->reqaddrtype, dns_addrtype);
 3668              		.loc 1 1596 58 view .LVU1253
1597:lwIP/src/core/dns.c ****   req->found = found;
 3669              		.loc 1 1597 56 view .LVU1254
1598:lwIP/src/core/dns.c ****   req->arg   = callback_arg;
 3670              		.loc 1 1598 3 view .LVU1255
1599:lwIP/src/core/dns.c ****   namelen = LWIP_MIN(hostnamelen, DNS_MAX_NAME_LENGTH - 1);
 3671              		.loc 1 1599 3 view .LVU1256
1600:lwIP/src/core/dns.c ****   MEMCPY(entry->name, name, namelen);
 3672              		.loc 1 1600 3 view .LVU1257
1601:lwIP/src/core/dns.c ****   entry->name[namelen] = 0;
 3673              		.loc 1 1601 3 view .LVU1258
 3674 02be FFF7FEFF 		bl	memcpy
 3675              	.LVL314:
1602:lwIP/src/core/dns.c **** 
 3676              		.loc 1 1602 3 view .LVU1259
 3677              	.LBB250:
 3678              	.LBB251:
1030:lwIP/src/core/dns.c ****       break;
 3679              		.loc 1 1030 17 is_stmt 0 view .LVU1260
 3680 02c2 DFF8A890 		ldr	r9, .L419+40
 3681              	.LVL315:
1030:lwIP/src/core/dns.c ****       break;
 3682              		.loc 1 1030 17 view .LVU1261
 3683              	.LBE251:
 3684              	.LBE250:
1584:lwIP/src/core/dns.c **** #else
 3685              		.loc 1 1584 22 view .LVU1262
 3686 02c6 0199     		ldr	r1, [sp, #4]
1602:lwIP/src/core/dns.c **** 
 3687              		.loc 1 1602 24 view .LVU1263
 3688 02c8 0022     		movs	r2, #0
 3689              	.LBB266:
 3690              	.LBB258:
1030:lwIP/src/core/dns.c ****       break;
 3691              		.loc 1 1030 8 view .LVU1264
ARM GAS  /tmp/ccJm3wen.s 			page 133


 3692 02ca D9F80030 		ldr	r3, [r9]
 3693              	.LBE258:
 3694              	.LBE266:
1584:lwIP/src/core/dns.c **** #else
 3695              		.loc 1 1584 22 view .LVU1265
 3696 02ce 01FA0BF1 		lsl	r1, r1, fp
1602:lwIP/src/core/dns.c **** 
 3697              		.loc 1 1602 24 view .LVU1266
 3698 02d2 8AF81020 		strb	r2, [r10, #16]
1605:lwIP/src/core/dns.c ****   if (entry->pcb_idx >= DNS_MAX_SOURCE_PORTS) {
 3699              		.loc 1 1605 3 is_stmt 1 view .LVU1267
 3700              	.LBB267:
 3701              	.LBI250:
1024:lwIP/src/core/dns.c **** {
 3702              		.loc 1 1024 1 view .LVU1268
 3703              	.LBB259:
1026:lwIP/src/core/dns.c ****   u8_t idx;
 3704              		.loc 1 1026 3 view .LVU1269
1027:lwIP/src/core/dns.c **** 
 3705              		.loc 1 1027 3 view .LVU1270
1029:lwIP/src/core/dns.c ****     if (dns_pcbs[i] == NULL) {
 3706              		.loc 1 1029 3 view .LVU1271
 3707              	.LVL316:
1029:lwIP/src/core/dns.c ****     if (dns_pcbs[i] == NULL) {
 3708              		.loc 1 1029 15 view .LVU1272
1030:lwIP/src/core/dns.c ****       break;
 3709              		.loc 1 1030 5 view .LVU1273
 3710              	.LBE259:
 3711              	.LBE267:
1584:lwIP/src/core/dns.c **** #else
 3712              		.loc 1 1584 22 is_stmt 0 view .LVU1274
 3713 02d6 0291     		str	r1, [sp, #8]
 3714              	.LBB268:
 3715              	.LBB260:
1030:lwIP/src/core/dns.c ****       break;
 3716              		.loc 1 1030 8 view .LVU1275
 3717 02d8 002B     		cmp	r3, #0
 3718 02da 00F0C380 		beq	.L357
1029:lwIP/src/core/dns.c ****     if (dns_pcbs[i] == NULL) {
 3719              		.loc 1 1029 41 is_stmt 1 view .LVU1276
 3720              	.LVL317:
1029:lwIP/src/core/dns.c ****     if (dns_pcbs[i] == NULL) {
 3721              		.loc 1 1029 15 view .LVU1277
1030:lwIP/src/core/dns.c ****       break;
 3722              		.loc 1 1030 5 view .LVU1278
1030:lwIP/src/core/dns.c ****       break;
 3723              		.loc 1 1030 8 is_stmt 0 view .LVU1279
 3724 02de D9F80430 		ldr	r3, [r9, #4]
 3725 02e2 002B     		cmp	r3, #0
 3726 02e4 00F0E880 		beq	.L358
1029:lwIP/src/core/dns.c ****     if (dns_pcbs[i] == NULL) {
 3727              		.loc 1 1029 41 is_stmt 1 view .LVU1280
 3728              	.LVL318:
1029:lwIP/src/core/dns.c ****     if (dns_pcbs[i] == NULL) {
 3729              		.loc 1 1029 15 view .LVU1281
1030:lwIP/src/core/dns.c ****       break;
 3730              		.loc 1 1030 5 view .LVU1282
ARM GAS  /tmp/ccJm3wen.s 			page 134


1030:lwIP/src/core/dns.c ****       break;
 3731              		.loc 1 1030 8 is_stmt 0 view .LVU1283
 3732 02e8 D9F80830 		ldr	r3, [r9, #8]
 3733 02ec 002B     		cmp	r3, #0
 3734 02ee 00F0E780 		beq	.L359
1029:lwIP/src/core/dns.c ****     if (dns_pcbs[i] == NULL) {
 3735              		.loc 1 1029 41 is_stmt 1 view .LVU1284
 3736              	.LVL319:
1029:lwIP/src/core/dns.c ****     if (dns_pcbs[i] == NULL) {
 3737              		.loc 1 1029 15 view .LVU1285
1030:lwIP/src/core/dns.c ****       break;
 3738              		.loc 1 1030 5 view .LVU1286
1030:lwIP/src/core/dns.c ****       break;
 3739              		.loc 1 1030 8 is_stmt 0 view .LVU1287
 3740 02f2 D9F80C30 		ldr	r3, [r9, #12]
 3741 02f6 002B     		cmp	r3, #0
 3742 02f8 00F0E580 		beq	.L415
 3743              	.LVL320:
 3744              	.L313:
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3745              		.loc 1 1044 3 is_stmt 1 view .LVU1288
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3746              		.loc 1 1044 21 is_stmt 0 view .LVU1289
 3747 02fc 194A     		ldr	r2, .L419+32
 3748 02fe 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3749              		.loc 1 1044 19 view .LVU1290
 3750 0300 5F1C     		adds	r7, r3, #1
 3751 0302 FFB2     		uxtb	r7, r7
 3752              	.LVL321:
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3753              		.loc 1 1044 51 is_stmt 1 view .LVU1291
1045:lwIP/src/core/dns.c ****       idx = 0;
 3754              		.loc 1 1045 5 view .LVU1292
1045:lwIP/src/core/dns.c ****       idx = 0;
 3755              		.loc 1 1045 8 is_stmt 0 view .LVU1293
 3756 0304 032F     		cmp	r7, #3
 3757 0306 33D8     		bhi	.L318
1048:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
 3758              		.loc 1 1048 5 is_stmt 1 view .LVU1294
1048:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
 3759              		.loc 1 1048 8 is_stmt 0 view .LVU1295
 3760 0308 59F82710 		ldr	r1, [r9, r7, lsl #2]
 3761 030c 71B9     		cbnz	r1, .L319
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3762              		.loc 1 1044 77 is_stmt 1 view .LVU1296
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3763              		.loc 1 1044 85 is_stmt 0 view .LVU1297
 3764 030e 9F1C     		adds	r7, r3, #2
 3765              	.LVL322:
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3766              		.loc 1 1044 85 view .LVU1298
 3767 0310 FFB2     		uxtb	r7, r7
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3768              		.loc 1 1044 51 is_stmt 1 view .LVU1299
1045:lwIP/src/core/dns.c ****       idx = 0;
 3769              		.loc 1 1045 5 view .LVU1300
ARM GAS  /tmp/ccJm3wen.s 			page 135


1045:lwIP/src/core/dns.c ****       idx = 0;
 3770              		.loc 1 1045 8 is_stmt 0 view .LVU1301
 3771 0312 042F     		cmp	r7, #4
 3772 0314 4ED1     		bne	.L416
 3773              	.LVL323:
1048:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
 3774              		.loc 1 1048 5 is_stmt 1 view .LVU1302
1048:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
 3775              		.loc 1 1048 8 is_stmt 0 view .LVU1303
 3776 0316 D9F80030 		ldr	r3, [r9]
 3777 031a 002B     		cmp	r3, #0
 3778 031c 40F0A080 		bne	.L364
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3779              		.loc 1 1044 77 is_stmt 1 view .LVU1304
 3780              	.LVL324:
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3781              		.loc 1 1044 51 view .LVU1305
1045:lwIP/src/core/dns.c ****       idx = 0;
 3782              		.loc 1 1045 5 view .LVU1306
1048:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
 3783              		.loc 1 1048 5 view .LVU1307
1048:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
 3784              		.loc 1 1048 8 is_stmt 0 view .LVU1308
 3785 0320 D9F80430 		ldr	r3, [r9, #4]
 3786 0324 002B     		cmp	r3, #0
 3787 0326 00F0E980 		beq	.L417
 3788              	.L366:
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3789              		.loc 1 1044 85 view .LVU1309
 3790 032a 0127     		movs	r7, #1
 3791              	.LVL325:
 3792              	.L319:
1049:lwIP/src/core/dns.c ****       return idx;
 3793              		.loc 1 1049 7 is_stmt 1 view .LVU1310
1049:lwIP/src/core/dns.c ****       return idx;
 3794              		.loc 1 1049 24 is_stmt 0 view .LVU1311
 3795 032c 1770     		strb	r7, [r2]
1050:lwIP/src/core/dns.c ****     }
 3796              		.loc 1 1050 7 is_stmt 1 view .LVU1312
 3797              	.L317:
 3798              	.LBE260:
 3799              	.LBE268:
1620:lwIP/src/core/dns.c **** 
 3800              		.loc 1 1620 12 is_stmt 0 view .LVU1313
 3801 032e 084A     		ldr	r2, .L419+12
1623:lwIP/src/core/dns.c **** 
 3802              		.loc 1 1623 3 view .LVU1314
 3803 0330 3046     		mov	r0, r6
1605:lwIP/src/core/dns.c ****   if (entry->pcb_idx >= DNS_MAX_SOURCE_PORTS) {
 3804              		.loc 1 1605 18 view .LVU1315
 3805 0332 E773     		strb	r7, [r4, #15]
1606:lwIP/src/core/dns.c ****     /* failed to get a UDP pcb */
 3806              		.loc 1 1606 3 is_stmt 1 view .LVU1316
1613:lwIP/src/core/dns.c **** #endif
 3807              		.loc 1 1613 105 view .LVU1317
1620:lwIP/src/core/dns.c **** 
 3808              		.loc 1 1620 3 view .LVU1318
ARM GAS  /tmp/ccJm3wen.s 			page 136


1620:lwIP/src/core/dns.c **** 
 3809              		.loc 1 1620 12 is_stmt 0 view .LVU1319
 3810 0334 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3811 0336 0133     		adds	r3, r3, #1
 3812 0338 1370     		strb	r3, [r2]
1623:lwIP/src/core/dns.c **** 
 3813              		.loc 1 1623 3 is_stmt 1 view .LVU1320
 3814 033a FFF7FEFF 		bl	dns_check_entry
 3815              	.LVL326:
1626:lwIP/src/core/dns.c **** }
 3816              		.loc 1 1626 3 view .LVU1321
1626:lwIP/src/core/dns.c **** }
 3817              		.loc 1 1626 10 is_stmt 0 view .LVU1322
 3818 033e 6FF00400 		mvn	r0, #4
 3819              	.LVL327:
1626:lwIP/src/core/dns.c **** }
 3820              		.loc 1 1626 10 view .LVU1323
 3821 0342 7EE6     		b	.L386
 3822              	.L420:
 3823              		.align	2
 3824              	.L419:
 3825 0344 00000000 		.word	.LANCHOR4
 3826 0348 00000000 		.word	.LANCHOR0
 3827 034c 00000000 		.word	.LANCHOR3
 3828 0350 00000000 		.word	.LANCHOR5
 3829 0354 10000000 		.word	.LANCHOR0+16
 3830 0358 20010000 		.word	.LANCHOR0+288
 3831 035c 30020000 		.word	.LANCHOR0+560
 3832 0360 40030000 		.word	.LANCHOR0+832
 3833 0364 00000000 		.word	.LANCHOR6
 3834 0368 00000000 		.word	.LANCHOR1
 3835 036c 00000000 		.word	.LANCHOR2
 3836              	.LVL328:
 3837              	.L318:
 3838              	.LBB269:
 3839              	.LBB261:
1048:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
 3840              		.loc 1 1048 5 is_stmt 1 view .LVU1324
1048:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
 3841              		.loc 1 1048 8 is_stmt 0 view .LVU1325
 3842 0370 D9F80030 		ldr	r3, [r9]
 3843 0374 002B     		cmp	r3, #0
 3844 0376 73D1     		bne	.L364
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3845              		.loc 1 1044 77 is_stmt 1 view .LVU1326
 3846              	.LVL329:
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3847              		.loc 1 1044 51 view .LVU1327
1045:lwIP/src/core/dns.c ****       idx = 0;
 3848              		.loc 1 1045 5 view .LVU1328
1048:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
 3849              		.loc 1 1048 5 view .LVU1329
1048:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
 3850              		.loc 1 1048 8 is_stmt 0 view .LVU1330
 3851 0378 D9F80430 		ldr	r3, [r9, #4]
 3852 037c 002B     		cmp	r3, #0
 3853 037e D4D1     		bne	.L366
ARM GAS  /tmp/ccJm3wen.s 			page 137


1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3854              		.loc 1 1044 85 view .LVU1331
 3855 0380 0227     		movs	r7, #2
 3856              	.LVL330:
 3857              	.L329:
1048:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
 3858              		.loc 1 1048 5 is_stmt 1 view .LVU1332
1048:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
 3859              		.loc 1 1048 8 is_stmt 0 view .LVU1333
 3860 0382 59F82730 		ldr	r3, [r9, r7, lsl #2]
 3861 0386 002B     		cmp	r3, #0
 3862 0388 D0D1     		bne	.L319
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3863              		.loc 1 1044 77 is_stmt 1 view .LVU1334
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3864              		.loc 1 1044 85 is_stmt 0 view .LVU1335
 3865 038a 0137     		adds	r7, r7, #1
 3866              	.LVL331:
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3867              		.loc 1 1044 85 view .LVU1336
 3868 038c FFB2     		uxtb	r7, r7
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3869              		.loc 1 1044 51 is_stmt 1 view .LVU1337
1045:lwIP/src/core/dns.c ****       idx = 0;
 3870              		.loc 1 1045 5 view .LVU1338
1045:lwIP/src/core/dns.c ****       idx = 0;
 3871              		.loc 1 1045 8 is_stmt 0 view .LVU1339
 3872 038e 042F     		cmp	r7, #4
 3873 0390 1DD1     		bne	.L325
 3874              	.LVL332:
1046:lwIP/src/core/dns.c ****     }
 3875              		.loc 1 1046 11 view .LVU1340
 3876 0392 1F46     		mov	r7, r3
 3877              	.LVL333:
 3878              	.L322:
1048:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
 3879              		.loc 1 1048 5 is_stmt 1 view .LVU1341
1048:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
 3880              		.loc 1 1048 8 is_stmt 0 view .LVU1342
 3881 0394 59F82530 		ldr	r3, [r9, r5, lsl #2]
 3882 0398 002B     		cmp	r3, #0
 3883 039a C7D1     		bne	.L319
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3884              		.loc 1 1044 77 is_stmt 1 view .LVU1343
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3885              		.loc 1 1044 51 view .LVU1344
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3886              		.loc 1 1044 51 is_stmt 0 view .LVU1345
 3887              	.LBE261:
 3888              	.LBE269:
1609:lwIP/src/core/dns.c ****     req->found = NULL;
 3889              		.loc 1 1609 18 view .LVU1346
 3890 039c A372     		strb	r3, [r4, #10]
1610:lwIP/src/core/dns.c ****     return ERR_MEM;
 3891              		.loc 1 1610 16 view .LVU1347
 3892 039e DDE90102 		ldrd	r0, r2, [sp, #4]
 3893 03a2 0244     		add	r2, r2, r0
ARM GAS  /tmp/ccJm3wen.s 			page 138


1611:lwIP/src/core/dns.c ****   }
 3894              		.loc 1 1611 12 view .LVU1348
 3895 03a4 4FF0FF30 		mov	r0, #-1
1610:lwIP/src/core/dns.c ****     return ERR_MEM;
 3896              		.loc 1 1610 16 view .LVU1349
 3897 03a8 1146     		mov	r1, r2
1605:lwIP/src/core/dns.c ****   if (entry->pcb_idx >= DNS_MAX_SOURCE_PORTS) {
 3898              		.loc 1 1605 18 view .LVU1350
 3899 03aa 0422     		movs	r2, #4
1610:lwIP/src/core/dns.c ****     return ERR_MEM;
 3900              		.loc 1 1610 16 view .LVU1351
 3901 03ac 48F82130 		str	r3, [r8, r1, lsl #2]
1605:lwIP/src/core/dns.c ****   if (entry->pcb_idx >= DNS_MAX_SOURCE_PORTS) {
 3902              		.loc 1 1605 18 view .LVU1352
 3903 03b0 E273     		strb	r2, [r4, #15]
1606:lwIP/src/core/dns.c ****     /* failed to get a UDP pcb */
 3904              		.loc 1 1606 3 is_stmt 1 view .LVU1353
1608:lwIP/src/core/dns.c ****     entry->state = DNS_STATE_UNUSED;
 3905              		.loc 1 1608 86 view .LVU1354
1609:lwIP/src/core/dns.c ****     req->found = NULL;
 3906              		.loc 1 1609 5 view .LVU1355
1610:lwIP/src/core/dns.c ****     return ERR_MEM;
 3907              		.loc 1 1610 5 view .LVU1356
1611:lwIP/src/core/dns.c ****   }
 3908              		.loc 1 1611 5 view .LVU1357
1611:lwIP/src/core/dns.c ****   }
 3909              		.loc 1 1611 12 is_stmt 0 view .LVU1358
 3910 03b2 46E6     		b	.L386
 3911              	.LVL334:
 3912              	.L416:
 3913              	.LBB270:
 3914              	.LBB262:
1048:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
 3915              		.loc 1 1048 5 is_stmt 1 view .LVU1359
1048:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
 3916              		.loc 1 1048 8 is_stmt 0 view .LVU1360
 3917 03b4 59F82710 		ldr	r1, [r9, r7, lsl #2]
 3918 03b8 0029     		cmp	r1, #0
 3919 03ba B7D1     		bne	.L319
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3920              		.loc 1 1044 77 is_stmt 1 view .LVU1361
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3921              		.loc 1 1044 85 is_stmt 0 view .LVU1362
 3922 03bc DF1C     		adds	r7, r3, #3
 3923              	.LVL335:
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3924              		.loc 1 1044 85 view .LVU1363
 3925 03be FFB2     		uxtb	r7, r7
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3926              		.loc 1 1044 51 is_stmt 1 view .LVU1364
1045:lwIP/src/core/dns.c ****       idx = 0;
 3927              		.loc 1 1045 5 view .LVU1365
1045:lwIP/src/core/dns.c ****       idx = 0;
 3928              		.loc 1 1045 8 is_stmt 0 view .LVU1366
 3929 03c0 042F     		cmp	r7, #4
 3930 03c2 DED1     		bne	.L329
 3931              	.LVL336:
ARM GAS  /tmp/ccJm3wen.s 			page 139


1048:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
 3932              		.loc 1 1048 5 is_stmt 1 view .LVU1367
1048:lwIP/src/core/dns.c ****       dns_last_pcb_idx = idx;
 3933              		.loc 1 1048 8 is_stmt 0 view .LVU1368
 3934 03c4 D9F80030 		ldr	r3, [r9]
 3935 03c8 002B     		cmp	r3, #0
 3936 03ca 49D1     		bne	.L364
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3937              		.loc 1 1044 85 view .LVU1369
 3938 03cc 0127     		movs	r7, #1
 3939              	.LVL337:
 3940              	.L325:
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3941              		.loc 1 1044 85 view .LVU1370
 3942 03ce 3D46     		mov	r5, r7
 3943 03d0 E0E7     		b	.L322
 3944              	.LVL338:
 3945              	.L332:
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 3946              		.loc 1 1044 85 view .LVU1371
 3947              	.LBE262:
 3948              	.LBE270:
 3949              	.LBE274:
 3950              	.LBE278:
1682:lwIP/src/core/dns.c ****   }
 3951              		.loc 1 1682 12 view .LVU1372
 3952 03d2 6FF00F00 		mvn	r0, #15
 3953 03d6 34E6     		b	.L386
 3954              	.LVL339:
 3955              	.L401:
 3956              	.LBB279:
 3957              	.LBB239:
 743:lwIP/src/core/dns.c ****         LWIP_DNS_ADDRTYPE_MATCH_IP(dns_addrtype, dns_table[i].ipaddr)) {
 3958              		.loc 1 743 10 view .LVU1373
 3959 03d8 4FF48072 		mov	r2, #256
 3960 03dc 4949     		ldr	r1, .L421
 3961 03de 5846     		mov	r0, fp
 3962 03e0 FFF7FEFF 		bl	lwip_strnicmp
 3963              	.LVL340:
 742:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0) &&
 3964              		.loc 1 742 48 view .LVU1374
 3965 03e4 0028     		cmp	r0, #0
 3966 03e6 7FF44FAE 		bne	.L290
 742:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0) &&
 3967              		.loc 1 742 22 view .LVU1375
 3968 03ea 4046     		mov	r0, r8
 3969              	.LVL341:
 3970              	.L287:
 745:lwIP/src/core/dns.c ****       ip_addr_debug_print_val(DNS_DEBUG, dns_table[i].ipaddr);
 3971              		.loc 1 745 69 is_stmt 1 view .LVU1376
 746:lwIP/src/core/dns.c ****       LWIP_DEBUGF(DNS_DEBUG, ("\n"));
 3972              		.loc 1 746 62 view .LVU1377
 747:lwIP/src/core/dns.c ****       if (addr) {
 3973              		.loc 1 747 37 view .LVU1378
 748:lwIP/src/core/dns.c ****         ip_addr_copy(*addr, dns_table[i].ipaddr);
 3974              		.loc 1 748 7 view .LVU1379
 749:lwIP/src/core/dns.c ****       }
ARM GAS  /tmp/ccJm3wen.s 			page 140


 3975              		.loc 1 749 9 view .LVU1380
 3976 03ec 00EB0018 		add	r8, r0, r0, lsl #4
 3977              	.LBE239:
 3978              	.LBE279:
1715:lwIP/src/core/dns.c ****   }
 3979              		.loc 1 1715 12 is_stmt 0 view .LVU1381
 3980 03f0 0020     		movs	r0, #0
 3981              	.LBB280:
 3982              	.LBB240:
 749:lwIP/src/core/dns.c ****       }
 3983              		.loc 1 749 9 view .LVU1382
 3984 03f2 04EB0814 		add	r4, r4, r8, lsl #4
 3985 03f6 2DE6     		b	.L395
 3986              	.LVL342:
 3987              	.L400:
 743:lwIP/src/core/dns.c ****         LWIP_DNS_ADDRTYPE_MATCH_IP(dns_addrtype, dns_table[i].ipaddr)) {
 3988              		.loc 1 743 10 view .LVU1383
 3989 03f8 4FF48072 		mov	r2, #256
 3990 03fc 4249     		ldr	r1, .L421+4
 3991 03fe 5846     		mov	r0, fp
 3992 0400 FFF7FEFF 		bl	lwip_strnicmp
 3993              	.LVL343:
 742:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0) &&
 3994              		.loc 1 742 48 view .LVU1384
 3995 0404 0028     		cmp	r0, #0
 3996 0406 7FF439AE 		bne	.L289
 742:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0) &&
 3997              		.loc 1 742 22 view .LVU1385
 3998 040a 0220     		movs	r0, #2
 3999 040c EEE7     		b	.L287
 4000              	.LVL344:
 4001              	.L399:
 743:lwIP/src/core/dns.c ****         LWIP_DNS_ADDRTYPE_MATCH_IP(dns_addrtype, dns_table[i].ipaddr)) {
 4002              		.loc 1 743 10 view .LVU1386
 4003 040e 4FF48072 		mov	r2, #256
 4004 0412 3E49     		ldr	r1, .L421+8
 4005 0414 5846     		mov	r0, fp
 4006 0416 FFF7FEFF 		bl	lwip_strnicmp
 4007              	.LVL345:
 742:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0) &&
 4008              		.loc 1 742 48 view .LVU1387
 4009 041a 0028     		cmp	r0, #0
 4010 041c 7FF429AE 		bne	.L288
 742:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0) &&
 4011              		.loc 1 742 22 view .LVU1388
 4012 0420 0120     		movs	r0, #1
 4013 0422 E3E7     		b	.L287
 4014              	.LVL346:
 4015              	.L398:
 743:lwIP/src/core/dns.c ****         LWIP_DNS_ADDRTYPE_MATCH_IP(dns_addrtype, dns_table[i].ipaddr)) {
 4016              		.loc 1 743 10 view .LVU1389
 4017 0424 4FF48072 		mov	r2, #256
 4018 0428 04F11001 		add	r1, r4, #16
 4019 042c 5846     		mov	r0, fp
 4020 042e FFF7FEFF 		bl	lwip_strnicmp
 4021              	.LVL347:
 742:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0) &&
ARM GAS  /tmp/ccJm3wen.s 			page 141


 4022              		.loc 1 742 48 view .LVU1390
 4023 0432 0028     		cmp	r0, #0
 4024 0434 7FF418AE 		bne	.L286
 4025 0438 D8E7     		b	.L287
 4026              	.LVL348:
 4027              	.L349:
 742:lwIP/src/core/dns.c ****         (lwip_strnicmp(name, dns_table[i].name, sizeof(dns_table[i].name)) == 0) &&
 4028              		.loc 1 742 48 view .LVU1391
 4029              	.LBE240:
 4030              	.LBE280:
 4031              	.LBB281:
 4032              	.LBB275:
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
 4033              		.loc 1 1541 35 view .LVU1392
 4034 043a 0226     		movs	r6, #2
 4035              	.LVL349:
 4036              	.L393:
1542:lwIP/src/core/dns.c ****     /* is it an unused entry ? */
 4037              		.loc 1 1542 23 view .LVU1393
 4038 043c 3346     		mov	r3, r6
 4039              	.L303:
1542:lwIP/src/core/dns.c ****     /* is it an unused entry ? */
 4040              		.loc 1 1542 11 view .LVU1394
 4041 043e 03EB0313 		add	r3, r3, r3, lsl #4
 4042 0442 04EB0314 		add	r4, r4, r3, lsl #4
 4043 0446 5EE6     		b	.L308
 4044              	.LVL350:
 4045              	.L355:
1574:lwIP/src/core/dns.c ****       req = &dns_requests[r];
 4046              		.loc 1 1574 24 view .LVU1395
 4047 0448 0223     		movs	r3, #2
 4048              	.LVL351:
 4049              	.L394:
1574:lwIP/src/core/dns.c ****       req = &dns_requests[r];
 4050              		.loc 1 1574 24 view .LVU1396
 4051 044a 0193     		str	r3, [sp, #4]
 4052 044c 25E7     		b	.L311
 4053              	.LVL352:
 4054              	.L348:
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
 4055              		.loc 1 1541 35 view .LVU1397
 4056 044e 0126     		movs	r6, #1
 4057              	.LVL353:
1542:lwIP/src/core/dns.c ****     /* is it an unused entry ? */
 4058              		.loc 1 1542 23 view .LVU1398
 4059 0450 3346     		mov	r3, r6
 4060 0452 F4E7     		b	.L303
 4061              	.LVL354:
 4062              	.L409:
1541:lwIP/src/core/dns.c ****     entry = &dns_table[i];
 4063              		.loc 1 1541 35 view .LVU1399
 4064 0454 0326     		movs	r6, #3
 4065              	.LVL355:
1542:lwIP/src/core/dns.c ****     /* is it an unused entry ? */
 4066              		.loc 1 1542 23 view .LVU1400
 4067 0456 3346     		mov	r3, r6
 4068 0458 F1E7     		b	.L303
ARM GAS  /tmp/ccJm3wen.s 			page 142


 4069              	.LVL356:
 4070              	.L354:
1574:lwIP/src/core/dns.c ****       req = &dns_requests[r];
 4071              		.loc 1 1574 24 view .LVU1401
 4072 045a 0123     		movs	r3, #1
 4073 045c 0193     		str	r3, [sp, #4]
 4074 045e 1CE7     		b	.L311
 4075              	.LVL357:
 4076              	.L364:
 4077              	.LBB271:
 4078              	.LBB263:
1046:lwIP/src/core/dns.c ****     }
 4079              		.loc 1 1046 11 view .LVU1402
 4080 0460 0027     		movs	r7, #0
 4081 0462 63E7     		b	.L319
 4082              	.LVL358:
 4083              	.L357:
1029:lwIP/src/core/dns.c ****     if (dns_pcbs[i] == NULL) {
 4084              		.loc 1 1029 10 view .LVU1403
 4085 0464 1F46     		mov	r7, r3
 4086              	.LVL359:
1030:lwIP/src/core/dns.c ****       break;
 4087              		.loc 1 1030 17 view .LVU1404
 4088 0466 0393     		str	r3, [sp, #12]
 4089              	.LVL360:
 4090              	.L312:
1034:lwIP/src/core/dns.c ****     dns_pcbs[i] = dns_alloc_random_port();
 4091              		.loc 1 1034 3 is_stmt 1 view .LVU1405
1035:lwIP/src/core/dns.c ****     if (dns_pcbs[i] != NULL) {
 4092              		.loc 1 1035 5 view .LVU1406
 4093              	.LBB252:
 4094              	.LBI252:
 990:lwIP/src/core/dns.c **** {
 4095              		.loc 1 990 1 view .LVU1407
 4096              	.LBB253:
 992:lwIP/src/core/dns.c ****   struct udp_pcb *pcb;
 4097              		.loc 1 992 3 view .LVU1408
 993:lwIP/src/core/dns.c **** 
 4098              		.loc 1 993 3 view .LVU1409
 995:lwIP/src/core/dns.c ****   if (pcb == NULL) {
 4099              		.loc 1 995 3 view .LVU1410
 995:lwIP/src/core/dns.c ****   if (pcb == NULL) {
 4100              		.loc 1 995 9 is_stmt 0 view .LVU1411
 4101 0468 2E20     		movs	r0, #46
 4102 046a FFF7FEFF 		bl	udp_new_ip_type
 4103              	.LVL361:
 996:lwIP/src/core/dns.c ****     /* out of memory, have to reuse an existing pcb */
 4104              		.loc 1 996 3 is_stmt 1 view .LVU1412
 996:lwIP/src/core/dns.c ****     /* out of memory, have to reuse an existing pcb */
 4105              		.loc 1 996 6 is_stmt 0 view .LVU1413
 4106 046e 8246     		mov	r10, r0
 4107 0470 78B3     		cbz	r0, .L324
 4108              	.LBB254:
1003:lwIP/src/core/dns.c ****     } else {
 4109              		.loc 1 1003 13 view .LVU1414
 4110 0472 DFF8A4B0 		ldr	fp, .L421+20
 4111              	.LVL362:
ARM GAS  /tmp/ccJm3wen.s 			page 143


 4112              	.L314:
1003:lwIP/src/core/dns.c ****     } else {
 4113              		.loc 1 1003 13 view .LVU1415
 4114              	.LBE254:
1000:lwIP/src/core/dns.c ****     u16_t port = (u16_t)DNS_RAND_TXID();
 4115              		.loc 1 1000 3 is_stmt 1 view .LVU1416
 4116              	.LBB255:
1001:lwIP/src/core/dns.c ****     if (DNS_PORT_ALLOWED(port)) {
 4117              		.loc 1 1001 5 view .LVU1417
1001:lwIP/src/core/dns.c ****     if (DNS_PORT_ALLOWED(port)) {
 4118              		.loc 1 1001 25 is_stmt 0 view .LVU1418
 4119 0476 FFF7FEFF 		bl	rand
 4120              	.LVL363:
1001:lwIP/src/core/dns.c ****     if (DNS_PORT_ALLOWED(port)) {
 4121              		.loc 1 1001 11 view .LVU1419
 4122 047a 82B2     		uxth	r2, r0
 4123              	.LVL364:
1002:lwIP/src/core/dns.c ****       err = udp_bind(pcb, IP_ANY_TYPE, port);
 4124              		.loc 1 1002 5 is_stmt 1 view .LVU1420
1002:lwIP/src/core/dns.c ****       err = udp_bind(pcb, IP_ANY_TYPE, port);
 4125              		.loc 1 1002 8 is_stmt 0 view .LVU1421
 4126 047c B2F5806F 		cmp	r2, #1024
 4127 0480 F9D3     		bcc	.L314
1003:lwIP/src/core/dns.c ****     } else {
 4128              		.loc 1 1003 7 is_stmt 1 view .LVU1422
1003:lwIP/src/core/dns.c ****     } else {
 4129              		.loc 1 1003 13 is_stmt 0 view .LVU1423
 4130 0482 5946     		mov	r1, fp
 4131 0484 5046     		mov	r0, r10
 4132 0486 FFF7FEFF 		bl	udp_bind
 4133              	.LVL365:
1003:lwIP/src/core/dns.c ****     } else {
 4134              		.loc 1 1003 13 view .LVU1424
 4135              	.LBE255:
1008:lwIP/src/core/dns.c ****   if (err != ERR_OK) {
 4136              		.loc 1 1008 11 is_stmt 1 view .LVU1425
1008:lwIP/src/core/dns.c ****   if (err != ERR_OK) {
 4137              		.loc 1 1008 3 is_stmt 0 view .LVU1426
 4138 048a 10F1080F 		cmn	r0, #8
 4139 048e F2D0     		beq	.L314
1009:lwIP/src/core/dns.c ****     udp_remove(pcb);
 4140              		.loc 1 1009 3 is_stmt 1 view .LVU1427
1009:lwIP/src/core/dns.c ****     udp_remove(pcb);
 4141              		.loc 1 1009 6 is_stmt 0 view .LVU1428
 4142 0490 50B9     		cbnz	r0, .L418
1013:lwIP/src/core/dns.c ****   return pcb;
 4143              		.loc 1 1013 3 is_stmt 1 view .LVU1429
 4144 0492 0246     		mov	r2, r0
 4145 0494 1E49     		ldr	r1, .L421+12
 4146 0496 5046     		mov	r0, r10
 4147              	.LVL366:
1013:lwIP/src/core/dns.c ****   return pcb;
 4148              		.loc 1 1013 3 is_stmt 0 view .LVU1430
 4149 0498 FFF7FEFF 		bl	udp_recv
 4150              	.LVL367:
1014:lwIP/src/core/dns.c **** }
 4151              		.loc 1 1014 3 is_stmt 1 view .LVU1431
ARM GAS  /tmp/ccJm3wen.s 			page 144


1014:lwIP/src/core/dns.c **** }
 4152              		.loc 1 1014 3 is_stmt 0 view .LVU1432
 4153              	.LBE253:
 4154              	.LBE252:
1038:lwIP/src/core/dns.c ****       return i;
 4155              		.loc 1 1038 24 view .LVU1433
 4156 049c 1D4B     		ldr	r3, .L421+16
1035:lwIP/src/core/dns.c ****     if (dns_pcbs[i] != NULL) {
 4157              		.loc 1 1035 17 view .LVU1434
 4158 049e 039A     		ldr	r2, [sp, #12]
1038:lwIP/src/core/dns.c ****       return i;
 4159              		.loc 1 1038 24 view .LVU1435
 4160 04a0 1F70     		strb	r7, [r3]
1035:lwIP/src/core/dns.c ****     if (dns_pcbs[i] != NULL) {
 4161              		.loc 1 1035 17 view .LVU1436
 4162 04a2 49F822A0 		str	r10, [r9, r2, lsl #2]
1036:lwIP/src/core/dns.c ****       /* succeeded */
 4163              		.loc 1 1036 5 is_stmt 1 view .LVU1437
1038:lwIP/src/core/dns.c ****       return i;
 4164              		.loc 1 1038 7 view .LVU1438
1039:lwIP/src/core/dns.c ****     }
 4165              		.loc 1 1039 7 view .LVU1439
1039:lwIP/src/core/dns.c ****     }
 4166              		.loc 1 1039 14 is_stmt 0 view .LVU1440
 4167 04a6 42E7     		b	.L317
 4168              	.LVL368:
 4169              	.L418:
 4170              	.LBB257:
 4171              	.LBB256:
1010:lwIP/src/core/dns.c ****     return NULL;
 4172              		.loc 1 1010 5 is_stmt 1 view .LVU1441
 4173 04a8 5046     		mov	r0, r10
 4174              	.LVL369:
1010:lwIP/src/core/dns.c ****     return NULL;
 4175              		.loc 1 1010 5 is_stmt 0 view .LVU1442
 4176 04aa FFF7FEFF 		bl	udp_remove
 4177              	.LVL370:
1011:lwIP/src/core/dns.c ****   }
 4178              		.loc 1 1011 5 is_stmt 1 view .LVU1443
1011:lwIP/src/core/dns.c ****   }
 4179              		.loc 1 1011 5 is_stmt 0 view .LVU1444
 4180              	.LBE256:
 4181              	.LBE257:
1035:lwIP/src/core/dns.c ****     if (dns_pcbs[i] != NULL) {
 4182              		.loc 1 1035 17 view .LVU1445
 4183 04ae 0023     		movs	r3, #0
 4184 04b0 039A     		ldr	r2, [sp, #12]
 4185 04b2 49F82230 		str	r3, [r9, r2, lsl #2]
1036:lwIP/src/core/dns.c ****       /* succeeded */
 4186              		.loc 1 1036 5 is_stmt 1 view .LVU1446
 4187 04b6 21E7     		b	.L313
 4188              	.LVL371:
 4189              	.L358:
1029:lwIP/src/core/dns.c ****     if (dns_pcbs[i] == NULL) {
 4190              		.loc 1 1029 42 is_stmt 0 view .LVU1447
 4191 04b8 5F46     		mov	r7, fp
 4192              	.LVL372:
ARM GAS  /tmp/ccJm3wen.s 			page 145


1030:lwIP/src/core/dns.c ****       break;
 4193              		.loc 1 1030 17 view .LVU1448
 4194 04ba CDF80CB0 		str	fp, [sp, #12]
 4195 04be D3E7     		b	.L312
 4196              	.LVL373:
 4197              	.L359:
1029:lwIP/src/core/dns.c ****     if (dns_pcbs[i] == NULL) {
 4198              		.loc 1 1029 42 view .LVU1449
 4199 04c0 0227     		movs	r7, #2
 4200              	.LVL374:
1030:lwIP/src/core/dns.c ****       break;
 4201              		.loc 1 1030 17 view .LVU1450
 4202 04c2 0397     		str	r7, [sp, #12]
 4203 04c4 D0E7     		b	.L312
 4204              	.LVL375:
 4205              	.L415:
1029:lwIP/src/core/dns.c ****     if (dns_pcbs[i] == NULL) {
 4206              		.loc 1 1029 42 view .LVU1451
 4207 04c6 0327     		movs	r7, #3
 4208              	.LVL376:
1030:lwIP/src/core/dns.c ****       break;
 4209              		.loc 1 1030 17 view .LVU1452
 4210 04c8 0397     		str	r7, [sp, #12]
 4211 04ca CDE7     		b	.L312
 4212              	.LVL377:
 4213              	.L336:
1030:lwIP/src/core/dns.c ****       break;
 4214              		.loc 1 1030 17 view .LVU1453
 4215              	.LBE263:
 4216              	.LBE271:
 4217              	.LBE275:
 4218              	.LBE281:
1746:lwIP/src/core/dns.c ****     }
 4219              		.loc 1 1746 14 view .LVU1454
 4220 04cc 6FF00500 		mvn	r0, #5
 4221 04d0 B7E5     		b	.L386
 4222              	.LVL378:
 4223              	.L324:
 4224              	.LBB282:
 4225              	.LBB276:
 4226              	.LBB272:
 4227              	.LBB264:
1035:lwIP/src/core/dns.c ****     if (dns_pcbs[i] != NULL) {
 4228              		.loc 1 1035 17 view .LVU1455
 4229 04d2 039B     		ldr	r3, [sp, #12]
 4230 04d4 49F823A0 		str	r10, [r9, r3, lsl #2]
1036:lwIP/src/core/dns.c ****       /* succeeded */
 4231              		.loc 1 1036 5 is_stmt 1 view .LVU1456
 4232 04d8 10E7     		b	.L313
 4233              	.LVL379:
 4234              	.L342:
1036:lwIP/src/core/dns.c ****       /* succeeded */
 4235              		.loc 1 1036 5 is_stmt 0 view .LVU1457
 4236              	.LBE264:
 4237              	.LBE272:
1511:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 4238              		.loc 1 1511 36 view .LVU1458
ARM GAS  /tmp/ccJm3wen.s 			page 146


 4239 04da 0126     		movs	r6, #1
 4240              	.LVL380:
 4241              	.L293:
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 4242              		.loc 1 1524 28 view .LVU1459
 4243 04dc 0125     		movs	r5, #1
 4244 04de 6CE6     		b	.L300
 4245              	.LVL381:
 4246              	.L343:
1511:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 4247              		.loc 1 1511 36 view .LVU1460
 4248 04e0 0126     		movs	r6, #1
 4249              	.LVL382:
 4250              	.L294:
1524:lwIP/src/core/dns.c ****           dns_requests[r].found = found;
 4251              		.loc 1 1524 28 view .LVU1461
 4252 04e2 0225     		movs	r5, #2
 4253 04e4 69E6     		b	.L300
 4254              	.LVL383:
 4255              	.L412:
1511:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 4256              		.loc 1 1511 36 view .LVU1462
 4257 04e6 0326     		movs	r6, #3
 4258 04e8 67E6     		b	.L300
 4259              	.LVL384:
 4260              	.L341:
1511:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 4261              		.loc 1 1511 36 view .LVU1463
 4262 04ea 0126     		movs	r6, #1
 4263 04ec 65E6     		b	.L300
 4264              	.LVL385:
 4265              	.L413:
1511:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 4266              		.loc 1 1511 36 view .LVU1464
 4267 04ee 0326     		movs	r6, #3
 4268 04f0 F4E7     		b	.L293
 4269              	.LVL386:
 4270              	.L414:
1511:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 4271              		.loc 1 1511 36 view .LVU1465
 4272 04f2 0326     		movs	r6, #3
 4273 04f4 F5E7     		b	.L294
 4274              	.LVL387:
 4275              	.L390:
 4276              	.LCFI40:
 4277              		.cfi_def_cfa_offset 0
 4278              		.cfi_restore 4
 4279              		.cfi_restore 5
 4280              		.cfi_restore 6
 4281              		.cfi_restore 7
 4282              		.cfi_restore 8
 4283              		.cfi_restore 9
 4284              		.cfi_restore 10
 4285              		.cfi_restore 11
 4286              		.cfi_restore 14
1511:lwIP/src/core/dns.c ****     if ((dns_table[i].state == DNS_STATE_ASKING) &&
 4287              		.loc 1 1511 36 view .LVU1466
ARM GAS  /tmp/ccJm3wen.s 			page 147


 4288              	.LBE276:
 4289              	.LBE282:
1682:lwIP/src/core/dns.c ****   }
 4290              		.loc 1 1682 12 view .LVU1467
 4291 04f6 6FF00F00 		mvn	r0, #15
 4292              	.LVL388:
 4293              		.loc 1 1753 1 view .LVU1468
 4294 04fa 7047     		bx	lr
 4295              	.LVL389:
 4296              	.L417:
 4297              	.LCFI41:
 4298              		.cfi_def_cfa_offset 56
 4299              		.cfi_offset 4, -36
 4300              		.cfi_offset 5, -32
 4301              		.cfi_offset 6, -28
 4302              		.cfi_offset 7, -24
 4303              		.cfi_offset 8, -20
 4304              		.cfi_offset 9, -16
 4305              		.cfi_offset 10, -12
 4306              		.cfi_offset 11, -8
 4307              		.cfi_offset 14, -4
 4308              	.LBB283:
 4309              	.LBB277:
 4310              	.LBB273:
 4311              	.LBB265:
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 4312              		.loc 1 1044 85 view .LVU1469
 4313 04fc 0227     		movs	r7, #2
 4314              	.LVL390:
1044:lwIP/src/core/dns.c ****     if (idx >= DNS_MAX_SOURCE_PORTS) {
 4315              		.loc 1 1044 85 view .LVU1470
 4316 04fe 3D46     		mov	r5, r7
 4317 0500 48E7     		b	.L322
 4318              	.L422:
 4319 0502 00BF     		.align	2
 4320              	.L421:
 4321 0504 40030000 		.word	.LANCHOR0+832
 4322 0508 30020000 		.word	.LANCHOR0+560
 4323 050c 20010000 		.word	.LANCHOR0+288
 4324 0510 00000000 		.word	dns_recv
 4325 0514 00000000 		.word	.LANCHOR6
 4326 0518 00000000 		.word	ip_addr_any
 4327              	.LBE265:
 4328              	.LBE273:
 4329              	.LBE277:
 4330              	.LBE283:
 4331              		.cfi_endproc
 4332              	.LFE129:
 4334              		.section	.text.dns_gethostbyname,"ax",%progbits
 4335              		.align	1
 4336              		.p2align 2,,3
 4337              		.global	dns_gethostbyname
 4338              		.syntax unified
 4339              		.thumb
 4340              		.thumb_func
 4341              		.fpu fpv4-sp-d16
 4343              	dns_gethostbyname:
ARM GAS  /tmp/ccJm3wen.s 			page 148


 4344              	.LVL391:
 4345              	.LFB128:
1652:lwIP/src/core/dns.c ****   return dns_gethostbyname_addrtype(hostname, addr, found, callback_arg, LWIP_DNS_ADDRTYPE_DEFAULT)
 4346              		.loc 1 1652 1 is_stmt 1 view -0
 4347              		.cfi_startproc
 4348              		@ args = 0, pretend = 0, frame = 0
 4349              		@ frame_needed = 0, uses_anonymous_args = 0
1653:lwIP/src/core/dns.c **** }
 4350              		.loc 1 1653 3 view .LVU1472
1652:lwIP/src/core/dns.c ****   return dns_gethostbyname_addrtype(hostname, addr, found, callback_arg, LWIP_DNS_ADDRTYPE_DEFAULT)
 4351              		.loc 1 1652 1 is_stmt 0 view .LVU1473
 4352 0000 10B5     		push	{r4, lr}
 4353              	.LCFI42:
 4354              		.cfi_def_cfa_offset 8
 4355              		.cfi_offset 4, -8
 4356              		.cfi_offset 14, -4
1653:lwIP/src/core/dns.c **** }
 4357              		.loc 1 1653 10 view .LVU1474
 4358 0002 0024     		movs	r4, #0
1652:lwIP/src/core/dns.c ****   return dns_gethostbyname_addrtype(hostname, addr, found, callback_arg, LWIP_DNS_ADDRTYPE_DEFAULT)
 4359              		.loc 1 1652 1 view .LVU1475
 4360 0004 82B0     		sub	sp, sp, #8
 4361              	.LCFI43:
 4362              		.cfi_def_cfa_offset 16
1653:lwIP/src/core/dns.c **** }
 4363              		.loc 1 1653 10 view .LVU1476
 4364 0006 0094     		str	r4, [sp]
 4365 0008 FFF7FEFF 		bl	dns_gethostbyname_addrtype
 4366              	.LVL392:
1654:lwIP/src/core/dns.c **** 
 4367              		.loc 1 1654 1 view .LVU1477
 4368 000c 02B0     		add	sp, sp, #8
 4369              	.LCFI44:
 4370              		.cfi_def_cfa_offset 8
 4371              		@ sp needed
 4372 000e 10BD     		pop	{r4, pc}
 4373              		.cfi_endproc
 4374              	.LFE128:
 4376              		.global	dns_mquery_v4group
 4377              		.section	.rodata.str1.4,"aMS",%progbits,1
 4378              		.align	2
 4379              	.LC3:
 4380 0000 7777772E 		.ascii	"www.lwip.home\000"
 4380      6C776970 
 4380      2E686F6D 
 4380      6500
 4381              		.section	.bss.dns_last_pcb_idx,"aw",%nobits
 4382              		.set	.LANCHOR6,. + 0
 4385              	dns_last_pcb_idx:
 4386 0000 00       		.space	1
 4387              		.section	.bss.dns_pcbs,"aw",%nobits
 4388              		.align	2
 4389              		.set	.LANCHOR2,. + 0
 4392              	dns_pcbs:
 4393 0000 00000000 		.space	16
 4393      00000000 
 4393      00000000 
ARM GAS  /tmp/ccJm3wen.s 			page 149


 4393      00000000 
 4394              		.section	.bss.dns_requests,"aw",%nobits
 4395              		.align	2
 4396              		.set	.LANCHOR1,. + 0
 4399              	dns_requests:
 4400 0000 00000000 		.space	48
 4400      00000000 
 4400      00000000 
 4400      00000000 
 4400      00000000 
 4401              		.section	.bss.dns_seqno,"aw",%nobits
 4402              		.set	.LANCHOR5,. + 0
 4405              	dns_seqno:
 4406 0000 00       		.space	1
 4407              		.section	.bss.dns_servers,"aw",%nobits
 4408              		.align	2
 4409              		.set	.LANCHOR3,. + 0
 4412              	dns_servers:
 4413 0000 00000000 		.space	8
 4413      00000000 
 4414              		.section	.bss.dns_table,"aw",%nobits
 4415              		.align	2
 4416              		.set	.LANCHOR0,. + 0
 4419              	dns_table:
 4420 0000 00000000 		.space	1088
 4420      00000000 
 4420      00000000 
 4420      00000000 
 4420      00000000 
 4421              		.section	.data.local_hostlist_static,"aw"
 4422              		.align	2
 4423              		.set	.LANCHOR4,. + 0
 4426              	local_hostlist_static:
 4427 0000 00000000 		.word	.LC3
 4428 0004 C0A80001 		.word	16820416
 4429 0008 00000000 		.word	0
 4430              		.section	.rodata.dns_mquery_v4group,"a"
 4431              		.align	2
 4434              	dns_mquery_v4group:
 4435 0000 E00000FB 		.word	-83885856
 4436              		.text
 4437              	.Letext0:
 4438              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 4439              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 4440              		.file 5 "/usr/arm-none-eabi/include/sys/lock.h"
 4441              		.file 6 "/usr/arm-none-eabi/include/sys/_types.h"
 4442              		.file 7 "/usr/arm-none-eabi/include/sys/reent.h"
 4443              		.file 8 "/usr/arm-none-eabi/include/stdlib.h"
 4444              		.file 9 "/usr/arm-none-eabi/include/sys/_stdint.h"
 4445              		.file 10 "lwIP/src/include/lwip/arch.h"
 4446              		.file 11 "/usr/arm-none-eabi/include/ctype.h"
 4447              		.file 12 "lwIP/src/include/lwip/err.h"
 4448              		.file 13 "lwIP/src/include/lwip/pbuf.h"
 4449              		.file 14 "lwIP/src/include/lwip/ip4_addr.h"
 4450              		.file 15 "lwIP/src/include/lwip/ip_addr.h"
 4451              		.file 16 "lwIP/src/include/lwip/memp.h"
 4452              		.file 17 "lwIP/src/include/lwip/priv/memp_priv.h"
ARM GAS  /tmp/ccJm3wen.s 			page 150


 4453              		.file 18 "lwIP/src/include/lwip/netif.h"
 4454              		.file 19 "lwIP/src/include/lwip/prot/ip4.h"
 4455              		.file 20 "lwIP/src/include/lwip/ip.h"
 4456              		.file 21 "lwIP/src/include/lwip/udp.h"
 4457              		.file 22 "lwIP/src/include/lwip/dns.h"
 4458              		.file 23 "lwIP/src/include/lwip/prot/dns.h"
 4459              		.file 24 "lwIP/src/include/lwip/def.h"
 4460              		.file 25 "/usr/arm-none-eabi/include/string.h"
 4461              		.file 26 "/usr/arm-none-eabi/include/stdio.h"
 4462              		.file 27 "<built-in>"
ARM GAS  /tmp/ccJm3wen.s 			page 151


DEFINED SYMBOLS
                            *ABS*:0000000000000000 dns.c
     /tmp/ccJm3wen.s:18     .text.dns_call_found:0000000000000000 $t
     /tmp/ccJm3wen.s:26     .text.dns_call_found:0000000000000000 dns_call_found
     /tmp/ccJm3wen.s:308    .text.dns_call_found:0000000000000104 $d
     /tmp/ccJm3wen.s:315    .rodata.dns_send.str1.4:0000000000000000 $d
     /tmp/ccJm3wen.s:319    .text.dns_send:0000000000000000 $t
     /tmp/ccJm3wen.s:326    .text.dns_send:0000000000000000 dns_send
     /tmp/ccJm3wen.s:718    .text.dns_send:0000000000000178 $d
     /tmp/ccJm3wen.s:726    .text.dns_compare_name.constprop.0:0000000000000000 $t
     /tmp/ccJm3wen.s:733    .text.dns_compare_name.constprop.0:0000000000000000 dns_compare_name.constprop.0
     /tmp/ccJm3wen.s:931    .text.dns_compare_name.constprop.0:00000000000000a8 $d
     /tmp/ccJm3wen.s:936    .text.dns_server_recv:0000000000000000 $t
     /tmp/ccJm3wen.s:943    .text.dns_server_recv:0000000000000000 dns_server_recv
     /tmp/ccJm3wen.s:1161   .text.dns_server_recv:00000000000000ec $d
     /tmp/ccJm3wen.s:1168   .rodata.dns_check_entry.str1.4:0000000000000000 $d
     /tmp/ccJm3wen.s:1175   .text.dns_check_entry:0000000000000000 $t
     /tmp/ccJm3wen.s:1182   .text.dns_check_entry:0000000000000000 dns_check_entry
     /tmp/ccJm3wen.s:1217   .text.dns_check_entry:000000000000001e $d
     /tmp/ccJm3wen.s:1221   .text.dns_check_entry:0000000000000022 $t
     /tmp/ccJm3wen.s:1503   .text.dns_check_entry:00000000000000fc $d
     /tmp/ccJm3wen.s:1512   .text.dns_recv:0000000000000000 $t
     /tmp/ccJm3wen.s:1519   .text.dns_recv:0000000000000000 dns_recv
     /tmp/ccJm3wen.s:2218   .text.dns_recv:0000000000000284 $d
     /tmp/ccJm3wen.s:2226   .text.dns_init:0000000000000000 $t
     /tmp/ccJm3wen.s:2234   .text.dns_init:0000000000000000 dns_init
     /tmp/ccJm3wen.s:2336   .text.dns_init:0000000000000030 $d
     /tmp/ccJm3wen.s:2342   .text.dns_setserver:0000000000000000 $t
     /tmp/ccJm3wen.s:2350   .text.dns_setserver:0000000000000000 dns_setserver
     /tmp/ccJm3wen.s:2386   .text.dns_setserver:0000000000000020 $d
     /tmp/ccJm3wen.s:2392   .text.dns_getserver:0000000000000000 $t
     /tmp/ccJm3wen.s:2400   .text.dns_getserver:0000000000000000 dns_getserver
     /tmp/ccJm3wen.s:2429   .text.dns_getserver:0000000000000010 $d
     /tmp/ccJm3wen.s:2435   .text.dns_tmr:0000000000000000 $t
     /tmp/ccJm3wen.s:2443   .text.dns_tmr:0000000000000000 dns_tmr
     /tmp/ccJm3wen.s:2519   .text.dns_tmr:0000000000000020 $d
     /tmp/ccJm3wen.s:2523   .text.dns_tmr:0000000000000024 $t
     /tmp/ccJm3wen.s:2792   .text.dns_tmr:00000000000000f8 $d
     /tmp/ccJm3wen.s:2804   .text.dns_local_iterate:0000000000000000 $t
     /tmp/ccJm3wen.s:2812   .text.dns_local_iterate:0000000000000000 dns_local_iterate
     /tmp/ccJm3wen.s:2862   .text.dns_local_iterate:0000000000000018 $d
     /tmp/ccJm3wen.s:2867   .text.dns_local_lookup:0000000000000000 $t
     /tmp/ccJm3wen.s:2875   .text.dns_local_lookup:0000000000000000 dns_local_lookup
     /tmp/ccJm3wen.s:2976   .text.dns_local_lookup:0000000000000024 $d
     /tmp/ccJm3wen.s:2981   .text.dns_gethostbyname_addrtype:0000000000000000 $t
     /tmp/ccJm3wen.s:2989   .text.dns_gethostbyname_addrtype:0000000000000000 dns_gethostbyname_addrtype
     /tmp/ccJm3wen.s:3825   .text.dns_gethostbyname_addrtype:0000000000000344 $d
     /tmp/ccJm3wen.s:3842   .text.dns_gethostbyname_addrtype:0000000000000370 $t
     /tmp/ccJm3wen.s:4321   .text.dns_gethostbyname_addrtype:0000000000000504 $d
     /tmp/ccJm3wen.s:4335   .text.dns_gethostbyname:0000000000000000 $t
     /tmp/ccJm3wen.s:4343   .text.dns_gethostbyname:0000000000000000 dns_gethostbyname
     /tmp/ccJm3wen.s:4434   .rodata.dns_mquery_v4group:0000000000000000 dns_mquery_v4group
     /tmp/ccJm3wen.s:4378   .rodata.str1.4:0000000000000000 $d
     /tmp/ccJm3wen.s:4385   .bss.dns_last_pcb_idx:0000000000000000 dns_last_pcb_idx
     /tmp/ccJm3wen.s:4386   .bss.dns_last_pcb_idx:0000000000000000 $d
     /tmp/ccJm3wen.s:4388   .bss.dns_pcbs:0000000000000000 $d
     /tmp/ccJm3wen.s:4392   .bss.dns_pcbs:0000000000000000 dns_pcbs
ARM GAS  /tmp/ccJm3wen.s 			page 152


     /tmp/ccJm3wen.s:4395   .bss.dns_requests:0000000000000000 $d
     /tmp/ccJm3wen.s:4399   .bss.dns_requests:0000000000000000 dns_requests
     /tmp/ccJm3wen.s:4405   .bss.dns_seqno:0000000000000000 dns_seqno
     /tmp/ccJm3wen.s:4406   .bss.dns_seqno:0000000000000000 $d
     /tmp/ccJm3wen.s:4408   .bss.dns_servers:0000000000000000 $d
     /tmp/ccJm3wen.s:4412   .bss.dns_servers:0000000000000000 dns_servers
     /tmp/ccJm3wen.s:4415   .bss.dns_table:0000000000000000 $d
     /tmp/ccJm3wen.s:4419   .bss.dns_table:0000000000000000 dns_table
     /tmp/ccJm3wen.s:4422   .data.local_hostlist_static:0000000000000000 $d
     /tmp/ccJm3wen.s:4426   .data.local_hostlist_static:0000000000000000 local_hostlist_static
     /tmp/ccJm3wen.s:4431   .rodata.dns_mquery_v4group:0000000000000000 $d

UNDEFINED SYMBOLS
udp_remove
strlen
pbuf_alloc
pbuf_take
pbuf_put_at
pbuf_take_at
udp_sendto
pbuf_free
printf
pbuf_try_get_at
_ctype_
pbuf_copy
rand
pbuf_copy_partial
udp_new_ip_type
udp_bind
udp_recv
ip_addr_any
lwip_stricmp
ip4addr_aton
lwip_strnicmp
memcpy
